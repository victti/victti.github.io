(function(e, t) {
	if(typeof define === "function" && define.amd) {
		define("bc", [], function() {
			var n = t.apply(this, arguments);
			e.videojs.log.warn("DEPRECATION: Using the default named RequireJS module in the Brightcove Player is deprecated. See: https://support.brightcove.com/requirejs-and-brightcove-player#Future_implementation");
			return n
		})
	} else if(typeof exports === "object") {
		module.exports = t()
	} else {
		e.bc = t(e)
	}
})(this, function(root) {
	var vjsCssText = '@charset "UTF-8";.video-js .vjs-big-play-button .vjs-icon-placeholder:before,.video-js .vjs-modal-dialog,.vjs-button>.vjs-icon-placeholder:before,.vjs-modal-dialog .vjs-modal-dialog-content{position:absolute;top:0;left:0;width:100%;height:100%}.video-js .vjs-big-play-button .vjs-icon-placeholder:before,.vjs-button>.vjs-icon-placeholder:before{text-align:center}@font-face{font-family:VideoJS;src:url(data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAABDkAAsAAAAAG6gAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAADsAAABUIIslek9TLzIAAAFEAAAAPgAAAFZRiV3hY21hcAAAAYQAAADaAAADPv749/pnbHlmAAACYAAAC3AAABHQZg6OcWhlYWQAAA3QAAAAKwAAADYZw251aGhlYQAADfwAAAAdAAAAJA+RCLFobXR4AAAOHAAAABMAAACM744AAGxvY2EAAA4wAAAASAAAAEhF6kqubWF4cAAADngAAAAfAAAAIAE0AIFuYW1lAAAOmAAAASUAAAIK1cf1oHBvc3QAAA/AAAABJAAAAdPExYuNeJxjYGRgYOBiMGCwY2BycfMJYeDLSSzJY5BiYGGAAJA8MpsxJzM9kYEDxgPKsYBpDiBmg4gCACY7BUgAeJxjYGS7wTiBgZWBgaWQ5RkDA8MvCM0cwxDOeI6BgYmBlZkBKwhIc01hcPjI+FGJHcRdyA4RZgQRADK3CxEAAHic7dFZbsMgAEXRS0ycyZnnOeG7y+qC8pU1dHusIOXxuoxaOlwZYWQB0Aea4quIEN4E9LzKbKjzDeM6H/mua6Lmc/p8yhg0lvdYx15ZG8uOLQOGjMp3EzqmzJizYMmKNRu27Nhz4MiJMxeu3Ljz4Ekqm7T8P52G8PP3lnTOVk++Z6iN6QZzNN1F7ptuN7eGOjDUoaGODHVsuvU8MdTO9Hd5aqgzQ50b6sJQl4a6MtS1oW4MdWuoO0PdG+rBUI+GejLUs6FeDPVqqDdDvRvqw1CfhpqM9At0iFLaAAB4nJ1YDXBTVRZ+5/22TUlJ8we0pHlJm7RJf5O8F2j6EymlSPkpxaL8U2xpa3DKj0CBhc2IW4eWKSokIoLsuMqssM64f+jA4HSdWXXXscBq67IOs3FXZ1ZYWVyRFdo899yXtIBQZ90k7717zz3v3HPPOfd854YCCj9cL9dL0RQFOqCbGJnrHb5EayiKIWN8iA/hWBblo6hUWm8TtCDwE80WMJus/irwyxOdxeB0MDb14VNJHnXYoLLSl6FfCUYO9nYPTA8Epg9090LprfbBbZ2hY0UlJUXHQp3/vtWkS6EBv8+rPMq5u9692f/dNxJNiqwC1xPE9TCUgCsSdQWgE3XQD25lkG4CN2xmTcOXWBOyser6RN6KnGbKSbmQ3+d0OI1m2W8QzLLkI2sykrWAgJJEtA8vGGW/2Q+CmT3n8zS9wZwu2DCvtuZKZN3xkrLh36yCZuUomQSqGpY8t/25VfHVhw8z4ebGBtfLb0ya9PCaDc+8dGTvk2dsh6z7WzvowlXKUSWo9MJ15a3KrEP2loOr2Ojhw6iW6hf2BDdEccQvZGpaAy7YovSwq8kr7HGllxpd71rkS6G0Sf11sl9OvMK1+jwPPODxjUwkOim9CU3ix1wNjXDfmJSEn618Bs6lpWwUpU+8PCqLMY650zjq8VhCIP17NEKTx3eaLL+s5Pi6yJWaWjTHLR1jYzPSV9VF/6Ojdb/1kO3Mk3uhHC0x6gc1BjlKQ+nQFxTYdaJkZ7ySVxLBbhR1dsboNXp1tCYKW2LRaEzpYcIx2BKNxaL0ZaUnSqfFoiNhHKR/GkX6PWUSAaJelQaqZL1EpoHNsajSEyPSoJ9IjhIxTdjHLmwZvhRDOiFTY/YeQnvrVZmiTQtGncECXtFTBZLOVwwMRgoXHAkXzMzPn1nAJJ8jYSbMDaqN2waGLzNhih/bZynUBMpIWSg7VYi7DRx2m8ALkIdRCJwI6ArJx2EI8kaDWeTQKeAFk9fjl/1AvwktjQ1P7NjyMGQyfd4vjipX6M/i52D7Cq80kqlcxEcGXRr/FEcgs0u5uGgB4VWuMFfpdn2Re6Hi3PqzmxWKsz6+ae2Pn9hXXw/fqM859UiGC0oKYYILJBqJrsn1Z1E5qOs9rQCiUQRREjm8yJcbHF5cUJufX1vAHlefw0XgUoboS3ETfQlTxBC4SOtuE8VPRJTBSCQSjZCpk7Gqzu+masaZ2y7Zjehho4F3g82BNDkAHpORG4+OCS+f6JTPmtRn/PH1kch6d04sp7AQb25aQ/pqUyXeQ8vrebG8OYQdXOQ+585u0sdW9rqalzRURiJ+9F4MweRFrKUjl1GUYhH1A27WOHw5cTFSFPMo9EeUIGnQTZHIaJ7AHLaOKsOODaNF9jkBjYG2QEsQ2xjMUAx2bBEbeTBWMHwskBjngq56S/yfgkBnWBa4K9sqKtq2t1UI8S9He5XuBRbawAdatrQEAi30Aks2+LM8WeCbalVZkWNylvJ+dqJnzVb+OHlSoKW8nPCP7Rd+CcZ2DdWAGqJ2CBFOphgywFFCFBNtfAbGtNPBCwxvygHeYMZMY9ZboBqwq/pVrsbgN5tkv152ODlbMfiqwGMBgxa4Exz3QhovRIUp6acqZmQzRq0ypDXS2TPLT02YIkQETnOE445oOGxOmXAqUJNNG7XgupMjPq2ua9asrj5yY/yuKteO1Kx0YNJTufrirLe1mZnat7OL6rnUdCWenpW6I8mAnbsY8KWs1PuSovCW9A/Z25PQ24a7cNOqgmTkLmBMgh4THgc4b9k2IVv1/g/F5nGljwPLfOgHAzJzh45V/4+WenTzmMtR5Z7us2Tys909UHqrPY7KbckoxRvRHhmVc3cJGE97uml0R1S0jdULVl7EvZtDFVBF35N9cEdjpgmAiOlFZ+Dtoh93+D3zzHr8RRNZQhnCNMNbcegOvpEwZoL+06cJQ07h+th3fZ/7PVbVC6ngTAV/KoLFuO6+2KFcU651gEb5ugPSIb1D+Xp8V4+k3sEIGnw5mYe4If4k1lFYr6SCzmM2EQ8iWtmwjnBI9kTwe1TlfAmXh7H02by9fW2gsjKwtv0aaURKil4OdV7rDL1MXIFNrhdxohcZXYTnq47WisrKitaObbf5+yvkLi5J6lCNZZ+B6GC38VNBZBDidSS/+mSvh6s+srgC8pyKMvDtt+de3c9fU76ZPfuM8ud4Kv0fyP/LqfepMT/3oZxSqpZaTa1DaQYLY8TFsHYbWYsPoRhRWfL5eSSQbhUGgGC3YLbVMk6PitTFNGpAsNrC6D1VNBKgBHMejaiuRWEWGgsSDBTJjqWIl8kJLlsaLJ2tXDr6xGfT85bM2Q06a46x2HTgvdnV8z5YDy/27J4zt6x2VtkzjoYpkq36kaBr4eQSg7tyiVweWubXZugtadl58ydapfbORfKsDTuZ0OBgx4cfdjCf5tbWNITnL120fdOi1RV1C3uKGzNdwYLcMvZ3BxoPyTOCD1XvXTp7U10gWCVmTV9b3r2z0SkGWovb2hp9I89O8a2smlyaO8muMU+dRmtzp60IzAoFpjLr1n388boLyf0dRvxhsHZ0qbWqDkwqvvpkj4l0fY6EIXRi5sQSrAvsVYwXRy4qJ2EVtD1AN7a0HWth9ymvL1xc3WTUKK/TAHA/bXDVtVWfOMfuGxGZv4Ln/jVr9jc3j1yMv0tndmyt9Vq88Y9gH1wtLX3KWjot5++jWHgAoZZkQ14wGQ20Fli71UmKJAy4xKMSTGbVdybW7FDDAut9XpD5AzWrYO7zQ8qffqF8+Ynd/clrHcdyxGy3a/3+mfNnzC/cBsveTjnTvXf1o6vzOlZw7WtqtdmPK/Errz/6NNtD72zmNOZfbmYdTGHfoofqI79Oc+R2n1lrnL6pOm0Up7kwxhTW12Amm7WYkXR2qYrF2AmgmbAsxZjwy1xpg/m1Je2vrp8v/nz2xpmlBg4E9hrMU341wVpTOh/OfmGvAnra8q6uctr60ZQHV3Q+WMQJykMj8ZsWn2QBOmmHMB+m5pDIpTFonYigiaKAhGEiAHF7EliVnQkjoLVIMPtJpBKHYd3A8GYH9jJzrWwmHx5Qjp7vDAX0suGRym1vtm/9W1/HyR8vczfMs6Sk8DSv855/5dlX9oQq52hT8syyp2rx5Id17IAyAM3wIjQPMOHzytEB64q6D5zT91yNbnx3V/nqnd017S9Y0605k3izoXLpsxde2n38yoOV9s1LcjwzNjbdX6asnBVaBj/6/DwKwPkpcqbDG7BnsXoSqWnUAmottYF6jMSdVyYZh3zVXCjwTiwwHH6sGuRiEHQGzuRX6whZkp123oy1BWE2mEfJ/tvIRtM4ZM5bDXiMsPMaAKOTyc5uL57rqyyc5y5JE5pm1i2S2iUX0CcaQ6lC6Zog7JqSqZmYlosl2K6pwNA84zRnQW6SaALYZQGW5lhCtU/W34N6o+bKfZ8cf3/Cl/+iTX3wBzpOY4mRkeNf3rptycGSshQWgGbYt5jFc2e0+DglIrwl6DVWQ7BuwaJ3Xk1J4VL5urnLl/Wf+gHU/hZoZdKNym6lG+I34FaNeZKcSpJIo2IeCVvpdsDGfKvzJnAwmeD37Ow65ZWwSowpgwX5T69s/rB55dP5BcpgDKFV8p7q2sn/1uc93bVzT/w6UrCqDTWvfCq/oCD/qZXNoUj8BL5Kp6GU017frfNXkAtiiyf/SOCEeLqnd8R/Ql9GlCRfctS6k5chvIBuQ1zCCjoCHL2DHNHIXxMJ3kQeO8lbsUXONeSfA5EjcG6/E+KdhN4bP04vBhdi883+BFBzQbxFbvZzQeY9LNBZc0FNfn5NwfDn6rCTnTw6R8o+gfpf5hCom33cRuiTlss3KHmZjD+BPN+5gXuA2ziS/Q73mLxUkpbKN/eqwz5uK0X9F3h2d1V4nGNgZGBgAOJd776+iue3+crAzc4AAje5Bfcg0xz9YHEOBiYQBQA8FQlFAHicY2BkYGBnAAGOPgaG//85+hkYGVCBMgBGGwNYAAAAeJxjYGBgYB8EmKOPgQEAQ04BfgAAAAAAAA4AaAB+AMwA4AECAUIBbAGYAcICGAJYArQC4AMwA7AD3gQwBJYE3AUkBWYFigYgBmYGtAbqB1gIEghYCG4IhAi2COh4nGNgZGBgUGYoZWBnAAEmIOYCQgaG/2A+AwAYCQG2AHicXZBNaoNAGIZfE5PQCKFQ2lUps2oXBfOzzAESyDKBQJdGR2NQR3QSSE/QE/QEPUUPUHqsvsrXjTMw83zPvPMNCuAWP3DQDAejdm1GjzwS7pMmwi75XngAD4/CQ/oX4TFe4Qt7uMMbOzjuDc0EmXCP/C7cJ38Iu+RP4QEe8CU8pP8WHmOPX2EPz87TPo202ey2OjlnQSXV/6arOjWFmvszMWtd6CqwOlKHq6ovycLaWMWVydXKFFZnmVFlZU46tP7R2nI5ncbi/dDkfDtFBA2DDXbYkhKc+V0Bqs5Zt9JM1HQGBRTm/EezTmZNKtpcAMs9Yu6AK9caF76zoLWIWcfMGOSkVduvSWechqZsz040Ib2PY3urxBJTzriT95lipz+TN1fmAAAAeJxtkMl2wjAMRfOAhABlKm2h80C3+ajgCKKDY6cegP59TYBzukAL+z1Zsq8ctaJTTKPrsUQLbXQQI0EXKXroY4AbDDHCGBNMcYsZ7nCPB8yxwCOe8IwXvOIN7/jAJ76wxHfUqWX+OzgumWAjJMV17i0Ndlr6irLKO+qftdT7i6y4uFSUvCknay+lFYZIZaQcmfH/xIFdYn98bqhra1aKTM/6lWMnyaYirx1rFUQZFBkb2zJUtoXeJCeg0WnLtHeSFc3OtrnozNwqi0TkSpBMDB1nSde5oJXW23hTS2/T0LilglXX7dmFVxLnq5U0vYATHFk3zX3BOisoQHNDFDeZnqKDy9hRNawN7Vh727hFzcJ5c8TILrKZfH7tIPxAFP0BpLeJPA==) format("woff");font-weight:400;font-style:normal}.video-js .vjs-big-play-button .vjs-icon-placeholder:before,.video-js .vjs-play-control .vjs-icon-placeholder,.vjs-icon-play{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-big-play-button .vjs-icon-placeholder:before,.video-js .vjs-play-control .vjs-icon-placeholder:before,.vjs-icon-play:before{content:"\\f101"}.vjs-icon-play-circle{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-play-circle:before{content:"\\f102"}.video-js .vjs-play-control.vjs-playing .vjs-icon-placeholder,.vjs-icon-pause{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-play-control.vjs-playing .vjs-icon-placeholder:before,.vjs-icon-pause:before{content:"\\f103"}.video-js .vjs-mute-control.vjs-vol-0 .vjs-icon-placeholder,.vjs-icon-volume-mute{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-mute-control.vjs-vol-0 .vjs-icon-placeholder:before,.vjs-icon-volume-mute:before{content:"\\f104"}.video-js .vjs-mute-control.vjs-vol-1 .vjs-icon-placeholder,.vjs-icon-volume-low{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-mute-control.vjs-vol-1 .vjs-icon-placeholder:before,.vjs-icon-volume-low:before{content:"\\f105"}.video-js .vjs-mute-control.vjs-vol-2 .vjs-icon-placeholder,.vjs-icon-volume-mid{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-mute-control.vjs-vol-2 .vjs-icon-placeholder:before,.vjs-icon-volume-mid:before{content:"\\f106"}.video-js .vjs-mute-control .vjs-icon-placeholder,.vjs-icon-volume-high{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-mute-control .vjs-icon-placeholder:before,.vjs-icon-volume-high:before{content:"\\f107"}.video-js .vjs-fullscreen-control .vjs-icon-placeholder,.vjs-icon-fullscreen-enter{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-fullscreen-control .vjs-icon-placeholder:before,.vjs-icon-fullscreen-enter:before{content:"\\f108"}.video-js.vjs-fullscreen .vjs-fullscreen-control .vjs-icon-placeholder,.vjs-icon-fullscreen-exit{font-family:VideoJS;font-weight:400;font-style:normal}.video-js.vjs-fullscreen .vjs-fullscreen-control .vjs-icon-placeholder:before,.vjs-icon-fullscreen-exit:before{content:"\\f109"}.vjs-icon-square{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-square:before{content:"\\f10a"}.vjs-icon-spinner{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-spinner:before{content:"\\f10b"}.video-js .vjs-subs-caps-button .vjs-icon-placeholder,.video-js .vjs-subtitles-button .vjs-icon-placeholder,.video-js.video-js:lang(en-AU) .vjs-subs-caps-button .vjs-icon-placeholder,.video-js.video-js:lang(en-GB) .vjs-subs-caps-button .vjs-icon-placeholder,.video-js.video-js:lang(en-IE) .vjs-subs-caps-button .vjs-icon-placeholder,.video-js.video-js:lang(en-NZ) .vjs-subs-caps-button .vjs-icon-placeholder,.vjs-icon-subtitles{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-subs-caps-button .vjs-icon-placeholder:before,.video-js .vjs-subtitles-button .vjs-icon-placeholder:before,.video-js.video-js:lang(en-AU) .vjs-subs-caps-button .vjs-icon-placeholder:before,.video-js.video-js:lang(en-GB) .vjs-subs-caps-button .vjs-icon-placeholder:before,.video-js.video-js:lang(en-IE) .vjs-subs-caps-button .vjs-icon-placeholder:before,.video-js.video-js:lang(en-NZ) .vjs-subs-caps-button .vjs-icon-placeholder:before,.vjs-icon-subtitles:before{content:"\\f10c"}.video-js .vjs-captions-button .vjs-icon-placeholder,.video-js:lang(en) .vjs-subs-caps-button .vjs-icon-placeholder,.video-js:lang(fr-CA) .vjs-subs-caps-button .vjs-icon-placeholder,.vjs-icon-captions{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-captions-button .vjs-icon-placeholder:before,.video-js:lang(en) .vjs-subs-caps-button .vjs-icon-placeholder:before,.video-js:lang(fr-CA) .vjs-subs-caps-button .vjs-icon-placeholder:before,.vjs-icon-captions:before{content:"\\f10d"}.video-js .vjs-chapters-button .vjs-icon-placeholder,.vjs-icon-chapters{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-chapters-button .vjs-icon-placeholder:before,.vjs-icon-chapters:before{content:"\\f10e"}.vjs-icon-share{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-share:before{content:"\\f10f"}.vjs-icon-cog{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-cog:before{content:"\\f110"}.video-js .vjs-play-progress,.video-js .vjs-volume-level,.vjs-icon-circle,.vjs-seek-to-live-control .vjs-icon-placeholder{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-play-progress:before,.video-js .vjs-volume-level:before,.vjs-icon-circle:before,.vjs-seek-to-live-control .vjs-icon-placeholder:before{content:"\\f111"}.vjs-icon-circle-outline{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-circle-outline:before{content:"\\f112"}.vjs-icon-circle-inner-circle{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-circle-inner-circle:before{content:"\\f113"}.vjs-icon-hd{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-hd:before{content:"\\f114"}.video-js .vjs-control.vjs-close-button .vjs-icon-placeholder,.vjs-icon-cancel{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-control.vjs-close-button .vjs-icon-placeholder:before,.vjs-icon-cancel:before{content:"\\f115"}.video-js .vjs-play-control.vjs-ended .vjs-icon-placeholder,.vjs-icon-replay{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-play-control.vjs-ended .vjs-icon-placeholder:before,.vjs-icon-replay:before{content:"\\f116"}.vjs-icon-facebook{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-facebook:before{content:"\\f117"}.vjs-icon-gplus{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-gplus:before{content:"\\f118"}.vjs-icon-linkedin{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-linkedin:before{content:"\\f119"}.vjs-icon-twitter{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-twitter:before{content:"\\f11a"}.vjs-icon-tumblr{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-tumblr:before{content:"\\f11b"}.vjs-icon-pinterest{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-pinterest:before{content:"\\f11c"}.video-js .vjs-descriptions-button .vjs-icon-placeholder,.vjs-icon-audio-description{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-descriptions-button .vjs-icon-placeholder:before,.vjs-icon-audio-description:before{content:"\\f11d"}.video-js .vjs-audio-button .vjs-icon-placeholder,.vjs-icon-audio{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-audio-button .vjs-icon-placeholder:before,.vjs-icon-audio:before{content:"\\f11e"}.vjs-icon-next-item{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-next-item:before{content:"\\f11f"}.vjs-icon-previous-item{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-previous-item:before{content:"\\f120"}.video-js .vjs-picture-in-picture-control .vjs-icon-placeholder,.vjs-icon-picture-in-picture-enter{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-picture-in-picture-control .vjs-icon-placeholder:before,.vjs-icon-picture-in-picture-enter:before{content:"\\f121"}.video-js.vjs-picture-in-picture .vjs-picture-in-picture-control .vjs-icon-placeholder,.vjs-icon-picture-in-picture-exit{font-family:VideoJS;font-weight:400;font-style:normal}.video-js.vjs-picture-in-picture .vjs-picture-in-picture-control .vjs-icon-placeholder:before,.vjs-icon-picture-in-picture-exit:before{content:"\\f122"}.video-js{display:block;vertical-align:top;box-sizing:border-box;color:#fff;background-color:#000;position:relative;padding:0;font-size:10px;line-height:1;font-weight:400;font-style:normal;font-family:Arial,Helvetica,sans-serif;word-break:initial}.video-js:-moz-full-screen{position:absolute}.video-js:-webkit-full-screen{width:100%!important;height:100%!important}.video-js[tabindex="-1"]{outline:0}.video-js *,.video-js :after,.video-js :before{box-sizing:inherit}.video-js ul{font-family:inherit;font-size:inherit;line-height:inherit;list-style-position:outside;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}.video-js.vjs-16-9,.video-js.vjs-4-3,.video-js.vjs-fluid{width:100%;max-width:100%;height:0}.video-js.vjs-16-9{padding-top:56.25%}.video-js.vjs-4-3{padding-top:75%}.video-js.vjs-fill{width:100%;height:100%}.video-js .vjs-tech{position:absolute;top:0;left:0;width:100%;height:100%}body.vjs-full-window{padding:0;margin:0;height:100%}.vjs-full-window .video-js.vjs-fullscreen{position:fixed;overflow:hidden;z-index:1000;left:0;top:0;bottom:0;right:0}.video-js.vjs-fullscreen{width:100%!important;height:100%!important;padding-top:0!important}.video-js.vjs-fullscreen.vjs-user-inactive{cursor:none}.vjs-hidden{display:none!important}.vjs-disabled{opacity:.5;cursor:default}.video-js .vjs-offscreen{height:1px;left:-9999px;position:absolute;top:0;width:1px}.vjs-lock-showing{display:block!important;opacity:1;visibility:visible}.vjs-no-js{padding:20px;color:#fff;background-color:#000;font-size:18px;font-family:Arial,Helvetica,sans-serif;text-align:center;width:300px;height:150px;margin:0 auto}.vjs-no-js a,.vjs-no-js a:visited{color:#66a8cc}.video-js .vjs-big-play-button{font-size:3em;line-height:1.5em;height:1.63332em;width:3em;display:block;position:absolute;top:10px;left:10px;padding:0;cursor:pointer;opacity:1;border:.06666em solid #fff;background-color:#2b333f;background-color:rgba(43,51,63,.7);border-radius:.3em;transition:all .4s}.vjs-big-play-centered .vjs-big-play-button{top:50%;left:50%;margin-top:-.81666em;margin-left:-1.5em}.video-js .vjs-big-play-button:focus,.video-js:hover .vjs-big-play-button{border-color:#fff;background-color:#73859f;background-color:rgba(115,133,159,.5);transition:all 0s}.vjs-controls-disabled .vjs-big-play-button,.vjs-error .vjs-big-play-button,.vjs-has-started .vjs-big-play-button,.vjs-using-native-controls .vjs-big-play-button{display:none}.vjs-has-started.vjs-paused.vjs-show-big-play-button-on-pause .vjs-big-play-button{display:block}.video-js button{background:0 0;border:none;color:inherit;display:inline-block;font-size:inherit;line-height:inherit;text-transform:none;text-decoration:none;transition:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}.vjs-control .vjs-button{width:100%;height:100%}.video-js .vjs-control.vjs-close-button{cursor:pointer;height:3em;position:absolute;right:0;top:.5em;z-index:2}.video-js .vjs-modal-dialog{background:rgba(0,0,0,.8);background:linear-gradient(180deg,rgba(0,0,0,.8),rgba(255,255,255,0));overflow:auto}.video-js .vjs-modal-dialog>*{box-sizing:border-box}.vjs-modal-dialog .vjs-modal-dialog-content{font-size:1.2em;line-height:1.5;padding:20px 24px;z-index:1}.vjs-menu-button{cursor:pointer}.vjs-menu-button.vjs-disabled{cursor:default}.vjs-workinghover .vjs-menu-button.vjs-disabled:hover .vjs-menu{display:none}.vjs-menu .vjs-menu-content{display:block;padding:0;margin:0;font-family:Arial,Helvetica,sans-serif;overflow:auto}.vjs-menu .vjs-menu-content>*{box-sizing:border-box}.vjs-scrubbing .vjs-control.vjs-menu-button:hover .vjs-menu{display:none}.vjs-menu li{list-style:none;margin:0;padding:.2em 0;line-height:1.4em;font-size:1.2em;text-align:center;text-transform:lowercase}.js-focus-visible .vjs-menu li.vjs-menu-item:hover,.vjs-menu li.vjs-menu-item:focus,.vjs-menu li.vjs-menu-item:hover{background-color:#73859f;background-color:rgba(115,133,159,.5)}.js-focus-visible .vjs-menu li.vjs-selected:hover,.vjs-menu li.vjs-selected,.vjs-menu li.vjs-selected:focus,.vjs-menu li.vjs-selected:hover{background-color:#fff;color:#2b333f}.vjs-menu li.vjs-menu-title{text-align:center;text-transform:uppercase;font-size:1em;line-height:2em;padding:0;margin:0 0 .3em 0;font-weight:700;cursor:default}.vjs-menu-button-popup .vjs-menu{display:none;position:absolute;bottom:0;width:10em;left:-3em;height:0;margin-bottom:1.5em;border-top-color:rgba(43,51,63,.7)}.vjs-menu-button-popup .vjs-menu .vjs-menu-content{background-color:#2b333f;background-color:rgba(43,51,63,.7);position:absolute;width:100%;bottom:1.5em;max-height:15em}.vjs-layout-tiny .vjs-menu-button-popup .vjs-menu .vjs-menu-content,.vjs-layout-x-small .vjs-menu-button-popup .vjs-menu .vjs-menu-content{max-height:5em}.vjs-layout-small .vjs-menu-button-popup .vjs-menu .vjs-menu-content{max-height:10em}.vjs-layout-medium .vjs-menu-button-popup .vjs-menu .vjs-menu-content{max-height:14em}.vjs-layout-huge .vjs-menu-button-popup .vjs-menu .vjs-menu-content,.vjs-layout-large .vjs-menu-button-popup .vjs-menu .vjs-menu-content,.vjs-layout-x-large .vjs-menu-button-popup .vjs-menu .vjs-menu-content{max-height:25em}.vjs-menu-button-popup .vjs-menu.vjs-lock-showing,.vjs-workinghover .vjs-menu-button-popup.vjs-hover .vjs-menu{display:block}.video-js .vjs-menu-button-inline{transition:all .4s;overflow:hidden}.video-js .vjs-menu-button-inline:before{width:2.222222222em}.video-js .vjs-menu-button-inline.vjs-slider-active,.video-js .vjs-menu-button-inline:focus,.video-js .vjs-menu-button-inline:hover,.video-js.vjs-no-flex .vjs-menu-button-inline{width:12em}.vjs-menu-button-inline .vjs-menu{opacity:0;height:100%;width:auto;position:absolute;left:4em;top:0;padding:0;margin:0;transition:all .4s}.vjs-menu-button-inline.vjs-slider-active .vjs-menu,.vjs-menu-button-inline:focus .vjs-menu,.vjs-menu-button-inline:hover .vjs-menu{display:block;opacity:1}.vjs-no-flex .vjs-menu-button-inline .vjs-menu{display:block;opacity:1;position:relative;width:auto}.vjs-no-flex .vjs-menu-button-inline.vjs-slider-active .vjs-menu,.vjs-no-flex .vjs-menu-button-inline:focus .vjs-menu,.vjs-no-flex .vjs-menu-button-inline:hover .vjs-menu{width:auto}.vjs-menu-button-inline .vjs-menu-content{width:auto;height:100%;margin:0;overflow:hidden}.video-js .vjs-control-bar{display:none;width:100%;position:absolute;bottom:0;left:0;right:0;height:3em;background-color:#2b333f;background-color:rgba(43,51,63,.7)}.vjs-has-started .vjs-control-bar{display:flex;visibility:visible;opacity:1;transition:visibility .1s,opacity .1s}.vjs-has-started.vjs-user-inactive.vjs-playing .vjs-control-bar{visibility:visible;opacity:0;transition:visibility 1s,opacity 1s}.vjs-controls-disabled .vjs-control-bar,.vjs-error .vjs-control-bar,.vjs-using-native-controls .vjs-control-bar{display:none!important}.vjs-audio.vjs-has-started.vjs-user-inactive.vjs-playing .vjs-control-bar{opacity:1;visibility:visible}.vjs-has-started.vjs-no-flex .vjs-control-bar{display:table}.video-js .vjs-control{position:relative;text-align:center;margin:0;padding:0;height:100%;width:4em;flex:none}.vjs-button>.vjs-icon-placeholder:before{font-size:1.8em;line-height:1.67}.video-js .vjs-control:focus,.video-js .vjs-control:focus:before,.video-js .vjs-control:hover:before{text-shadow:0 0 1em #fff}.video-js .vjs-control-text{border:0;clip:rect(0 0 0 0);height:1px;overflow:hidden;padding:0;position:absolute;width:1px}.vjs-no-flex .vjs-control{display:table-cell;vertical-align:middle}.video-js .vjs-custom-control-spacer{display:none}.video-js .vjs-progress-control{cursor:pointer;flex:auto;display:flex;align-items:center;min-width:4em;touch-action:none}.video-js .vjs-progress-control.disabled{cursor:default}.vjs-live .vjs-progress-control{display:none}.vjs-liveui .vjs-progress-control{display:flex;align-items:center}.vjs-no-flex .vjs-progress-control{width:auto}.video-js .vjs-progress-holder{flex:auto;transition:all .2s;height:.3em}.video-js .vjs-progress-control .vjs-progress-holder{margin:0 10px}.video-js .vjs-progress-control:hover .vjs-progress-holder{font-size:1.6666666667em}.video-js .vjs-progress-control:hover .vjs-progress-holder.disabled{font-size:1em}.video-js .vjs-progress-holder .vjs-load-progress,.video-js .vjs-progress-holder .vjs-load-progress div,.video-js .vjs-progress-holder .vjs-play-progress{position:absolute;display:block;height:100%;margin:0;padding:0;width:0}.video-js .vjs-play-progress{background-color:#fff}.video-js .vjs-play-progress:before{font-size:.9em;position:absolute;right:-.5em;top:-.3333333333em;z-index:1}.video-js .vjs-load-progress{background:rgba(115,133,159,.5)}.video-js .vjs-load-progress div{background:rgba(115,133,159,.75)}.video-js .vjs-time-tooltip{background-color:#fff;background-color:rgba(255,255,255,.8);border-radius:.3em;color:#000;float:right;font-family:Arial,Helvetica,sans-serif;font-size:1em;padding:6px 8px 8px 8px;pointer-events:none;position:absolute;top:-3.4em;visibility:hidden;z-index:1}.video-js .vjs-progress-holder:focus .vjs-time-tooltip{display:none}.video-js .vjs-progress-control:hover .vjs-progress-holder:focus .vjs-time-tooltip,.video-js .vjs-progress-control:hover .vjs-time-tooltip{display:block;font-size:.6em;visibility:visible}.video-js .vjs-progress-control.disabled:hover .vjs-time-tooltip{font-size:1em}.video-js .vjs-progress-control .vjs-mouse-display{display:none;position:absolute;width:1px;height:100%;background-color:#000;z-index:1}.vjs-no-flex .vjs-progress-control .vjs-mouse-display{z-index:0}.video-js .vjs-progress-control:hover .vjs-mouse-display{display:block}.video-js.vjs-user-inactive .vjs-progress-control .vjs-mouse-display{visibility:hidden;opacity:0;transition:visibility 1s,opacity 1s}.video-js.vjs-user-inactive.vjs-no-flex .vjs-progress-control .vjs-mouse-display{display:none}.vjs-mouse-display .vjs-time-tooltip{color:#fff;background-color:#000;background-color:rgba(0,0,0,.8)}.video-js .vjs-slider{position:relative;cursor:pointer;padding:0;margin:0 .45em 0 .45em;-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-color:#73859f;background-color:rgba(115,133,159,.5)}.video-js .vjs-slider.disabled{cursor:default}.video-js .vjs-slider:focus{text-shadow:0 0 1em #fff;box-shadow:0 0 1em #fff}.video-js .vjs-mute-control{cursor:pointer;flex:none}.video-js .vjs-volume-control{cursor:pointer;margin-right:1em;display:flex}.video-js .vjs-volume-control.vjs-volume-horizontal{width:5em}.video-js .vjs-volume-panel .vjs-volume-control{visibility:visible;opacity:0;width:1px;height:1px;margin-left:-1px}.video-js .vjs-volume-panel{transition:width 1s}.video-js .vjs-volume-panel .vjs-volume-control.vjs-slider-active,.video-js .vjs-volume-panel .vjs-volume-control:active,.video-js .vjs-volume-panel.vjs-hover .vjs-mute-control~.vjs-volume-control,.video-js .vjs-volume-panel.vjs-hover .vjs-volume-control,.video-js .vjs-volume-panel:active .vjs-volume-control,.video-js .vjs-volume-panel:focus .vjs-volume-control{visibility:visible;opacity:1;position:relative;transition:visibility .1s,opacity .1s,height .1s,width .1s,left 0s,top 0s}.video-js .vjs-volume-panel .vjs-volume-control.vjs-slider-active.vjs-volume-horizontal,.video-js .vjs-volume-panel .vjs-volume-control:active.vjs-volume-horizontal,.video-js .vjs-volume-panel.vjs-hover .vjs-mute-control~.vjs-volume-control.vjs-volume-horizontal,.video-js .vjs-volume-panel.vjs-hover .vjs-volume-control.vjs-volume-horizontal,.video-js .vjs-volume-panel:active .vjs-volume-control.vjs-volume-horizontal,.video-js .vjs-volume-panel:focus .vjs-volume-control.vjs-volume-horizontal{width:5em;height:3em;margin-right:0}.video-js .vjs-volume-panel .vjs-volume-control.vjs-slider-active.vjs-volume-vertical,.video-js .vjs-volume-panel .vjs-volume-control:active.vjs-volume-vertical,.video-js .vjs-volume-panel.vjs-hover .vjs-mute-control~.vjs-volume-control.vjs-volume-vertical,.video-js .vjs-volume-panel.vjs-hover .vjs-volume-control.vjs-volume-vertical,.video-js .vjs-volume-panel:active .vjs-volume-control.vjs-volume-vertical,.video-js .vjs-volume-panel:focus .vjs-volume-control.vjs-volume-vertical{left:-3.5em;transition:left 0s}.video-js .vjs-volume-panel.vjs-volume-panel-horizontal.vjs-hover,.video-js .vjs-volume-panel.vjs-volume-panel-horizontal.vjs-slider-active,.video-js .vjs-volume-panel.vjs-volume-panel-horizontal:active{width:10em;transition:width .1s}.video-js .vjs-volume-panel.vjs-volume-panel-horizontal.vjs-mute-toggle-only{width:4em}.video-js .vjs-volume-panel .vjs-volume-control.vjs-volume-vertical{height:8em;width:3em;left:-3000em;transition:visibility 1s,opacity 1s,height 1s 1s,width 1s 1s,left 1s 1s,top 1s 1s}.video-js .vjs-volume-panel .vjs-volume-control.vjs-volume-horizontal{transition:visibility 1s,opacity 1s,height 1s 1s,width 1s,left 1s 1s,top 1s 1s}.video-js.vjs-no-flex .vjs-volume-panel .vjs-volume-control.vjs-volume-horizontal{width:5em;height:3em;visibility:visible;opacity:1;position:relative;transition:none}.video-js.vjs-no-flex .vjs-volume-control.vjs-volume-vertical,.video-js.vjs-no-flex .vjs-volume-panel .vjs-volume-control.vjs-volume-vertical{position:absolute;bottom:3em;left:.5em}.video-js .vjs-volume-panel{display:flex}.video-js .vjs-volume-bar{margin:1.35em .45em}.vjs-volume-bar.vjs-slider-horizontal{width:5em;height:.3em}.vjs-volume-bar.vjs-slider-vertical{width:.3em;height:5em;margin:1.35em auto}.video-js .vjs-volume-level{position:absolute;bottom:0;left:0;background-color:#fff}.video-js .vjs-volume-level:before{position:absolute;font-size:.9em}.vjs-slider-vertical .vjs-volume-level{width:.3em}.vjs-slider-vertical .vjs-volume-level:before{top:-.5em;left:-.3em}.vjs-slider-horizontal .vjs-volume-level{height:.3em}.vjs-slider-horizontal .vjs-volume-level:before{top:-.3em;right:-.5em}.video-js .vjs-volume-panel.vjs-volume-panel-vertical{width:4em}.vjs-volume-bar.vjs-slider-vertical .vjs-volume-level{height:100%}.vjs-volume-bar.vjs-slider-horizontal .vjs-volume-level{width:100%}.video-js .vjs-volume-vertical{width:3em;height:8em;bottom:8em;background-color:#2b333f;background-color:rgba(43,51,63,.7)}.video-js .vjs-volume-horizontal .vjs-menu{left:-2em}.vjs-poster{display:inline-block;vertical-align:middle;background-repeat:no-repeat;background-position:50% 50%;background-size:contain;background-color:#000;cursor:pointer;margin:0;padding:0;position:absolute;top:0;right:0;bottom:0;left:0;height:100%}.vjs-has-started .vjs-poster{display:none}.vjs-audio.vjs-has-started .vjs-poster{display:block}.vjs-using-native-controls .vjs-poster{display:none}.video-js .vjs-live-control{display:flex;align-items:flex-start;flex:auto;font-size:1em;line-height:3em}.vjs-no-flex .vjs-live-control{display:table-cell;width:auto;text-align:left}.video-js.vjs-liveui .vjs-live-control,.video-js:not(.vjs-live) .vjs-live-control{display:none}.video-js .vjs-seek-to-live-control{cursor:pointer;flex:none;display:inline-flex;height:100%;padding-left:.5em;padding-right:.5em;font-size:1em;line-height:3em;width:auto;min-width:4em}.vjs-no-flex .vjs-seek-to-live-control{display:table-cell;width:auto;text-align:left}.video-js.vjs-live:not(.vjs-liveui) .vjs-seek-to-live-control,.video-js:not(.vjs-live) .vjs-seek-to-live-control{display:none}.vjs-seek-to-live-control.vjs-control.vjs-at-live-edge{cursor:auto}.vjs-seek-to-live-control .vjs-icon-placeholder{margin-right:.5em;color:#888}.vjs-seek-to-live-control.vjs-control.vjs-at-live-edge .vjs-icon-placeholder{color:red}.video-js .vjs-time-control{flex:none;font-size:1em;line-height:3em;min-width:2em;width:auto;padding-left:1em;padding-right:1em}.vjs-live .vjs-time-control{display:none}.video-js .vjs-current-time,.vjs-no-flex .vjs-current-time{display:none}.video-js .vjs-duration,.vjs-no-flex .vjs-duration{display:none}.vjs-time-divider{display:none;line-height:3em}.vjs-live .vjs-time-divider{display:none}.video-js .vjs-play-control{cursor:pointer}.video-js .vjs-play-control .vjs-icon-placeholder{flex:none}.vjs-text-track-display{position:absolute;bottom:3em;left:0;right:0;top:0;pointer-events:none}.video-js.vjs-user-inactive.vjs-playing .vjs-text-track-display{bottom:1em}.video-js .vjs-text-track{font-size:1.4em;text-align:center;margin-bottom:.1em}.vjs-subtitles{color:#fff}.vjs-captions{color:#fc6}.vjs-tt-cue{display:block}video::-webkit-media-text-track-display{transform:translateY(-3em)}.video-js.vjs-user-inactive.vjs-playing video::-webkit-media-text-track-display{transform:translateY(-1.5em)}.video-js .vjs-picture-in-picture-control{cursor:pointer;flex:none}.video-js .vjs-fullscreen-control{cursor:pointer;flex:none}.vjs-playback-rate .vjs-playback-rate-value,.vjs-playback-rate>.vjs-menu-button{position:absolute;top:0;left:0;width:100%;height:100%}.vjs-playback-rate .vjs-playback-rate-value{pointer-events:none;font-size:1.5em;line-height:2;text-align:center}.vjs-playback-rate .vjs-menu{width:4em;left:0}.vjs-error .vjs-error-display .vjs-modal-dialog-content{font-size:1.4em;text-align:center}.vjs-error .vjs-error-display:before{color:#fff;content:"X";font-family:Arial,Helvetica,sans-serif;font-size:4em;left:0;line-height:1;margin-top:-.5em;position:absolute;text-shadow:.05em .05em .1em #000;text-align:center;top:50%;vertical-align:middle;width:100%}.vjs-loading-spinner{display:none;position:absolute;top:50%;left:50%;margin:-25px 0 0 -25px;opacity:.85;text-align:left;border:6px solid rgba(43,51,63,.7);box-sizing:border-box;background-clip:padding-box;width:50px;height:50px;border-radius:25px;visibility:hidden}.vjs-seeking .vjs-loading-spinner,.vjs-waiting .vjs-loading-spinner{display:block;-webkit-animation:vjs-spinner-show 0s linear .3s forwards;animation:vjs-spinner-show 0s linear .3s forwards}.vjs-loading-spinner:after,.vjs-loading-spinner:before{content:"";position:absolute;margin:-6px;box-sizing:inherit;width:inherit;height:inherit;border-radius:inherit;opacity:1;border:inherit;border-color:transparent;border-top-color:#fff}.vjs-seeking .vjs-loading-spinner:after,.vjs-seeking .vjs-loading-spinner:before,.vjs-waiting .vjs-loading-spinner:after,.vjs-waiting .vjs-loading-spinner:before{-webkit-animation:vjs-spinner-spin 1.1s cubic-bezier(.6,.2,0,.8) infinite,vjs-spinner-fade 1.1s linear infinite;animation:vjs-spinner-spin 1.1s cubic-bezier(.6,.2,0,.8) infinite,vjs-spinner-fade 1.1s linear infinite}.vjs-seeking .vjs-loading-spinner:before,.vjs-waiting .vjs-loading-spinner:before{border-top-color:#fff}.vjs-seeking .vjs-loading-spinner:after,.vjs-waiting .vjs-loading-spinner:after{border-top-color:#fff;-webkit-animation-delay:.44s;animation-delay:.44s}@keyframes vjs-spinner-show{to{visibility:visible}}@-webkit-keyframes vjs-spinner-show{to{visibility:visible}}@keyframes vjs-spinner-spin{100%{transform:rotate(360deg)}}@-webkit-keyframes vjs-spinner-spin{100%{-webkit-transform:rotate(360deg)}}@keyframes vjs-spinner-fade{0%{border-top-color:#73859f}20%{border-top-color:#73859f}35%{border-top-color:#fff}60%{border-top-color:#73859f}100%{border-top-color:#73859f}}@-webkit-keyframes vjs-spinner-fade{0%{border-top-color:#73859f}20%{border-top-color:#73859f}35%{border-top-color:#fff}60%{border-top-color:#73859f}100%{border-top-color:#73859f}}.vjs-chapters-button .vjs-menu ul{width:24em}.video-js .vjs-subs-caps-button+.vjs-menu .vjs-captions-menu-item .vjs-menu-item-text .vjs-icon-placeholder{vertical-align:middle;display:inline-block;margin-bottom:-.1em}.video-js .vjs-subs-caps-button+.vjs-menu .vjs-captions-menu-item .vjs-menu-item-text .vjs-icon-placeholder:before{font-family:VideoJS;content:"\uf10d";font-size:1.5em;line-height:inherit}.video-js .vjs-audio-button+.vjs-menu .vjs-main-desc-menu-item .vjs-menu-item-text .vjs-icon-placeholder{vertical-align:middle;display:inline-block;margin-bottom:-.1em}.video-js .vjs-audio-button+.vjs-menu .vjs-main-desc-menu-item .vjs-menu-item-text .vjs-icon-placeholder:before{font-family:VideoJS;content:" \uf11d";font-size:1.5em;line-height:inherit}.video-js:not(.vjs-fullscreen).vjs-layout-small .vjs-audio-button,.video-js:not(.vjs-fullscreen).vjs-layout-small .vjs-captions-button,.video-js:not(.vjs-fullscreen).vjs-layout-small .vjs-chapters-button,.video-js:not(.vjs-fullscreen).vjs-layout-small .vjs-current-time,.video-js:not(.vjs-fullscreen).vjs-layout-small .vjs-descriptions-button,.video-js:not(.vjs-fullscreen).vjs-layout-small .vjs-duration,.video-js:not(.vjs-fullscreen).vjs-layout-small .vjs-playback-rate,.video-js:not(.vjs-fullscreen).vjs-layout-small .vjs-remaining-time,.video-js:not(.vjs-fullscreen).vjs-layout-small .vjs-subtitles-button,.video-js:not(.vjs-fullscreen).vjs-layout-small .vjs-time-divider,.video-js:not(.vjs-fullscreen).vjs-layout-small .vjs-volume-control,.video-js:not(.vjs-fullscreen).vjs-layout-tiny .vjs-audio-button,.video-js:not(.vjs-fullscreen).vjs-layout-tiny .vjs-captions-button,.video-js:not(.vjs-fullscreen).vjs-layout-tiny .vjs-chapters-button,.video-js:not(.vjs-fullscreen).vjs-layout-tiny .vjs-current-time,.video-js:not(.vjs-fullscreen).vjs-layout-tiny .vjs-descriptions-button,.video-js:not(.vjs-fullscreen).vjs-layout-tiny .vjs-duration,.video-js:not(.vjs-fullscreen).vjs-layout-tiny .vjs-playback-rate,.video-js:not(.vjs-fullscreen).vjs-layout-tiny .vjs-remaining-time,.video-js:not(.vjs-fullscreen).vjs-layout-tiny .vjs-subtitles-button,.video-js:not(.vjs-fullscreen).vjs-layout-tiny .vjs-time-divider,.video-js:not(.vjs-fullscreen).vjs-layout-tiny .vjs-volume-control,.video-js:not(.vjs-fullscreen).vjs-layout-x-small .vjs-audio-button,.video-js:not(.vjs-fullscreen).vjs-layout-x-small .vjs-captions-button,.video-js:not(.vjs-fullscreen).vjs-layout-x-small .vjs-chapters-button,.video-js:not(.vjs-fullscreen).vjs-layout-x-small .vjs-current-time,.video-js:not(.vjs-fullscreen).vjs-layout-x-small .vjs-descriptions-button,.video-js:not(.vjs-fullscreen).vjs-layout-x-small .vjs-duration,.video-js:not(.vjs-fullscreen).vjs-layout-x-small .vjs-playback-rate,.video-js:not(.vjs-fullscreen).vjs-layout-x-small .vjs-remaining-time,.video-js:not(.vjs-fullscreen).vjs-layout-x-small .vjs-subtitles-button,.video-js:not(.vjs-fullscreen).vjs-layout-x-small .vjs-time-divider,.video-js:not(.vjs-fullscreen).vjs-layout-x-small .vjs-volume-control{display:none}.video-js:not(.vjs-fullscreen).vjs-layout-small .vjs-volume-panel.vjs-volume-panel-horizontal.vjs-slider-active,.video-js:not(.vjs-fullscreen).vjs-layout-small .vjs-volume-panel.vjs-volume-panel-horizontal:active,.video-js:not(.vjs-fullscreen).vjs-layout-small .vjs-volume-panel.vjs-volume-panel-horizontal:hover,.video-js:not(.vjs-fullscreen).vjs-layout-tiny .vjs-volume-panel.vjs-volume-panel-horizontal.vjs-slider-active,.video-js:not(.vjs-fullscreen).vjs-layout-tiny .vjs-volume-panel.vjs-volume-panel-horizontal:active,.video-js:not(.vjs-fullscreen).vjs-layout-tiny .vjs-volume-panel.vjs-volume-panel-horizontal:hover,.video-js:not(.vjs-fullscreen).vjs-layout-x-small .vjs-volume-panel.vjs-volume-panel-horizontal.vjs-slider-active,.video-js:not(.vjs-fullscreen).vjs-layout-x-small .vjs-volume-panel.vjs-volume-panel-horizontal:active,.video-js:not(.vjs-fullscreen).vjs-layout-x-small .vjs-volume-panel.vjs-volume-panel-horizontal:hover{width:auto;width:initial}.video-js:not(.vjs-fullscreen).vjs-layout-tiny .vjs-subs-caps-button,.video-js:not(.vjs-fullscreen).vjs-layout-x-small:not(.vjs-live) .vjs-subs-caps-button,.video-js:not(.vjs-fullscreen).vjs-layout-x-small:not(.vjs-liveui) .vjs-subs-caps-button{display:none}.video-js:not(.vjs-fullscreen).vjs-layout-tiny .vjs-custom-control-spacer,.video-js:not(.vjs-fullscreen).vjs-layout-x-small.vjs-liveui .vjs-custom-control-spacer{flex:auto;display:block}.video-js:not(.vjs-fullscreen).vjs-layout-tiny.vjs-no-flex .vjs-custom-control-spacer,.video-js:not(.vjs-fullscreen).vjs-layout-x-small.vjs-liveui.vjs-no-flex .vjs-custom-control-spacer{width:auto}.video-js:not(.vjs-fullscreen).vjs-layout-tiny .vjs-progress-control,.video-js:not(.vjs-fullscreen).vjs-layout-x-small.vjs-liveui .vjs-progress-control{display:none}.vjs-modal-dialog.vjs-text-track-settings{background-color:#2b333f;background-color:rgba(43,51,63,.75);color:#fff;height:70%}.vjs-text-track-settings .vjs-modal-dialog-content{display:table}.vjs-text-track-settings .vjs-track-settings-colors,.vjs-text-track-settings .vjs-track-settings-controls,.vjs-text-track-settings .vjs-track-settings-font{display:table-cell}.vjs-text-track-settings .vjs-track-settings-controls{text-align:right;vertical-align:bottom}@supports (display:grid){.vjs-text-track-settings .vjs-modal-dialog-content{display:grid;grid-template-columns:1fr 1fr;grid-template-rows:1fr;padding:20px 24px 0 24px}.vjs-track-settings-controls .vjs-default-button{margin-bottom:20px}.vjs-text-track-settings .vjs-track-settings-controls{grid-column:1/-1}.vjs-layout-small .vjs-text-track-settings .vjs-modal-dialog-content,.vjs-layout-tiny .vjs-text-track-settings .vjs-modal-dialog-content,.vjs-layout-x-small .vjs-text-track-settings .vjs-modal-dialog-content{grid-template-columns:1fr}}.vjs-track-setting>select{margin-right:1em;margin-bottom:.5em}.vjs-text-track-settings fieldset{margin:5px;padding:3px;border:none}.vjs-text-track-settings fieldset span{display:inline-block}.vjs-text-track-settings fieldset span>select{max-width:7.3em}.vjs-text-track-settings legend{color:#fff;margin:0 0 5px 0}.vjs-text-track-settings .vjs-label{position:absolute;clip:rect(1px 1px 1px 1px);clip:rect(1px,1px,1px,1px);display:block;margin:0 0 5px 0;padding:0;border:0;height:1px;width:1px;overflow:hidden}.vjs-track-settings-controls button:active,.vjs-track-settings-controls button:focus{outline-style:solid;outline-width:medium;background-image:linear-gradient(0deg,#fff 88%,#73859f 100%)}.vjs-track-settings-controls button:hover{color:rgba(43,51,63,.75)}.vjs-track-settings-controls button{background-color:#fff;background-image:linear-gradient(-180deg,#fff 88%,#73859f 100%);color:#2b333f;cursor:pointer;border-radius:2px}.vjs-track-settings-controls .vjs-default-button{margin-right:1em}@media print{.video-js>:not(.vjs-tech):not(.vjs-poster){visibility:hidden}}.vjs-resize-manager{position:absolute;top:0;left:0;width:100%;height:100%;border:none;z-index:-1000}.js-focus-visible .video-js :focus:not(.focus-visible){outline:0;background:0 0}.video-js .vjs-menu :focus:not(:focus-visible),.video-js :focus:not(:focus-visible){outline:0;background:0 0}',
		cssText = '.bc-player-VNXYOEC7Ep_default *,.bc-player-VNXYOEC7Ep_default :after,.bc-player-VNXYOEC7Ep_default :before{box-sizing:inherit;font-size:inherit;color:inherit;line-height:inherit}.bc-player-VNXYOEC7Ep_default{width:300px;height:150px;font-size:14px;overflow:hidden}.bc-player-VNXYOEC7Ep_default.vjs-fluid,.bc-player-VNXYOEC7Ep_default.vjs-fluid.vjs-16-9{padding-top:56.25%}.bc-player-VNXYOEC7Ep_default.vjs-fluid.vjs-4-3{padding-top:75%}.bc-player-VNXYOEC7Ep_default.vjs-fill{width:100%;height:100%}.bc-iframe,.bc-iframe body,.bc-player-VNXYOEC7Ep_default,.bc-player-VNXYOEC7Ep_default .vjs-poster{background-color:#151B17}.bc-iframe,.bc-iframe .bc-player-VNXYOEC7Ep_default,.bc-iframe body{margin:0;width:100%;height:100%;overflow:hidden}.bc-player-VNXYOEC7Ep_default.vjs-fullscreen,.bc-player-VNXYOEC7Ep_default.vjs-fullscreen .vjs-tech{width:100%!important;height:100%!important}.bc-player-VNXYOEC7Ep_default .vjs-track-setting select{color:#000;background-color:#fff}.bc-player-VNXYOEC7Ep_default .vjs-audio-button .vjs-menu-item,.bc-player-VNXYOEC7Ep_default .vjs-chapters-button .vjs-menu-item,.bc-player-VNXYOEC7Ep_default .vjs-descriptions-button .vjs-menu-item,.bc-player-VNXYOEC7Ep_default .vjs-subs-caps-button .vjs-menu-item{text-transform:none}.bc-player-VNXYOEC7Ep_default.vjs-waiting-for-autoplay .vjs-big-play-button{opacity:0}.bc-player-VNXYOEC7Ep_default .vjs-progress-control .vjs-mouse-display{z-index:2}/*! @name @brightcove/player-core @version 0.13.0 @license UNLICENSED */.vjs-modal-dialog.vjs-player-info-modal{background:rgba(0,0,0,.9);font-size:10px}.vjs-modal-dialog.vjs-player-info-modal .vjs-modal-dialog-content{overflow:auto}.vjs-modal-dialog.vjs-player-info-modal .vjs-pi-section{float:left;width:49%}.vjs-modal-dialog.vjs-player-info-modal .vjs-pi-section:nth-child(2n+1){float:right}.vjs-modal-dialog.vjs-player-info-modal .vjs-pi-section.vjs-pi-section--source{float:none;clear:both;width:auto}.vjs-modal-dialog.vjs-player-info-modal .vjs-pi-section.vjs-pi-section--source td:first-child{min-width:150px}.vjs-modal-dialog.vjs-player-info-modal table{border-collapse:collapse;margin-bottom:1em;width:100%}.vjs-modal-dialog.vjs-player-info-modal th{font-weight:400;text-align:left}.vjs-modal-dialog.vjs-player-info-modal td{border-bottom:1px solid rgba(255,255,255,.2);opacity:.5}.vjs-modal-dialog.vjs-player-info-modal tr:last-child td{border-bottom:0}.vjs-modal-dialog.vjs-player-info-modal tr:hover td{opacity:1}.vjs-error-display{color:#fff;display:none;font-family:Helvetica,Arial,sans serif;font-size:16px;line-height:1.428}.vjs-error .vjs-error-display{display:block;position:absolute;top:0;left:0;right:0;bottom:0;background:rgba(0,0,0,.5)}.vjs-error .vjs-error-display .vjs-modal-dialog-content{font-size:14px}.vjs-errors-dialog{text-align:left;border:1px #999 solid;overflow:hidden;position:absolute;top:2%;bottom:2%;left:5%;right:5%;padding-left:1%;padding-right:1%;background:rgba(24,24,24,.8);-ms-filter:"progid:DXImageTransform.Microsoft.gradient(startColorstr=#CC000000, endColorstr=#CC000000)"}.vjs-errors-details{margin-top:15px}.vjs-errors-message{border:1px #999 solid;background-color:#2c2c2c;overflow:auto;margin-top:15px;padding:15px}.vjs-errors-ok-button-container{display:block;position:absolute;bottom:15px;left:15px;right:15px;text-align:center}.vjs-errors-ok-button{display:block;margin:0 auto;width:80px;height:36px;background-color:#000;border:1px #999 solid;border-radius:5px;color:#999;font-size:14px;cursor:pointer}.vjs-errors-ok-button:hover{border:1px #FFF solid;color:#CCC}.vjs-errors-content-container{overflow:auto;position:absolute;padding-bottom:15px;top:0;left:15px;right:15px;bottom:61px}.vjs-errors-headline{font-size:14px;font-weight:700;padding-right:3em}.vjs-errors-dialog .vjs-control.vjs-close-button{width:3em;height:3em;top:0}.vjs-errors-flashmessage{float:right;font-size:9px;font-style:italic}.vjs-xs.vjs-error-display{font-size:14px;background-color:#000}.vjs-xs.vjs-error-display .vjs-errors-details,.vjs-xs.vjs-error-display .vjs-errors-message{display:none}.vjs-xs .vjs-errors-content-container{top:0}.vjs-xs .vjs-errors-headline{font-size:16px;font-weight:700}.vjs-xs .vjs-errors-dialog{border:none;top:0;bottom:0;left:0;right:0}.vjs-xs.vjs-errors-flashmessage{display:none}@media (max-width:600px),(max-height:250px){.vjs-error-display{font-size:14px;background-color:#000}.vjs-error-display .vjs-errors-details,.vjs-error-display .vjs-errors-message{display:none}.vjs-error-display .vjs-errors-content-container{top:15px}.vjs-error-display .vjs-errors-headline{font-size:16px;font-weight:700}.vjs-error-display .vjs-errors-dialog{border:none;top:0;bottom:0;left:0;right:0}.vjs-errors-flashmessage{display:none}}.vjs-errors-ref-id{color:rgba(255,255,255,.5);font-size:.75em;margin:.5em 0 0}.video-js .vjs-dock-shelf,.video-js .vjs-dock-text{font-size:1.8em;font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;pointer-events:none;position:absolute;top:0;-webkit-transition:opacity .1s;-moz-transition:opacity .1s;-o-transition:opacity .1s;transition:opacity .1s}.video-js .vjs-dock-text{left:0;margin:0;width:100%;background:rgba(0,0,0,.8);background:-webkit-linear-gradient(to bottom,rgba(0,0,0,.8) 0,rgba(0,0,0,.7) 30%,rgba(0,0,0,.7) 70%,transparent 100%);background:linear-gradient(to bottom,rgba(0,0,0,.8) 0,rgba(0,0,0,.7) 30%,rgba(0,0,0,.7) 70%,transparent 100%);padding:1em 25% 2em 1em}.video-js.vjs-no-flex .vjs-dock-text{padding-bottom:1em}.video-js .vjs-dock-shelf{padding:1em 1em;right:0;text-align:right;width:25%}.video-js .vjs-dock-shelf *{pointer-events:auto}.video-js .vjs-dock-description,.video-js .vjs-dock-title{margin:0;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.video-js .vjs-dock-title{font-weight:700;letter-spacing:1px;line-height:1.333;margin-bottom:.333em}.video-js .vjs-dock-description{font-weight:400;line-height:1.5}.vjs-playing.vjs-user-inactive .vjs-dock-shelf,.vjs-playing.vjs-user-inactive .vjs-dock-text{opacity:0;-webkit-transition:opacity 1s;-moz-transition:opacity 1s;-o-transition:opacity 1s;transition:opacity 1s}.vjs-playing.vjs-no-flex.vjs-user-inactive .vjs-dock-shelf,.vjs-playing.vjs-no-flex.vjs-user-inactive .vjs-dock-text{display:none}.video-js .vjs-dock-shelf,.video-js .vjs-dock-text{font-size:1em}.vjs-has-started:not(:hover) .vjs-dock-shelf,.vjs-has-started:not(:hover) .vjs-dock-text{opacity:0;-webkit-transition:opacity 1s;-moz-transition:opacity 1s;-ms-transition:opacity 1s;-o-transition:opacity 1s;transition:opacity 1s}/*! @name videojs-contextmenu-ui @version 5.2.0 @license Apache-2.0 */.vjs-contextmenu-ui-menu{position:absolute}.vjs-contextmenu-ui-menu .vjs-menu-content{background-color:#2b333f;background-color:rgba(43,51,63,.7);border-radius:.3em;padding:.25em}.vjs-contextmenu-ui-menu .vjs-menu-item{border-radius:.3em;cursor:pointer;margin:0 0 1px;padding:.5em 1em;font-size:1em;line-height:1.2;text-transform:none}.vjs-contextmenu-ui-menu .vjs-menu-item:active,.vjs-contextmenu-ui-menu .vjs-menu-item:hover{background-color:rgba(0,0,0,.5);text-shadow:0 0 1em #fff}.bc-player-VNXYOEC7Ep_default .vjs-control-bar{background-color:rgba(0,0,0,.45);color:#fff}.bc-player-VNXYOEC7Ep_default .vjs-control{color:inherit}.bc-player-VNXYOEC7Ep_default .vjs-mouse-display:after,.bc-player-VNXYOEC7Ep_default .vjs-play-progress:after{border-radius:0}.bc-player-VNXYOEC7Ep_default .vjs-menu-button-inline:hover,.bc-player-VNXYOEC7Ep_default.vjs-no-flex .vjs-menu-button-inline{width:8.35em}.bc-player-VNXYOEC7Ep_default .vjs-control:focus:before,.bc-player-VNXYOEC7Ep_default .vjs-control:hover:before{text-shadow:0 0 1em #fff,0 0 1em #fff,0 0 1em #fff}.bc-player-VNXYOEC7Ep_default .vjs-spacer{display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;-webkit-box-flex:1 1 auto;-moz-box-flex:1 1 auto;-webkit-flex:1 1 auto;-ms-flex:1 1 auto;flex:1 1 auto}.bc-player-VNXYOEC7Ep_default .vjs-time-control{display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;-webkit-box-flex:0 1 auto;-moz-box-flex:0 1 auto;-webkit-flex:0 1 auto;-ms-flex:0 1 auto;flex:0 1 auto;width:auto}.bc-player-VNXYOEC7Ep_default .vjs-time-control.vjs-time-divider{width:14px}.bc-player-VNXYOEC7Ep_default .vjs-time-control.vjs-time-divider div{width:100%;text-align:center}.bc-player-VNXYOEC7Ep_default .vjs-time-control.vjs-current-time{margin-left:1em}.bc-player-VNXYOEC7Ep_default .vjs-time-control .vjs-current-time-display,.bc-player-VNXYOEC7Ep_default .vjs-time-control .vjs-duration-display{width:100%}.bc-player-VNXYOEC7Ep_default .vjs-time-control .vjs-current-time-display{text-align:right}.bc-player-VNXYOEC7Ep_default .vjs-time-control .vjs-duration-display{text-align:left}.bc-player-VNXYOEC7Ep_default .vjs-remaining-time{display:none}.bc-player-VNXYOEC7Ep_default.vjs-no-flex .vjs-time-control.vjs-remaining-time{display:none}.bc-player-VNXYOEC7Ep_default.vjs-no-flex .vjs-time-control{display:table-cell;width:4em}.bc-player-VNXYOEC7Ep_default .vjs-play-progress,.bc-player-VNXYOEC7Ep_default .vjs-volume-level{background-color:#d52484}.bc-player-VNXYOEC7Ep_default.vjs-ad-playing .vjs-play-progress,.bc-player-VNXYOEC7Ep_default.vjs-ad-playing .vjs-volume-level{background-color:#ffe400}.bc-player-VNXYOEC7Ep_default .vjs-play-progress:before,.bc-player-VNXYOEC7Ep_default .vjs-volume-level:before{display:none}.bc-player-VNXYOEC7Ep_default .vjs-volume-level:after{display:none}.bc-player-VNXYOEC7Ep_default .vjs-progress-control{position:absolute;left:0;right:0;width:100%;height:1.5em;top:-1.5em}.bc-player-VNXYOEC7Ep_default .vjs-progress-control .vjs-load-progress,.bc-player-VNXYOEC7Ep_default .vjs-progress-control .vjs-play-progress,.bc-player-VNXYOEC7Ep_default .vjs-progress-control .vjs-progress-holder{height:100%}.bc-player-VNXYOEC7Ep_default .vjs-progress-control .vjs-progress-holder{margin:0}.bc-player-VNXYOEC7Ep_default .vjs-progress-control:hover{height:1.5em;top:-1.5em}.bc-player-VNXYOEC7Ep_default .vjs-control-bar:not(.vjs-focus-within){-webkit-transition:-webkit-transform .1s ease 0s;-moz-transition:-moz-transform .1s ease 0s;-ms-transition:-ms-transform .1s ease 0s;-o-transition:-o-transform .1s ease 0s;transition:transform .1s ease 0s}.bc-player-VNXYOEC7Ep_default.not-hover.vjs-has-started.vjs-paused.vjs-user-active .vjs-control-bar:not(.vjs-focus-within):not(.vjs-control-bar-visible),.bc-player-VNXYOEC7Ep_default.not-hover.vjs-has-started.vjs-paused.vjs-user-inactive .vjs-control-bar:not(.vjs-focus-within):not(.vjs-control-bar-visible),.bc-player-VNXYOEC7Ep_default.not-hover.vjs-has-started.vjs-playing.vjs-user-active .vjs-control-bar:not(.vjs-focus-within):not(.vjs-control-bar-visible),.bc-player-VNXYOEC7Ep_default.not-hover.vjs-has-started.vjs-playing.vjs-user-inactive .vjs-control-bar:not(.vjs-focus-within):not(.vjs-control-bar-visible),.bc-player-VNXYOEC7Ep_default.vjs-has-started.vjs-paused.vjs-ad-playing.vjs-user-inactive .vjs-control-bar,.bc-player-VNXYOEC7Ep_default.vjs-has-started.vjs-playing.vjs-user-inactive .vjs-control-bar:not(.vjs-focus-within):not(.vjs-control-bar-visible){visibility:visible;opacity:1;-webkit-backface-visibility:hidden;-webkit-transform:translateY(3em);-moz-transform:translateY(3em);-ms-transform:translateY(3em);-o-transform:translateY(3em);transform:translateY(3em);-webkit-transition:-webkit-transform 1s ease 0s;-moz-transition:-moz-transform 1s ease 0s;-ms-transition:-ms-transform 1s ease 0s;-o-transition:-o-transform 1s ease 0s;transition:transform 1s ease 0s}.bc-player-VNXYOEC7Ep_default.not-hover.vjs-has-started.vjs-paused.vjs-user-active .vjs-progress-control,.bc-player-VNXYOEC7Ep_default.not-hover.vjs-has-started.vjs-paused.vjs-user-inactive .vjs-progress-control,.bc-player-VNXYOEC7Ep_default.not-hover.vjs-has-started.vjs-playing.vjs-user-active .vjs-progress-control,.bc-player-VNXYOEC7Ep_default.not-hover.vjs-has-started.vjs-playing.vjs-user-inactive .vjs-progress-control,.bc-player-VNXYOEC7Ep_default.vjs-has-started.vjs-paused.vjs-ad-playing.vjs-user-inactive .vjs-progress-control,.bc-player-VNXYOEC7Ep_default.vjs-has-started.vjs-playing.vjs-user-inactive .vjs-progress-control{height:.3em;top:-.3em;pointer-events:none;-webkit-transition:height 1s,top 1s;-moz-transition:height 1s,top 1s;-ms-transition:height 1s,top 1s;-o-transition:height 1s,top 1s;transition:height 1s,top 1s}.bc-player-VNXYOEC7Ep_default.not-hover.vjs-has-started.vjs-paused.vjs-user-active.vjs-fullscreen .vjs-progress-control,.bc-player-VNXYOEC7Ep_default.not-hover.vjs-has-started.vjs-paused.vjs-user-inactive.vjs-fullscreen .vjs-progress-control,.bc-player-VNXYOEC7Ep_default.not-hover.vjs-has-started.vjs-playing.vjs-user-active.vjs-fullscreen .vjs-progress-control,.bc-player-VNXYOEC7Ep_default.not-hover.vjs-has-started.vjs-playing.vjs-user-inactive.vjs-fullscreen .vjs-progress-control,.bc-player-VNXYOEC7Ep_default.vjs-has-started.vjs-playing.vjs-user-inactive.vjs-fullscreen .vjs-progress-control{opacity:0;-webkit-transition:opacity 1s;-moz-transition:opacity 1s;-ms-transition:opacity 1s;-o-transition:opacity 1s;transition:opacity 1s}.bc-player-VNXYOEC7Ep_default.not-hover.vjs-has-started.vjs-paused.vjs-user-active .vjs-menu,.bc-player-VNXYOEC7Ep_default.not-hover.vjs-has-started.vjs-paused.vjs-user-active .vjs-volume-vertical,.bc-player-VNXYOEC7Ep_default.not-hover.vjs-has-started.vjs-paused.vjs-user-inactive .vjs-menu,.bc-player-VNXYOEC7Ep_default.not-hover.vjs-has-started.vjs-paused.vjs-user-inactive .vjs-volume-vertical,.bc-player-VNXYOEC7Ep_default.not-hover.vjs-has-started.vjs-playing.vjs-user-active .vjs-menu,.bc-player-VNXYOEC7Ep_default.not-hover.vjs-has-started.vjs-playing.vjs-user-active .vjs-volume-vertical,.bc-player-VNXYOEC7Ep_default.not-hover.vjs-has-started.vjs-playing.vjs-user-inactive .vjs-menu,.bc-player-VNXYOEC7Ep_default.not-hover.vjs-has-started.vjs-playing.vjs-user-inactive .vjs-volume-vertical,.bc-player-VNXYOEC7Ep_default.vjs-has-started.vjs-paused.vjs-ad-playing.vjs-user-inactive .vjs-menu,.bc-player-VNXYOEC7Ep_default.vjs-has-started.vjs-paused.vjs-ad-playing.vjs-user-inactive .vjs-volume-vertical,.bc-player-VNXYOEC7Ep_default.vjs-has-started.vjs-playing.vjs-user-inactive .vjs-menu,.bc-player-VNXYOEC7Ep_default.vjs-has-started.vjs-playing.vjs-user-inactive .vjs-volume-vertical{opacity:0;-webkit-transition:opacity 1s;-moz-transition:opacity 1s;-ms-transition:opacity 1s;-o-transition:opacity 1s;transition:opacity 1s}.bc-player-VNXYOEC7Ep_default.not-hover.vjs-has-started.vjs-paused.vjs-user-active .vjs-control-bar-visible .vjs-menu,.bc-player-VNXYOEC7Ep_default.not-hover.vjs-has-started.vjs-paused.vjs-user-inactive .vjs-control-bar-visible .vjs-menu,.bc-player-VNXYOEC7Ep_default.not-hover.vjs-has-started.vjs-playing.vjs-user-active .vjs-control-bar-visible .vjs-menu,.bc-player-VNXYOEC7Ep_default.not-hover.vjs-has-started.vjs-playing.vjs-user-inactive .vjs-control-bar-visible .vjs-menu,.bc-player-VNXYOEC7Ep_default.vjs-has-started.vjs-paused.vjs-ad-playing.vjs-user-inactive .vjs-control-bar-visible .vjs-menu-item,.bc-player-VNXYOEC7Ep_default.vjs-has-started.vjs-playing.vjs-user-inactive .vjs-control-bar-visible .vjs-menu{opacity:1}.bc-player-VNXYOEC7Ep_default.vjs-live .vjs-live-control{margin-left:1em}.bc-player-VNXYOEC7Ep_default.vjs-live .vjs-time-control.vjs-current-time,.bc-player-VNXYOEC7Ep_default.vjs-live .vjs-time-control.vjs-duration,.bc-player-VNXYOEC7Ep_default.vjs-live .vjs-time-control.vjs-time-divider{display:none}.bc-player-VNXYOEC7Ep_default .vjs-big-play-button{top:50%;left:50%;margin-left:-1em;margin-top:-1em;width:2em;height:2em;line-height:2em;border:none;border-radius:50%;font-size:3.5em;background-color:rgba(0,0,0,.45);color:#fff;-webkit-transition:border-color .4s,outline .4s,background-color .4s;-moz-transition:border-color .4s,outline .4s,background-color .4s;-ms-transition:border-color .4s,outline .4s,background-color .4s;-o-transition:border-color .4s,outline .4s,background-color .4s;transition:border-color .4s,outline .4s,background-color .4s}.bc-player-VNXYOEC7Ep_default .vjs-big-play-button:active,.bc-player-VNXYOEC7Ep_default .vjs-big-play-button:focus,.bc-player-VNXYOEC7Ep_default:active .vjs-big-play-button,.bc-player-VNXYOEC7Ep_default:hover .vjs-big-play-button{background-color:#d52484}.bc-player-VNXYOEC7Ep_default .vjs-menu-button-popup .vjs-menu{left:-3em}.bc-player-VNXYOEC7Ep_default .vjs-menu-button-popup .vjs-menu .vjs-menu-content{background-color:transparent;width:12em;left:-1.5em;padding-bottom:.5em}.bc-player-VNXYOEC7Ep_default .vjs-menu-button-popup .vjs-menu .vjs-menu-item,.bc-player-VNXYOEC7Ep_default .vjs-menu-button-popup .vjs-menu .vjs-menu-title{background-color:#151B17;margin:.3em 0;padding:.5em;border-radius:.3em}.bc-player-VNXYOEC7Ep_default .vjs-menu-button-popup .vjs-menu .vjs-menu-item.vjs-selected{background-color:#d52484}.bc-player-VNXYOEC7Ep_default .vjs-menu-button-popup .vjs-menu .vjs-menu-item:active,.bc-player-VNXYOEC7Ep_default .vjs-menu-button-popup .vjs-menu .vjs-menu-item:focus,.bc-player-VNXYOEC7Ep_default .vjs-menu-button-popup .vjs-menu .vjs-menu-item:hover{text-shadow:0 0 1em #fff,0 0 1em #fff,0 0 1em #fff;color:#fff}.bc-player-VNXYOEC7Ep_default.vjs-ad-playing .vjs-mouse-display,.bc-player-VNXYOEC7Ep_default.vjs-ad-playing .vjs-mouse-display:after{display:none}.bc-player-VNXYOEC7Ep_default.vjs-ad-playing.vjs-ad-playing .vjs-progress-control:after{pointer-events:auto;width:100%;height:100%;position:absolute;left:0;bottom:0;content:" ";user-select:none;-ms-user-select:none;-moz-user-select:none;-webkit-user-select:none}.bc-player-VNXYOEC7Ep_default.vjs-ad-playing .vjs-picture-in-picture-control{display:none}.bc-player-VNXYOEC7Ep_default.vjs-no-flex .vjs-spacer{display:table-cell}.bc-player-VNXYOEC7Ep_default.vjs-no-flex .vjs-time-control{display:table-cell;width:4em}.bc-player-VNXYOEC7Ep_default.vjs-no-flex .vjs-remaining-time{display:none}.vjs-mouse.bc-player-VNXYOEC7Ep_default .vjs-control-bar{font-size:10px}.vjs-mouse.bc-player-VNXYOEC7Ep_default .vjs-progress-control{height:.5em;top:-.5em}.vjs-mouse.bc-player-VNXYOEC7Ep_default .vjs-progress-control:hover{height:1.5em;top:-1.5em}.bc-player-VNXYOEC7Ep_default select{width:inherit}.bc-player-VNXYOEC7Ep_default.video-js:not(.vjs-fullscreen).vjs-layout-tiny .vjs-progress-control,.bc-player-VNXYOEC7Ep_default.video-js:not(.vjs-fullscreen).vjs-layout-x-small.vjs-liveui .vjs-progress-control{display:block}.vjs-ad-playing.vjs-ad-playing .vjs-progress-control{pointer-events:none}.vjs-ad-playing.vjs-ad-playing .vjs-play-progress{background-color:#ffe400}.vjs-ad-loading .vjs-loading-spinner{display:block;visibility:visible}.vjs-ad-playing .vjs-captions-button{display:none}.vjs-ad-playing .vjs-audio-button{display:none}.vjs-ad-loading .vjs-loading-spinner:after,.vjs-ad-loading .vjs-loading-spinner:before{-webkit-animation:vjs-spinner-spin 1.1s cubic-bezier(.6,.2,0,.8) infinite,vjs-spinner-fade 1.1s linear infinite;animation:vjs-spinner-spin 1.1s cubic-bezier(.6,.2,0,.8) infinite,vjs-spinner-fade 1.1s linear infinite}.vjs-ad-loading .vjs-loading-spinner:before{border-top-color:#fff}.vjs-ad-loading .vjs-loading-spinner:after{border-top-color:#fff;-webkit-animation-delay:.44s;animation-delay:.44s}.vjs-ad-content-resuming .vjs-big-play-button,.vjs-ad-content-resuming .vjs-poster,.vjs-ad-loading .vjs-big-play-button,.vjs-ad-loading .vjs-poster{display:none}.vjs-ima3-ad-container{bottom:0;left:0;position:absolute;right:0;top:0}.vjs-ima3-html5 .vjs-ima3-ad-container>*,.vjs-ima3-html5 .vjs-ima3-ad-container>* iframe{width:100%!important;height:100%!important}.vjs-ima3-ad-container,.vjs-ima3-click-tracker{pointer-events:none}.vjs-ima3-ad-background{width:100%;height:100%;background-color:rgba(0,0,0,0);position:absolute;top:0;left:0}.vjs-ad-playing .vjs-ima3-ad-background{background-color:#000}.vjs-ad-playing .vjs-ima3-ad-container,.vjs-ad-playing .vjs-ima3-click-tracker,.vjs-ima3-overlay .vjs-ima3-ad-container,.vjs-ima3-overlay .vjs-ima3-click-tracker{left:0}.vjs-mouse.vjs-ima3-html5.vjs-ad-playing .vjs-ima3-ad-container,.vjs-mouse.vjs-ima3-html5.vjs-ad-playing .vjs-ima3-click-tracker,.vjs-mouse.vjs-ima3-html5.vjs-ima3-overlay .vjs-ima3-ad-container,.vjs-mouse.vjs-ima3-html5.vjs-ima3-overlay .vjs-ima3-click-tracker{cursor:pointer;pointer-events:auto}.vjs-user-active.vjs-ad-playing.vjs-ima3-html5 .vjs-ima3-ad-container,.vjs-user-active.vjs-ad-playing.vjs-ima3-html5 .vjs-ima3-click-tracker,.vjs-user-active.vjs-ima3-overlay.vjs-ima3-html5 .vjs-ima3-ad-container,.vjs-user-active.vjs-ima3-overlay.vjs-ima3-html5 .vjs-ima3-click-tracker{cursor:pointer;pointer-events:auto}.vjs-ima3-html5.vjs-using-native-controls.vjs-ima3-paused.vjs-ima3-paused .vjs-ima3-ad-container,.vjs-ima3-html5.vjs-using-native-controls.vjs-ima3-paused.vjs-ima3-paused .vjs-ima3-click-tracker{pointer-events:none}.vjs-ima3-click-tracker{bottom:0;left:0;margin:0;position:absolute;right:0;top:0}.vjs-ima3-overlay .vjs-ima3-click-tracker{top:auto;margin:0 auto}.vjs-control-bar.vjs-control-bar.vjs-ad-control-bar.vjs-ad-control-bar{display:none}.vjs-ad-controls.vjs-ad-playing .vjs-control-bar.vjs-control-bar{display:none}.vjs-ad-controls.vjs-ad-playing.vjs-controls-disabled .vjs-ad-control-bar.vjs-ad-control-bar,.vjs-ad-controls.vjs-ad-playing.vjs-using-native-controls .vjs-ad-control-bar.vjs-ad-control-bar{display:none}.vjs-ad-controls.vjs-ad-playing.vjs-user-active:not(.not-hover) .vjs-control-bar.vjs-ad-control-bar,.vjs-controls-enabled.vjs-ad-controls.vjs-ima3-overlay.vjs-user-active:not(.not-hover) .vjs-control-bar{-ms-transform:none;-ms-transition:none;transform:none;transition:none}.vjs-ad-playing .vjs-dock-shelf,.vjs-ad-playing .vjs-dock-text{display:none}.vjs-ad-controls.vjs-ad-playing.vjs-vpaid-playing.vjs-vpaid-controls-disabled .vjs-control-bar.vjs-ad-control-bar{display:none}.vjs-ad-loading .vjs-overlay,.vjs-ad-playing .vjs-overlay{display:none}.vjs-ad-controls.vjs-ad-playing .vjs-control-bar.vjs-ad-control-bar{display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex}.vjs-ad-controls.vjs-ad-playing.vjs-no-flex .vjs-control-bar.vjs-ad-control-bar{display:table}.vjs-mouse .vjs-control-bar.vjs-ad-control-bar .vjs-progress-control:hover{height:.5em;top:-.5em}.vjs-mouse .vjs-control-bar.vjs-ad-control-bar .vjs-progress-control:hover .vjs-mouse-display,.vjs-mouse .vjs-control-bar.vjs-ad-control-bar .vjs-progress-control:hover .vjs-mouse-display:after,.vjs-mouse .vjs-progress-control:hover .vjs-play-progress:after{display:none}.vjs-ima3-html5.vjs-ad-loading .vjs-tech{opacity:0}.vjs-ima3-autoplay.vjs-ima3-not-playing-yet .vjs-poster,.vjs-ima3-autoplay.vjs-ima3-not-playing-yet .vjs-tech{opacity:0}.vjs-ima3-html5.vjs-ad-playing .vjs-ad-control-bar .vjs-play-progress{transition:width 1s linear}.vjs-ima3-html5.vjs-ad-playing .vjs-ad-control-bar .vjs-play-progress.vjs-play-progress-resetting{transition:width 0s linear}.vjs-thumbnail-holder{position:absolute;left:-1000px}.vjs-thumbnail{position:absolute;left:0;bottom:1.3em;opacity:0;transition:opacity .2s ease;-webkit-transition:opacity .2s ease;-moz-transition:opacity .2s ease;-mz-transition:opacity .2s ease}.vjs-progress-control.fake-active .vjs-thumbnail,.vjs-progress-control:active .vjs-thumbnail,.vjs-progress-control:hover .vjs-thumbnail{opacity:1}.vjs-progress-control:active .vjs-thumbnail:active,.vjs-progress-control:hover .vjs-thumbnail:hover{opacity:0}',
		cssClass = "bc-style-VNXYOEC7Ep-default",
		cssEl, vjsCssId = "bc-style-vjs",
		vjsCssEl, bc, video, i, head = document.querySelector("head"),
		refNode = head.firstChild,
		createStyleSheet = function(e, t) {
			var n = document.createElement("style");
			n.type = "text/css";
			n.appendChild(document.createTextNode(e));
			if(t) {
				head.insertBefore(n, t)
			} else {
				head.appendChild(n)
			}
			return n
		};
	bc = function(window, document) {
		var define = undefined;
		var rjsDefine = window.define;
		var usageEvents = [];
		var useNativeControlsOnAndroid = function() {
			var e = window.navigator.userAgent.match(/applewebkit\/(\d*).*Version\/(\d*.\d*)/i);
			return videojs.browser.IS_ANDROID && videojs.browser.ANDROID_VERSION < 5 && e && e[2] > 0
		};
		var previousVideojs = window.videojs;
		window.VIDEOJS_NO_DYNAMIC_STYLE = true;
		var BrightcovePlayerCore = function(e, t) {
			"use strict";
			e = e && e.hasOwnProperty("default") ? e["default"] : e;
			t = t && t.hasOwnProperty("default") ? t["default"] : t;
			var n = "0.13.0";
			var i = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};

			function r() {
				throw new Error("Dynamic requires are not currently supported by rollup-plugin-commonjs")
			}

			function a(e, t) {
				return t = {
					exports: {}
				}, e(t, t.exports), t.exports
			}
			var s = a(function(e) {
				function t() {
					e.exports = t = Object.assign || function(e) {
						for(var t = 1; t < arguments.length; t++) {
							var n = arguments[t];
							for(var i in n) {
								if(Object.prototype.hasOwnProperty.call(n, i)) {
									e[i] = n[i]
								}
							}
						}
						return e
					};
					return t.apply(this, arguments)
				}
				e.exports = t
			});
			var o = new Blob([new Uint8Array([255, 227, 24, 196, 0, 0, 0, 3, 72, 1, 64, 0, 0, 4, 132, 16, 31, 227, 192, 225, 76, 255, 67, 12, 255, 221, 27, 255, 228, 97, 73, 63, 255, 195, 131, 69, 192, 232, 223, 255, 255, 207, 102, 239, 255, 255, 255, 101, 158, 206, 70, 20, 59, 255, 254, 95, 70, 149, 66, 4, 16, 128, 0, 2, 2, 32, 240, 138, 255, 36, 106, 183, 255, 227, 24, 196, 59, 11, 34, 62, 80, 49, 135, 40, 0, 253, 29, 191, 209, 200, 141, 71, 7, 255, 252, 152, 74, 15, 130, 33, 185, 6, 63, 255, 252, 195, 70, 203, 86, 53, 15, 255, 255, 247, 103, 76, 121, 64, 32, 47, 255, 34, 227, 194, 209, 138, 76, 65, 77, 69, 51, 46, 57, 55, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 255, 227, 24, 196, 73, 13, 153, 210, 100, 81, 135, 56, 0, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170])], {
				type: "audio/mpeg"
			});
			var l = new Blob([new Uint8Array([0, 0, 0, 28, 102, 116, 121, 112, 105, 115, 111, 109, 0, 0, 2, 0, 105, 115, 111, 109, 105, 115, 111, 50, 109, 112, 52, 49, 0, 0, 0, 8, 102, 114, 101, 101, 0, 0, 2, 239, 109, 100, 97, 116, 33, 16, 5, 32, 164, 27, 255, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 55, 167, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 33, 16, 5, 32, 164, 27, 255, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 55, 167, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 0, 0, 2, 194, 109, 111, 111, 118, 0, 0, 0, 108, 109, 118, 104, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 232, 0, 0, 0, 47, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 1, 236, 116, 114, 97, 107, 0, 0, 0, 92, 116, 107, 104, 100, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36, 101, 100, 116, 115, 0, 0, 0, 28, 101, 108, 115, 116, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 47, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 100, 109, 100, 105, 97, 0, 0, 0, 32, 109, 100, 104, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 172, 68, 0, 0, 8, 0, 85, 196, 0, 0, 0, 0, 0, 45, 104, 100, 108, 114, 0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0, 0, 0, 1, 15, 109, 105, 110, 102, 0, 0, 0, 16, 115, 109, 104, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36, 100, 105, 110, 102, 0, 0, 0, 28, 100, 114, 101, 102, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1, 0, 0, 0, 211, 115, 116, 98, 108, 0, 0, 0, 103, 115, 116, 115, 100, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 87, 109, 112, 52, 97, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 16, 0, 0, 0, 0, 172, 68, 0, 0, 0, 0, 0, 51, 101, 115, 100, 115, 0, 0, 0, 0, 3, 128, 128, 128, 34, 0, 2, 0, 4, 128, 128, 128, 20, 64, 21, 0, 0, 0, 0, 1, 244, 0, 0, 1, 243, 249, 5, 128, 128, 128, 2, 18, 16, 6, 128, 128, 128, 1, 2, 0, 0, 0, 24, 115, 116, 116, 115, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 4, 0, 0, 0, 0, 28, 115, 116, 115, 99, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 28, 115, 116, 115, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 115, 0, 0, 1, 116, 0, 0, 0, 20, 115, 116, 99, 111, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 44, 0, 0, 0, 98, 117, 100, 116, 97, 0, 0, 0, 90, 109, 101, 116, 97, 0, 0, 0, 0, 0, 0, 0, 33, 104, 100, 108, 114, 0, 0, 0, 0, 0, 0, 0, 0, 109, 100, 105, 114, 97, 112, 112, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 45, 105, 108, 115, 116, 0, 0, 0, 37, 169, 116, 111, 111, 0, 0, 0, 29, 100, 97, 116, 97, 0, 0, 0, 1, 0, 0, 0, 0, 76, 97, 118, 102, 53, 54, 46, 52, 48, 46, 49, 48, 49])], {
				type: "video/mp4"
			});

			function u(e) {
				return Object.assign({
					muted: false,
					timeout: 250,
					inline: false
				}, e)
			}

			function c(e, t) {
				var n = e.muted,
					i = e.timeout,
					r = e.inline;
				var a = t(),
					s = a.element,
					o = a.source;
				var l = void 0;
				var u = void 0;
				var c = void 0;
				s.muted = n;
				if(n === true) {
					s.setAttribute("muted", "muted")
				}
				if(r === true) {
					s.setAttribute("playsinline", "playsinline")
				}
				s.src = o;
				return new Promise(function(e) {
					l = s.play();
					u = setTimeout(function() {
						c(false, new Error("Timeout " + i + " ms has been reached"))
					}, i);
					c = function t(n) {
						var i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
						clearTimeout(u);
						e({
							result: n,
							error: i
						})
					};
					if(l !== undefined) {
						l.then(function() {
							return c(true)
						}).catch(function(e) {
							return c(false, e)
						})
					} else {
						c(true)
					}
				})
			}

			function d(e) {
				e = u(e);
				return c(e, function() {
					return {
						element: document.createElement("video"),
						source: URL.createObjectURL(l)
					}
				})
			}

			function f(e) {
				e = u(e);
				return c(e, function() {
					return {
						element: document.createElement("audio"),
						source: URL.createObjectURL(o)
					}
				})
			}
			var p = {
				audio: f,
				video: d
			};
			var h = a(function(e, t) {
				(function(t, n) {
					e.exports = n()
				})(i, function() {
					function e(e) {
						var t = typeof e;
						return e !== null && (t === "object" || t === "function")
					}

					function t(e) {
						return typeof e === "function"
					}
					var n = void 0;
					if(Array.isArray) {
						n = Array.isArray
					} else {
						n = function(e) {
							return Object.prototype.toString.call(e) === "[object Array]"
						}
					}
					var a = n;
					var s = 0;
					var o = void 0;
					var l = void 0;
					var u = function e(t, n) {
						S[s] = t;
						S[s + 1] = n;
						s += 2;
						if(s === 2) {
							if(l) {
								l(T)
							} else {
								E()
							}
						}
					};

					function c(e) {
						l = e
					}

					function d(e) {
						u = e
					}
					var f = typeof window !== "undefined" ? window : undefined;
					var p = f || {};
					var h = p.MutationObserver || p.WebKitMutationObserver;
					var v = typeof self === "undefined" && typeof process !== "undefined" && {}.toString.call(process) === "[object process]";
					var g = typeof Uint8ClampedArray !== "undefined" && typeof importScripts !== "undefined" && typeof MessageChannel !== "undefined";

					function m() {
						return function() {
							return process.nextTick(T)
						}
					}

					function y() {
						if(typeof o !== "undefined") {
							return function() {
								o(T)
							}
						}
						return A()
					}

					function _() {
						var e = 0;
						var t = new h(T);
						var n = document.createTextNode("");
						t.observe(n, {
							characterData: true
						});
						return function() {
							n.data = e = ++e % 2
						}
					}

					function b() {
						var e = new MessageChannel;
						e.port1.onmessage = T;
						return function() {
							return e.port2.postMessage(0)
						}
					}

					function A() {
						var e = setTimeout;
						return function() {
							return e(T, 1)
						}
					}
					var S = new Array(1e3);

					function T() {
						for(var e = 0; e < s; e += 2) {
							var t = S[e];
							var n = S[e + 1];
							t(n);
							S[e] = undefined;
							S[e + 1] = undefined
						}
						s = 0
					}

					function k() {
						try {
							var e = Function("return this")().require("vertx");
							o = e.runOnLoop || e.runOnContext;
							return y()
						} catch(e) {
							return A()
						}
					}
					var E = void 0;
					if(v) {
						E = m()
					} else if(h) {
						E = _()
					} else if(g) {
						E = b()
					} else if(f === undefined && typeof r === "function") {
						E = k()
					} else {
						E = A()
					}

					function P(e, t) {
						var n = this;
						var i = new this.constructor(j);
						if(i[w] === undefined) {
							X(i)
						}
						var r = n._state;
						if(r) {
							var a = arguments[r - 1];
							u(function() {
								return Y(r, i, a, n._result)
							})
						} else {
							H(n, i, e, t)
						}
						return i
					}

					function C(e) {
						var t = this;
						if(e && typeof e === "object" && e.constructor === t) {
							return e
						}
						var n = new t(j);
						B(n, e);
						return n
					}
					var w = Math.random().toString(36).substring(2);

					function j() {}
					var I = void 0;
					var L = 1;
					var O = 2;

					function N() {
						return new TypeError("You cannot resolve a promise with itself")
					}

					function x() {
						return new TypeError("A promises callback cannot return that same promise.")
					}

					function D(e, t, n, i) {
						try {
							e.call(t, n, i)
						} catch(e) {
							return e
						}
					}

					function R(e, t, n) {
						u(function(e) {
							var i = false;
							var r = D(n, t, function(n) {
								if(i) {
									return
								}
								i = true;
								if(t !== n) {
									B(e, n)
								} else {
									V(e, n)
								}
							}, function(t) {
								if(i) {
									return
								}
								i = true;
								q(e, t)
							}, "Settle: " + (e._label || " unknown promise"));
							if(!i && r) {
								i = true;
								q(e, r)
							}
						}, e)
					}

					function U(e, t) {
						if(t._state === L) {
							V(e, t._result)
						} else if(t._state === O) {
							q(e, t._result)
						} else {
							H(t, undefined, function(t) {
								return B(e, t)
							}, function(t) {
								return q(e, t)
							})
						}
					}

					function M(e, n, i) {
						if(n.constructor === e.constructor && i === P && n.constructor.resolve === C) {
							U(e, n)
						} else {
							if(i === undefined) {
								V(e, n)
							} else if(t(i)) {
								R(e, n, i)
							} else {
								V(e, n)
							}
						}
					}

					function B(t, n) {
						if(t === n) {
							q(t, N())
						} else if(e(n)) {
							var i = void 0;
							try {
								i = n.then
							} catch(e) {
								q(t, e);
								return
							}
							M(t, n, i)
						} else {
							V(t, n)
						}
					}

					function F(e) {
						if(e._onerror) {
							e._onerror(e._result)
						}
						G(e)
					}

					function V(e, t) {
						if(e._state !== I) {
							return
						}
						e._result = t;
						e._state = L;
						if(e._subscribers.length !== 0) {
							u(G, e)
						}
					}

					function q(e, t) {
						if(e._state !== I) {
							return
						}
						e._state = O;
						e._result = t;
						u(F, e)
					}

					function H(e, t, n, i) {
						var r = e._subscribers;
						var a = r.length;
						e._onerror = null;
						r[a] = t;
						r[a + L] = n;
						r[a + O] = i;
						if(a === 0 && e._state) {
							u(G, e)
						}
					}

					function G(e) {
						var t = e._subscribers;
						var n = e._state;
						if(t.length === 0) {
							return
						}
						var i = void 0,
							r = void 0,
							a = e._result;
						for(var s = 0; s < t.length; s += 3) {
							i = t[s];
							r = t[s + n];
							if(i) {
								Y(n, i, r, a)
							} else {
								r(a)
							}
						}
						e._subscribers.length = 0
					}

					function Y(e, n, i, r) {
						var a = t(i),
							s = void 0,
							o = void 0,
							l = true;
						if(a) {
							try {
								s = i(r)
							} catch(e) {
								l = false;
								o = e
							}
							if(n === s) {
								q(n, x());
								return
							}
						} else {
							s = r
						}
						if(n._state !== I);
						else if(a && l) {
							B(n, s)
						} else if(l === false) {
							q(n, o)
						} else if(e === L) {
							V(n, s)
						} else if(e === O) {
							q(n, s)
						}
					}

					function z(e, t) {
						try {
							t(function t(n) {
								B(e, n)
							}, function t(n) {
								q(e, n)
							})
						} catch(t) {
							q(e, t)
						}
					}
					var K = 0;

					function W() {
						return K++
					}

					function X(e) {
						e[w] = K++;
						e._state = undefined;
						e._result = undefined;
						e._subscribers = []
					}

					function J() {
						return new Error("Array Methods must be provided an Array")
					}
					var Q = function() {
						function e(e, t) {
							this._instanceConstructor = e;
							this.promise = new e(j);
							if(!this.promise[w]) {
								X(this.promise)
							}
							if(a(t)) {
								this.length = t.length;
								this._remaining = t.length;
								this._result = new Array(this.length);
								if(this.length === 0) {
									V(this.promise, this._result)
								} else {
									this.length = this.length || 0;
									this._enumerate(t);
									if(this._remaining === 0) {
										V(this.promise, this._result)
									}
								}
							} else {
								q(this.promise, J())
							}
						}
						e.prototype._enumerate = function e(t) {
							for(var n = 0; this._state === I && n < t.length; n++) {
								this._eachEntry(t[n], n)
							}
						};
						e.prototype._eachEntry = function e(t, n) {
							var i = this._instanceConstructor;
							var r = i.resolve;
							if(r === C) {
								var a = void 0;
								var s = void 0;
								var o = false;
								try {
									a = t.then
								} catch(e) {
									o = true;
									s = e
								}
								if(a === P && t._state !== I) {
									this._settledAt(t._state, n, t._result)
								} else if(typeof a !== "function") {
									this._remaining--;
									this._result[n] = t
								} else if(i === ie) {
									var l = new i(j);
									if(o) {
										q(l, s)
									} else {
										M(l, t, a)
									}
									this._willSettleAt(l, n)
								} else {
									this._willSettleAt(new i(function(e) {
										return e(t)
									}), n)
								}
							} else {
								this._willSettleAt(r(t), n)
							}
						};
						e.prototype._settledAt = function e(t, n, i) {
							var r = this.promise;
							if(r._state === I) {
								this._remaining--;
								if(t === O) {
									q(r, i)
								} else {
									this._result[n] = i
								}
							}
							if(this._remaining === 0) {
								V(r, this._result)
							}
						};
						e.prototype._willSettleAt = function e(t, n) {
							var i = this;
							H(t, undefined, function(e) {
								return i._settledAt(L, n, e)
							}, function(e) {
								return i._settledAt(O, n, e)
							})
						};
						return e
					}();

					function Z(e) {
						return new Q(this, e).promise
					}

					function $(e) {
						var t = this;
						if(!a(e)) {
							return new t(function(e, t) {
								return t(new TypeError("You must pass an array to race."))
							})
						} else {
							return new t(function(n, i) {
								var r = e.length;
								for(var a = 0; a < r; a++) {
									t.resolve(e[a]).then(n, i)
								}
							})
						}
					}

					function ee(e) {
						var t = this;
						var n = new t(j);
						q(n, e);
						return n
					}

					function te() {
						throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")
					}

					function ne() {
						throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")
					}
					var ie = function() {
						function e(t) {
							this[w] = W();
							this._result = this._state = undefined;
							this._subscribers = [];
							if(j !== t) {
								typeof t !== "function" && te();
								this instanceof e ? z(this, t) : ne()
							}
						}
						e.prototype.catch = function e(t) {
							return this.then(null, t)
						};
						e.prototype.finally = function e(n) {
							var i = this;
							var r = i.constructor;
							if(t(n)) {
								return i.then(function(e) {
									return r.resolve(n()).then(function() {
										return e
									})
								}, function(e) {
									return r.resolve(n()).then(function() {
										throw e
									})
								})
							}
							return i.then(n, n)
						};
						return e
					}();
					ie.prototype.then = P;
					ie.all = Z;
					ie.race = $;
					ie.resolve = C;
					ie.reject = ee;
					ie._setScheduler = c;
					ie._setAsap = d;
					ie._asap = u;

					function re() {
						var e = void 0;
						if(typeof i !== "undefined") {
							e = i
						} else if(typeof self !== "undefined") {
							e = self
						} else {
							try {
								e = Function("return this")()
							} catch(e) {
								throw new Error("polyfill failed because global object is unavailable in this environment")
							}
						}
						var t = e.Promise;
						if(t) {
							var n = null;
							try {
								n = Object.prototype.toString.call(t.resolve())
							} catch(e) {}
							if(n === "[object Promise]" && !t.cast) {
								return
							}
						}
						e.Promise = ie
					}
					ie.polyfill = re;
					ie.Promise = ie;
					return ie
				})
			});
			var v = t.performance;
			var g = {};
			["memory", "navigation", "timing"].forEach(function(e) {
				g[e] = v && v[e] || {}
			});
			["clearMarks", "clearMeasures", "clearResourceTimings", "getEntries", "getEntriesByName", "getEntriesByType", "mark", "measure", "now", "setResourceTimingBufferSize", "toJSON"].forEach(function(e) {
				g[e] = function() {
					if(v && v[e]) {
						return v[e].apply(v, arguments)
					}
				}
			});

			function m(e, t) {
				return Object.prototype.hasOwnProperty.call(e, t)
			}
			var y = Array.isArray || function(e) {
				return Object.prototype.toString.call(e) === "[object Array]"
			};

			function _(e) {
				switch(typeof e) {
					case "string":
						return e;
					case "boolean":
						return e ? "true" : "false";
					case "number":
						return isFinite(e) ? e : "";
					default:
						return ""
				}
			}

			function b(e, t, n, i) {
				t = t || "&";
				n = n || "=";
				if(e === null) {
					e = undefined
				}
				if(typeof e === "object") {
					return A(S(e), function(i) {
						var r = encodeURIComponent(_(i)) + n;
						if(y(e[i])) {
							return A(e[i], function(e) {
								return r + encodeURIComponent(_(e))
							}).join(t)
						} else {
							return r + encodeURIComponent(_(e[i]))
						}
					}).join(t)
				}
				if(!i) return "";
				return encodeURIComponent(_(i)) + n + encodeURIComponent(_(e))
			}

			function A(e, t) {
				if(e.map) return e.map(t);
				var n = [];
				for(var i = 0; i < e.length; i++) {
					n.push(t(e[i], i))
				}
				return n
			}
			var S = Object.keys || function(e) {
				var t = [];
				for(var n in e) {
					if(Object.prototype.hasOwnProperty.call(e, n)) t.push(n)
				}
				return t
			};

			function T(e, t, n, i) {
				t = t || "&";
				n = n || "=";
				var r = {};
				if(typeof e !== "string" || e.length === 0) {
					return r
				}
				var a = /\+/g;
				e = e.split(t);
				var s = 1e3;
				if(i && typeof i.maxKeys === "number") {
					s = i.maxKeys
				}
				var o = e.length;
				if(s > 0 && o > s) {
					o = s
				}
				for(var l = 0; l < o; ++l) {
					var u = e[l].replace(a, "%20"),
						c = u.indexOf(n),
						d, f, p, h;
					if(c >= 0) {
						d = u.substr(0, c);
						f = u.substr(c + 1)
					} else {
						d = u;
						f = ""
					}
					p = decodeURIComponent(d);
					h = decodeURIComponent(f);
					if(!m(r, p)) {
						r[p] = h
					} else if(y(r[p])) {
						r[p].push(h)
					} else {
						r[p] = [r[p], h]
					}
				}
				return r
			}
			var k = {
				encode: b,
				stringify: b,
				decode: T,
				parse: T
			};

			function E(e) {
				if(e === void 0) {
					e = t && t.location || {}
				}
				return s({
					hash: k.parse((e.hash || "#").substr(1)),
					search: k.parse((e.search || "?").substr(1))
				}, k)
			}
			var P = {
				isArr: function e(t) {
					return Array.isArray(t)
				},
				isFn: function e(t) {
					return typeof t === "function"
				},
				isNil: function e(t) {
					return t === null || t === undefined
				},
				isNum: function e(t) {
					return typeof t === "number" && t === t
				},
				isNonEmptyStr: function e(t) {
					return typeof t === "string" && /\S/.test(t)
				},
				isObj: function e(t) {
					return Object.prototype.toString.call(t) === "[object Object]"
				}
			};
			var C = {
				perf: g,
				Promise: h,
				qs: E,
				assign: function e() {
					return s.apply(void 0, arguments)
				},
				get: function e(t, n, i) {
					var r = t;
					var a = n.split(".");
					if(!r) {
						return i
					}
					for(var s = 0; s < a.length; s++) {
						var o = a[s];
						if(r[o] === undefined) {
							return i
						}
						if(s + 1 < a.length) {
							r = r[o]
						} else {
							return r[o]
						}
					}
				},
				withoutNilValues: function e(t) {
					var n = t;
					if(P.isArr(t)) {
						n = t.filter(function(e) {
							return !P.isNil(e)
						}).map(C.withoutNilValues)
					} else if(P.isObj(t)) {
						n = {};
						Object.keys(t).forEach(function(e) {
							if(!P.isNil(t[e])) {
								n[e] = C.withoutNilValues(t[e])
							}
						})
					}
					return n
				},
				debounce: function e(n, i, r, a) {
					if(a === void 0) {
						a = t
					}
					var s;
					return function() {
						var e = this;
						var t = arguments;
						var o = function i() {
							s = null;
							o = null;
							if(!r) {
								n.apply(e, t)
							}
						};
						if(!s && r) {
							n.apply(e, t)
						}
						a.clearTimeout(s);
						s = a.setTimeout(o, i)
					}
				},
				throttle: function e(t, n) {
					var i = Date.now();
					return function() {
						var e = Date.now();
						if(e - i >= n) {
							t.apply(void 0, arguments);
							i = e
						}
					}
				}
			};
			C.assign(C, P);
			C.VERSION = "n/a";
			var w = {};
			var j = [{
				inline: false,
				muted: false
			}, {
				inline: true,
				muted: false
			}, {
				inline: false,
				muted: true
			}, {
				inline: true,
				muted: true
			}];

			function I(e) {
				var t = e.filter(function(e) {
					return e.passed
				})[0];
				if(!t) {
					return {
						always: false,
						sometimes: false,
						never: true,
						inline: false,
						muted: false
					}
				}
				var n = t.inline,
					i = t.muted;
				var r = !n && !i;
				return {
					always: r,
					sometimes: !r,
					never: false,
					inline: n,
					muted: i
				}
			}

			function L(e) {
				var t;
				if(e.IE_VERSION) {
					t = {
						always: true,
						sometimes: false,
						never: false,
						inline: false,
						muted: false
					}
				}
				if(e.ANDROID_VERSION || e.IS_IOS) {
					t = {
						always: false,
						sometimes: true,
						never: false,
						inline: false,
						muted: true
					};
					if(e.IS_IPHONE) {
						t.inline = true
					}
				}
				if(t) {
					return C.Promise.resolve(t)
				}
			}

			function O(e, t) {
				if(e !== "video" && e !== "audio") {
					throw new Error("invalid autoplay type: " + e)
				}
				if(w[e]) {
					return w[e]
				}
				var n = L(t.browser);
				if(n) {
					w[e] = n;
					return n
				}
				var i = j.map(function(t) {
					return p[e](t).then(function(e) {
						var n = e.result;
						return s({
							passed: n
						}, t)
					})
				});
				w[e] = C.Promise.all(i).then(function(e) {
					return I(e)
				});
				return w[e]
			}
			var N = 3;
			var x = 50;
			var D = function n(i) {
				var r = e.body;
				var a = e.createElement("div");
				a.className = "pub_300x250 pub_300x250m pub_728x90 text-ad textAd text_ad text_ads text_ads_2 text-ads text-ad-links";
				a.innerHTML = "&nbsp;";
				a.setAttribute("style", "height:10px!important;font-size:20px;color:transparent;position:absolute;bottom:0;left:-10000px");
				var s = 0;
				var o = function e() {
					s++;
					var n = a.offsetHeight === 0 || !r.contains(a) || a.style.display === "none" || a.style.visibility === "hidden";
					if(n || s === N) {
						if(a.parentNode) {
							a.parentNode.removeChild(a)
						}
						return i(n)
					}
					t.setTimeout(e, x)
				};
				r.appendChild(a);
				o()
			};
			var R = null;
			var U;

			function M(t) {
				if(t || !U) {
					U = new h(function(t) {
						if(e.readyState === "complete" || e.readyState !== "loading" && !e.documentElement.doScroll) {
							D(t)
						} else {
							e.addEventListener("DOMContentLoaded", function() {
								D(t)
							})
						}
					})
				}
				return U.then(function(e) {
					R = e;
					return e
				})
			}
			Object.defineProperties(M, {
				VERSION: {
					enumerable: true,
					value: "n/a"
				},
				lastResult: {
					enumerable: true,
					get: function e() {
						return R
					}
				},
				mightBe: {
					enumerable: true,
					get: function e() {
						return R !== false
					}
				},
				mightNotBe: {
					enumerable: true,
					get: function e() {
						return R !== true
					}
				}
			});
			var B = function e(t) {
				var n = t.registerPlugin || t.plugin;
				n("urlparams", function(e) {
					e = e || {};
					var n = function e(t) {
							var n = 0,
								i;
							t = (t || "").replace(/^\s+|\s+$/g, "");
							if(!t || !/^(\d+h)?(\d+m)?(\d+s)?$/.test(t)) {
								return -1
							}
							i = t.match(/^(\d+)h/);
							if(i) {
								n += parseFloat(i[1]) * 3600;
								t = t.replace(/^(\d+)h/, "")
							}
							i = t.match(/^(\d+)m/);
							if(i) {
								n += parseFloat(i[1]) * 60;
								t = t.replace(/^(\d+)m/, "")
							}
							i = t.match(/^(\d+)s/);
							if(i) {
								n += parseFloat(i[1])
							}
							return n
						},
						i = .9,
						r = function e(t, n) {
							var r = t - n;
							if(isNaN(r)) {
								return false
							}
							return Math.abs(r) < i
						},
						a = function e(t) {
							s.ready(function() {
								if(s.networkState() === 2) {
									t()
								} else {
									s.one("loadedmetadata", function() {
										s.setTimeout(t, 0)
									})
								}
							})
						},
						s = this,
						o = C.qs(),
						l = o.hash.t || o.search.t,
						u;
					if(typeof e.time === "number") {
						u = e.time
					} else {
						u = n(e.time)
					}
					if(l) {
						if(/^[\d]+$/.test(l)) {
							u = Number(l)
						} else {
							u = n(l)
						}
						if(!e.iframe && u !== -1) {
							t.log.warn("DEPRECATION: Using the `t` query parameter or URL hash value to set an initial playback start time for advanced, in-page embeds is deprecated and will be removed in Brightcove Player 7. Please add a `data-start-time` attribute going forward!")
						}
					}
					if(u > 0) {
						(function() {
							var t = e.delay || 250,
								n, i = false,
								o = function e() {
									if(i || r(s.currentTime(), u)) {
										i = true;
										l()
									} else {
										s.currentTime(u);
										n = s.setTimeout(e, t)
									}
								},
								l = function e() {
									s.clearTimeout(n);
									s.off("timeupdate", e);
									if(!i) {
										s.currentTime(u)
									}
								};
							s.on("timeupdate", l);
							a(o)
						})()
					}
					if(o.hash.captions !== undefined || o.search.captions !== undefined) {
						(function() {
							var e = o.hash.captions || o.search.captions;
							s.one("play", function() {
								var t = s.textTracks(),
									n, i;
								if(t) {
									for(i = 0; i < t.length; i++) {
										n = t[i];
										if(n.language === e) {
											n.mode = "showing";
											break
										}
									}
								}
							})
						})()
					}
				})
			};

			function F(e) {
				if(e === void 0) {
					throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
				}
				return e
			}
			var V = F;

			function q(e, t) {
				e.prototype = Object.create(t.prototype);
				e.prototype.constructor = e;
				e.__proto__ = t
			}
			var H = q;
			var G = {
				activeCues: null,
				cues: null,
				id: "",
				inBandMetadataTrackDispatchType: undefined,
				kind: "metadata",
				label: "",
				language: "",
				mode: "",
				oncuechange: undefined
			};
			var Y = ["activeCues", "cues", "id", "inBandMetadataTrackDispatchType", "kind", "label", "language"];
			var z = ["mode"];
			var K = function e(t, n) {
				if(t === "media" && n.kind === "metadata" && n.label === "media-cues") {
					return true
				}
				if(t === "id3" && typeof n.inBandMetadataTrackDispatchType === "string" && n.inBandMetadataTrackDispatchType.trim().length > 0) {
					return true
				}
				return false
			};
			var W = function e(t) {
				var n = function(e) {
					H(n, e);

					function n(n, i, r) {
						var a;
						if(r === void 0) {
							r = function e() {}
						}
						a = e.call(this) || this;
						var s = V(a);
						s.player_ = n;
						s.reTriggerEvent_ = t.bind(s, s.reTriggerEvent_);
						s.update_ = t.bind(s, s.update_);
						s.type_ = i;
						s.logger_ = r;
						Y.concat(z).forEach(function(e) {
							var t = {
								get: function t() {
									return s.track_ && s.track_[e] || G[e]
								},
								enumerable: true
							};
							if(z.indexOf(e) !== -1) {
								t.set = function(t) {
									if(!s.track_) {
										return
									}
									s.track_[e] = t
								}
							}
							Object.defineProperty(s, e, t)
						});
						s.update_();
						var o = n.textTracks();
						var l = function e(t) {
							if(!s.track_) {
								s.update_(t)
							} else if(s.track_.mode !== "hidden") {
								s.track_.mode = "hidden";
								s.logger_("timeupdate -> type:" + s.type_ + (s.track_ ? ",mode:" + s.track_.mode : "") + " -> track was set to hidden")
							}
						};
						["addtrack", "removetrack"].forEach(function(e) {
							return o.addEventListener(e, s.update_)
						});
						s.player_.on("timeupdate", l);
						return s || V(a)
					}
					var i = n.prototype;
					i.addCue = function e() {
						var t = this;
						var n = arguments;
						if(!this.track_) {
							this.one("trackexists", function() {
								return t.addCue.apply(t, n)
							});
							return
						}
						return this.track_.addCue.apply(this.track_, n)
					};
					i.removeCue = function e() {
						var t = this;
						var n = arguments;
						if(!this.track_) {
							return this.one("trackexists", function() {
								return t.removeCue.apply(t, n)
							})
						}
						return this.track_.removeCue.apply(this.track_, n)
					};
					i.reTriggerEvent_ = function e(t) {
						this.trigger(t)
					};
					i.update_ = function e(t) {
						if(t === void 0) {
							t = {}
						}
						var n;
						if(t.type === "removetrack" && t.track && t.track === this.track_) {
							n = null
						} else if(t.type === "addtrack" && t.track && !this.track_ && K(this.type_, t.track)) {
							n = t.track
						} else {
							var i = this.player_.textTracks();
							var r = i.length;
							while(r--) {
								if(K(this.type_, i[r])) {
									n = i[r];
									break
								}
							}
						}
						this.logger_("update -> type:" + this.type_ + ", mode:" + (n ? n.mode : "?") + " -> event:" + (t.type || "constructor"));
						if(this.track_ === n) {
							this.logger_("update -> type:" + this.type_ + ", mode:" + (n ? n.mode : "?") + " -> " + (n ? "already proxied" : "no track to proxy"));
							return
						}
						if(this.track_) {
							this.track_.removeEventListener("cuechange", this.reTriggerEvent_)
						}
						this.track_ = n;
						if(!this.track_) {
							this.logger_("update -> type:" + this.type_ + ", mode:" + (n ? n.mode : "?") + " -> track changed, but no new track exists");
							return
						}
						if(this.track_.mode !== "hidden") {
							this.track_.mode = "hidden"
						}
						this.track_.addEventListener("cuechange", this.reTriggerEvent_);
						this.trigger("trackexists");
						this.logger_("update -> type:" + this.type_ + ", mode:" + (n ? n.mode : "?") + " -> track exists")
					};
					return n
				}(t.EventTarget);
				n.prototype.allowedEvents_ = {
					cuechange: "cuechange"
				};
				return n
			};
			var X = function e(t) {
				var i = W(t);
				var r = {
					id3CuePointsTrack: function e(t) {
						var n = this.proxyTracks_.id3;
						if(!n) {
							n = this.proxyTracks_.id3 = new i(this, "id3", t)
						}
						return n
					},
					mediaCuePointsTrack: function e(t) {
						var n = this.proxyTracks_.media;
						if(n) {
							return n
						}
						n = this.proxyTracks_.media = new i(this, "media", t);
						if(n.track_) {
							return n
						}
						this.addTextTrack("metadata", "media-cues");
						n.update_();
						return n
					}
				};

				function a(e) {
					var n = this;
					if(e === void 0) {
						e = {}
					}
					this.proxyTracks_ = {};
					var i = t.createLogger("proxyTracks");
					if(!e.debug) {
						i = function e() {}
					}
					i("initialized");
					Object.keys(r).forEach(function(e) {
						n[e] = function() {
							return r[e].call(n, i)
						}
					});
					this.ready(function() {
						Object.keys(r).forEach(function(t) {
							var r = n[t]();
							if(e.debug) {
								r.on("cuechange", function() {
									for(var e = 0; e < r.activeCues.length; e++) {
										var t = r.activeCues[e];
										i(r.type_ + " -> cuechange -> activeCues[" + e + "]: " + (t.value && t.value.key || t.frame && t.frame.id))
									}
								})
							}
						})
					})
				}
				t.registerPlugin("proxyTracks", a);
				a.VERSION = n
			};
			var J = {
				verbose: false,
				maxSavedSeekEvents: 10,
				debounceTimeout: 1e3,
				playbackRateTolerance: 1.5,
				stableTimeUpdateCount: 3,
				minInterval: 1
			};
			var Q = function e(t) {
				t.trigger("seek")
			};
			var Z = function e(t) {
				var i = function e(n) {
					var i = t.mergeOptions(J, n);
					var r;
					var a = false;
					var s;
					var o;
					var l;
					var u;
					var c = 0;
					var d = [];
					var f = 0;
					var p = {};
					var h = {};
					var v = i.verbose ? function() {
						var e;
						for(var n = arguments.length, i = new Array(n), r = 0; r < n; r++) {
							i[r] = arguments[r]
						}
						return(e = t.log).call.apply(e, [t, "seek-events:"].concat(i))
					} : function() {};
					var g = function e() {
						p.seek = this.seekEvents.last().seekEnd;
						a = false;
						v("event seekStart: ", this.seekEvents.last().seekStart);
						v("event seekEnd: ", this.seekEvents.last().seekEnd)
					};
					var m = function e() {
						v("stable");
						this.seekEvents.stable = true
					};
					var y = function e() {
						v("unstable");
						this.seekEvents.stable = false
					};
					var _ = function e(t) {
						p.seek = this.currentTime();
						p.clock = t.timeStamp || Date.now();
						h.seek = p.seek;
						h.clock = p.clock
					};
					var b = C.debounce(Q, i.debounceTimeout);
					var A = function e(t) {
						s = this.currentTime();
						o = t.timeStamp || +new Date;
						l = s - h.seek;
						if(o === h.clock || s === p.seek) {
							return
						}
						u = Math.abs(l) / (Math.abs(o - h.clock) * .001);
						if(u / this.playbackRate() > this.seekEvents.playbackRateTolerance) {
							if(Math.abs(s - p.seek) >= this.seekEvents.minInterval) {
								this.trigger("unstable");
								c = 0;
								if(!a) {
									f = Number(p.seek)
								}
								d.push({
									timeStamp: o,
									seekStart: f,
									seekEnd: s,
									seekInterval: s - f
								});
								if(d.length > i.maxSavedSeekEvents) {
									d.shift()
								}
								a = true;
								b(this)
							}
						} else {
							c++;
							v(s + ": " + c);
							if(c >= this.seekEvents.stableTimeUpdateCount && !this.seekEvents.stable && !a) {
								this.trigger("stable")
							}
							p.seek = s
						}
						h.seek = s;
						h.clock = o
					};
					this.seekEvents = {
						stableTimeUpdateCount: i.stableTimeUpdateCount,
						playbackRateTolerance: i.playbackRateTolerance,
						debounceTimeout: i.debounceTimeout,
						minInterval: i.minInterval,
						stable: false,
						enabled: function e() {
							return r
						},
						enable: t.bind(this, function() {
							if(r) {
								return
							}
							r = true;
							p.seek = 0;
							p.clock = Date.now();
							h.seek = 0;
							h.clock = p.clock;
							this.on("seek", g);
							this.on("stable", m);
							this.on("unstable", y);
							this.on(["loadstart", "playing", "adplaying"], _);
							this.on(["timeupdate", "adtimeupdate"], A)
						}),
						disable: t.bind(this, function() {
							if(!r) {
								return
							}
							r = false;
							this.off("seek", g);
							this.off("stable", m);
							this.off("unstable", y);
							this.off(["loadstart", "playing", "adplaying"], _);
							this.off(["timeupdate", "adtimeupdate"], A)
						}),
						last: function e() {
							return d[d.length - 1]
						},
						all: function e() {
							return d
						}
					};
					this.seekEvents.enable()
				};
				var r = t.registerPlugin || t.plugin;
				i.VERSION = n;
				r("seekEvents", i)
			};
			var $ = ["eme", "chromecastReceiver", "vr", "pip", "qualityMenu", "ima3", "FreeWheelPlugin", "ssai", "bcPlaylistUi", "bcGa", "bcAa", "bcTealium", "bcGtm"];
			var ee = function n(i, r, a) {
				var s = a.settings;
				var o = a.environment;
				var l = o.queryString;
				var u = {};
				var c = {
					bcAnalytics: {
						applicationId: s.applicationId,
						mr: Boolean(t.bc_isManagedRelease),
						referrer: l.referrer,
						usage: l.usage
					}
				};
				if(s.debugger !== false) {
					var d = [{
						label: r.localize("Player Information"),
						listener: function e() {
							return r.usingPlugin("playerInfo") && r.playerInfo.modal.open()
						}
					}];
					if(s.debugger.brightcoveBranding !== false) {
						d.push({
							href: "https://www.brightcove.com/en/why-brightcove?utm_type=player",
							label: r.localize("About Brightcove")
						})
					}
					c.contextmenuUI = {
						content: d
					}
				}
				var f = function e(t, n) {
					if(n === void 0) {
						n = {}
					}
					var a = c[t] || {};
					if(!r.hasPlugin(t)) {
						i.log.error('Plugin "' + t + '" is missing. Please check your player configuration.');
						return
					}
					if(r.usingPlugin(t)) {
						return
					}
					var s = i.mergeOptions(a, n);
					if($.indexOf(t) !== -1) {
						r.trigger({
							type: "usage",
							name: t
						});
						if(t === "bcPlaylistUi") {
							r.trigger({
								type: "usage",
								name: "" + t + (s.horizontal ? "-horz" : "-vert")
							});
							if(s.repeat) {
								r.trigger({
									type: "usage",
									name: t + "-repeat"
								})
							}
							if(s.shuffle) {
								r.trigger({
									type: "usage",
									name: t + "-shuffle"
								})
							}
						}
					}
					try {
						r[t](s)
					} catch(e) {
						i.log.error('Unable to initialize "' + t + '" plugin:', e)
					}
				};
				if(s.usingAdFailover) {
					r.trigger({
						type: "usage",
						name: "ad-failover"
					});
					var p = r.usingAdBlocker.mightBe ? s.serverSideAdPlugin : s.clientSideAdPlugin,
						h = p.name,
						v = p.options;
					f(h, v)
				}
				s.plugins.forEach(function(e) {
					var t = e.autoInit,
						n = e.name,
						i = e.options;
					if(!t) {
						return
					}
					f(n, i)
				});
				var g = s.media,
					m = s.videoCloud;
				var y = g && !!(g.sources || g.length && g[0].sources);
				if(m && m.policy_key && !y) {
					var _ = {
						embedHasPoster: s.embedState.poster,
						embedHasSources: s.embedState.sources,
						embedHasTracks: s.embedState.tracks,
						adConfigId: s.adConfigId,
						deliveryConfigId: s.deliveryConfigId
					};
					if(m.playlist) {
						r.trigger({
							type: "usage",
							name: "catalog-playlist"
						});
						_.playlistId = m.playlist
					}
					if(m.video) {
						r.trigger({
							type: "usage",
							name: "catalog-video"
						});
						_.videoId = m.video
					}
					if(m.search) {
						r.trigger({
							type: "usage",
							name: "catalog-search"
						});
						_.search = m.search
					}
					if(m.sequence) {
						r.trigger({
							type: "usage",
							name: "catalog-sequence"
						});
						_.sequence = m.sequence
					}
					var b = u.catalogMedia = r.catalog.autoFindAndLoadMedia(_);
					if(b && b.type === "video") {
						if(/^[\d]+$/.test(b.id)) {
							r.mediainfo.id = b.id
						} else {
							r.mediainfo.referenceId = r.mediainfo.reference_id = b.id
						}
					}
				}
				if(r.usingPlugin("bcAnalytics")) {
					var A = function e() {
						return(new Date).toISOString().split("T")[0] + ":" + r.bcAnalytics.client.getSession()
					};
					r.ready(function() {
						C.perf.mark("bcInitEnd");
						C.perf.measure("bcInit", "bcInitStart", "bcInitEnd");
						if(r.usingPlugin("playerInfo")) {
							r.playerInfo.modal.on("modalfill", function() {
								var t = A();
								var n = r.playerInfo.modal.$(".vjs-pi-section--player tbody");
								if(!t || !n) {
									return
								}
								var i = e.createElement("tr");
								var a = e.createElement("tr");
								i.innerHTML = "<td>" + r.localize("Session ID") + "</td> <td>" + t + "</td>";
								n.appendChild(i);
								a.innerHTML = "<td>" + r.localize("Player Element ID") + "</td> <td>" + r.id() + "</td>";
								n.appendChild(a)
							})
						}
					});
					if(r.usingPlugin("errors")) {
						r.errorDisplay.on("modalfill", function() {
							var e = A();
							var t = r.errorDisplay.$(".vjs-errors-content-container");
							if(!e || !t) {
								return
							}
							t.appendChild(i.dom.createEl("div", {
								className: "vjs-errors-ref-id",
								innerHTML: "<b>" + r.localize("Session ID:") + "</b> " + e + " " + "<b>" + r.localize("Player Element ID:") + "</b> " + r.id()
							}))
						})
					}
				}
				if(r.usingPlugin("playerInfo")) {
					r.on("vjs-contextmenu", function() {
						if(r.playerInfo.modal) {
							r.playerInfo.modal.close()
						}
					})
				}
				if(r.hasPlugin("dock")) {
					var S = g && (g[0] && g[0].title || g.title) || "";
					var T = g && (g[0] && g[0].description || g.description) || "";
					var k = function e() {
						if(r.controls()) {
							r.dock({
								title: r.mediainfo && r.mediainfo.name || S,
								description: r.mediainfo && r.mediainfo.description || T
							})
						}
					};
					k();
					r.on("loadedmetadata", k)
				}
				return u
			};
			var te = function e(t) {
				var n = t.registerPlugin || t.plugin;
				n("touchActive", function() {
					if(!t.browser.TOUCH_ENABLED) {
						return
					}
					var e = this;
					var n = false;
					var i = function t() {
						if(!n) {
							e.userActive(false)
						}
					};
					e.one("play", function() {
						var t = e.options_.inactivityTimeout > 0 ? e.options_.inactivityTimeout : 5e3;
						e.el().className += " vjs-user-active";
						e.one(["click", "tap"], function() {
							n = true
						});
						e.setTimeout(i, t)
					})
				})
			};
			var ne = C.get;
			var ie = "unknown";
			var re = function e(n) {
				var i = n.getComponent("ModalDialog");
				var r = n.dom;
				var a = {
					adonly: "Ad-Only",
					bcPlaylistUi: "Brightcove Playlist UI",
					chromecastReceiver: "Chromecast Receiver",
					customEndscreen: "Custom Endscreen",
					dash: "DASH",
					eme: "DRM",
					dvrux: "Live DVRUX",
					FreeWheelPlugin: "FreeWheel",
					ima3: "IMA3",
					onceux: "OnceUX",
					pip: "Picture-in-Picture",
					qualityMenu: "Quality Menu",
					social: "Social",
					ssai: "SSAI",
					vr: "VR"
				};
				var s = function e() {
					for(var t = arguments.length, n = new Array(t), i = 0; i < t; i++) {
						n[i] = arguments[i]
					}
					return "<tr>" + n.map(function(e) {
						return "<td>" + e + "</td>"
					}).join("") + "</tr>"
				};
				var o = function(e) {
					H(i, e);

					function i() {
						return e.apply(this, arguments) || this
					}
					var o = i.prototype;
					o.buildCSSClass = function t() {
						return "vjs-player-info-modal " + e.prototype.buildCSSClass.call(this)
					};
					o.dataForPlugins_ = function e() {
						var t = this;
						return Object.keys(a).filter(n.getPlugin).sort().map(function(e) {
							var i = t.player();
							return {
								active: i.usingPlugin(e),
								displayName: a[e],
								version: n.getPluginVersion(e) || ne(i, e + ".VERSION", ie)
							}
						})
					};
					o.dataForSource_ = function e() {
						var t = this.player();
						var n = t.tech_.hls,
							i = t.mediainfo;
						var r = {
							mediainfo: i,
							tech: t.techName_,
							type: t.currentType()
						};
						if(!n) {
							return r
						}
						var a = ne(n, "playlists", {
							media: function e() {}
						}).media();
						r.hls = {
							bandwidth: ne(n, "stats.bandwidth", ie),
							mediaBytesTransferred: ne(n, "stats.mediaBytesTransferred", ie),
							mediaTransferDuration: ne(n, "stats.mediaTransferDuration", ie),
							mediaRequests: ne(n, "stats.mediaRequests", ie)
						};
						if(a) {
							r.hls.rendition = {
								height: ne(a, "attributes.RESOLUTION.height", ie),
								width: ne(a, "attributes.RESOLUTION.width", ie)
							}
						}
						return r
					};
					o.data = function e() {
						var n = this.player();
						var i = r.getAttributes(n.el());
						var a = ne(n, "bcinfo.accountId", ne(i, "data-account", ie));
						var s = ne(n, "bcinfo.playerId", ne(i, "data-player", ie));
						var o = ne(n, "bcinfo.embedId", ne(i, "data-embed", ie));
						var l = ne(n, "bcinfo.applicationId", ne(i, "data-application-id", ""));
						var u = ne(t, "bc." + s + "_" + o + ".VERSION", ne(t, "bc.VERSION", ie));
						var c = ne(t, "bc." + s + "_" + o + ".videojs.VERSION", ne(t, "videojs.VERSION", ie));
						return {
							player: {
								accountId: a,
								playerId: s,
								embedId: o,
								applicationId: l,
								playerVersion: u,
								videojsVersion: c
							},
							plugins: this.dataForPlugins_(),
							source: this.dataForSource_()
						}
					};
					o.contentForPlugins_ = function e(t) {
						var n = this;
						var i = ('\n        <tr>\n          <td colspan="3">' + this.localize("No plugins available.") + "</td>\n        </tr>\n      ").trim();
						if(t.plugins.length) {
							i = t.plugins.map(function(e) {
								return s(e.displayName, e.version, e.active ? n.localize("yes") : n.localize("no"))
							}).join("")
						}
						return("\n        <table>\n          <thead>\n            <tr>\n              <th>" + this.localize("Name") + "</th>\n              <th>" + this.localize("Version") + "</th>\n              <th>" + this.localize("Active") + "</th>\n            </tr>\n          </thead>\n          <tbody>" + i + "</tbody>\n        </table>\n      ").trim()
					};
					o.contentForSource_ = function e(t) {
						var n = ["<table><tbody>", s(this.localize("Current Playback Tech"), t.source.tech), s(this.localize("Current Media Type"), t.source.type)];
						if(t.source.mediainfo) {
							n.push(s(this.localize("Video Name"), t.source.mediainfo.name), s(this.localize("Video ID"), t.source.mediainfo.id))
						}
						if(t.source.hls) {
							n.push(s(this.localize("Current Bandwidth"), t.source.hls.bandwidth), s(this.localize("Media Bytes Transferred"), t.source.hls.mediaBytesTransferred), s(this.localize("Media Requests"), t.source.hls.mediaRequests), s(this.localize("Media Transfer Duration"), t.source.hls.mediaTransferDuration));
							if(t.source.hls.rendition) {
								n.push(s(this.localize("Rendition Width"), t.source.hls.rendition.width), s(this.localize("Rendition Height"), t.source.hls.rendition.height))
							}
						}
						return n.concat("</tbody></table>").join("")
					};
					o.content = function e() {
						var t = this.data();
						return [r.createEl("h1", {
							innerHTML: this.localize("Player Information")
						}), r.createEl("div", {
							className: "vjs-pi-section vjs-pi-section--player",
							innerHTML: ["<h2>" + this.localize("General") + "</h2>", "<table><tbody>", s(this.localize("Brightcove Player Version"), t.player.playerVersion), s(this.localize("Video.js Version"), t.player.videojsVersion), s(this.localize("Account ID"), t.player.accountId), s(this.localize("Player ID"), t.player.playerId), s(this.localize("Embed ID"), t.player.embedId), s(this.localize("Application ID"), t.player.applicationId), "</tbody></table>"].join("")
						}), r.createEl("div", {
							className: "vjs-pi-section vjs-pi-section--plugins",
							innerHTML: ["<h2>" + this.localize("Plugins") + "</h2>", this.contentForPlugins_(t)].join("")
						}), r.createEl("div", {
							className: "vjs-pi-section vjs-pi-section--source",
							innerHTML: ["<h2>" + this.localize("Source") + "</h2>", this.contentForSource_(t)].join("")
						})]
					};
					return i
				}(i);
				n.registerComponent("PlayerInfoModal", o);
				return o
			};
			var ae = function e(t) {
				re(t);

				function i() {
					var e = this;
					if(this.playerInfo.modal) {
						this.playerInfo.modal.dispose()
					}
					this.playerInfo = function() {
						i.apply(this, arguments)
					};
					this.ready(function() {
						e.addClass("vjs-player-info");
						e.playerInfo.modal = e.addChild("playerInfoModal", {
							fillAlways: true,
							label: e.localize("Player Information Dialog"),
							temporary: false
						});
						e.playerInfo.modal.on("dispose", function() {
							delete e.playerInfo
						})
					})
				}
				t.registerPlugin("playerInfo", i);
				i.VERSION = n
			};
			var se = function e(t) {
				var i = function e(t, n) {
					if(typeof t.usingPlugin === "function") {
						return t.usingPlugin(n)
					}
					return !!t[n]
				};
				var r = function e(t) {
					t.postrollFinished = false;
					t.postrollTimedOut = false;
					t.sawNoPostrollEvent = false
				};
				var a = function e(t) {
					if(!i(t, "ads")) {
						return false
					}
					var n = t.endscreenState_;
					if(n.sawNoPostrollEvent) {
						return false
					}
					return !n.postrollFinished && !n.postrollTimedOut
				};
				var s = function e(t) {
					if(!i(t, "playlist")) {
						return false
					}
					var n = t.playlist;
					var r = n();
					if(n.autoadvance_.delay !== 0 || !r.length) {
						return false
					}
					return n.repeat() || n.currentItem() !== r.length - 1
				};
				var o = function e() {
					var t = this;
					if(this.endscreenState_) {
						return
					}
					var n = this.endscreenState_ = {};
					var i = function e() {
						t.trigger("endscreen")
					};
					r(n);
					this.on("adstart", function() {
						var e = t.ended();
						n.postrollFinished = !e
					});
					this.on("adend", function() {
						n.postrollFinished = t.ended()
					});
					this.on("adtimeout", function() {
						n.postrollTimedOut = t.ended()
					});
					this.on(["endscreen", "loadstart"], function() {
						t.off("adend", i);
						r(n)
					});
					this.on("nopostroll", function() {
						n.sawNoPostrollEvent = true
					});
					this.on("ended", function() {
						if(s(t)) {
							return
						}
						if(a(t)) {
							t.one("adend", i);
							return
						}
						i()
					})
				};
				o.VERSION = n;
				if(t.registerPlugin) {
					if(!t.getPlugin("endscreen")) {
						t.registerPlugin("endscreen", o)
					}
				} else {
					t.plugin("endscreen", o)
				}
			};
			var oe = "bc-style-vjs";
			var le = "vjs-waiting-for-autoplay";

			function ue(t, n, i) {
				var r = t.classNames;
				if(!n && !i && n !== 0 && i !== 0) {
					return
				}
				var a = e.querySelector("." + r.playerInstanceDimensions);
				if(!a) {
					a = e.createElement("style");
					a.className = r.playerInstanceDimensions;
					var s = e.querySelector("." + r.playerStyle) || e.querySelector("." + oe);
					if(s) {
						s.parentNode.insertBefore(a, s.nextSibling)
					} else {
						e.head.appendChild(a)
					}
				} else if(a.innerText) {
					if(!n && n !== 0) {
						var o = /width:(\d+)px;/g.exec(a.innerText);
						if(o && o[1]) {
							n = parseInt(o[1], 10)
						}
					} else if(!i && i !== 0) {
						var l = /height:(\d+)px;/g.exec(a.innerText);
						if(l && l[1]) {
							i = parseInt(l[1], 10)
						}
					}
				}
				var u = "." + r.playerInstance + "{";
				if(n || n === 0) {
					u += "width:" + parseInt(n, 10) + "px;"
				}
				if(i || i === 0) {
					u += "height:" + parseInt(i, 10) + "px;"
				}
				u += "}";
				a.innerText = u
			}

			function ce(e, t, n, i) {
				var r = t.settings,
					a = t.environment;
				var s = r.embedId,
					o = r.playerId;
				var l = a.isInBcFrame,
					u = a.queryString,
					c = a.urlHash;
				var d = "bc-player-" + o + "_" + s;
				var f = d + "-index-" + r.playerIndex;
				r.classNames = {
					player: d,
					playerStyle: "bc-style-" + o + "-" + s,
					playerInstance: f,
					playerInstanceDimensions: f + "-video-dimensions"
				};
				r.embedState = {
					loop: n.hasAttribute("loop"),
					muted: n.hasAttribute("muted"),
					playsinline: n.hasAttribute("playsinline"),
					poster: n.hasAttribute("poster"),
					sources: !!n.querySelector("source"),
					tracks: !!n.querySelector("track")
				};
				if(n.hasAttribute("data-vttjs") && C.isNonEmptyStr(n.getAttribute("data-vttjs"))) {
					i["vtt.js"] = n.getAttribute("data-vttjs")
				} else if(u.vttjs && C.isNonEmptyStr(u.vttjs)) {
					i["vtt.js"] = u.vttjs
				} else if(i.hasOwnProperty("vtt.js") || i.hasOwnProperty("vttjs")) {
					i["vtt.js"] = i["vtt.js"] || i.vttjs
				} else if(r["vtt.js"] || r.vttjs) {
					i["vtt.js"] = r["vtt.js"] || r.vttjs
				} else {
					i["vtt.js"] = "https://vjs.zencdn.net/vttjs/0.12.5/vtt.global.min.js"
				}
				if(r.playButton) {
					var p = r.playButton,
						h = p.hover,
						v = p.shape,
						g = p.position;
					if(h === "glow") {
						e.dom.addClass(n, "vjs-play-button-hover-glow")
					} else if(h === "darken") {
						e.dom.addClass(n, "vjs-play-button-hover-darken")
					}
					if(v === "square") {
						e.dom.addClass(n, "vjs-play-button-shape-square")
					} else if(v === "rectangle") {
						e.dom.addClass(n, "vjs-play-button-shape-rectangle")
					}
					if(g === "topRight") {
						e.dom.addClass(n, "vjs-play-button-position-top-right")
					} else if(g === "topLeft") {
						e.dom.addClass(n, "vjs-play-button-position-top-left")
					}
				}
				if(u.crossorigin !== undefined || r.media && r.media.tracks && e.browser.IS_ANY_SAFARI) {
					r.crossorigin = true
				}
				if(r.crossorigin) {
					n.setAttribute("crossorigin", "anonymous")
				}
				var m = c.t || u.t || n.getAttribute("data-start-time");
				if(/^[\d]+$/.test(m)) {
					r.startTime = Number(m)
				} else if(/^(\d+h)?(\d+m)?(\d+s)?$/.test(m)) {
					r.startTime = m
				}
				var y = u.adConfigId;
				var _ = n.getAttribute("data-ad-config-id");
				if(C.isNonEmptyStr(y)) {
					r.adConfigId = y
				} else if(C.isNonEmptyStr(_)) {
					r.adConfigId = _
				}
				if(typeof r.adConfigId === "string") {
					r.adConfigId = r.adConfigId.trim()
				}
				if(!C.isNonEmptyStr(r.adConfigId)) {
					r.adConfigId = null
				}
				if(r.usingAdFailover && !M.mightBe) {
					r.adConfigId = null
				}
				var b = u.deliveryConfigId;
				var A = n.getAttribute("data-delivery-config-id");
				if(C.isNonEmptyStr(b)) {
					r.deliveryConfigId = b
				} else if(C.isNonEmptyStr(A)) {
					r.deliveryConfigId = A
				}
				if(typeof r.deliveryConfigId === "string") {
					r.deliveryConfigId = r.deliveryConfigId.trim()
				}
				if(!C.isNonEmptyStr(r.deliveryConfigId)) {
					r.deliveryConfigId = null
				}
				r.applicationId = u.applicationId || n.getAttribute("data-application-id") || r.applicationId;
				var S = C.qs();
				if(n.hasAttribute("autoplay")) {
					i.autoplay = true
				} else if(S.hash.hasOwnProperty("autoplay") || S.search.hasOwnProperty("autoplay")) {
					i.autoplay = S.hash.autoplay || S.search.autoplay || true;
					if(!l) {
						e.log.warn("DEPRECATION: Using the `autoplay` query parameter or URL hash value to request autoplay for advanced, in-page embeds is deprecated and will be removed in Brightcove Player 7. Please use the player configuration or Video.js option instead!")
					}
				} else if(!i.hasOwnProperty("autoplay")) {
					i.autoplay = r.autoplay || false
				}
				if(i.autoplay) {
					e.dom.addClass(n, le)
				}
				if(u.preload) {
					i.preload = u.preload
				} else if(!i.hasOwnProperty("preload") && r.preload) {
					i.preload = r.preload
				}
				i.height = n.getAttribute("height") || undefined;
				i.width = n.getAttribute("width") || undefined;
				if(!l && n && (i.width || i.height)) {
					ue(r, i.width, i.height)
				}["loop", "muted", "playsinline"].forEach(function(e) {
					if(u[e] !== undefined || r[e] || r.embedState[e] || i[e]) {
						i[e] = true
					} else {
						i[e] = false
					}
				});
				if(i.playsinline) {
					n.setAttribute("playsinline", "playsinline")
				}
				if(i.muted) {
					n.setAttribute("muted", "muted");
					n.muted = true
				}
				if(u.language) {
					i.language = u.language
				} else if(!i.hasOwnProperty("language") && r.language) {
					i.language = r.language
				}
				if(r.media && r.media.poster && r.media.poster.highres && !n.poster) {
					if(/(https?:)?\/\//.test(r.media.poster.highres)) {
						i.poster = r.media.poster.highres
					} else {
						i.poster = t.environment.scriptBaseUrl + "/" + r.media.poster.highres
					}
					if(e.browser.IS_IPHONE) {
						n.poster = i.poster
					}
				}
				if(r.media && r.media.tracks) {
					r.media.tracks.forEach(function(t) {
						n.appendChild(e.dom.createEl("track", {}, {
							default: t.default ? t.default : "",
							label: t.label ? t.label : "",
							kind: "captions",
							src: t.src,
							srclang: t.srclang
						}))
					})
				}
				i.runtime_ = t;
				if(!(e.browser.IS_ANY_SAFARI || e.browser.IS_IOS)) {
					i.html5 = i.html5 || {};
					i.html5.nativeCaptions = false
				}
				if(r.flash) {
					i.flash = r.flash
				}
				if(r.hls !== false) {
					if(!i.flash) {
						i.flash = {}
					}
					if(!i.flash.swf) {
						i.flash.swf = r.playersCDN + "/videojs-flashls-source-handler/1.4.8/video-js.swf"
					}
				}
				if(r.hls) {
					e.options.hls = r.hls
				}
				if(typeof e.options.hls !== "object") {
					e.options.hls = {}
				}
				if(e.browser.IS_ANDROID && e.options.hls.enableLowInitialPlaylist === undefined) {
					e.options.hls.enableLowInitialPlaylist = true
				}
				if(e.options.hls.overrideNative === undefined && !e.browser.IS_ANY_SAFARI) {
					e.options.hls.overrideNative = true
				}
				return i
			}

			function de(t, n, i, r) {
				var a = i.options_;
				var s = n.settings,
					o = n.environment;
				var l = s.accountId,
					u = s.applicationId,
					c = s.css,
					d = s.embedId,
					f = s.playerId;
				var p;
				i.mediainfo = {
					accountId: l,
					account_id: l
				};
				i.bcinfo = {
					accountId: l,
					applicationId: u,
					css: c,
					embedId: d,
					playerId: f,
					scriptUrl: o.scriptUrl,
					scriptBaseUrl: o.scriptBaseUrl
				};
				Object.defineProperty(i, "usingAdBlocker", {
					enumerable: true,
					value: M
				});
				Object.defineProperty(i, "getAutoplayConditions", {
					enumerable: true,
					value: function e(t) {
						return r.getAutoplayConditions(t)
					}
				});
				M().then(function(e) {
					if(e) {
						i.trigger({
							type: "usage",
							name: "using-ad-blocker"
						})
					}
				});
				i.addClass(s.classNames.player);
				i.addClass(s.classNames.playerInstance);
				var h = t.bind(i, i.dimension);
				i.dimension = function(e, t) {
					if(e === "width") {
						ue(s, t, null)
					} else if(e === "height") {
						ue(s, null, t)
					}
					return h(e, t)
				};
				i.ready(function() {
					if(!a.autoplay) {
						return
					}

					function e() {
						i.removeClass(le)
					}

					function n() {
						if(!i.autoplay()) {
							i.removeClass(le);
							return
						}
						var t = i.play();
						if(t === undefined) {
							e()
						} else {
							t.then(e, e)
						}
					}
					var r = ["canplay", "error", "durationchange"];

					function s(a) {
						if(a.type === "error") {
							e();
							i.off(r, s);
							return
						}
						if(a.type === "durationchange" && i.duration() === Infinity && !t.browser.IS_ANY_SAFARI) {
							n();
							i.off(r, s);
							return
						}
						if(a.type === "canplay") {
							n();
							i.off(r, s)
						}
					}
					if(!i.currentSrc() && !p) {
						e()
					} else if(i.readyState() === 4) {
						n()
					} else {
						i.one(r, s)
					}
				});
				if(s.fullscreenControl === false && i.controls()) {
					i.on("loadedmetadata", function() {
						if(!i.controlBar) {
							return
						}
						var e = i.controlBar.children();
						if(!e || !e.length) {
							return
						}
						for(var t = e.length - 1; t > 0; t--) {
							if(e[t].hasClass("vjs-menu-button-popup") && !e[t].hasClass("vjs-hidden")) {
								e[t].addClass("vjs-menu-popup-last-visible");
								break
							}
						}
					})
				}
				if(t.browser.IS_IPHONE) {
					i.on("fullscreenchange", function() {
						var e = i.$(".vjs-tech");
						if(e.hasAttribute("controls")) {
							e.removeAttribute("controls")
						}
					});
					if(s.embedState.playsinline && s.embedState.muted) {
						i.addClass("vjs-iphone")
					}
				}
				if(t.browser.IS_IOS && s.embedState.muted) {
					i.addClass("vjs-ios")
				}
				if(i.controls()) {
					i.one("play", function() {
						if(!i.controlBar || !i.controls()) {
							return
						}
						var e = i.controlBar.children();
						if(!e || !e.length) {
							return
						}
						var t = ["Enter", "ArrowDown", "ArrowUp", "Up", "Down", " ", "Spacebar"];
						for(var n = 0; n < e.length; n++) {
							if(e[n].hasClass("vjs-menu-button-popup") && !e[n].hasClass("vjs-hidden")) {
								e[n].on("keyup", function(e) {
									if(t.indexOf(e.key) >= 0) {
										i.controlBar.addClass("vjs-control-bar-visible")
									}
								})
							}
						}
					});
					if(i.controlBar) {
						var v = i.controlBar.el();
						var g;
						var m = function t() {
							var n = e.activeElement;
							if(g !== n) {
								g = n;
								i.controlBar.toggleClass("vjs-focus-within", v.contains(n))
							}
						};
						var y = function e() {
							v.removeEventListener("focus", m, true);
							v.removeEventListener("blur", m, true)
						};
						v.addEventListener("focus", m, true);
						v.addEventListener("blur", m, true);
						i.on("dispose", y);
						i.controlBar.on("dispose", y)
					}
				}
				var _ = [{
					name: "proxyTracks",
					register: X
				}, {
					name: "seekEvents",
					register: Z
				}, {
					name: "touchActive",
					register: te
				}, {
					name: "urlparams",
					register: B,
					opts: {
						iframe: o.isInBcFrame,
						time: s.startTime
					}
				}, {
					name: "playerInfo",
					register: ae
				}, {
					name: "endscreen",
					register: se
				}];
				_.forEach(function(e) {
					var n = e.name,
						r = e.opts,
						a = e.register;
					if(!i.hasPlugin(n)) {
						a(t)
					}
					if(!i.usingPlugin(n)) {
						i[n](r)
					}
				});
				ee(t, i, n);
				i.on("dispose", function() {
					a.runtime_ = null
				})
			}

			function fe(e, t, n) {
				var i = e.videojs;
				var r = -1;
				return function a(s) {
					var o = i.getPlayer(s);
					if(o) {
						o.trigger({
							type: "usage",
							name: "bc-used-as-getter"
						});
						return o
					}
					r++;
					var l = e.getRuntime({
						playerIndex: r
					});
					i.hookOnce("beforesetup", function(e, n) {
						n = ce(i, l, e, n);
						if(C.isFn(t)) {
							return t(i, l, e, n)
						}
						return n
					});
					i.hookOnce("setup", function(t) {
						de(i, l, t, e);
						if(C.isFn(n)) {
							n(i, l, t)
						}
					});
					return i.apply(void 0, arguments)
				}
			}
			var pe = ["audioTracks", "textTracks", "videoTracks", "remoteTextTracks", "addTextTrack", "addRemoteTextTrack", "removeRemoteTextTrack", "scrubbing", "ended"];
			var he = ["handleKeyDown"];
			var ve = function e(t, n) {
				var i = function e(t) {
					return function(e) {
						if(e.isAdPlayerPatched_) {
							return
						}
						var n = e.prototype;
						e.isAdPlayerPatched_ = true;
						Object.defineProperty(n, "fsApi_", {
							get: function e() {
								return this.options_ && this.options_.contentPlayer && this.options_.contentPlayer.fsApi_
							}
						});
						pe.forEach(function(e) {
							if(!(e in n)) {
								n[e] = function() {}
							}
						});
						he.forEach(function(e) {
							if(!n.hasOwnProperty(e)) {
								n[e] = function() {}
							}
						});
						Object.defineProperty(t, "AdPlayer", {
							configurable: true,
							enumerable: true,
							get: function t() {
								return e
							},
							set: function e() {}
						});
						return e
					}
				};
				var r = function e(n) {
					if(!n) {
						Object.defineProperty(t, "ima3", {
							configurable: true,
							enumerable: true,
							get: function e() {},
							set: function n(i) {
								e(i);
								Object.defineProperty(t, "ima3", {
									value: i
								})
							}
						});
						return
					}
					var r = i(n);
					if(!n.AdPlayer) {
						Object.defineProperty(n, "AdPlayer", {
							configurable: true,
							enumerable: true,
							get: function e() {},
							set: r
						});
						return
					}
					r(n.AdPlayer)
				};
				if(t.ima3) {
					r(t.ima3)
				} else {
					n.one("beforepluginsetup:ima3", function() {
						r(t.ima3)
					})
				}
			};
			var ge = {
				accountId: "",
				adConfigId: "",
				applicationId: "",
				playsinline: false,
				loop: false,
				muted: false,
				autoplay: false,
				crossorigin: false,
				css: {},
				plugins: [],
				debugger: {},
				deliveryConfigId: "",
				embedId: "default",
				misconfiguredWithMultipleAdPlugins: false,
				playerId: "default",
				skin: "luna",
				usingAdFailover: false,
				version: "0.0.0"
			};
			var me = function() {
				function n(e, t) {
					if(e === void 0) {
						e = {}
					}
					if(t === void 0) {
						t = {}
					}
					var i = n.shared.videojs;
					if(!i) {
						throw new Error("missing videojs")
					}
					this.runtime = {
						environment: i.mergeOptions(t),
						settings: i.mergeOptions(ge, e)
					};
					if(this.runtime.settings.misconfiguredWithMultipleAdPlugins) {
						i.log.warn('Brightcove Player "' + this.runtime.settings.playerId + '" is mis-configured with multiple ad plugins.')
					}
					this.videojs = i;
					this.util = C;
					i.bc_ = C;
					this.getAutoplayConditions();
					this.detectRuntimeEnvironment();
					this.setupGlobalEnv();
					C.perf.mark("bcAdBlockDetectStart");
					M().then(function(e) {
						C.perf.mark("bcAdBlockDetectEnd");
						C.perf.measure("bcAdBlockDetect", "bcAdBlockDetectStart", "bcAdBlockDetectEnd")
					})
				}
				var i = n.prototype;
				i.getRuntime = function e(t) {
					return this.videojs.mergeOptions(this.runtime, {
						settings: t
					})
				};
				i.getAutoplayConditions = function e(t) {
					if(t === void 0) {
						t = "video"
					}
					var n = this.runtime.environment;
					if(!n.autoplay) {
						n.autoplay = {}
					}
					return O(t, this.videojs).then(function(e) {
						n.autoplay[t] = e;
						return e
					})
				};
				i.detectRuntimeEnvironment = function n() {
					var i = this.videojs.dom;
					var r = this.runtime.environment;
					var a = i.hasClass(e.documentElement, "bc-iframe");
					var s = C.qs();
					r.usingRequireJs = C.isFn(t.define) && t.define.amd && C.isFn(t.require && t.require.toUrl);
					r.isInAnyFrame = i.isInFrame();
					r.isInBcFrame = a;
					r.queryString = a ? s.search : {};
					r.urlHash = a ? s.hash : {};
					this.setScriptUrl();
					this.setScriptBaseUrl()
				};
				i.setScriptUrl = function n() {
					var i = this.runtime.environment;
					if(i.isInBcFrame) {
						i.scriptUrl = ""
					} else if(i.usingRequireJs) {
						i.scriptUrl = t.require.toUrl("bc")
					} else if(e.currentScript) {
						i.scriptUrl = e.currentScript.src
					} else {
						var r = e.getElementsByTagName("script");
						i.scriptUrl = r.length && r[r.length - 1].src || ""
					}
				};
				i.setScriptBaseUrl = function e() {
					var t = this.runtime.environment;
					if(t.scriptUrl) {
						t.scriptBaseUrl = t.scriptUrl.split("/").slice(0, -1).join("/")
					} else {
						t.scriptBaseUrl = "."
					}
				};
				i.safeSetGlobal = function e(n, i) {
					if(!C.isNil(t[n])) {
						return this.videojs.log.warn("setting window." + n + " would overwrite an existing global, skipping")
					}
					t[n] = i
				};
				i.setupGlobalEnv = function e() {
					var t = this;
					var n = this.videojs;
					var i = this.runtime.environment;
					var r = i.queryStringToWindow;
					if(!r || !i.isInBcFrame) {
						return
					}
					var a = n.mergeOptions(i.queryString);
					if(r.target) {
						this.safeSetGlobal(r.target, a)
					}
					if(Array.isArray(r.globals)) {
						r.globals.forEach(function(e) {
							t.safeSetGlobal(e, a[e])
						})
					}
				};
				i.createInitializer = function e(n, i) {
					var r = this;
					var a = this.videojs;
					var s = t.bc;
					var o = this.runtime.settings,
						l = o.embedId,
						u = o.playerId,
						c = o.skin,
						d = o.version;
					var f = fe(this, n, i);
					f.SKIN = c;
					f.VERSION = d;
					f.videojs = a;
					f[u + "_" + l] = f;
					if(s) {
						Object.keys(s).forEach(function(e) {
							var t = s[e];
							if(typeof t === "function" && typeof t.videojs === "function") {
								f[e] = t;
								delete s[e]
							}
						})
					}
					Object.defineProperty(f, "usingAdBlocker", {
						enumerable: true,
						value: M
					});
					Object.defineProperty(f, "getAutoplayConditions", {
						enumerable: true,
						value: function e(t) {
							return r.getAutoplayConditions(t)
						}
					});
					t.bc = f;
					return f
				};
				n.dedupeVideojs = function e(i, r) {
					var a = i;
					n.shared.firstVideojs = r || i;
					if(r && r.VERSION === i.VERSION) {
						a = r
					} else if(t.bc) {
						var s = Object.keys(t.bc);
						for(var o = 0; o < s.length; o++) {
							var l = s[o];
							var u = t.bc[l];
							if(typeof u === "function" && typeof u.videojs === "function") {
								if(u.videojs.VERSION === i.VERSION) {
									a = u.videojs;
									break
								}
							}
						}
					}
					t.videojs = a;
					n.shared.videojs = a;
					return a
				};
				n.restoreFirstVideojs = function e() {
					t.videojs = n.shared.firstVideojs
				};
				i.patchOldIma3 = function e(t, n) {
					ve(t, n)
				};
				return n
			}();
			me.defaultSettings = ge;
			me.shared = {};
			me.VERSION = n;
			return me
		}(document, window);
		(function(e, t) {
			typeof exports === "object" && typeof module !== "undefined" ? module.exports = t(require("global/window"), require("global/document")) : typeof define === "function" && define.amd ? define(["global/window", "global/document"], t) : (e = e || self, e.videojs = t(e.window, e.document))
		})(this, function(e, t) {
			"use strict";
			e = e && e.hasOwnProperty("default") ? e["default"] : e;
			t = t && t.hasOwnProperty("default") ? t["default"] : t;
			var n = "7.7.5";
			var i = [];
			var r = function t(n, r) {
				return function(t, a, s) {
					var o = r.levels[a];
					var l = new RegExp("^(" + o + ")$");
					if(t !== "log") {
						s.unshift(t.toUpperCase() + ":")
					}
					s.unshift(n + ":");
					if(i) {
						i.push([].concat(s));
						var u = i.length - 1e3;
						i.splice(0, u > 0 ? u : 0)
					}
					if(!e.console) {
						return
					}
					var c = e.console[t];
					if(!c && t === "debug") {
						c = e.console.info || e.console.log
					}
					if(!c || !o || !l.test(t)) {
						return
					}
					c[Array.isArray(s) ? "apply" : "call"](e.console, s)
				}
			};

			function a(e) {
				var t = "info";
				var n;
				var s = function e() {
					for(var i = arguments.length, r = new Array(i), a = 0; a < i; a++) {
						r[a] = arguments[a]
					}
					n("log", t, r)
				};
				n = r(e, s);
				s.createLogger = function(t) {
					return a(e + ": " + t)
				};
				s.levels = {
					all: "debug|log|warn|error",
					off: "",
					debug: "debug|log|warn|error",
					info: "log|warn|error",
					warn: "warn|error",
					error: "error",
					DEFAULT: t
				};
				s.level = function(e) {
					if(typeof e === "string") {
						if(!s.levels.hasOwnProperty(e)) {
							throw new Error('"' + e + '" in not a valid log level')
						}
						t = e
					}
					return t
				};
				s.history = function() {
					return i ? [].concat(i) : []
				};
				s.history.filter = function(e) {
					return(i || []).filter(function(t) {
						return new RegExp(".*" + e + ".*").test(t[0])
					})
				};
				s.history.clear = function() {
					if(i) {
						i.length = 0
					}
				};
				s.history.disable = function() {
					if(i !== null) {
						i.length = 0;
						i = null
					}
				};
				s.history.enable = function() {
					if(i === null) {
						i = []
					}
				};
				s.error = function() {
					for(var e = arguments.length, i = new Array(e), r = 0; r < e; r++) {
						i[r] = arguments[r]
					}
					return n("error", t, i)
				};
				s.warn = function() {
					for(var e = arguments.length, i = new Array(e), r = 0; r < e; r++) {
						i[r] = arguments[r]
					}
					return n("warn", t, i)
				};
				s.debug = function() {
					for(var e = arguments.length, i = new Array(e), r = 0; r < e; r++) {
						i[r] = arguments[r]
					}
					return n("debug", t, i)
				};
				return s
			}
			var s = a("VIDEOJS");
			var o = s.createLogger;

			function l(e, t) {
				return t = {
					exports: {}
				}, e(t, t.exports), t.exports
			}
			var u = l(function(e) {
				function t() {
					e.exports = t = Object.assign || function(e) {
						for(var t = 1; t < arguments.length; t++) {
							var n = arguments[t];
							for(var i in n) {
								if(Object.prototype.hasOwnProperty.call(n, i)) {
									e[i] = n[i]
								}
							}
						}
						return e
					};
					return t.apply(this, arguments)
				}
				e.exports = t
			});
			var c = Object.prototype.toString;
			var d = function e(t) {
				return v(t) ? Object.keys(t) : []
			};

			function f(e, t) {
				d(e).forEach(function(n) {
					return t(e[n], n)
				})
			}

			function p(e, t, n) {
				if(n === void 0) {
					n = 0
				}
				return d(e).reduce(function(n, i) {
					return t(n, e[i], i)
				}, n)
			}

			function h(e) {
				for(var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), i = 1; i < t; i++) {
					n[i - 1] = arguments[i]
				}
				if(Object.assign) {
					return u.apply(void 0, [e].concat(n))
				}
				n.forEach(function(t) {
					if(!t) {
						return
					}
					f(t, function(t, n) {
						e[n] = t
					})
				});
				return e
			}

			function v(e) {
				return !!e && typeof e === "object"
			}

			function g(e) {
				return v(e) && c.call(e) === "[object Object]" && e.constructor === Object
			}

			function m(t, n) {
				if(!t || !n) {
					return ""
				}
				if(typeof e.getComputedStyle === "function") {
					var i = e.getComputedStyle(t);
					return i ? i.getPropertyValue(n) || i[n] : ""
				}
				return ""
			}

			function y(e) {
				return typeof e === "string" && Boolean(e.trim())
			}

			function _(e) {
				if(e.indexOf(" ") >= 0) {
					throw new Error("class has illegal whitespace characters")
				}
			}

			function b(e) {
				return new RegExp("(^|\\s)" + e + "($|\\s)")
			}

			function A() {
				return t === e.document
			}

			function S(e) {
				return v(e) && e.nodeType === 1
			}

			function T() {
				try {
					return e.parent !== e.self
				} catch(e) {
					return true
				}
			}

			function k(e) {
				return function(n, i) {
					if(!y(n)) {
						return t[e](null)
					}
					if(y(i)) {
						i = t.querySelector(i)
					}
					var r = S(i) ? i : t;
					return r[e] && r[e](n)
				}
			}

			function E(e, n, i, r) {
				if(e === void 0) {
					e = "div"
				}
				if(n === void 0) {
					n = {}
				}
				if(i === void 0) {
					i = {}
				}
				var a = t.createElement(e);
				Object.getOwnPropertyNames(n).forEach(function(e) {
					var t = n[e];
					if(e.indexOf("aria-") !== -1 || e === "role" || e === "type") {
						s.warn("Setting attributes in the second argument of createEl()\n" + "has been deprecated. Use the third argument instead.\n" + ("createEl(type, properties, attributes). Attempting to set " + e + " to " + t + "."));
						a.setAttribute(e, t)
					} else if(e === "textContent") {
						P(a, t)
					} else if(a[e] !== t) {
						a[e] = t
					}
				});
				Object.getOwnPropertyNames(i).forEach(function(e) {
					a.setAttribute(e, i[e])
				});
				if(r) {
					Y(a, r)
				}
				return a
			}

			function P(e, t) {
				if(typeof e.textContent === "undefined") {
					e.innerText = t
				} else {
					e.textContent = t
				}
				return e
			}

			function C(e, t) {
				if(t.firstChild) {
					t.insertBefore(e, t.firstChild)
				} else {
					t.appendChild(e)
				}
			}

			function w(e, t) {
				_(t);
				if(e.classList) {
					return e.classList.contains(t)
				}
				return b(t).test(e.className)
			}

			function j(e, t) {
				if(e.classList) {
					e.classList.add(t)
				} else if(!w(e, t)) {
					e.className = (e.className + " " + t).trim()
				}
				return e
			}

			function I(e, t) {
				if(e.classList) {
					e.classList.remove(t)
				} else {
					_(t);
					e.className = e.className.split(/\s+/).filter(function(e) {
						return e !== t
					}).join(" ")
				}
				return e
			}

			function L(e, t, n) {
				var i = w(e, t);
				if(typeof n === "function") {
					n = n(e, t)
				}
				if(typeof n !== "boolean") {
					n = !i
				}
				if(n === i) {
					return
				}
				if(n) {
					j(e, t)
				} else {
					I(e, t)
				}
				return e
			}

			function O(e, t) {
				Object.getOwnPropertyNames(t).forEach(function(n) {
					var i = t[n];
					if(i === null || typeof i === "undefined" || i === false) {
						e.removeAttribute(n)
					} else {
						e.setAttribute(n, i === true ? "" : i)
					}
				})
			}

			function N(e) {
				var t = {};
				var n = "," + "autoplay,controls,playsinline,loop,muted,default,defaultMuted" + ",";
				if(e && e.attributes && e.attributes.length > 0) {
					var i = e.attributes;
					for(var r = i.length - 1; r >= 0; r--) {
						var a = i[r].name;
						var s = i[r].value;
						if(typeof e[a] === "boolean" || n.indexOf("," + a + ",") !== -1) {
							s = s !== null ? true : false
						}
						t[a] = s
					}
				}
				return t
			}

			function x(e, t) {
				return e.getAttribute(t)
			}

			function D(e, t, n) {
				e.setAttribute(t, n)
			}

			function R(e, t) {
				e.removeAttribute(t)
			}

			function U() {
				t.body.focus();
				t.onselectstart = function() {
					return false
				}
			}

			function M() {
				t.onselectstart = function() {
					return true
				}
			}

			function B(e) {
				if(e && e.getBoundingClientRect && e.parentNode) {
					var t = e.getBoundingClientRect();
					var n = {};
					["bottom", "height", "left", "right", "top", "width"].forEach(function(e) {
						if(t[e] !== undefined) {
							n[e] = t[e]
						}
					});
					if(!n.height) {
						n.height = parseFloat(m(e, "height"))
					}
					if(!n.width) {
						n.width = parseFloat(m(e, "width"))
					}
					return n
				}
			}

			function F(n) {
				var i;
				if(n.getBoundingClientRect && n.parentNode) {
					i = n.getBoundingClientRect()
				}
				if(!i) {
					return {
						left: 0,
						top: 0
					}
				}
				var r = t.documentElement;
				var a = t.body;
				var s = r.clientLeft || a.clientLeft || 0;
				var o = e.pageXOffset || a.scrollLeft;
				var l = i.left + o - s;
				var u = r.clientTop || a.clientTop || 0;
				var c = e.pageYOffset || a.scrollTop;
				var d = i.top + c - u;
				return {
					left: Math.round(l),
					top: Math.round(d)
				}
			}

			function V(e, t) {
				var n = {};
				var i = F(e);
				var r = e.offsetWidth;
				var a = e.offsetHeight;
				var s = i.top;
				var o = i.left;
				var l = t.pageY;
				var u = t.pageX;
				if(t.changedTouches) {
					u = t.changedTouches[0].pageX;
					l = t.changedTouches[0].pageY
				}
				n.y = Math.max(0, Math.min(1, (s - l + a) / a));
				n.x = Math.max(0, Math.min(1, (u - o) / r));
				return n
			}

			function q(e) {
				return v(e) && e.nodeType === 3
			}

			function H(e) {
				while(e.firstChild) {
					e.removeChild(e.firstChild)
				}
				return e
			}

			function G(e) {
				if(typeof e === "function") {
					e = e()
				}
				return(Array.isArray(e) ? e : [e]).map(function(e) {
					if(typeof e === "function") {
						e = e()
					}
					if(S(e) || q(e)) {
						return e
					}
					if(typeof e === "string" && /\S/.test(e)) {
						return t.createTextNode(e)
					}
				}).filter(function(e) {
					return e
				})
			}

			function Y(e, t) {
				G(t).forEach(function(t) {
					return e.appendChild(t)
				});
				return e
			}

			function z(e, t) {
				return Y(H(e), t)
			}

			function K(e) {
				if(e.button === undefined && e.buttons === undefined) {
					return true
				}
				if(e.button === 0 && e.buttons === undefined) {
					return true
				}
				if(e.type === "mouseup" && e.button === 0 && e.buttons === 0) {
					return true
				}
				if(e.button !== 0 || e.buttons !== 1) {
					return false
				}
				return true
			}
			var W = k("querySelector");
			var X = k("querySelectorAll");
			var J = Object.freeze({
				isReal: A,
				isEl: S,
				isInFrame: T,
				createEl: E,
				textContent: P,
				prependTo: C,
				hasClass: w,
				addClass: j,
				removeClass: I,
				toggleClass: L,
				setAttributes: O,
				getAttributes: N,
				getAttribute: x,
				setAttribute: D,
				removeAttribute: R,
				blockTextSelection: U,
				unblockTextSelection: M,
				getBoundingClientRect: B,
				findPosition: F,
				getPointerPosition: V,
				isTextNode: q,
				emptyEl: H,
				normalizeContent: G,
				appendContent: Y,
				insertContent: z,
				isSingleLeftClick: K,
				$: W,
				$$: X
			});
			var Q = false;
			var Z;
			var $ = function e() {
				if(!A() || Z.options.autoSetup === false) {
					return
				}
				var n = Array.prototype.slice.call(t.getElementsByTagName("video"));
				var i = Array.prototype.slice.call(t.getElementsByTagName("audio"));
				var r = Array.prototype.slice.call(t.getElementsByTagName("video-js"));
				var a = n.concat(i, r);
				if(a && a.length > 0) {
					for(var s = 0, o = a.length; s < o; s++) {
						var l = a[s];
						if(l && l.getAttribute) {
							if(l.player === undefined) {
								var u = l.getAttribute("data-setup");
								if(u !== null) {
									Z(l)
								}
							}
						} else {
							ee(1);
							break
						}
					}
				} else if(!Q) {
					ee(1)
				}
			};

			function ee(t, n) {
				if(n) {
					Z = n
				}
				e.setTimeout($, t)
			}

			function te() {
				Q = true;
				e.removeEventListener("load", te)
			}
			if(A()) {
				if(t.readyState === "complete") {
					te()
				} else {
					e.addEventListener("load", te)
				}
			}
			var ne = function e(n) {
				var i = t.createElement("style");
				i.className = n;
				return i
			};
			var ie = function e(t, n) {
				if(t.styleSheet) {
					t.styleSheet.cssText = n
				} else {
					t.textContent = n
				}
			};
			var re = 3;
			var ae = re;

			function se() {
				return ae++
			}
			var oe;
			if(!e.WeakMap) {
				oe = function() {
					function t() {
						this.vdata = "vdata" + Math.floor(e.performance && e.performance.now() || Date.now());
						this.data = {}
					}
					var n = t.prototype;
					n.set = function e(t, n) {
						var i = t[this.vdata] || se();
						if(!t[this.vdata]) {
							t[this.vdata] = i
						}
						this.data[i] = n;
						return this
					};
					n.get = function e(t) {
						var n = t[this.vdata];
						if(n) {
							return this.data[n]
						}
						s("We have no data for this element", t);
						return undefined
					};
					n.has = function e(t) {
						var n = t[this.vdata];
						return n in this.data
					};
					n["delete"] = function e(t) {
						var n = t[this.vdata];
						if(n) {
							delete this.data[n];
							delete t[this.vdata]
						}
					};
					return t
				}()
			}
			var le = e.WeakMap ? new WeakMap : new oe;

			function ue(e, t) {
				if(!le.has(e)) {
					return
				}
				var n = le.get(e);
				if(n.handlers[t].length === 0) {
					delete n.handlers[t];
					if(e.removeEventListener) {
						e.removeEventListener(t, n.dispatcher, false)
					} else if(e.detachEvent) {
						e.detachEvent("on" + t, n.dispatcher)
					}
				}
				if(Object.getOwnPropertyNames(n.handlers).length <= 0) {
					delete n.handlers;
					delete n.dispatcher;
					delete n.disabled
				}
				if(Object.getOwnPropertyNames(n).length === 0) {
					le["delete"](e)
				}
			}

			function ce(e, t, n, i) {
				n.forEach(function(n) {
					e(t, n, i)
				})
			}

			function de(n) {
				if(n.fixed_) {
					return n
				}

				function i() {
					return true
				}

				function r() {
					return false
				}
				if(!n || !n.isPropagationStopped) {
					var a = n || e.event;
					n = {};
					for(var s in a) {
						if(s !== "layerX" && s !== "layerY" && s !== "keyLocation" && s !== "webkitMovementX" && s !== "webkitMovementY") {
							if(!(s === "returnValue" && a.preventDefault)) {
								n[s] = a[s]
							}
						}
					}
					if(!n.target) {
						n.target = n.srcElement || t
					}
					if(!n.relatedTarget) {
						n.relatedTarget = n.fromElement === n.target ? n.toElement : n.fromElement
					}
					n.preventDefault = function() {
						if(a.preventDefault) {
							a.preventDefault()
						}
						n.returnValue = false;
						a.returnValue = false;
						n.defaultPrevented = true
					};
					n.defaultPrevented = false;
					n.stopPropagation = function() {
						if(a.stopPropagation) {
							a.stopPropagation()
						}
						n.cancelBubble = true;
						a.cancelBubble = true;
						n.isPropagationStopped = i
					};
					n.isPropagationStopped = r;
					n.stopImmediatePropagation = function() {
						if(a.stopImmediatePropagation) {
							a.stopImmediatePropagation()
						}
						n.isImmediatePropagationStopped = i;
						n.stopPropagation()
					};
					n.isImmediatePropagationStopped = r;
					if(n.clientX !== null && n.clientX !== undefined) {
						var o = t.documentElement;
						var l = t.body;
						n.pageX = n.clientX + (o && o.scrollLeft || l && l.scrollLeft || 0) - (o && o.clientLeft || l && l.clientLeft || 0);
						n.pageY = n.clientY + (o && o.scrollTop || l && l.scrollTop || 0) - (o && o.clientTop || l && l.clientTop || 0)
					}
					n.which = n.charCode || n.keyCode;
					if(n.button !== null && n.button !== undefined) {
						n.button = n.button & 1 ? 0 : n.button & 4 ? 1 : n.button & 2 ? 2 : 0
					}
				}
				n.fixed_ = true;
				return n
			}
			var fe;
			var pe = function t() {
				if(typeof fe !== "boolean") {
					fe = false;
					try {
						var n = Object.defineProperty({}, "passive", {
							get: function e() {
								fe = true
							}
						});
						e.addEventListener("test", null, n);
						e.removeEventListener("test", null, n)
					} catch(e) {}
				}
				return fe
			};
			var he = ["touchstart", "touchmove"];

			function ve(e, t, n) {
				if(Array.isArray(t)) {
					return ce(ve, e, t, n)
				}
				if(!le.has(e)) {
					le.set(e, {})
				}
				var i = le.get(e);
				if(!i.handlers) {
					i.handlers = {}
				}
				if(!i.handlers[t]) {
					i.handlers[t] = []
				}
				if(!n.guid) {
					n.guid = se()
				}
				i.handlers[t].push(n);
				if(!i.dispatcher) {
					i.disabled = false;
					i.dispatcher = function(t, n) {
						if(i.disabled) {
							return
						}
						t = de(t);
						var r = i.handlers[t.type];
						if(r) {
							var a = r.slice(0);
							for(var o = 0, l = a.length; o < l; o++) {
								if(t.isImmediatePropagationStopped()) {
									break
								} else {
									try {
										a[o].call(e, t, n)
									} catch(e) {
										s.error(e)
									}
								}
							}
						}
					}
				}
				if(i.handlers[t].length === 1) {
					if(e.addEventListener) {
						var r = false;
						if(pe() && he.indexOf(t) > -1) {
							r = {
								passive: true
							}
						}
						e.addEventListener(t, i.dispatcher, r)
					} else if(e.attachEvent) {
						e.attachEvent("on" + t, i.dispatcher)
					}
				}
			}

			function ge(e, t, n) {
				if(!le.has(e)) {
					return
				}
				var i = le.get(e);
				if(!i.handlers) {
					return
				}
				if(Array.isArray(t)) {
					return ce(ge, e, t, n)
				}
				var r = function e(t, n) {
					i.handlers[n] = [];
					ue(t, n)
				};
				if(t === undefined) {
					for(var a in i.handlers) {
						if(Object.prototype.hasOwnProperty.call(i.handlers || {}, a)) {
							r(e, a)
						}
					}
					return
				}
				var s = i.handlers[t];
				if(!s) {
					return
				}
				if(!n) {
					r(e, t);
					return
				}
				if(n.guid) {
					for(var o = 0; o < s.length; o++) {
						if(s[o].guid === n.guid) {
							s.splice(o--, 1)
						}
					}
				}
				ue(e, t)
			}

			function me(e, t, n) {
				var i = le.has(e) ? le.get(e) : {};
				var r = e.parentNode || e.ownerDocument;
				if(typeof t === "string") {
					t = {
						type: t,
						target: e
					}
				} else if(!t.target) {
					t.target = e
				}
				t = de(t);
				if(i.dispatcher) {
					i.dispatcher.call(e, t, n)
				}
				if(r && !t.isPropagationStopped() && t.bubbles === true) {
					me.call(null, r, t, n)
				} else if(!r && !t.defaultPrevented && t.target && t.target[t.type]) {
					if(!le.has(t.target)) {
						le.set(t.target, {})
					}
					var a = le.get(t.target);
					if(t.target[t.type]) {
						a.disabled = true;
						if(typeof t.target[t.type] === "function") {
							t.target[t.type]()
						}
						a.disabled = false
					}
				}
				return !t.defaultPrevented
			}

			function ye(e, t, n) {
				if(Array.isArray(t)) {
					return ce(ye, e, t, n)
				}
				var i = function i() {
					ge(e, t, i);
					n.apply(this, arguments)
				};
				i.guid = n.guid = n.guid || se();
				ve(e, t, i)
			}

			function _e(e, t, n) {
				var i = function i() {
					ge(e, t, i);
					n.apply(this, arguments)
				};
				i.guid = n.guid = n.guid || se();
				ve(e, t, i)
			}
			var be = Object.freeze({
				fixEvent: de,
				on: ve,
				off: ge,
				trigger: me,
				one: ye,
				any: _e
			});
			var Ae = 30;
			var Se = function e(t, n, i) {
				if(!n.guid) {
					n.guid = se()
				}
				var r = n.bind(t);
				r.guid = i ? i + "_" + n.guid : n.guid;
				return r
			};
			var Te = function t(n, i) {
				var r = e.performance.now();
				var a = function t() {
					var a = e.performance.now();
					if(a - r >= i) {
						n.apply(void 0, arguments);
						r = a
					}
				};
				return a
			};
			var ke = function t(n, i, r, a) {
				if(a === void 0) {
					a = e
				}
				var s;
				var o = function e() {
					a.clearTimeout(s);
					s = null
				};
				var l = function e() {
					var t = this;
					var o = arguments;
					var l = function e() {
						s = null;
						l = null;
						if(!r) {
							n.apply(t, o)
						}
					};
					if(!s && r) {
						n.apply(t, o)
					}
					a.clearTimeout(s);
					s = a.setTimeout(l, i)
				};
				l.cancel = o;
				return l
			};
			var Ee = function e() {};
			Ee.prototype.allowedEvents_ = {};
			Ee.prototype.on = function(e, t) {
				var n = this.addEventListener;
				this.addEventListener = function() {};
				ve(this, e, t);
				this.addEventListener = n
			};
			Ee.prototype.addEventListener = Ee.prototype.on;
			Ee.prototype.off = function(e, t) {
				ge(this, e, t)
			};
			Ee.prototype.removeEventListener = Ee.prototype.off;
			Ee.prototype.one = function(e, t) {
				var n = this.addEventListener;
				this.addEventListener = function() {};
				ye(this, e, t);
				this.addEventListener = n
			};
			Ee.prototype.any = function(e, t) {
				var n = this.addEventListener;
				this.addEventListener = function() {};
				_e(this, e, t);
				this.addEventListener = n
			};
			Ee.prototype.trigger = function(e) {
				var t = e.type || e;
				if(typeof e === "string") {
					e = {
						type: t
					}
				}
				e = de(e);
				if(this.allowedEvents_[t] && this["on" + t]) {
					this["on" + t](e)
				}
				me(this, e)
			};
			Ee.prototype.dispatchEvent = Ee.prototype.trigger;
			var Pe;
			Ee.prototype.queueTrigger = function(t) {
				var n = this;
				if(!Pe) {
					Pe = new Map
				}
				var i = t.type || t;
				var r = Pe.get(this);
				if(!r) {
					r = new Map;
					Pe.set(this, r)
				}
				var a = r.get(i);
				r["delete"](i);
				e.clearTimeout(a);
				var s = e.setTimeout(function() {
					if(r.size === 0) {
						r = null;
						Pe["delete"](n)
					}
					n.trigger(t)
				}, 0);
				r.set(i, s)
			};
			var Ce = function e(t) {
				return t instanceof Ee || !!t.eventBusEl_ && ["on", "one", "off", "trigger"].every(function(e) {
					return typeof t[e] === "function"
				})
			};
			var we = function e(t, n) {
				if(Ce(t)) {
					n()
				} else {
					if(!t.eventedCallbacks) {
						t.eventedCallbacks = []
					}
					t.eventedCallbacks.push(n)
				}
			};
			var je = function e(t) {
				return typeof t === "string" && /\S/.test(t) || Array.isArray(t) && !!t.length
			};
			var Ie = function e(t) {
				if(!t.nodeName && !Ce(t)) {
					throw new Error("Invalid target; must be a DOM node or evented object.")
				}
			};
			var Le = function e(t) {
				if(!je(t)) {
					throw new Error("Invalid event type; must be a non-empty string or array.")
				}
			};
			var Oe = function e(t) {
				if(typeof t !== "function") {
					throw new Error("Invalid listener; must be a function.")
				}
			};
			var Ne = function e(t, n) {
				var i = n.length < 3 || n[0] === t || n[0] === t.eventBusEl_;
				var r;
				var a;
				var s;
				if(i) {
					r = t.eventBusEl_;
					if(n.length >= 3) {
						n.shift()
					}
					a = n[0];
					s = n[1]
				} else {
					r = n[0];
					a = n[1];
					s = n[2]
				}
				Ie(r);
				Le(a);
				Oe(s);
				s = Se(t, s);
				return {
					isTargetingSelf: i,
					target: r,
					type: a,
					listener: s
				}
			};
			var xe = function e(t, n, i, r) {
				Ie(t);
				if(t.nodeName) {
					be[n](t, i, r)
				} else {
					t[n](i, r)
				}
			};
			var De = {
				on: function e() {
					var t = this;
					for(var n = arguments.length, i = new Array(n), r = 0; r < n; r++) {
						i[r] = arguments[r]
					}
					var a = Ne(this, i),
						s = a.isTargetingSelf,
						o = a.target,
						l = a.type,
						u = a.listener;
					xe(o, "on", l, u);
					if(!s) {
						var c = function e() {
							return t.off(o, l, u)
						};
						c.guid = u.guid;
						var d = function e() {
							return t.off("dispose", c)
						};
						d.guid = u.guid;
						xe(this, "on", "dispose", c);
						xe(o, "on", "dispose", d)
					}
				},
				one: function e() {
					var t = this;
					for(var n = arguments.length, i = new Array(n), r = 0; r < n; r++) {
						i[r] = arguments[r]
					}
					var a = Ne(this, i),
						s = a.isTargetingSelf,
						o = a.target,
						l = a.type,
						u = a.listener;
					if(s) {
						xe(o, "one", l, u)
					} else {
						var c = function e() {
							t.off(o, l, e);
							for(var n = arguments.length, i = new Array(n), r = 0; r < n; r++) {
								i[r] = arguments[r]
							}
							u.apply(null, i)
						};
						c.guid = u.guid;
						xe(o, "one", l, c)
					}
				},
				any: function e() {
					var t = this;
					for(var n = arguments.length, i = new Array(n), r = 0; r < n; r++) {
						i[r] = arguments[r]
					}
					var a = Ne(this, i),
						s = a.isTargetingSelf,
						o = a.target,
						l = a.type,
						u = a.listener;
					if(s) {
						xe(o, "any", l, u)
					} else {
						var c = function e() {
							t.off(o, l, e);
							for(var n = arguments.length, i = new Array(n), r = 0; r < n; r++) {
								i[r] = arguments[r]
							}
							u.apply(null, i)
						};
						c.guid = u.guid;
						xe(o, "any", l, c)
					}
				},
				off: function e(t, n, i) {
					if(!t || je(t)) {
						ge(this.eventBusEl_, t, n)
					} else {
						var r = t;
						var a = n;
						Ie(r);
						Le(a);
						Oe(i);
						i = Se(this, i);
						this.off("dispose", i);
						if(r.nodeName) {
							ge(r, a, i);
							ge(r, "dispose", i)
						} else if(Ce(r)) {
							r.off(a, i);
							r.off("dispose", i)
						}
					}
				},
				trigger: function e(t, n) {
					return me(this.eventBusEl_, t, n)
				}
			};

			function Re(t, n) {
				if(n === void 0) {
					n = {}
				}
				var i = n,
					r = i.eventBusKey;
				if(r) {
					if(!t[r].nodeName) {
						throw new Error('The eventBusKey "' + r + '" does not refer to an element.')
					}
					t.eventBusEl_ = t[r]
				} else {
					t.eventBusEl_ = E("span", {
						className: "vjs-event-bus"
					})
				}
				h(t, De);
				if(t.eventedCallbacks) {
					t.eventedCallbacks.forEach(function(e) {
						e()
					})
				}
				t.on("dispose", function() {
					t.off();
					e.setTimeout(function() {
						t.eventBusEl_ = null
					}, 0)
				});
				return t
			}
			var Ue = {
				state: {},
				setState: function e(t) {
					var n = this;
					if(typeof t === "function") {
						t = t()
					}
					var i;
					f(t, function(e, t) {
						if(n.state[t] !== e) {
							i = i || {};
							i[t] = {
								from: n.state[t],
								to: e
							}
						}
						n.state[t] = e
					});
					if(i && Ce(this)) {
						this.trigger({
							changes: i,
							type: "statechanged"
						})
					}
					return i
				}
			};

			function Me(e, t) {
				h(e, Ue);
				e.state = h({}, e.state, t);
				if(typeof e.handleStateChanged === "function" && Ce(e)) {
					e.on("statechanged", e.handleStateChanged)
				}
				return e
			}
			var Be = function e(t) {
				if(typeof t !== "string") {
					return t
				}
				return t.replace(/./, function(e) {
					return e.toLowerCase()
				})
			};
			var Fe = function e(t) {
				if(typeof t !== "string") {
					return t
				}
				return t.replace(/./, function(e) {
					return e.toUpperCase()
				})
			};
			var Ve = function e(t, n) {
				return Fe(t) === Fe(n)
			};

			function qe() {
				var e = {};
				for(var t = arguments.length, n = new Array(t), i = 0; i < t; i++) {
					n[i] = arguments[i]
				}
				n.forEach(function(t) {
					if(!t) {
						return
					}
					f(t, function(t, n) {
						if(!g(t)) {
							e[n] = t;
							return
						}
						if(!g(e[n])) {
							e[n] = {}
						}
						e[n] = qe(e[n], t)
					})
				});
				return e
			}
			var He = function() {
				function t(t, n, i) {
					if(!t && this.play) {
						this.player_ = t = this
					} else {
						this.player_ = t
					}
					this.isDisposed_ = false;
					this.parentComponent_ = null;
					this.options_ = qe({}, this.options_);
					n = this.options_ = qe(this.options_, n);
					this.id_ = n.id || n.el && n.el.id;
					if(!this.id_) {
						var r = t && t.id && t.id() || "no_player";
						this.id_ = r + "_component_" + se()
					}
					this.name_ = n.name || null;
					if(n.el) {
						this.el_ = n.el
					} else if(n.createEl !== false) {
						this.el_ = this.createEl()
					}
					if(n.evented !== false) {
						Re(this, {
							eventBusKey: this.el_ ? "el_" : null
						})
					}
					Me(this, this.constructor.defaultState);
					this.children_ = [];
					this.childIndex_ = {};
					this.childNameIndex_ = {};
					var a;
					if(!e.Set) {
						a = function() {
							function e() {
								this.set_ = {}
							}
							var t = e.prototype;
							t.has = function e(t) {
								return t in this.set_
							};
							t["delete"] = function e(t) {
								var n = this.has(t);
								delete this.set_[t];
								return n
							};
							t.add = function e(t) {
								this.set_[t] = 1;
								return this
							};
							t.forEach = function e(t, n) {
								for(var i in this.set_) {
									t.call(n, i, i, this)
								}
							};
							return e
						}()
					}
					this.setTimeoutIds_ = e.Set ? new Set : new a;
					this.setIntervalIds_ = e.Set ? new Set : new a;
					this.rafIds_ = e.Set ? new Set : new a;
					this.clearingTimersOnDispose_ = false;
					if(n.initChildren !== false) {
						this.initChildren()
					}
					this.ready(i);
					if(n.reportTouchActivity !== false) {
						this.enableTouchActivity()
					}
				}
				var n = t.prototype;
				n.dispose = function e() {
					if(this.isDisposed_) {
						return
					}
					this.trigger({
						type: "dispose",
						bubbles: false
					});
					this.isDisposed_ = true;
					if(this.children_) {
						for(var t = this.children_.length - 1; t >= 0; t--) {
							if(this.children_[t].dispose) {
								this.children_[t].dispose()
							}
						}
					}
					this.children_ = null;
					this.childIndex_ = null;
					this.childNameIndex_ = null;
					this.parentComponent_ = null;
					if(this.el_) {
						if(this.el_.parentNode) {
							this.el_.parentNode.removeChild(this.el_)
						}
						if(le.has(this.el_)) {
							le["delete"](this.el_)
						}
						this.el_ = null
					}
					this.player_ = null
				};
				n.isDisposed = function e() {
					return Boolean(this.isDisposed_)
				};
				n.player = function e() {
					return this.player_
				};
				n.options = function e(t) {
					if(!t) {
						return this.options_
					}
					this.options_ = qe(this.options_, t);
					return this.options_
				};
				n.el = function e() {
					return this.el_
				};
				n.createEl = function e(t, n, i) {
					return E(t, n, i)
				};
				n.localize = function e(t, n, i) {
					if(i === void 0) {
						i = t
					}
					var r = this.player_.language && this.player_.language();
					var a = this.player_.languages && this.player_.languages();
					var s = a && a[r];
					var o = r && r.split("-")[0];
					var l = a && a[o];
					var u = i;
					if(s && s[t]) {
						u = s[t]
					} else if(l && l[t]) {
						u = l[t]
					}
					if(n) {
						u = u.replace(/\{(\d+)\}/g, function(e, t) {
							var i = n[t - 1];
							var r = i;
							if(typeof i === "undefined") {
								r = e
							}
							return r
						})
					}
					return u
				};
				n.contentEl = function e() {
					return this.contentEl_ || this.el_
				};
				n.id = function e() {
					return this.id_
				};
				n.name = function e() {
					return this.name_
				};
				n.children = function e() {
					return this.children_
				};
				n.getChildById = function e(t) {
					return this.childIndex_[t]
				};
				n.getChild = function e(t) {
					if(!t) {
						return
					}
					return this.childNameIndex_[t]
				};
				n.addChild = function e(n, i, r) {
					if(i === void 0) {
						i = {}
					}
					if(r === void 0) {
						r = this.children_.length
					}
					var a;
					var s;
					if(typeof n === "string") {
						s = Fe(n);
						var o = i.componentClass || s;
						i.name = s;
						var l = t.getComponent(o);
						if(!l) {
							throw new Error("Component " + o + " does not exist")
						}
						if(typeof l !== "function") {
							return null
						}
						a = new l(this.player_ || this, i)
					} else {
						a = n
					}
					if(a.parentComponent_) {
						a.parentComponent_.removeChild(a)
					}
					this.children_.splice(r, 0, a);
					a.parentComponent_ = this;
					if(typeof a.id === "function") {
						this.childIndex_[a.id()] = a
					}
					s = s || a.name && Fe(a.name());
					if(s) {
						this.childNameIndex_[s] = a;
						this.childNameIndex_[Be(s)] = a
					}
					if(typeof a.el === "function" && a.el()) {
						var u = null;
						if(this.children_[r + 1] && this.children_[r + 1].el_) {
							u = this.children_[r + 1].el_
						}
						this.contentEl().insertBefore(a.el(), u)
					}
					return a
				};
				n.removeChild = function e(t) {
					if(typeof t === "string") {
						t = this.getChild(t)
					}
					if(!t || !this.children_) {
						return
					}
					var n = false;
					for(var i = this.children_.length - 1; i >= 0; i--) {
						if(this.children_[i] === t) {
							n = true;
							this.children_.splice(i, 1);
							break
						}
					}
					if(!n) {
						return
					}
					t.parentComponent_ = null;
					this.childIndex_[t.id()] = null;
					this.childNameIndex_[Fe(t.name())] = null;
					this.childNameIndex_[Be(t.name())] = null;
					var r = t.el();
					if(r && r.parentNode === this.contentEl()) {
						this.contentEl().removeChild(t.el())
					}
				};
				n.initChildren = function e() {
					var n = this;
					var i = this.options_.children;
					if(i) {
						var r = this.options_;
						var a = function e(t) {
							var i = t.name;
							var a = t.opts;
							if(r[i] !== undefined) {
								a = r[i]
							}
							if(a === false) {
								return
							}
							if(a === true) {
								a = {}
							}
							a.playerOptions = n.options_.playerOptions;
							var s = n.addChild(i, a);
							if(s) {
								n[i] = s
							}
						};
						var s;
						var o = t.getComponent("Tech");
						if(Array.isArray(i)) {
							s = i
						} else {
							s = Object.keys(i)
						}
						s.concat(Object.keys(this.options_).filter(function(e) {
							return !s.some(function(t) {
								if(typeof t === "string") {
									return e === t
								}
								return e === t.name
							})
						})).map(function(e) {
							var t;
							var r;
							if(typeof e === "string") {
								t = e;
								r = i[t] || n.options_[t] || {}
							} else {
								t = e.name;
								r = e
							}
							return {
								name: t,
								opts: r
							}
						}).filter(function(e) {
							var n = t.getComponent(e.opts.componentClass || Fe(e.name));
							return n && !o.isTech(n)
						}).forEach(a)
					}
				};
				n.buildCSSClass = function e() {
					return ""
				};
				n.ready = function e(t, n) {
					if(n === void 0) {
						n = false
					}
					if(!t) {
						return
					}
					if(!this.isReady_) {
						this.readyQueue_ = this.readyQueue_ || [];
						this.readyQueue_.push(t);
						return
					}
					if(n) {
						t.call(this)
					} else {
						this.setTimeout(t, 1)
					}
				};
				n.triggerReady = function e() {
					this.isReady_ = true;
					this.setTimeout(function() {
						var e = this.readyQueue_;
						this.readyQueue_ = [];
						if(e && e.length > 0) {
							e.forEach(function(e) {
								e.call(this)
							}, this)
						}
						this.trigger("ready")
					}, 1)
				};
				n.$ = function e(t, n) {
					return W(t, n || this.contentEl())
				};
				n.$$ = function e(t, n) {
					return X(t, n || this.contentEl())
				};
				n.hasClass = function e(t) {
					return w(this.el_, t)
				};
				n.addClass = function e(t) {
					j(this.el_, t)
				};
				n.removeClass = function e(t) {
					I(this.el_, t)
				};
				n.toggleClass = function e(t, n) {
					L(this.el_, t, n)
				};
				n.show = function e() {
					this.removeClass("vjs-hidden")
				};
				n.hide = function e() {
					this.addClass("vjs-hidden")
				};
				n.lockShowing = function e() {
					this.addClass("vjs-lock-showing")
				};
				n.unlockShowing = function e() {
					this.removeClass("vjs-lock-showing")
				};
				n.getAttribute = function e(t) {
					return x(this.el_, t)
				};
				n.setAttribute = function e(t, n) {
					D(this.el_, t, n)
				};
				n.removeAttribute = function e(t) {
					R(this.el_, t)
				};
				n.width = function e(t, n) {
					return this.dimension("width", t, n)
				};
				n.height = function e(t, n) {
					return this.dimension("height", t, n)
				};
				n.dimensions = function e(t, n) {
					this.width(t, true);
					this.height(n)
				};
				n.dimension = function e(t, n, i) {
					if(n !== undefined) {
						if(n === null || n !== n) {
							n = 0
						}
						if(("" + n).indexOf("%") !== -1 || ("" + n).indexOf("px") !== -1) {
							this.el_.style[t] = n
						} else if(n === "auto") {
							this.el_.style[t] = ""
						} else {
							this.el_.style[t] = n + "px"
						}
						if(!i) {
							this.trigger("componentresize")
						}
						return
					}
					if(!this.el_) {
						return 0
					}
					var r = this.el_.style[t];
					var a = r.indexOf("px");
					if(a !== -1) {
						return parseInt(r.slice(0, a), 10)
					}
					return parseInt(this.el_["offset" + Fe(t)], 10)
				};
				n.currentDimension = function e(t) {
					var n = 0;
					if(t !== "width" && t !== "height") {
						throw new Error("currentDimension only accepts width or height value")
					}
					n = m(this.el_, t);
					n = parseFloat(n);
					if(n === 0 || isNaN(n)) {
						var i = "offset" + Fe(t);
						n = this.el_[i]
					}
					return n
				};
				n.currentDimensions = function e() {
					return {
						width: this.currentDimension("width"),
						height: this.currentDimension("height")
					}
				};
				n.currentWidth = function e() {
					return this.currentDimension("width")
				};
				n.currentHeight = function e() {
					return this.currentDimension("height")
				};
				n.focus = function e() {
					this.el_.focus()
				};
				n.blur = function e() {
					this.el_.blur()
				};
				n.handleKeyDown = function e(t) {
					if(this.player_) {
						t.stopPropagation();
						this.player_.handleKeyDown(t)
					}
				};
				n.handleKeyPress = function e(t) {
					this.handleKeyDown(t)
				};
				n.emitTapEvents = function t() {
					var n = 0;
					var i = null;
					var r = 10;
					var a = 200;
					var s;
					this.on("touchstart", function(t) {
						if(t.touches.length === 1) {
							i = {
								pageX: t.touches[0].pageX,
								pageY: t.touches[0].pageY
							};
							n = e.performance.now();
							s = true
						}
					});
					this.on("touchmove", function(e) {
						if(e.touches.length > 1) {
							s = false
						} else if(i) {
							var t = e.touches[0].pageX - i.pageX;
							var n = e.touches[0].pageY - i.pageY;
							var a = Math.sqrt(t * t + n * n);
							if(a > r) {
								s = false
							}
						}
					});
					var o = function e() {
						s = false
					};
					this.on("touchleave", o);
					this.on("touchcancel", o);
					this.on("touchend", function(t) {
						i = null;
						if(s === true) {
							var r = e.performance.now() - n;
							if(r < a) {
								t.preventDefault();
								this.trigger("tap")
							}
						}
					})
				};
				n.enableTouchActivity = function e() {
					if(!this.player() || !this.player().reportUserActivity) {
						return
					}
					var t = Se(this.player(), this.player().reportUserActivity);
					var n;
					this.on("touchstart", function() {
						t();
						this.clearInterval(n);
						n = this.setInterval(t, 250)
					});
					var i = function e(i) {
						t();
						this.clearInterval(n)
					};
					this.on("touchmove", t);
					this.on("touchend", i);
					this.on("touchcancel", i)
				};
				n.setTimeout = function t(n, i) {
					var r = this;
					var a;
					n = Se(this, n);
					this.clearTimersOnDispose_();
					a = e.setTimeout(function() {
						if(r.setTimeoutIds_.has(a)) {
							r.setTimeoutIds_["delete"](a)
						}
						n()
					}, i);
					this.setTimeoutIds_.add(a);
					return a
				};
				n.clearTimeout = function t(n) {
					if(this.setTimeoutIds_.has(n)) {
						this.setTimeoutIds_["delete"](n);
						e.clearTimeout(n)
					}
					return n
				};
				n.setInterval = function t(n, i) {
					n = Se(this, n);
					this.clearTimersOnDispose_();
					var r = e.setInterval(n, i);
					this.setIntervalIds_.add(r);
					return r
				};
				n.clearInterval = function t(n) {
					if(this.setIntervalIds_.has(n)) {
						this.setIntervalIds_["delete"](n);
						e.clearInterval(n)
					}
					return n
				};
				n.requestAnimationFrame = function t(n) {
					var i = this;
					if(!this.supportsRaf_) {
						return this.setTimeout(n, 1e3 / 60)
					}
					this.clearTimersOnDispose_();
					var r;
					n = Se(this, n);
					r = e.requestAnimationFrame(function() {
						if(i.rafIds_.has(r)) {
							i.rafIds_["delete"](r)
						}
						n()
					});
					this.rafIds_.add(r);
					return r
				};
				n.cancelAnimationFrame = function t(n) {
					if(!this.supportsRaf_) {
						return this.clearTimeout(n)
					}
					if(this.rafIds_.has(n)) {
						this.rafIds_["delete"](n);
						e.cancelAnimationFrame(n)
					}
					return n
				};
				n.clearTimersOnDispose_ = function e() {
					var t = this;
					if(this.clearingTimersOnDispose_) {
						return
					}
					this.clearingTimersOnDispose_ = true;
					this.one("dispose", function() {
						[
							["rafIds_", "cancelAnimationFrame"],
							["setTimeoutIds_", "clearTimeout"],
							["setIntervalIds_", "clearInterval"]
						].forEach(function(e) {
							var n = e[0],
								i = e[1];
							t[n].forEach(t[i], t)
						});
						t.clearingTimersOnDispose_ = false
					})
				};
				t.registerComponent = function e(n, i) {
					if(typeof n !== "string" || !n) {
						throw new Error('Illegal component name, "' + n + '"; must be a non-empty string.')
					}
					var r = t.getComponent("Tech");
					var a = r && r.isTech(i);
					var s = t === i || t.prototype.isPrototypeOf(i.prototype);
					if(a || !s) {
						var o;
						if(a) {
							o = "techs must be registered using Tech.registerTech()"
						} else {
							o = "must be a Component subclass"
						}
						throw new Error('Illegal component, "' + n + '"; ' + o + ".")
					}
					n = Fe(n);
					if(!t.components_) {
						t.components_ = {}
					}
					var l = t.getComponent("Player");
					if(n === "Player" && l && l.players) {
						var u = l.players;
						var c = Object.keys(u);
						if(u && c.length > 0 && c.map(function(e) {
								return u[e]
							}).every(Boolean)) {
							throw new Error("Can not register Player component after player has been created.")
						}
					}
					t.components_[n] = i;
					t.components_[Be(n)] = i;
					return i
				};
				t.getComponent = function e(n) {
					if(!n || !t.components_) {
						return
					}
					return t.components_[n]
				};
				return t
			}();
			He.prototype.supportsRaf_ = typeof e.requestAnimationFrame === "function" && typeof e.cancelAnimationFrame === "function";
			He.registerComponent("Component", He);

			function Ge(e) {
				if(e === void 0) {
					throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
				}
				return e
			}
			var Ye = Ge;

			function ze(e, t) {
				e.prototype = Object.create(t.prototype);
				e.prototype.constructor = e;
				e.__proto__ = t
			}
			var Ke = ze;
			var We = e.navigator && e.navigator.userAgent || "";
			var Xe = /AppleWebKit\/([\d.]+)/i.exec(We);
			var Je = Xe ? parseFloat(Xe.pop()) : null;
			var Qe = /iPod/i.test(We);
			var Ze = function() {
				var e = We.match(/OS (\d+)_/i);
				if(e && e[1]) {
					return e[1]
				}
				return null
			}();
			var $e = /Android/i.test(We);
			var et = function() {
				var e = We.match(/Android (\d+)(?:\.(\d+))?(?:\.(\d+))*/i);
				if(!e) {
					return null
				}
				var t = e[1] && parseFloat(e[1]);
				var n = e[2] && parseFloat(e[2]);
				if(t && n) {
					return parseFloat(e[1] + "." + e[2])
				} else if(t) {
					return t
				}
				return null
			}();
			var tt = $e && et < 5 && Je < 537;
			var nt = /Firefox/i.test(We);
			var it = /Edge/i.test(We);
			var rt = !it && (/Chrome/i.test(We) || /CriOS/i.test(We));
			var at = function() {
				var e = We.match(/(Chrome|CriOS)\/(\d+)/);
				if(e && e[2]) {
					return parseFloat(e[2])
				}
				return null
			}();
			var st = function() {
				var e = /MSIE\s(\d+)\.\d/.exec(We);
				var t = e && parseFloat(e[1]);
				if(!t && /Trident\/7.0/i.test(We) && /rv:11.0/.test(We)) {
					t = 11
				}
				return t
			}();
			var ot = /Safari/i.test(We) && !rt && !$e && !it;
			var lt = /Windows/i.test(We);
			var ut = A() && ("ontouchstart" in e || e.navigator.maxTouchPoints || e.DocumentTouch && e.document instanceof e.DocumentTouch);
			var ct = /iPad/i.test(We) || ot && ut && !/iPhone/i.test(We);
			var dt = /iPhone/i.test(We) && !ct;
			var ft = dt || ct || Qe;
			var pt = (ot || ft) && !rt;
			var ht = Object.freeze({
				IS_IPOD: Qe,
				IOS_VERSION: Ze,
				IS_ANDROID: $e,
				ANDROID_VERSION: et,
				IS_NATIVE_ANDROID: tt,
				IS_FIREFOX: nt,
				IS_EDGE: it,
				IS_CHROME: rt,
				CHROME_VERSION: at,
				IE_VERSION: st,
				IS_SAFARI: ot,
				IS_WINDOWS: lt,
				TOUCH_ENABLED: ut,
				IS_IPAD: ct,
				IS_IPHONE: dt,
				IS_IOS: ft,
				IS_ANY_SAFARI: pt
			});

			function vt(e, t, n) {
				if(typeof t !== "number" || t < 0 || t > n) {
					throw new Error("Failed to execute '" + e + "' on 'TimeRanges': The index provided (" + t + ") is non-numeric or out of bounds (0-" + n + ").")
				}
			}

			function gt(e, t, n, i) {
				vt(e, i, n.length - 1);
				return n[i][t]
			}

			function mt(e) {
				if(e === undefined || e.length === 0) {
					return {
						length: 0,
						start: function e() {
							throw new Error("This TimeRanges object is empty")
						},
						end: function e() {
							throw new Error("This TimeRanges object is empty")
						}
					}
				}
				return {
					length: e.length,
					start: gt.bind(null, "start", 0, e),
					end: gt.bind(null, "end", 1, e)
				}
			}

			function yt(e, t) {
				if(Array.isArray(e)) {
					return mt(e)
				} else if(e === undefined || t === undefined) {
					return mt()
				}
				return mt([
					[e, t]
				])
			}

			function _t(e, t) {
				var n = 0;
				var i;
				var r;
				if(!t) {
					return 0
				}
				if(!e || !e.length) {
					e = yt(0, 0)
				}
				for(var a = 0; a < e.length; a++) {
					i = e.start(a);
					r = e.end(a);
					if(r > t) {
						r = t
					}
					n += r - i
				}
				return n / t
			}
			var bt = {
				prefixed: true
			};
			var At = [
				["requestFullscreen", "exitFullscreen", "fullscreenElement", "fullscreenEnabled", "fullscreenchange", "fullscreenerror", "fullscreen"],
				["webkitRequestFullscreen", "webkitExitFullscreen", "webkitFullscreenElement", "webkitFullscreenEnabled", "webkitfullscreenchange", "webkitfullscreenerror", "-webkit-full-screen"],
				["mozRequestFullScreen", "mozCancelFullScreen", "mozFullScreenElement", "mozFullScreenEnabled", "mozfullscreenchange", "mozfullscreenerror", "-moz-full-screen"],
				["msRequestFullscreen", "msExitFullscreen", "msFullscreenElement", "msFullscreenEnabled", "MSFullscreenChange", "MSFullscreenError", "-ms-fullscreen"]
			];
			var St = At[0];
			var Tt;
			for(var kt = 0; kt < At.length; kt++) {
				if(At[kt][1] in t) {
					Tt = At[kt];
					break
				}
			}
			if(Tt) {
				for(var Et = 0; Et < Tt.length; Et++) {
					bt[St[Et]] = Tt[Et]
				}
				bt.prefixed = Tt[0] !== St[0]
			}

			function Pt(e) {
				if(e instanceof Pt) {
					return e
				}
				if(typeof e === "number") {
					this.code = e
				} else if(typeof e === "string") {
					this.message = e
				} else if(v(e)) {
					if(typeof e.code === "number") {
						this.code = e.code
					}
					h(this, e)
				}
				if(!this.message) {
					this.message = Pt.defaultMessages[this.code] || ""
				}
			}
			Pt.prototype.code = 0;
			Pt.prototype.message = "";
			Pt.prototype.status = null;
			Pt.errorTypes = ["MEDIA_ERR_CUSTOM", "MEDIA_ERR_ABORTED", "MEDIA_ERR_NETWORK", "MEDIA_ERR_DECODE", "MEDIA_ERR_SRC_NOT_SUPPORTED", "MEDIA_ERR_ENCRYPTED"];
			Pt.defaultMessages = {
				1: "You aborted the media playback",
				2: "A network error caused the media download to fail part-way.",
				3: "The media playback was aborted due to a corruption problem or because the media used features your browser did not support.",
				4: "The media could not be loaded, either because the server or network failed or because the format is not supported.",
				5: "The media is encrypted and we do not have the keys to decrypt it."
			};
			for(var Ct = 0; Ct < Pt.errorTypes.length; Ct++) {
				Pt[Pt.errorTypes[Ct]] = Ct;
				Pt.prototype[Pt.errorTypes[Ct]] = Ct
			}
			var wt = jt;

			function jt(e, t) {
				var n;
				var i = null;
				try {
					n = JSON.parse(e, t)
				} catch(e) {
					i = e
				}
				return [i, n]
			}

			function It(e) {
				return e !== undefined && e !== null && typeof e.then === "function"
			}

			function Lt(e) {
				if(It(e)) {
					e.then(null, function(e) {})
				}
			}
			var Ot = function e(t) {
				var n = ["kind", "label", "language", "id", "inBandMetadataTrackDispatchType", "mode", "src"].reduce(function(e, n, i) {
					if(t[n]) {
						e[n] = t[n]
					}
					return e
				}, {
					cues: t.cues && Array.prototype.map.call(t.cues, function(e) {
						return {
							startTime: e.startTime,
							endTime: e.endTime,
							text: e.text,
							id: e.id
						}
					})
				});
				return n
			};
			var Nt = function e(t) {
				var n = t.$$("track");
				var i = Array.prototype.map.call(n, function(e) {
					return e.track
				});
				var r = Array.prototype.map.call(n, function(e) {
					var t = Ot(e.track);
					if(e.src) {
						t.src = e.src
					}
					return t
				});
				return r.concat(Array.prototype.filter.call(t.textTracks(), function(e) {
					return i.indexOf(e) === -1
				}).map(Ot))
			};
			var xt = function e(t, n) {
				t.forEach(function(e) {
					var t = n.addRemoteTextTrack(e).track;
					if(!e.src && e.cues) {
						e.cues.forEach(function(e) {
							return t.addCue(e)
						})
					}
				});
				return n.textTracks()
			};
			var Dt = {
				textTracksToJson: Nt,
				jsonToTextTracks: xt,
				trackToJson_: Ot
			};
			var Rt = l(function(e, t) {
				function n(e) {
					if(e && "object" === typeof e) {
						var t = e.which || e.keyCode || e.charCode;
						if(t) e = t
					}
					if("number" === typeof e) return s[e];
					var n = String(e);
					var a = i[n.toLowerCase()];
					if(a) return a;
					var a = r[n.toLowerCase()];
					if(a) return a;
					if(n.length === 1) return n.charCodeAt(0);
					return undefined
				}
				n.isEventKey = function e(t, n) {
					if(t && "object" === typeof t) {
						var a = t.which || t.keyCode || t.charCode;
						if(a === null || a === undefined) {
							return false
						}
						if(typeof n === "string") {
							var s = i[n.toLowerCase()];
							if(s) {
								return s === a
							}
							var s = r[n.toLowerCase()];
							if(s) {
								return s === a
							}
						} else if(typeof n === "number") {
							return n === a
						}
						return false
					}
				};
				t = e.exports = n;
				var i = t.code = t.codes = {
					backspace: 8,
					tab: 9,
					enter: 13,
					shift: 16,
					ctrl: 17,
					alt: 18,
					"pause/break": 19,
					"caps lock": 20,
					esc: 27,
					space: 32,
					"page up": 33,
					"page down": 34,
					end: 35,
					home: 36,
					left: 37,
					up: 38,
					right: 39,
					down: 40,
					insert: 45,
					delete: 46,
					command: 91,
					"left command": 91,
					"right command": 93,
					"numpad *": 106,
					"numpad +": 107,
					"numpad -": 109,
					"numpad .": 110,
					"numpad /": 111,
					"num lock": 144,
					"scroll lock": 145,
					"my computer": 182,
					"my calculator": 183,
					";": 186,
					"=": 187,
					",": 188,
					"-": 189,
					".": 190,
					"/": 191,
					"`": 192,
					"[": 219,
					"\\": 220,
					"]": 221,
					"'": 222
				};
				var r = t.aliases = {
					windows: 91,
					"\u21e7": 16,
					"\u2325": 18,
					"\u2303": 17,
					"\u2318": 91,
					ctl: 17,
					control: 17,
					option: 18,
					pause: 19,
					break: 19,
					caps: 20,
					return: 13,
					escape: 27,
					spc: 32,
					spacebar: 32,
					pgup: 33,
					pgdn: 34,
					ins: 45,
					del: 46,
					cmd: 91
				};
				for(a = 97; a < 123; a++) {
					i[String.fromCharCode(a)] = a - 32
				}
				for(var a = 48; a < 58; a++) {
					i[a - 48] = a
				}
				for(a = 1; a < 13; a++) {
					i["f" + a] = a + 111
				}
				for(a = 0; a < 10; a++) {
					i["numpad " + a] = a + 96
				}
				var s = t.names = t.title = {};
				for(a in i) {
					s[i[a]] = a
				}
				for(var o in r) {
					i[o] = r[o]
				}
			});
			var Ut = Rt.code;
			var Mt = Rt.codes;
			var Bt = Rt.aliases;
			var Ft = Rt.names;
			var Vt = Rt.title;
			var qt = "vjs-modal-dialog";
			var Ht = function(n) {
				Ke(i, n);

				function i(e, t) {
					var i;
					i = n.call(this, e, t) || this;
					i.opened_ = i.hasBeenOpened_ = i.hasBeenFilled_ = false;
					i.closeable(!i.options_.uncloseable);
					i.content(i.options_.content);
					i.contentEl_ = E("div", {
						className: qt + "-content"
					}, {
						role: "document"
					});
					i.descEl_ = E("p", {
						className: qt + "-description vjs-control-text",
						id: i.el().getAttribute("aria-describedby")
					});
					P(i.descEl_, i.description());
					i.el_.appendChild(i.descEl_);
					i.el_.appendChild(i.contentEl_);
					return i
				}
				var r = i.prototype;
				r.createEl = function e() {
					return n.prototype.createEl.call(this, "div", {
						className: this.buildCSSClass(),
						tabIndex: -1
					}, {
						"aria-describedby": this.id() + "_description",
						"aria-hidden": "true",
						"aria-label": this.label(),
						role: "dialog"
					})
				};
				r.dispose = function e() {
					this.contentEl_ = null;
					this.descEl_ = null;
					this.previouslyActiveEl_ = null;
					n.prototype.dispose.call(this)
				};
				r.buildCSSClass = function e() {
					return qt + " vjs-hidden " + n.prototype.buildCSSClass.call(this)
				};
				r.label = function e() {
					return this.localize(this.options_.label || "Modal Window")
				};
				r.description = function e() {
					var t = this.options_.description || this.localize("This is a modal window.");
					if(this.closeable()) {
						t += " " + this.localize("This modal can be closed by pressing the Escape key or activating the close button.")
					}
					return t
				};
				r.open = function e() {
					if(!this.opened_) {
						var t = this.player();
						this.trigger("beforemodalopen");
						this.opened_ = true;
						if(this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {
							this.fill()
						}
						this.wasPlaying_ = !t.paused();
						if(this.options_.pauseOnOpen && this.wasPlaying_) {
							t.pause()
						}
						this.on("keydown", this.handleKeyDown);
						this.hadControls_ = t.controls();
						t.controls(false);
						this.show();
						this.conditionalFocus_();
						this.el().setAttribute("aria-hidden", "false");
						this.trigger("modalopen");
						this.hasBeenOpened_ = true
					}
				};
				r.opened = function e(t) {
					if(typeof t === "boolean") {
						this[t ? "open" : "close"]()
					}
					return this.opened_
				};
				r.close = function e() {
					if(!this.opened_) {
						return
					}
					var t = this.player();
					this.trigger("beforemodalclose");
					this.opened_ = false;
					if(this.wasPlaying_ && this.options_.pauseOnOpen) {
						t.play()
					}
					this.off("keydown", this.handleKeyDown);
					if(this.hadControls_) {
						t.controls(true)
					}
					this.hide();
					this.el().setAttribute("aria-hidden", "true");
					this.trigger("modalclose");
					this.conditionalBlur_();
					if(this.options_.temporary) {
						this.dispose()
					}
				};
				r.closeable = function e(t) {
					if(typeof t === "boolean") {
						var e = this.closeable_ = !!t;
						var n = this.getChild("closeButton");
						if(e && !n) {
							var i = this.contentEl_;
							this.contentEl_ = this.el_;
							n = this.addChild("closeButton", {
								controlText: "Close Modal Dialog"
							});
							this.contentEl_ = i;
							this.on(n, "close", this.close)
						}
						if(!e && n) {
							this.off(n, "close", this.close);
							this.removeChild(n);
							n.dispose()
						}
					}
					return this.closeable_
				};
				r.fill = function e() {
					this.fillWith(this.content())
				};
				r.fillWith = function e(t) {
					var n = this.contentEl();
					var i = n.parentNode;
					var r = n.nextSibling;
					this.trigger("beforemodalfill");
					this.hasBeenFilled_ = true;
					i.removeChild(n);
					this.empty();
					z(n, t);
					this.trigger("modalfill");
					if(r) {
						i.insertBefore(n, r)
					} else {
						i.appendChild(n)
					}
					var a = this.getChild("closeButton");
					if(a) {
						i.appendChild(a.el_)
					}
				};
				r.empty = function e() {
					this.trigger("beforemodalempty");
					H(this.contentEl());
					this.trigger("modalempty")
				};
				r.content = function e(t) {
					if(typeof t !== "undefined") {
						this.content_ = t
					}
					return this.content_
				};
				r.conditionalFocus_ = function e() {
					var n = t.activeElement;
					var i = this.player_.el_;
					this.previouslyActiveEl_ = null;
					if(i.contains(n) || i === n) {
						this.previouslyActiveEl_ = n;
						this.focus()
					}
				};
				r.conditionalBlur_ = function e() {
					if(this.previouslyActiveEl_) {
						this.previouslyActiveEl_.focus();
						this.previouslyActiveEl_ = null
					}
				};
				r.handleKeyDown = function e(n) {
					n.stopPropagation();
					if(Rt.isEventKey(n, "Escape") && this.closeable()) {
						n.preventDefault();
						this.close();
						return
					}
					if(!Rt.isEventKey(n, "Tab")) {
						return
					}
					var i = this.focusableEls_();
					var r = this.el_.querySelector(":focus");
					var a;
					for(var s = 0; s < i.length; s++) {
						if(r === i[s]) {
							a = s;
							break
						}
					}
					if(t.activeElement === this.el_) {
						a = 0
					}
					if(n.shiftKey && a === 0) {
						i[i.length - 1].focus();
						n.preventDefault()
					} else if(!n.shiftKey && a === i.length - 1) {
						i[0].focus();
						n.preventDefault()
					}
				};
				r.focusableEls_ = function t() {
					var n = this.el_.querySelectorAll("*");
					return Array.prototype.filter.call(n, function(t) {
						return(t instanceof e.HTMLAnchorElement || t instanceof e.HTMLAreaElement) && t.hasAttribute("href") || (t instanceof e.HTMLInputElement || t instanceof e.HTMLSelectElement || t instanceof e.HTMLTextAreaElement || t instanceof e.HTMLButtonElement) && !t.hasAttribute("disabled") || t instanceof e.HTMLIFrameElement || t instanceof e.HTMLObjectElement || t instanceof e.HTMLEmbedElement || t.hasAttribute("tabindex") && t.getAttribute("tabindex") !== -1 || t.hasAttribute("contenteditable")
					})
				};
				return i
			}(He);
			Ht.prototype.options_ = {
				pauseOnOpen: true,
				temporary: true
			};
			He.registerComponent("ModalDialog", Ht);
			var Gt = function(e) {
				Ke(t, e);

				function t(t) {
					var n;
					if(t === void 0) {
						t = []
					}
					n = e.call(this) || this;
					n.tracks_ = [];
					Object.defineProperty(Ye(n), "length", {
						get: function e() {
							return this.tracks_.length
						}
					});
					for(var i = 0; i < t.length; i++) {
						n.addTrack(t[i])
					}
					return n
				}
				var n = t.prototype;
				n.addTrack = function e(t) {
					var n = this.tracks_.length;
					if(!("" + n in this)) {
						Object.defineProperty(this, n, {
							get: function e() {
								return this.tracks_[n]
							}
						})
					}
					if(this.tracks_.indexOf(t) === -1) {
						this.tracks_.push(t);
						this.trigger({
							track: t,
							type: "addtrack",
							target: this
						})
					}
				};
				n.removeTrack = function e(t) {
					var n;
					for(var i = 0, r = this.length; i < r; i++) {
						if(this[i] === t) {
							n = this[i];
							if(n.off) {
								n.off()
							}
							this.tracks_.splice(i, 1);
							break
						}
					}
					if(!n) {
						return
					}
					this.trigger({
						track: n,
						type: "removetrack",
						target: this
					})
				};
				n.getTrackById = function e(t) {
					var n = null;
					for(var i = 0, r = this.length; i < r; i++) {
						var a = this[i];
						if(a.id === t) {
							n = a;
							break
						}
					}
					return n
				};
				return t
			}(Ee);
			Gt.prototype.allowedEvents_ = {
				change: "change",
				addtrack: "addtrack",
				removetrack: "removetrack"
			};
			for(var Yt in Gt.prototype.allowedEvents_) {
				Gt.prototype["on" + Yt] = null
			}
			var zt = function e(t, n) {
				for(var i = 0; i < t.length; i++) {
					if(!Object.keys(t[i]).length || n.id === t[i].id) {
						continue
					}
					t[i].enabled = false
				}
			};
			var Kt = function(e) {
				Ke(t, e);

				function t(t) {
					var n;
					if(t === void 0) {
						t = []
					}
					for(var i = t.length - 1; i >= 0; i--) {
						if(t[i].enabled) {
							zt(t, t[i]);
							break
						}
					}
					n = e.call(this, t) || this;
					n.changing_ = false;
					return n
				}
				var n = t.prototype;
				n.addTrack = function t(n) {
					var i = this;
					if(n.enabled) {
						zt(this, n)
					}
					e.prototype.addTrack.call(this, n);
					if(!n.addEventListener) {
						return
					}
					n.enabledChange_ = function() {
						if(i.changing_) {
							return
						}
						i.changing_ = true;
						zt(i, n);
						i.changing_ = false;
						i.trigger("change")
					};
					n.addEventListener("enabledchange", n.enabledChange_)
				};
				n.removeTrack = function t(n) {
					e.prototype.removeTrack.call(this, n);
					if(n.removeEventListener && n.enabledChange_) {
						n.removeEventListener("enabledchange", n.enabledChange_);
						n.enabledChange_ = null
					}
				};
				return t
			}(Gt);
			var Wt = function e(t, n) {
				for(var i = 0; i < t.length; i++) {
					if(!Object.keys(t[i]).length || n.id === t[i].id) {
						continue
					}
					t[i].selected = false
				}
			};
			var Xt = function(e) {
				Ke(t, e);

				function t(t) {
					var n;
					if(t === void 0) {
						t = []
					}
					for(var i = t.length - 1; i >= 0; i--) {
						if(t[i].selected) {
							Wt(t, t[i]);
							break
						}
					}
					n = e.call(this, t) || this;
					n.changing_ = false;
					Object.defineProperty(Ye(n), "selectedIndex", {
						get: function e() {
							for(var t = 0; t < this.length; t++) {
								if(this[t].selected) {
									return t
								}
							}
							return -1
						},
						set: function e() {}
					});
					return n
				}
				var n = t.prototype;
				n.addTrack = function t(n) {
					var i = this;
					if(n.selected) {
						Wt(this, n)
					}
					e.prototype.addTrack.call(this, n);
					if(!n.addEventListener) {
						return
					}
					n.selectedChange_ = function() {
						if(i.changing_) {
							return
						}
						i.changing_ = true;
						Wt(i, n);
						i.changing_ = false;
						i.trigger("change")
					};
					n.addEventListener("selectedchange", n.selectedChange_)
				};
				n.removeTrack = function t(n) {
					e.prototype.removeTrack.call(this, n);
					if(n.removeEventListener && n.selectedChange_) {
						n.removeEventListener("selectedchange", n.selectedChange_);
						n.selectedChange_ = null
					}
				};
				return t
			}(Gt);
			var Jt = function(e) {
				Ke(t, e);

				function t() {
					return e.apply(this, arguments) || this
				}
				var n = t.prototype;
				n.addTrack = function t(n) {
					var i = this;
					e.prototype.addTrack.call(this, n);
					if(!this.queueChange_) {
						this.queueChange_ = function() {
							return i.queueTrigger("change")
						}
					}
					if(!this.triggerSelectedlanguagechange) {
						this.triggerSelectedlanguagechange_ = function() {
							return i.trigger("selectedlanguagechange")
						}
					}
					n.addEventListener("modechange", this.queueChange_);
					var r = ["metadata", "chapters"];
					if(r.indexOf(n.kind) === -1) {
						n.addEventListener("modechange", this.triggerSelectedlanguagechange_)
					}
				};
				n.removeTrack = function t(n) {
					e.prototype.removeTrack.call(this, n);
					if(n.removeEventListener) {
						if(this.queueChange_) {
							n.removeEventListener("modechange", this.queueChange_)
						}
						if(this.selectedlanguagechange_) {
							n.removeEventListener("modechange", this.triggerSelectedlanguagechange_)
						}
					}
				};
				return t
			}(Gt);
			var Qt = function() {
				function e(e) {
					if(e === void 0) {
						e = []
					}
					this.trackElements_ = [];
					Object.defineProperty(this, "length", {
						get: function e() {
							return this.trackElements_.length
						}
					});
					for(var t = 0, n = e.length; t < n; t++) {
						this.addTrackElement_(e[t])
					}
				}
				var t = e.prototype;
				t.addTrackElement_ = function e(t) {
					var n = this.trackElements_.length;
					if(!("" + n in this)) {
						Object.defineProperty(this, n, {
							get: function e() {
								return this.trackElements_[n]
							}
						})
					}
					if(this.trackElements_.indexOf(t) === -1) {
						this.trackElements_.push(t)
					}
				};
				t.getTrackElementByTrack_ = function e(t) {
					var n;
					for(var i = 0, r = this.trackElements_.length; i < r; i++) {
						if(t === this.trackElements_[i].track) {
							n = this.trackElements_[i];
							break
						}
					}
					return n
				};
				t.removeTrackElement_ = function e(t) {
					for(var n = 0, i = this.trackElements_.length; n < i; n++) {
						if(t === this.trackElements_[n]) {
							if(this.trackElements_[n].track && typeof this.trackElements_[n].track.off === "function") {
								this.trackElements_[n].track.off()
							}
							if(typeof this.trackElements_[n].off === "function") {
								this.trackElements_[n].off()
							}
							this.trackElements_.splice(n, 1);
							break
						}
					}
				};
				return e
			}();
			var Zt = function() {
				function e(t) {
					e.prototype.setCues_.call(this, t);
					Object.defineProperty(this, "length", {
						get: function e() {
							return this.length_
						}
					})
				}
				var t = e.prototype;
				t.setCues_ = function e(t) {
					var n = this.length || 0;
					var i = 0;
					var r = t.length;
					this.cues_ = t;
					this.length_ = t.length;
					var a = function e(t) {
						if(!("" + t in this)) {
							Object.defineProperty(this, "" + t, {
								get: function e() {
									return this.cues_[t]
								}
							})
						}
					};
					if(n < r) {
						i = n;
						for(; i < r; i++) {
							a.call(this, i)
						}
					}
				};
				t.getCueById = function e(t) {
					var n = null;
					for(var i = 0, r = this.length; i < r; i++) {
						var a = this[i];
						if(a.id === t) {
							n = a;
							break
						}
					}
					return n
				};
				return e
			}();
			var $t = {
				alternative: "alternative",
				captions: "captions",
				main: "main",
				sign: "sign",
				subtitles: "subtitles",
				commentary: "commentary"
			};
			var en = {
				alternative: "alternative",
				descriptions: "descriptions",
				main: "main",
				"main-desc": "main-desc",
				translation: "translation",
				commentary: "commentary"
			};
			var tn = {
				subtitles: "subtitles",
				captions: "captions",
				descriptions: "descriptions",
				chapters: "chapters",
				metadata: "metadata"
			};
			var nn = {
				disabled: "disabled",
				hidden: "hidden",
				showing: "showing"
			};
			var rn = function(e) {
				Ke(t, e);

				function t(t) {
					var n;
					if(t === void 0) {
						t = {}
					}
					n = e.call(this) || this;
					var i = {
						id: t.id || "vjs_track_" + se(),
						kind: t.kind || "",
						label: t.label || "",
						language: t.language || ""
					};
					var r = function e(t) {
						Object.defineProperty(Ye(n), t, {
							get: function e() {
								return i[t]
							},
							set: function e() {}
						})
					};
					for(var a in i) {
						r(a)
					}
					return n
				}
				return t
			}(Ee);
			var an = function n(i) {
				var r = ["protocol", "hostname", "port", "pathname", "search", "hash", "host"];
				var a = t.createElement("a");
				a.href = i;
				var s = a.host === "" && a.protocol !== "file:";
				var o;
				if(s) {
					o = t.createElement("div");
					o.innerHTML = '<a href="' + i + '"></a>';
					a = o.firstChild;
					o.setAttribute("style", "display:none; position:absolute;");
					t.body.appendChild(o)
				}
				var l = {};
				for(var u = 0; u < r.length; u++) {
					l[r[u]] = a[r[u]]
				}
				if(l.protocol === "http:") {
					l.host = l.host.replace(/:80$/, "")
				}
				if(l.protocol === "https:") {
					l.host = l.host.replace(/:443$/, "")
				}
				if(!l.protocol) {
					l.protocol = e.location.protocol
				}
				if(s) {
					t.body.removeChild(o)
				}
				return l
			};
			var sn = function e(n) {
				if(!n.match(/^https?:\/\//)) {
					var i = t.createElement("div");
					i.innerHTML = '<a href="' + n + '">x</a>';
					n = i.firstChild.href
				}
				return n
			};
			var on = function e(t) {
				if(typeof t === "string") {
					var n = /^(\/?)([\s\S]*?)((?:\.{1,2}|[^\/]+?)(\.([^\.\/\?]+)))(?:[\/]*|[\?].*)$/;
					var i = n.exec(t);
					if(i) {
						return i.pop().toLowerCase()
					}
				}
				return ""
			};
			var ln = function t(n, i) {
				if(i === void 0) {
					i = e.location
				}
				var r = an(n);
				var a = r.protocol === ":" ? i.protocol : r.protocol;
				var s = a + r.host !== i.protocol + i.host;
				return s
			};
			var un = Object.freeze({
				parseUrl: an,
				getAbsoluteURL: sn,
				getFileExtension: on,
				isCrossOrigin: ln
			});
			var cn = fn;
			var dn = Object.prototype.toString;

			function fn(e) {
				var t = dn.call(e);
				return t === "[object Function]" || typeof e === "function" && t !== "[object RegExp]" || typeof window !== "undefined" && (e === window.setTimeout || e === window.alert || e === window.confirm || e === window.prompt)
			}
			var pn = function e(t) {
				var n = {};
				if(!t) {
					return n
				}
				t.trim().split("\n").forEach(function(e) {
					var t = e.indexOf(":");
					var i = e.slice(0, t).trim().toLowerCase();
					var r = e.slice(t + 1).trim();
					if(typeof n[i] === "undefined") {
						n[i] = r
					} else if(Array.isArray(n[i])) {
						n[i].push(r)
					} else {
						n[i] = [n[i], r]
					}
				});
				return n
			};
			var hn = _n;
			var vn = _n;
			_n.XMLHttpRequest = e.XMLHttpRequest || Sn;
			_n.XDomainRequest = "withCredentials" in new _n.XMLHttpRequest ? _n.XMLHttpRequest : e.XDomainRequest;
			gn(["get", "put", "post", "patch", "head", "delete"], function(e) {
				_n[e === "delete" ? "del" : e] = function(t, n, i) {
					n = yn(t, n, i);
					n.method = e.toUpperCase();
					return bn(n)
				}
			});

			function gn(e, t) {
				for(var n = 0; n < e.length; n++) {
					t(e[n])
				}
			}

			function mn(e) {
				for(var t in e) {
					if(e.hasOwnProperty(t)) return false
				}
				return true
			}

			function yn(e, t, n) {
				var i = e;
				if(cn(t)) {
					n = t;
					if(typeof e === "string") {
						i = {
							uri: e
						}
					}
				} else {
					i = u({}, t, {
						uri: e
					})
				}
				i.callback = n;
				return i
			}

			function _n(e, t, n) {
				t = yn(e, t, n);
				return bn(t)
			}

			function bn(e) {
				if(typeof e.callback === "undefined") {
					throw new Error("callback argument missing")
				}
				var t = false;
				var n = function n(i, r, a) {
					if(!t) {
						t = true;
						e.callback(i, r, a)
					}
				};

				function i() {
					if(o.readyState === 4) {
						setTimeout(s, 0)
					}
				}

				function r() {
					var e = undefined;
					if(o.response) {
						e = o.response
					} else {
						e = o.responseText || An(o)
					}
					if(v) {
						try {
							e = JSON.parse(e)
						} catch(e) {}
					}
					return e
				}

				function a(e) {
					clearTimeout(g);
					if(!(e instanceof Error)) {
						e = new Error("" + (e || "Unknown XMLHttpRequest Error"))
					}
					e.statusCode = 0;
					return n(e, m)
				}

				function s() {
					if(u) return;
					var t;
					clearTimeout(g);
					if(e.useXDR && o.status === undefined) {
						t = 200
					} else {
						t = o.status === 1223 ? 204 : o.status
					}
					var i = m;
					var a = null;
					if(t !== 0) {
						i = {
							body: r(),
							statusCode: t,
							method: d,
							headers: {},
							url: c,
							rawRequest: o
						};
						if(o.getAllResponseHeaders) {
							i.headers = pn(o.getAllResponseHeaders())
						}
					} else {
						a = new Error("Internal XMLHttpRequest Error")
					}
					return n(a, i, i.body)
				}
				var o = e.xhr || null;
				if(!o) {
					if(e.cors || e.useXDR) {
						o = new _n.XDomainRequest
					} else {
						o = new _n.XMLHttpRequest
					}
				}
				var l;
				var u;
				var c = o.url = e.uri || e.url;
				var d = o.method = e.method || "GET";
				var f = e.body || e.data;
				var p = o.headers = e.headers || {};
				var h = !!e.sync;
				var v = false;
				var g;
				var m = {
					body: undefined,
					headers: {},
					statusCode: 0,
					method: d,
					url: c,
					rawRequest: o
				};
				if("json" in e && e.json !== false) {
					v = true;
					p["accept"] || p["Accept"] || (p["Accept"] = "application/json");
					if(d !== "GET" && d !== "HEAD") {
						p["content-type"] || p["Content-Type"] || (p["Content-Type"] = "application/json");
						f = JSON.stringify(e.json === true ? f : e.json)
					}
				}
				o.onreadystatechange = i;
				o.onload = s;
				o.onerror = a;
				o.onprogress = function() {};
				o.onabort = function() {
					u = true
				};
				o.ontimeout = a;
				o.open(d, c, !h, e.username, e.password);
				if(!h) {
					o.withCredentials = !!e.withCredentials
				}
				if(!h && e.timeout > 0) {
					g = setTimeout(function() {
						if(u) return;
						u = true;
						o.abort("timeout");
						var e = new Error("XMLHttpRequest timeout");
						e.code = "ETIMEDOUT";
						a(e)
					}, e.timeout)
				}
				if(o.setRequestHeader) {
					for(l in p) {
						if(p.hasOwnProperty(l)) {
							o.setRequestHeader(l, p[l])
						}
					}
				} else if(e.headers && !mn(e.headers)) {
					throw new Error("Headers cannot be set on an XDomainRequest object")
				}
				if("responseType" in e) {
					o.responseType = e.responseType
				}
				if("beforeSend" in e && typeof e.beforeSend === "function") {
					e.beforeSend(o)
				}
				o.send(f || null);
				return o
			}

			function An(e) {
				try {
					if(e.responseType === "document") {
						return e.responseXML
					}
					var t = e.responseXML && e.responseXML.documentElement.nodeName === "parsererror";
					if(e.responseType === "" && !t) {
						return e.responseXML
					}
				} catch(e) {}
				return null
			}

			function Sn() {}
			hn["default"] = vn;
			var Tn = function t(n, i) {
				var r = new e.WebVTT.Parser(e, e.vttjs, e.WebVTT.StringDecoder());
				var a = [];
				r.oncue = function(e) {
					i.addCue(e)
				};
				r.onparsingerror = function(e) {
					a.push(e)
				};
				r.onflush = function() {
					i.trigger({
						type: "loadeddata",
						target: i
					})
				};
				r.parse(n);
				if(a.length > 0) {
					if(e.console && e.console.groupCollapsed) {
						e.console.groupCollapsed("Text Track parsing errors for " + i.src)
					}
					a.forEach(function(e) {
						return s.error(e)
					});
					if(e.console && e.console.groupEnd) {
						e.console.groupEnd()
					}
				}
				r.flush()
			};
			var kn = function t(n, i) {
				var r = {
					uri: n
				};
				var a = ln(n);
				if(a) {
					r.cors = a
				}
				hn(r, Se(this, function(t, n, r) {
					if(t) {
						return s.error(t, n)
					}
					i.loaded_ = true;
					if(typeof e.WebVTT !== "function") {
						if(i.tech_) {
							i.tech_.any(["vttjsloaded", "vttjserror"], function(e) {
								if(e.type === "vttjserror") {
									s.error("vttjs failed to load, stopping trying to process " + i.src);
									return
								}
								return Tn(r, i)
							})
						}
					} else {
						Tn(r, i)
					}
				}))
			};
			var En = function(t) {
				Ke(n, t);

				function n(e) {
					var n;
					if(e === void 0) {
						e = {}
					}
					if(!e.tech) {
						throw new Error("A tech was not provided.")
					}
					var i = qe(e, {
						kind: tn[e.kind] || "subtitles",
						language: e.language || e.srclang || ""
					});
					var r = nn[i.mode] || "disabled";
					var a = i["default"];
					if(i.kind === "metadata" || i.kind === "chapters") {
						r = "hidden"
					}
					n = t.call(this, i) || this;
					n.tech_ = i.tech;
					n.cues_ = [];
					n.activeCues_ = [];
					n.preload_ = n.tech_.preloadTextTracks !== false;
					var s = new Zt(n.cues_);
					var o = new Zt(n.activeCues_);
					var l = false;
					var u = Se(Ye(n), function() {
						this.activeCues = this.activeCues;
						if(l) {
							this.trigger("cuechange");
							l = false
						}
					});
					if(r !== "disabled") {
						n.tech_.ready(function() {
							n.tech_.on("timeupdate", u)
						}, true)
					}
					Object.defineProperties(Ye(n), {
						default: {
							get: function e() {
								return a
							},
							set: function e() {}
						},
						mode: {
							get: function e() {
								return r
							},
							set: function e(t) {
								var n = this;
								if(!nn[t]) {
									return
								}
								r = t;
								if(!this.preload_ && r !== "disabled" && this.cues.length === 0) {
									kn(this.src, this)
								}
								if(r !== "disabled") {
									this.tech_.ready(function() {
										n.tech_.on("timeupdate", u)
									}, true)
								} else {
									this.tech_.off("timeupdate", u)
								}
								this.trigger("modechange")
							}
						},
						cues: {
							get: function e() {
								if(!this.loaded_) {
									return null
								}
								return s
							},
							set: function e() {}
						},
						activeCues: {
							get: function e() {
								if(!this.loaded_) {
									return null
								}
								if(this.cues.length === 0) {
									return o
								}
								var t = this.tech_.currentTime();
								var n = [];
								for(var i = 0, r = this.cues.length; i < r; i++) {
									var a = this.cues[i];
									if(a.startTime <= t && a.endTime >= t) {
										n.push(a)
									} else if(a.startTime === a.endTime && a.startTime <= t && a.startTime + .5 >= t) {
										n.push(a)
									}
								}
								l = false;
								if(n.length !== this.activeCues_.length) {
									l = true
								} else {
									for(var s = 0; s < n.length; s++) {
										if(this.activeCues_.indexOf(n[s]) === -1) {
											l = true
										}
									}
								}
								this.activeCues_ = n;
								o.setCues_(this.activeCues_);
								return o
							},
							set: function e() {}
						}
					});
					if(i.src) {
						n.src = i.src;
						if(!n.preload_) {
							n.loaded_ = true
						}
						if(n.preload_ || a || i.kind !== "subtitles" && i.kind !== "captions") {
							kn(n.src, Ye(n))
						}
					} else {
						n.loaded_ = true
					}
					return n
				}
				var i = n.prototype;
				i.addCue = function t(n) {
					var i = n;
					if(e.vttjs && !(n instanceof e.vttjs.VTTCue)) {
						i = new e.vttjs.VTTCue(n.startTime, n.endTime, n.text);
						for(var r in n) {
							if(!(r in i)) {
								i[r] = n[r]
							}
						}
						i.id = n.id;
						i.originalCue_ = n
					}
					var a = this.tech_.textTracks();
					for(var s = 0; s < a.length; s++) {
						if(a[s] !== this) {
							a[s].removeCue(i)
						}
					}
					this.cues_.push(i);
					this.cues.setCues_(this.cues_)
				};
				i.removeCue = function e(t) {
					var n = this.cues_.length;
					while(n--) {
						var i = this.cues_[n];
						if(i === t || i.originalCue_ && i.originalCue_ === t) {
							this.cues_.splice(n, 1);
							this.cues.setCues_(this.cues_);
							break
						}
					}
				};
				return n
			}(rn);
			En.prototype.allowedEvents_ = {
				cuechange: "cuechange"
			};
			var Pn = function(e) {
				Ke(t, e);

				function t(t) {
					var n;
					if(t === void 0) {
						t = {}
					}
					var i = qe(t, {
						kind: en[t.kind] || ""
					});
					n = e.call(this, i) || this;
					var r = false;
					Object.defineProperty(Ye(n), "enabled", {
						get: function e() {
							return r
						},
						set: function e(t) {
							if(typeof t !== "boolean" || t === r) {
								return
							}
							r = t;
							this.trigger("enabledchange")
						}
					});
					if(i.enabled) {
						n.enabled = i.enabled
					}
					n.loaded_ = true;
					return n
				}
				return t
			}(rn);
			var Cn = function(e) {
				Ke(t, e);

				function t(t) {
					var n;
					if(t === void 0) {
						t = {}
					}
					var i = qe(t, {
						kind: $t[t.kind] || ""
					});
					n = e.call(this, i) || this;
					var r = false;
					Object.defineProperty(Ye(n), "selected", {
						get: function e() {
							return r
						},
						set: function e(t) {
							if(typeof t !== "boolean" || t === r) {
								return
							}
							r = t;
							this.trigger("selectedchange")
						}
					});
					if(i.selected) {
						n.selected = i.selected
					}
					return n
				}
				return t
			}(rn);
			var wn = 0;
			var jn = 1;
			var In = 2;
			var Ln = 3;
			var On = function(e) {
				Ke(t, e);

				function t(t) {
					var n;
					if(t === void 0) {
						t = {}
					}
					n = e.call(this) || this;
					var i;
					var r = new En(t);
					n.kind = r.kind;
					n.src = r.src;
					n.srclang = r.language;
					n.label = r.label;
					n["default"] = r["default"];
					Object.defineProperties(Ye(n), {
						readyState: {
							get: function e() {
								return i
							}
						},
						track: {
							get: function e() {
								return r
							}
						}
					});
					i = wn;
					r.addEventListener("loadeddata", function() {
						i = In;
						n.trigger({
							type: "load",
							target: Ye(n)
						})
					});
					return n
				}
				return t
			}(Ee);
			On.prototype.allowedEvents_ = {
				load: "load"
			};
			On.NONE = wn;
			On.LOADING = jn;
			On.LOADED = In;
			On.ERROR = Ln;
			var Nn = {
				audio: {
					ListClass: Kt,
					TrackClass: Pn,
					capitalName: "Audio"
				},
				video: {
					ListClass: Xt,
					TrackClass: Cn,
					capitalName: "Video"
				},
				text: {
					ListClass: Jt,
					TrackClass: En,
					capitalName: "Text"
				}
			};
			Object.keys(Nn).forEach(function(e) {
				Nn[e].getterName = e + "Tracks";
				Nn[e].privateName = e + "Tracks_"
			});
			var xn = {
				remoteText: {
					ListClass: Jt,
					TrackClass: En,
					capitalName: "RemoteText",
					getterName: "remoteTextTracks",
					privateName: "remoteTextTracks_"
				},
				remoteTextEl: {
					ListClass: Qt,
					TrackClass: On,
					capitalName: "RemoteTextTrackEls",
					getterName: "remoteTextTrackEls",
					privateName: "remoteTextTrackEls_"
				}
			};
			var Dn = u({}, Nn, xn);
			xn.names = Object.keys(xn);
			Nn.names = Object.keys(Nn);
			Dn.names = [].concat(xn.names).concat(Nn.names);
			var Rn = {};

			function Un(e, t, n, i, r) {
				if(r === void 0) {
					r = {}
				}
				var a = e.textTracks();
				r.kind = t;
				if(n) {
					r.label = n
				}
				if(i) {
					r.language = i
				}
				r.tech = e;
				var s = new Dn.text.TrackClass(r);
				a.addTrack(s);
				return s
			}
			var Mn = function(n) {
				Ke(i, n);

				function i(e, t) {
					var i;
					if(e === void 0) {
						e = {}
					}
					if(t === void 0) {
						t = function e() {}
					}
					e.reportTouchActivity = false;
					i = n.call(this, null, e, t) || this;
					i.hasStarted_ = false;
					i.on("playing", function() {
						this.hasStarted_ = true
					});
					i.on("loadstart", function() {
						this.hasStarted_ = false
					});
					Dn.names.forEach(function(t) {
						var n = Dn[t];
						if(e && e[n.getterName]) {
							i[n.privateName] = e[n.getterName]
						}
					});
					if(!i.featuresProgressEvents) {
						i.manualProgressOn()
					}
					if(!i.featuresTimeupdateEvents) {
						i.manualTimeUpdatesOn()
					}["Text", "Audio", "Video"].forEach(function(t) {
						if(e["native" + t + "Tracks"] === false) {
							i["featuresNative" + t + "Tracks"] = false
						}
					});
					if(e.nativeCaptions === false || e.nativeTextTracks === false) {
						i.featuresNativeTextTracks = false
					} else if(e.nativeCaptions === true || e.nativeTextTracks === true) {
						i.featuresNativeTextTracks = true
					}
					if(!i.featuresNativeTextTracks) {
						i.emulateTextTracks()
					}
					i.preloadTextTracks = e.preloadTextTracks !== false;
					i.autoRemoteTextTracks_ = new Dn.text.ListClass;
					i.initTrackListeners();
					if(!e.nativeControlsForTouch) {
						i.emitTapEvents()
					}
					if(i.constructor) {
						i.name_ = i.constructor.name || "Unknown Tech"
					}
					return i
				}
				var r = i.prototype;
				r.triggerSourceset = function e(t) {
					var n = this;
					if(!this.isReady_) {
						this.one("ready", function() {
							return n.setTimeout(function() {
								return n.triggerSourceset(t)
							}, 1)
						})
					}
					this.trigger({
						src: t,
						type: "sourceset"
					})
				};
				r.manualProgressOn = function e() {
					this.on("durationchange", this.onDurationChange);
					this.manualProgress = true;
					this.one("ready", this.trackProgress)
				};
				r.manualProgressOff = function e() {
					this.manualProgress = false;
					this.stopTrackingProgress();
					this.off("durationchange", this.onDurationChange)
				};
				r.trackProgress = function e(t) {
					this.stopTrackingProgress();
					this.progressInterval = this.setInterval(Se(this, function() {
						var e = this.bufferedPercent();
						if(this.bufferedPercent_ !== e) {
							this.trigger("progress")
						}
						this.bufferedPercent_ = e;
						if(e === 1) {
							this.stopTrackingProgress()
						}
					}), 500)
				};
				r.onDurationChange = function e(t) {
					this.duration_ = this.duration()
				};
				r.buffered = function e() {
					return yt(0, 0)
				};
				r.bufferedPercent = function e() {
					return _t(this.buffered(), this.duration_)
				};
				r.stopTrackingProgress = function e() {
					this.clearInterval(this.progressInterval)
				};
				r.manualTimeUpdatesOn = function e() {
					this.manualTimeUpdates = true;
					this.on("play", this.trackCurrentTime);
					this.on("pause", this.stopTrackingCurrentTime)
				};
				r.manualTimeUpdatesOff = function e() {
					this.manualTimeUpdates = false;
					this.stopTrackingCurrentTime();
					this.off("play", this.trackCurrentTime);
					this.off("pause", this.stopTrackingCurrentTime)
				};
				r.trackCurrentTime = function e() {
					if(this.currentTimeInterval) {
						this.stopTrackingCurrentTime()
					}
					this.currentTimeInterval = this.setInterval(function() {
						this.trigger({
							type: "timeupdate",
							target: this,
							manuallyTriggered: true
						})
					}, 250)
				};
				r.stopTrackingCurrentTime = function e() {
					this.clearInterval(this.currentTimeInterval);
					this.trigger({
						type: "timeupdate",
						target: this,
						manuallyTriggered: true
					})
				};
				r.dispose = function e() {
					this.clearTracks(Nn.names);
					if(this.manualProgress) {
						this.manualProgressOff()
					}
					if(this.manualTimeUpdates) {
						this.manualTimeUpdatesOff()
					}
					n.prototype.dispose.call(this)
				};
				r.clearTracks = function e(t) {
					var n = this;
					t = [].concat(t);
					t.forEach(function(e) {
						var t = n[e + "Tracks"]() || [];
						var i = t.length;
						while(i--) {
							var r = t[i];
							if(e === "text") {
								n.removeRemoteTextTrack(r)
							}
							t.removeTrack(r)
						}
					})
				};
				r.cleanupAutoTextTracks = function e() {
					var t = this.autoRemoteTextTracks_ || [];
					var n = t.length;
					while(n--) {
						var i = t[n];
						this.removeRemoteTextTrack(i)
					}
				};
				r.reset = function e() {};
				r.error = function e(t) {
					if(t !== undefined) {
						this.error_ = new Pt(t);
						this.trigger("error")
					}
					return this.error_
				};
				r.played = function e() {
					if(this.hasStarted_) {
						return yt(0, 0)
					}
					return yt()
				};
				r.setCurrentTime = function e() {
					if(this.manualTimeUpdates) {
						this.trigger({
							type: "timeupdate",
							target: this,
							manuallyTriggered: true
						})
					}
				};
				r.initTrackListeners = function e() {
					var t = this;
					Nn.names.forEach(function(e) {
						var n = Nn[e];
						var i = function n() {
							t.trigger(e + "trackchange")
						};
						var r = t[n.getterName]();
						r.addEventListener("removetrack", i);
						r.addEventListener("addtrack", i);
						t.on("dispose", function() {
							r.removeEventListener("removetrack", i);
							r.removeEventListener("addtrack", i)
						})
					})
				};
				r.addWebVttScript_ = function n() {
					var i = this;
					if(e.WebVTT) {
						return
					}
					if(t.body.contains(this.el())) {
						if(!this.options_["vtt.js"] && g(Rn) && Object.keys(Rn).length > 0) {
							this.trigger("vttjsloaded");
							return
						}
						var r = t.createElement("script");
						r.src = this.options_["vtt.js"] || "https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js";
						r.onload = function() {
							i.trigger("vttjsloaded")
						};
						r.onerror = function() {
							i.trigger("vttjserror")
						};
						this.on("dispose", function() {
							r.onload = null;
							r.onerror = null
						});
						e.WebVTT = true;
						this.el().parentNode.appendChild(r)
					} else {
						this.ready(this.addWebVttScript_)
					}
				};
				r.emulateTextTracks = function e() {
					var t = this;
					var n = this.textTracks();
					var i = this.remoteTextTracks();
					var r = function e(t) {
						return n.addTrack(t.track)
					};
					var a = function e(t) {
						return n.removeTrack(t.track)
					};
					i.on("addtrack", r);
					i.on("removetrack", a);
					this.addWebVttScript_();
					var s = function e() {
						return t.trigger("texttrackchange")
					};
					var o = function e() {
						s();
						for(var t = 0; t < n.length; t++) {
							var i = n[t];
							i.removeEventListener("cuechange", s);
							if(i.mode === "showing") {
								i.addEventListener("cuechange", s)
							}
						}
					};
					o();
					n.addEventListener("change", o);
					n.addEventListener("addtrack", o);
					n.addEventListener("removetrack", o);
					this.on("dispose", function() {
						i.off("addtrack", r);
						i.off("removetrack", a);
						n.removeEventListener("change", o);
						n.removeEventListener("addtrack", o);
						n.removeEventListener("removetrack", o);
						for(var e = 0; e < n.length; e++) {
							var t = n[e];
							t.removeEventListener("cuechange", s)
						}
					})
				};
				r.addTextTrack = function e(t, n, i) {
					if(!t) {
						throw new Error("TextTrack kind is required but was not provided")
					}
					return Un(this, t, n, i)
				};
				r.createRemoteTextTrack = function e(t) {
					var n = qe(t, {
						tech: this
					});
					return new xn.remoteTextEl.TrackClass(n)
				};
				r.addRemoteTextTrack = function e(t, n) {
					var i = this;
					if(t === void 0) {
						t = {}
					}
					var r = this.createRemoteTextTrack(t);
					if(n !== true && n !== false) {
						s.warn('Calling addRemoteTextTrack without explicitly setting the "manualCleanup" parameter to `true` is deprecated and default to `false` in future version of video.js');
						n = true
					}
					this.remoteTextTrackEls().addTrackElement_(r);
					this.remoteTextTracks().addTrack(r.track);
					if(n !== true) {
						this.ready(function() {
							return i.autoRemoteTextTracks_.addTrack(r.track)
						})
					}
					return r
				};
				r.removeRemoteTextTrack = function e(t) {
					var n = this.remoteTextTrackEls().getTrackElementByTrack_(t);
					this.remoteTextTrackEls().removeTrackElement_(n);
					this.remoteTextTracks().removeTrack(t);
					this.autoRemoteTextTracks_.removeTrack(t)
				};
				r.getVideoPlaybackQuality = function e() {
					return {}
				};
				r.requestPictureInPicture = function t() {
					var n = this.options_.Promise || e.Promise;
					if(n) {
						return n.reject()
					}
				};
				r.setPoster = function e() {};
				r.playsinline = function e() {};
				r.setPlaysinline = function e() {};
				r.overrideNativeAudioTracks = function e() {};
				r.overrideNativeVideoTracks = function e() {};
				r.canPlayType = function e() {
					return ""
				};
				i.canPlayType = function e() {
					return ""
				};
				i.canPlaySource = function e(t, n) {
					return i.canPlayType(t.type)
				};
				i.isTech = function e(t) {
					return t.prototype instanceof i || t instanceof i || t === i
				};
				i.registerTech = function e(t, n) {
					if(!i.techs_) {
						i.techs_ = {}
					}
					if(!i.isTech(n)) {
						throw new Error("Tech " + t + " must be a Tech")
					}
					if(!i.canPlayType) {
						throw new Error("Techs must have a static canPlayType method on them")
					}
					if(!i.canPlaySource) {
						throw new Error("Techs must have a static canPlaySource method on them")
					}
					t = Fe(t);
					i.techs_[t] = n;
					i.techs_[Be(t)] = n;
					if(t !== "Tech") {
						i.defaultTechOrder_.push(t)
					}
					return n
				};
				i.getTech = function t(n) {
					if(!n) {
						return
					}
					if(i.techs_ && i.techs_[n]) {
						return i.techs_[n]
					}
					n = Fe(n);
					if(e && e.videojs && e.videojs[n]) {
						s.warn("The " + n + " tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)");
						return e.videojs[n]
					}
				};
				return i
			}(He);
			Dn.names.forEach(function(e) {
				var t = Dn[e];
				Mn.prototype[t.getterName] = function() {
					this[t.privateName] = this[t.privateName] || new t.ListClass;
					return this[t.privateName]
				}
			});
			Mn.prototype.featuresVolumeControl = true;
			Mn.prototype.featuresMuteControl = true;
			Mn.prototype.featuresFullscreenResize = false;
			Mn.prototype.featuresPlaybackRate = false;
			Mn.prototype.featuresProgressEvents = false;
			Mn.prototype.featuresSourceset = false;
			Mn.prototype.featuresTimeupdateEvents = false;
			Mn.prototype.featuresNativeTextTracks = false;
			Mn.withSourceHandlers = function(e) {
				e.registerSourceHandler = function(t, n) {
					var i = e.sourceHandlers;
					if(!i) {
						i = e.sourceHandlers = []
					}
					if(n === undefined) {
						n = i.length
					}
					i.splice(n, 0, t)
				};
				e.canPlayType = function(t) {
					var n = e.sourceHandlers || [];
					var i;
					for(var r = 0; r < n.length; r++) {
						i = n[r].canPlayType(t);
						if(i) {
							return i
						}
					}
					return ""
				};
				e.selectSourceHandler = function(t, n) {
					var i = e.sourceHandlers || [];
					var r;
					for(var a = 0; a < i.length; a++) {
						r = i[a].canHandleSource(t, n);
						if(r) {
							return i[a]
						}
					}
					return null
				};
				e.canPlaySource = function(t, n) {
					var i = e.selectSourceHandler(t, n);
					if(i) {
						return i.canHandleSource(t, n)
					}
					return ""
				};
				var t = ["seekable", "seeking", "duration"];
				t.forEach(function(e) {
					var t = this[e];
					if(typeof t !== "function") {
						return
					}
					this[e] = function() {
						if(this.sourceHandler_ && this.sourceHandler_[e]) {
							return this.sourceHandler_[e].apply(this.sourceHandler_, arguments)
						}
						return t.apply(this, arguments)
					}
				}, e.prototype);
				e.prototype.setSource = function(t) {
					var n = e.selectSourceHandler(t, this.options_);
					if(!n) {
						if(e.nativeSourceHandler) {
							n = e.nativeSourceHandler
						} else {
							s.error("No source handler found for the current source.")
						}
					}
					this.disposeSourceHandler();
					this.off("dispose", this.disposeSourceHandler);
					if(n !== e.nativeSourceHandler) {
						this.currentSource_ = t
					}
					this.sourceHandler_ = n.handleSource(t, this, this.options_);
					this.one("dispose", this.disposeSourceHandler)
				};
				e.prototype.disposeSourceHandler = function() {
					if(this.currentSource_) {
						this.clearTracks(["audio", "video"]);
						this.currentSource_ = null
					}
					this.cleanupAutoTextTracks();
					if(this.sourceHandler_) {
						if(this.sourceHandler_.dispose) {
							this.sourceHandler_.dispose()
						}
						this.sourceHandler_ = null
					}
				}
			};
			He.registerComponent("Tech", Mn);
			Mn.registerTech("Tech", Mn);
			Mn.defaultTechOrder_ = [];
			var Bn = {};
			var Fn = {};
			var Vn = {};

			function qn(e, t) {
				Bn[e] = Bn[e] || [];
				Bn[e].push(t)
			}

			function Hn(e, t, n) {
				e.setTimeout(function() {
					return ti(t, Bn[t.type], n, e)
				}, 1)
			}

			function Gn(e, t) {
				e.forEach(function(e) {
					return e.setTech && e.setTech(t)
				})
			}

			function Yn(e, t, n) {
				return e.reduceRight(Qn(n), t[n]())
			}

			function zn(e, t, n, i) {
				return t[n](e.reduce(Qn(n), i))
			}

			function Kn(e, t, n, i) {
				if(i === void 0) {
					i = null
				}
				var r = "call" + Fe(n);
				var a = e.reduce(Qn(r), i);
				var s = a === Vn;
				var o = s ? null : t[n](a);
				Zn(e, n, o, s);
				return o
			}
			var Wn = {
				buffered: 1,
				currentTime: 1,
				duration: 1,
				muted: 1,
				played: 1,
				paused: 1,
				seekable: 1,
				volume: 1
			};
			var Xn = {
				setCurrentTime: 1,
				setMuted: 1,
				setVolume: 1
			};
			var Jn = {
				play: 1,
				pause: 1
			};

			function Qn(e) {
				return function(t, n) {
					if(t === Vn) {
						return Vn
					}
					if(n[e]) {
						return n[e](t)
					}
					return t
				}
			}

			function Zn(e, t, n, i) {
				for(var r = e.length - 1; r >= 0; r--) {
					var a = e[r];
					if(a[t]) {
						a[t](i, n)
					}
				}
			}

			function $n(e) {
				Fn[e.id()] = null
			}

			function ei(e, t) {
				var n = Fn[e.id()];
				var i = null;
				if(n === undefined || n === null) {
					i = t(e);
					Fn[e.id()] = [
						[t, i]
					];
					return i
				}
				for(var r = 0; r < n.length; r++) {
					var a = n[r],
						s = a[0],
						o = a[1];
					if(s !== t) {
						continue
					}
					i = o
				}
				if(i === null) {
					i = t(e);
					n.push([t, i])
				}
				return i
			}

			function ti(e, t, n, i, r, a) {
				if(e === void 0) {
					e = {}
				}
				if(t === void 0) {
					t = []
				}
				if(r === void 0) {
					r = []
				}
				if(a === void 0) {
					a = false
				}
				var s = t,
					o = s[0],
					l = s.slice(1);
				if(typeof o === "string") {
					ti(e, Bn[o], n, i, r, a)
				} else if(o) {
					var u = ei(i, o);
					if(!u.setSource) {
						r.push(u);
						return ti(e, l, n, i, r, a)
					}
					u.setSource(h({}, e), function(t, s) {
						if(t) {
							return ti(e, l, n, i, r, a)
						}
						r.push(u);
						ti(s, e.type === s.type ? l : Bn[s.type], n, i, r, a)
					})
				} else if(l.length) {
					ti(e, l, n, i, r, a)
				} else if(a) {
					n(e, r)
				} else {
					ti(e, Bn["*"], n, i, r, true)
				}
			}
			var ni = {
				opus: "video/ogg",
				ogv: "video/ogg",
				mp4: "video/mp4",
				mov: "video/mp4",
				m4v: "video/mp4",
				mkv: "video/x-matroska",
				m4a: "audio/mp4",
				mp3: "audio/mpeg",
				aac: "audio/aac",
				oga: "audio/ogg",
				m3u8: "application/x-mpegURL",
				jpg: "image/jpeg",
				jpeg: "image/jpeg",
				gif: "image/gif",
				png: "image/png",
				svg: "image/svg+xml",
				webp: "image/webp"
			};
			var ii = function e(t) {
				if(t === void 0) {
					t = ""
				}
				var n = on(t);
				var i = ni[n.toLowerCase()];
				return i || ""
			};
			var ri = function e(t, n) {
				if(!n) {
					return ""
				}
				if(t.cache_.source.src === n && t.cache_.source.type) {
					return t.cache_.source.type
				}
				var i = t.cache_.sources.filter(function(e) {
					return e.src === n
				});
				if(i.length) {
					return i[0].type
				}
				var r = t.$$("source");
				for(var a = 0; a < r.length; a++) {
					var s = r[a];
					if(s.type && s.src && s.src === n) {
						return s.type
					}
				}
				return ii(n)
			};
			var ai = function e(t) {
				if(Array.isArray(t)) {
					var n = [];
					t.forEach(function(t) {
						t = e(t);
						if(Array.isArray(t)) {
							n = n.concat(t)
						} else if(v(t)) {
							n.push(t)
						}
					});
					t = n
				} else if(typeof t === "string" && t.trim()) {
					t = [si({
						src: t
					})]
				} else if(v(t) && typeof t.src === "string" && t.src && t.src.trim()) {
					t = [si(t)]
				} else {
					t = []
				}
				return t
			};

			function si(e) {
				if(!e.type) {
					var t = ii(e.src);
					if(t) {
						e.type = t
					}
				}
				return e
			}
			var oi = function(e) {
				Ke(t, e);

				function t(t, n, i) {
					var r;
					var a = qe({
						createEl: false
					}, n);
					r = e.call(this, t, a, i) || this;
					if(!n.playerOptions.sources || n.playerOptions.sources.length === 0) {
						for(var s = 0, o = n.playerOptions.techOrder; s < o.length; s++) {
							var l = Fe(o[s]);
							var u = Mn.getTech(l);
							if(!l) {
								u = He.getComponent(l)
							}
							if(u && u.isSupported()) {
								t.loadTech_(l);
								break
							}
						}
					} else {
						t.src(n.playerOptions.sources)
					}
					return r
				}
				return t
			}(He);
			He.registerComponent("MediaLoader", oi);
			var li = function(e) {
				Ke(t, e);

				function t(t, n) {
					var i;
					i = e.call(this, t, n) || this;
					i.emitTapEvents();
					i.enable();
					return i
				}
				var n = t.prototype;
				n.createEl = function t(n, i, r) {
					if(n === void 0) {
						n = "div"
					}
					if(i === void 0) {
						i = {}
					}
					if(r === void 0) {
						r = {}
					}
					i = h({
						innerHTML: '<span aria-hidden="true" class="vjs-icon-placeholder"></span>',
						className: this.buildCSSClass(),
						tabIndex: 0
					}, i);
					if(n === "button") {
						s.error("Creating a ClickableComponent with an HTML element of " + n + " is not supported; use a Button instead.")
					}
					r = h({
						role: "button"
					}, r);
					this.tabIndex_ = i.tabIndex;
					var a = e.prototype.createEl.call(this, n, i, r);
					this.createControlTextEl(a);
					return a
				};
				n.dispose = function t() {
					this.controlTextEl_ = null;
					e.prototype.dispose.call(this)
				};
				n.createControlTextEl = function e(t) {
					this.controlTextEl_ = E("span", {
						className: "vjs-control-text"
					}, {
						"aria-live": "polite"
					});
					if(t) {
						t.appendChild(this.controlTextEl_)
					}
					this.controlText(this.controlText_, t);
					return this.controlTextEl_
				};
				n.controlText = function e(t, n) {
					if(n === void 0) {
						n = this.el()
					}
					if(t === undefined) {
						return this.controlText_ || "Need Text"
					}
					var i = this.localize(t);
					this.controlText_ = t;
					P(this.controlTextEl_, i);
					if(!this.nonIconControl) {
						n.setAttribute("title", i)
					}
				};
				n.buildCSSClass = function t() {
					return "vjs-control vjs-button " + e.prototype.buildCSSClass.call(this)
				};
				n.enable = function e() {
					if(!this.enabled_) {
						this.enabled_ = true;
						this.removeClass("vjs-disabled");
						this.el_.setAttribute("aria-disabled", "false");
						if(typeof this.tabIndex_ !== "undefined") {
							this.el_.setAttribute("tabIndex", this.tabIndex_)
						}
						this.on(["tap", "click"], this.handleClick);
						this.on("keydown", this.handleKeyDown)
					}
				};
				n.disable = function e() {
					this.enabled_ = false;
					this.addClass("vjs-disabled");
					this.el_.setAttribute("aria-disabled", "true");
					if(typeof this.tabIndex_ !== "undefined") {
						this.el_.removeAttribute("tabIndex")
					}
					this.off("mouseover", this.handleMouseOver);
					this.off("mouseout", this.handleMouseOut);
					this.off(["tap", "click"], this.handleClick);
					this.off("keydown", this.handleKeyDown)
				};
				n.handleClick = function e(t) {
					if(this.options_.clickHandler) {
						this.options_.clickHandler.call(this, arguments)
					}
				};
				n.handleKeyDown = function t(n) {
					if(Rt.isEventKey(n, "Space") || Rt.isEventKey(n, "Enter")) {
						n.preventDefault();
						n.stopPropagation();
						this.trigger("click")
					} else {
						e.prototype.handleKeyDown.call(this, n)
					}
				};
				return t
			}(He);
			He.registerComponent("ClickableComponent", li);
			var ui = function(e) {
				Ke(t, e);

				function t(t, n) {
					var i;
					i = e.call(this, t, n) || this;
					i.update();
					t.on("posterchange", Se(Ye(i), i.update));
					return i
				}
				var n = t.prototype;
				n.dispose = function t() {
					this.player().off("posterchange", this.update);
					e.prototype.dispose.call(this)
				};
				n.createEl = function e() {
					var t = E("div", {
						className: "vjs-poster",
						tabIndex: -1
					});
					return t
				};
				n.update = function e(t) {
					var n = this.player().poster();
					this.setSrc(n);
					if(n) {
						this.show()
					} else {
						this.hide()
					}
				};
				n.setSrc = function e(t) {
					var n = "";
					if(t) {
						n = 'url("' + t + '")'
					}
					this.el_.style.backgroundImage = n
				};
				n.handleClick = function e(t) {
					if(!this.player_.controls()) {
						return
					}
					if(this.player_.tech(true)) {
						this.player_.tech(true).focus()
					}
					if(this.player_.paused()) {
						Lt(this.player_.play())
					} else {
						this.player_.pause()
					}
				};
				return t
			}(li);
			He.registerComponent("PosterImage", ui);
			var ci = "#222";
			var di = "#ccc";
			var fi = {
				monospace: "monospace",
				sansSerif: "sans-serif",
				serif: "serif",
				monospaceSansSerif: '"Andale Mono", "Lucida Console", monospace',
				monospaceSerif: '"Courier New", monospace',
				proportionalSansSerif: "sans-serif",
				proportionalSerif: "serif",
				casual: '"Comic Sans MS", Impact, fantasy',
				script: '"Monotype Corsiva", cursive',
				smallcaps: '"Andale Mono", "Lucida Console", monospace, sans-serif'
			};

			function pi(e, t) {
				var n;
				if(e.length === 4) {
					n = e[1] + e[1] + e[2] + e[2] + e[3] + e[3]
				} else if(e.length === 7) {
					n = e.slice(1)
				} else {
					throw new Error("Invalid color code provided, " + e + "; must be formatted as e.g. #f0e or #f604e2.")
				}
				return "rgba(" + parseInt(n.slice(0, 2), 16) + "," + parseInt(n.slice(2, 4), 16) + "," + parseInt(n.slice(4, 6), 16) + "," + t + ")"
			}

			function hi(e, t, n) {
				try {
					e.style[t] = n
				} catch(e) {
					return
				}
			}
			var vi = function(t) {
				Ke(n, t);

				function n(n, i, r) {
					var a;
					a = t.call(this, n, i, r) || this;
					var s = Se(Ye(a), a.updateDisplay);
					n.on("loadstart", Se(Ye(a), a.toggleDisplay));
					n.on("texttrackchange", s);
					n.on("loadedmetadata", Se(Ye(a), a.preselectTrack));
					n.ready(Se(Ye(a), function() {
						if(n.tech_ && n.tech_.featuresNativeTextTracks) {
							this.hide();
							return
						}
						n.on("fullscreenchange", s);
						n.on("playerresize", s);
						e.addEventListener("orientationchange", s);
						n.on("dispose", function() {
							return e.removeEventListener("orientationchange", s)
						});
						var t = this.options_.playerOptions.tracks || [];
						for(var i = 0; i < t.length; i++) {
							this.player_.addRemoteTextTrack(t[i], true)
						}
						this.preselectTrack()
					}));
					return a
				}
				var i = n.prototype;
				i.preselectTrack = function e() {
					var t = {
						captions: 1,
						subtitles: 1
					};
					var n = this.player_.textTracks();
					var i = this.player_.cache_.selectedLanguage;
					var r;
					var a;
					var s;
					for(var o = 0; o < n.length; o++) {
						var l = n[o];
						if(i && i.enabled && i.language && i.language === l.language && l.kind in t) {
							if(l.kind === i.kind) {
								s = l
							} else if(!s) {
								s = l
							}
						} else if(i && !i.enabled) {
							s = null;
							r = null;
							a = null
						} else if(l["default"]) {
							if(l.kind === "descriptions" && !r) {
								r = l
							} else if(l.kind in t && !a) {
								a = l
							}
						}
					}
					if(s) {
						s.mode = "showing"
					} else if(a) {
						a.mode = "showing"
					} else if(r) {
						r.mode = "showing"
					}
				};
				i.toggleDisplay = function e() {
					if(this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {
						this.hide()
					} else {
						this.show()
					}
				};
				i.createEl = function e() {
					return t.prototype.createEl.call(this, "div", {
						className: "vjs-text-track-display"
					}, {
						"aria-live": "off",
						"aria-atomic": "true"
					})
				};
				i.clearDisplay = function t() {
					if(typeof e.WebVTT === "function") {
						e.WebVTT.processCues(e, [], this.el_)
					}
				};
				i.updateDisplay = function e() {
					var t = this.player_.textTracks();
					var n = this.options_.allowMultipleShowingTracks;
					this.clearDisplay();
					if(n) {
						var i = [];
						for(var r = 0; r < t.length; ++r) {
							var a = t[r];
							if(a.mode !== "showing") {
								continue
							}
							i.push(a)
						}
						this.updateForTrack(i);
						return
					}
					var s = null;
					var o = null;
					var l = t.length;
					while(l--) {
						var u = t[l];
						if(u.mode === "showing") {
							if(u.kind === "descriptions") {
								s = u
							} else {
								o = u
							}
						}
					}
					if(o) {
						if(this.getAttribute("aria-live") !== "off") {
							this.setAttribute("aria-live", "off")
						}
						this.updateForTrack(o)
					} else if(s) {
						if(this.getAttribute("aria-live") !== "assertive") {
							this.setAttribute("aria-live", "assertive")
						}
						this.updateForTrack(s)
					}
				};
				i.updateDisplayState = function t(n) {
					var i = this.player_.textTrackSettings.getValues();
					var r = n.activeCues;
					var a = r.length;
					while(a--) {
						var s = r[a];
						if(!s) {
							continue
						}
						var o = s.displayState;
						if(i.color) {
							o.firstChild.style.color = i.color
						}
						if(i.textOpacity) {
							hi(o.firstChild, "color", pi(i.color || "#fff", i.textOpacity))
						}
						if(i.backgroundColor) {
							o.firstChild.style.backgroundColor = i.backgroundColor
						}
						if(i.backgroundOpacity) {
							hi(o.firstChild, "backgroundColor", pi(i.backgroundColor || "#000", i.backgroundOpacity))
						}
						if(i.windowColor) {
							if(i.windowOpacity) {
								hi(o, "backgroundColor", pi(i.windowColor, i.windowOpacity))
							} else {
								o.style.backgroundColor = i.windowColor
							}
						}
						if(i.edgeStyle) {
							if(i.edgeStyle === "dropshadow") {
								o.firstChild.style.textShadow = "2px 2px 3px " + ci + ", 2px 2px 4px " + ci + ", 2px 2px 5px " + ci
							} else if(i.edgeStyle === "raised") {
								o.firstChild.style.textShadow = "1px 1px " + ci + ", 2px 2px " + ci + ", 3px 3px " + ci
							} else if(i.edgeStyle === "depressed") {
								o.firstChild.style.textShadow = "1px 1px " + di + ", 0 1px " + di + ", -1px -1px " + ci + ", 0 -1px " + ci
							} else if(i.edgeStyle === "uniform") {
								o.firstChild.style.textShadow = "0 0 4px " + ci + ", 0 0 4px " + ci + ", 0 0 4px " + ci + ", 0 0 4px " + ci
							}
						}
						if(i.fontPercent && i.fontPercent !== 1) {
							var l = e.parseFloat(o.style.fontSize);
							o.style.fontSize = l * i.fontPercent + "px";
							o.style.height = "auto";
							o.style.top = "auto";
							o.style.bottom = "2px"
						}
						if(i.fontFamily && i.fontFamily !== "default") {
							if(i.fontFamily === "small-caps") {
								o.firstChild.style.fontVariant = "small-caps"
							} else {
								o.firstChild.style.fontFamily = fi[i.fontFamily]
							}
						}
					}
				};
				i.updateForTrack = function t(n) {
					if(!Array.isArray(n)) {
						n = [n]
					}
					if(typeof e.WebVTT !== "function" || n.every(function(e) {
							return !e.activeCues
						})) {
						return
					}
					var i = [];
					for(var r = 0; r < n.length; ++r) {
						var a = n[r];
						for(var s = 0; s < a.activeCues.length; ++s) {
							i.push(a.activeCues[s])
						}
					}
					e.WebVTT.processCues(e, i, this.el_);
					for(var o = 0; o < n.length; ++o) {
						var l = n[o];
						for(var u = 0; u < l.activeCues.length; ++u) {
							var c = l.activeCues[u].displayState;
							j(c, "vjs-text-track-cue");
							j(c, "vjs-text-track-cue-" + (l.language ? l.language : o))
						}
						if(this.player_.textTrackSettings) {
							this.updateDisplayState(l)
						}
					}
				};
				return n
			}(He);
			He.registerComponent("TextTrackDisplay", vi);
			var gi = function(e) {
				Ke(t, e);

				function t() {
					return e.apply(this, arguments) || this
				}
				var n = t.prototype;
				n.createEl = function t() {
					var n = this.player_.isAudio();
					var i = this.localize(n ? "Audio Player" : "Video Player");
					var r = E("span", {
						className: "vjs-control-text",
						innerHTML: this.localize("{1} is loading.", [i])
					});
					var a = e.prototype.createEl.call(this, "div", {
						className: "vjs-loading-spinner",
						dir: "ltr"
					});
					a.appendChild(r);
					return a
				};
				return t
			}(He);
			He.registerComponent("LoadingSpinner", gi);
			var mi = function(e) {
				Ke(t, e);

				function t() {
					return e.apply(this, arguments) || this
				}
				var n = t.prototype;
				n.createEl = function e(t, n, i) {
					if(n === void 0) {
						n = {}
					}
					if(i === void 0) {
						i = {}
					}
					t = "button";
					n = h({
						innerHTML: '<span aria-hidden="true" class="vjs-icon-placeholder"></span>',
						className: this.buildCSSClass()
					}, n);
					i = h({
						type: "button"
					}, i);
					var r = He.prototype.createEl.call(this, t, n, i);
					this.createControlTextEl(r);
					return r
				};
				n.addChild = function e(t, n) {
					if(n === void 0) {
						n = {}
					}
					var i = this.constructor.name;
					s.warn("Adding an actionable (user controllable) child to a Button (" + i + ") is not supported; use a ClickableComponent instead.");
					return He.prototype.addChild.call(this, t, n)
				};
				n.enable = function t() {
					e.prototype.enable.call(this);
					this.el_.removeAttribute("disabled")
				};
				n.disable = function t() {
					e.prototype.disable.call(this);
					this.el_.setAttribute("disabled", "disabled")
				};
				n.handleKeyDown = function t(n) {
					if(Rt.isEventKey(n, "Space") || Rt.isEventKey(n, "Enter")) {
						n.stopPropagation();
						return
					}
					e.prototype.handleKeyDown.call(this, n)
				};
				return t
			}(li);
			He.registerComponent("Button", mi);
			var yi = function(e) {
				Ke(t, e);

				function t(t, n) {
					var i;
					i = e.call(this, t, n) || this;
					i.mouseused_ = false;
					i.on("mousedown", i.handleMouseDown);
					return i
				}
				var n = t.prototype;
				n.buildCSSClass = function e() {
					return "vjs-big-play-button"
				};
				n.handleClick = function e(t) {
					var n = this.player_.play();
					if(this.mouseused_ && t.clientX && t.clientY) {
						var i = this.player_.usingPlugin("eme") && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;
						Lt(n);
						if(this.player_.tech(true) && !((st || it) && i)) {
							this.player_.tech(true).focus()
						}
						return
					}
					var r = this.player_.getChild("controlBar");
					var a = r && r.getChild("playToggle");
					if(!a) {
						this.player_.tech(true).focus();
						return
					}
					var s = function e() {
						return a.focus()
					};
					if(It(n)) {
						n.then(s, function() {})
					} else {
						this.setTimeout(s, 1)
					}
				};
				n.handleKeyDown = function t(n) {
					this.mouseused_ = false;
					e.prototype.handleKeyDown.call(this, n)
				};
				n.handleMouseDown = function e(t) {
					this.mouseused_ = true
				};
				return t
			}(mi);
			yi.prototype.controlText_ = "Play Video";
			He.registerComponent("BigPlayButton", yi);
			var _i = function(e) {
				Ke(t, e);

				function t(t, n) {
					var i;
					i = e.call(this, t, n) || this;
					i.controlText(n && n.controlText || i.localize("Close"));
					return i
				}
				var n = t.prototype;
				n.buildCSSClass = function t() {
					return "vjs-close-button " + e.prototype.buildCSSClass.call(this)
				};
				n.handleClick = function e(t) {
					this.trigger({
						type: "close",
						bubbles: false
					})
				};
				n.handleKeyDown = function t(n) {
					if(Rt.isEventKey(n, "Esc")) {
						n.preventDefault();
						n.stopPropagation();
						this.trigger("click")
					} else {
						e.prototype.handleKeyDown.call(this, n)
					}
				};
				return t
			}(mi);
			He.registerComponent("CloseButton", _i);
			var bi = function(e) {
				Ke(t, e);

				function t(t, n) {
					var i;
					if(n === void 0) {
						n = {}
					}
					i = e.call(this, t, n) || this;
					n.replay = n.replay === undefined || n.replay;
					i.on(t, "play", i.handlePlay);
					i.on(t, "pause", i.handlePause);
					if(n.replay) {
						i.on(t, "ended", i.handleEnded)
					}
					return i
				}
				var n = t.prototype;
				n.buildCSSClass = function t() {
					return "vjs-play-control " + e.prototype.buildCSSClass.call(this)
				};
				n.handleClick = function e(t) {
					if(this.player_.paused()) {
						this.player_.play()
					} else {
						this.player_.pause()
					}
				};
				n.handleSeeked = function e(t) {
					this.removeClass("vjs-ended");
					if(this.player_.paused()) {
						this.handlePause(t)
					} else {
						this.handlePlay(t)
					}
				};
				n.handlePlay = function e(t) {
					this.removeClass("vjs-ended");
					this.removeClass("vjs-paused");
					this.addClass("vjs-playing");
					this.controlText("Pause")
				};
				n.handlePause = function e(t) {
					this.removeClass("vjs-playing");
					this.addClass("vjs-paused");
					this.controlText("Play")
				};
				n.handleEnded = function e(t) {
					this.removeClass("vjs-playing");
					this.addClass("vjs-ended");
					this.controlText("Replay");
					this.one(this.player_, "seeked", this.handleSeeked)
				};
				return t
			}(mi);
			bi.prototype.controlText_ = "Play";
			He.registerComponent("PlayToggle", bi);
			var Ai = function e(t, n) {
				t = t < 0 ? 0 : t;
				var i = Math.floor(t % 60);
				var r = Math.floor(t / 60 % 60);
				var a = Math.floor(t / 3600);
				var s = Math.floor(n / 60 % 60);
				var o = Math.floor(n / 3600);
				if(isNaN(t) || t === Infinity) {
					a = r = i = "-"
				}
				a = a > 0 || o > 0 ? a + ":" : "";
				r = ((a || s >= 10) && r < 10 ? "0" + r : r) + ":";
				i = i < 10 ? "0" + i : i;
				return a + r + i
			};
			var Si = Ai;

			function Ti(e) {
				Si = e
			}

			function ki() {
				Si = Ai
			}

			function Ei(e, t) {
				if(t === void 0) {
					t = e
				}
				return Si(e, t)
			}
			var Pi = function(e) {
				Ke(n, e);

				function n(t, n) {
					var i;
					i = e.call(this, t, n) || this;
					i.on(t, ["timeupdate", "ended"], i.updateContent);
					i.updateTextNode_();
					return i
				}
				var i = n.prototype;
				i.createEl = function t() {
					var n = this.buildCSSClass();
					var i = e.prototype.createEl.call(this, "div", {
						className: n + " vjs-time-control vjs-control",
						innerHTML: '<span class="vjs-control-text" role="presentation">' + this.localize(this.labelText_) + "\xa0</span>"
					});
					this.contentEl_ = E("span", {
						className: n + "-display"
					}, {
						"aria-live": "off",
						role: "presentation"
					});
					i.appendChild(this.contentEl_);
					return i
				};
				i.dispose = function t() {
					this.contentEl_ = null;
					this.textNode_ = null;
					e.prototype.dispose.call(this)
				};
				i.updateTextNode_ = function e(n) {
					var i = this;
					if(n === void 0) {
						n = 0
					}
					n = Ei(n);
					if(this.formattedTime_ === n) {
						return
					}
					this.formattedTime_ = n;
					this.requestAnimationFrame(function() {
						if(!i.contentEl_) {
							return
						}
						var e = i.textNode_;
						i.textNode_ = t.createTextNode(i.formattedTime_);
						if(!i.textNode_) {
							return
						}
						if(e) {
							i.contentEl_.replaceChild(i.textNode_, e)
						} else {
							i.contentEl_.appendChild(i.textNode_)
						}
					})
				};
				i.updateContent = function e(t) {};
				return n
			}(He);
			Pi.prototype.labelText_ = "Time";
			Pi.prototype.controlText_ = "Time";
			He.registerComponent("TimeDisplay", Pi);
			var Ci = function(e) {
				Ke(t, e);

				function t() {
					return e.apply(this, arguments) || this
				}
				var n = t.prototype;
				n.buildCSSClass = function e() {
					return "vjs-current-time"
				};
				n.updateContent = function e(t) {
					var n;
					if(this.player_.ended()) {
						n = this.player_.duration()
					} else {
						n = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime()
					}
					this.updateTextNode_(n)
				};
				return t
			}(Pi);
			Ci.prototype.labelText_ = "Current Time";
			Ci.prototype.controlText_ = "Current Time";
			He.registerComponent("CurrentTimeDisplay", Ci);
			var wi = function(e) {
				Ke(t, e);

				function t(t, n) {
					var i;
					i = e.call(this, t, n) || this;
					i.on(t, "durationchange", i.updateContent);
					i.on(t, "loadstart", i.updateContent);
					i.on(t, "loadedmetadata", i.updateContent);
					return i
				}
				var n = t.prototype;
				n.buildCSSClass = function e() {
					return "vjs-duration"
				};
				n.updateContent = function e(t) {
					var n = this.player_.duration();
					this.updateTextNode_(n)
				};
				return t
			}(Pi);
			wi.prototype.labelText_ = "Duration";
			wi.prototype.controlText_ = "Duration";
			He.registerComponent("DurationDisplay", wi);
			var ji = function(e) {
				Ke(t, e);

				function t() {
					return e.apply(this, arguments) || this
				}
				var n = t.prototype;
				n.createEl = function t() {
					return e.prototype.createEl.call(this, "div", {
						className: "vjs-time-control vjs-time-divider",
						innerHTML: "<div><span>/</span></div>"
					}, {
						"aria-hidden": true
					})
				};
				return t
			}(He);
			He.registerComponent("TimeDivider", ji);
			var Ii = function(e) {
				Ke(t, e);

				function t(t, n) {
					var i;
					i = e.call(this, t, n) || this;
					i.on(t, "durationchange", i.updateContent);
					return i
				}
				var n = t.prototype;
				n.buildCSSClass = function e() {
					return "vjs-remaining-time"
				};
				n.createEl = function t() {
					var n = e.prototype.createEl.call(this);
					n.insertBefore(E("span", {}, {
						"aria-hidden": true
					}, "-"), this.contentEl_);
					return n
				};
				n.updateContent = function e(t) {
					if(typeof this.player_.duration() !== "number") {
						return
					}
					var n;
					if(this.player_.ended()) {
						n = 0
					} else if(this.player_.remainingTimeDisplay) {
						n = this.player_.remainingTimeDisplay()
					} else {
						n = this.player_.remainingTime()
					}
					this.updateTextNode_(n)
				};
				return t
			}(Pi);
			Ii.prototype.labelText_ = "Remaining Time";
			Ii.prototype.controlText_ = "Remaining Time";
			He.registerComponent("RemainingTimeDisplay", Ii);
			var Li = function(e) {
				Ke(t, e);

				function t(t, n) {
					var i;
					i = e.call(this, t, n) || this;
					i.updateShowing();
					i.on(i.player(), "durationchange", i.updateShowing);
					return i
				}
				var n = t.prototype;
				n.createEl = function t() {
					var n = e.prototype.createEl.call(this, "div", {
						className: "vjs-live-control vjs-control"
					});
					this.contentEl_ = E("div", {
						className: "vjs-live-display",
						innerHTML: '<span class="vjs-control-text">' + this.localize("Stream Type") + "\xa0</span>" + this.localize("LIVE")
					}, {
						"aria-live": "off"
					});
					n.appendChild(this.contentEl_);
					return n
				};
				n.dispose = function t() {
					this.contentEl_ = null;
					e.prototype.dispose.call(this)
				};
				n.updateShowing = function e(t) {
					if(this.player().duration() === Infinity) {
						this.show()
					} else {
						this.hide()
					}
				};
				return t
			}(He);
			He.registerComponent("LiveDisplay", Li);
			var Oi = function(e) {
				Ke(t, e);

				function t(t, n) {
					var i;
					i = e.call(this, t, n) || this;
					i.updateLiveEdgeStatus();
					if(i.player_.liveTracker) {
						i.on(i.player_.liveTracker, "liveedgechange", i.updateLiveEdgeStatus)
					}
					return i
				}
				var n = t.prototype;
				n.createEl = function t() {
					var n = e.prototype.createEl.call(this, "button", {
						className: "vjs-seek-to-live-control vjs-control"
					});
					this.textEl_ = E("span", {
						className: "vjs-seek-to-live-text",
						innerHTML: this.localize("LIVE")
					}, {
						"aria-hidden": "true"
					});
					n.appendChild(this.textEl_);
					return n
				};
				n.updateLiveEdgeStatus = function e(t) {
					if(!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {
						this.setAttribute("aria-disabled", true);
						this.addClass("vjs-at-live-edge");
						this.controlText("Seek to live, currently playing live")
					} else {
						this.setAttribute("aria-disabled", false);
						this.removeClass("vjs-at-live-edge");
						this.controlText("Seek to live, currently behind live")
					}
				};
				n.handleClick = function e() {
					this.player_.liveTracker.seekToLiveEdge()
				};
				n.dispose = function t() {
					if(this.player_.liveTracker) {
						this.off(this.player_.liveTracker, "liveedgechange", this.updateLiveEdgeStatus)
					}
					this.textEl_ = null;
					e.prototype.dispose.call(this)
				};
				return t
			}(mi);
			Oi.prototype.controlText_ = "Seek to live, currently playing live";
			He.registerComponent("SeekToLive", Oi);
			var Ni = function e(t, n, i) {
				t = Number(t);
				return Math.min(i, Math.max(n, isNaN(t) ? n : t))
			};
			var xi = function(e) {
				Ke(t, e);

				function t(t, n) {
					var i;
					i = e.call(this, t, n) || this;
					i.bar = i.getChild(i.options_.barName);
					i.vertical(!!i.options_.vertical);
					i.enable();
					return i
				}
				var n = t.prototype;
				n.enabled = function e() {
					return this.enabled_
				};
				n.enable = function e() {
					if(this.enabled()) {
						return
					}
					this.on("mousedown", this.handleMouseDown);
					this.on("touchstart", this.handleMouseDown);
					this.on("keydown", this.handleKeyDown);
					this.on("click", this.handleClick);
					this.on(this.player_, "controlsvisible", this.update);
					if(this.playerEvent) {
						this.on(this.player_, this.playerEvent, this.update)
					}
					this.removeClass("disabled");
					this.setAttribute("tabindex", 0);
					this.enabled_ = true
				};
				n.disable = function e() {
					if(!this.enabled()) {
						return
					}
					var t = this.bar.el_.ownerDocument;
					this.off("mousedown", this.handleMouseDown);
					this.off("touchstart", this.handleMouseDown);
					this.off("keydown", this.handleKeyDown);
					this.off("click", this.handleClick);
					this.off(this.player_, "controlsvisible", this.update);
					this.off(t, "mousemove", this.handleMouseMove);
					this.off(t, "mouseup", this.handleMouseUp);
					this.off(t, "touchmove", this.handleMouseMove);
					this.off(t, "touchend", this.handleMouseUp);
					this.removeAttribute("tabindex");
					this.addClass("disabled");
					if(this.playerEvent) {
						this.off(this.player_, this.playerEvent, this.update)
					}
					this.enabled_ = false
				};
				n.createEl = function t(n, i, r) {
					if(i === void 0) {
						i = {}
					}
					if(r === void 0) {
						r = {}
					}
					i.className = i.className + " vjs-slider";
					i = h({
						tabIndex: 0
					}, i);
					r = h({
						role: "slider",
						"aria-valuenow": 0,
						"aria-valuemin": 0,
						"aria-valuemax": 100,
						tabIndex: 0
					}, r);
					return e.prototype.createEl.call(this, n, i, r)
				};
				n.handleMouseDown = function e(t) {
					var n = this.bar.el_.ownerDocument;
					if(t.type === "mousedown") {
						t.preventDefault()
					}
					if(t.type === "touchstart" && !rt) {
						t.preventDefault()
					}
					U();
					this.addClass("vjs-sliding");
					this.trigger("slideractive");
					this.on(n, "mousemove", this.handleMouseMove);
					this.on(n, "mouseup", this.handleMouseUp);
					this.on(n, "touchmove", this.handleMouseMove);
					this.on(n, "touchend", this.handleMouseUp);
					this.handleMouseMove(t)
				};
				n.handleMouseMove = function e(t) {};
				n.handleMouseUp = function e() {
					var t = this.bar.el_.ownerDocument;
					M();
					this.removeClass("vjs-sliding");
					this.trigger("sliderinactive");
					this.off(t, "mousemove", this.handleMouseMove);
					this.off(t, "mouseup", this.handleMouseUp);
					this.off(t, "touchmove", this.handleMouseMove);
					this.off(t, "touchend", this.handleMouseUp);
					this.update()
				};
				n.update = function e() {
					var t = this;
					if(!this.el_ || !this.bar) {
						return
					}
					var n = this.getProgress();
					if(n === this.progress_) {
						return n
					}
					this.progress_ = n;
					this.requestAnimationFrame(function() {
						var e = t.vertical() ? "height" : "width";
						t.bar.el().style[e] = (n * 100).toFixed(2) + "%"
					});
					return n
				};
				n.getProgress = function e() {
					return Number(Ni(this.getPercent(), 0, 1).toFixed(4))
				};
				n.calculateDistance = function e(t) {
					var n = V(this.el_, t);
					if(this.vertical()) {
						return n.y
					}
					return n.x
				};
				n.handleKeyDown = function t(n) {
					if(Rt.isEventKey(n, "Left") || Rt.isEventKey(n, "Down")) {
						n.preventDefault();
						n.stopPropagation();
						this.stepBack()
					} else if(Rt.isEventKey(n, "Right") || Rt.isEventKey(n, "Up")) {
						n.preventDefault();
						n.stopPropagation();
						this.stepForward()
					} else {
						e.prototype.handleKeyDown.call(this, n)
					}
				};
				n.handleClick = function e(t) {
					t.stopPropagation();
					t.preventDefault()
				};
				n.vertical = function e(t) {
					if(t === undefined) {
						return this.vertical_ || false
					}
					this.vertical_ = !!t;
					if(this.vertical_) {
						this.addClass("vjs-slider-vertical")
					} else {
						this.addClass("vjs-slider-horizontal")
					}
				};
				return t
			}(He);
			He.registerComponent("Slider", xi);
			var Di = function e(t, n) {
				return Ni(t / n * 100, 0, 100).toFixed(2) + "%"
			};
			var Ri = function(e) {
				Ke(n, e);

				function n(t, n) {
					var i;
					i = e.call(this, t, n) || this;
					i.partEls_ = [];
					i.on(t, "progress", i.update);
					return i
				}
				var i = n.prototype;
				i.createEl = function n() {
					var i = e.prototype.createEl.call(this, "div", {
						className: "vjs-load-progress"
					});
					var r = E("span", {
						className: "vjs-control-text"
					});
					var a = E("span", {
						textContent: this.localize("Loaded")
					});
					var s = t.createTextNode(": ");
					this.percentageEl_ = E("span", {
						className: "vjs-control-text-loaded-percentage",
						textContent: "0%"
					});
					i.appendChild(r);
					r.appendChild(a);
					r.appendChild(s);
					r.appendChild(this.percentageEl_);
					return i
				};
				i.dispose = function t() {
					this.partEls_ = null;
					this.percentageEl_ = null;
					e.prototype.dispose.call(this)
				};
				i.update = function e(t) {
					var n = this;
					this.requestAnimationFrame(function() {
						var e = n.player_.liveTracker;
						var t = n.player_.buffered();
						var i = e && e.isLive() ? e.seekableEnd() : n.player_.duration();
						var r = n.player_.bufferedEnd();
						var a = n.partEls_;
						var s = Di(r, i);
						if(n.percent_ !== s) {
							n.el_.style.width = s;
							P(n.percentageEl_, s);
							n.percent_ = s
						}
						for(var o = 0; o < t.length; o++) {
							var l = t.start(o);
							var u = t.end(o);
							var c = a[o];
							if(!c) {
								c = n.el_.appendChild(E());
								a[o] = c
							}
							if(c.dataset.start === l && c.dataset.end === u) {
								continue
							}
							c.dataset.start = l;
							c.dataset.end = u;
							c.style.left = Di(l, r);
							c.style.width = Di(u - l, r)
						}
						for(var d = a.length; d > t.length; d--) {
							n.el_.removeChild(a[d - 1])
						}
						a.length = t.length
					})
				};
				return n
			}(He);
			He.registerComponent("LoadProgressBar", Ri);
			var Ui = function(e) {
				Ke(t, e);

				function t(t, n) {
					var i;
					i = e.call(this, t, n) || this;
					i.update = Te(Se(Ye(i), i.update), Ae);
					return i
				}
				var n = t.prototype;
				n.createEl = function t() {
					return e.prototype.createEl.call(this, "div", {
						className: "vjs-time-tooltip"
					}, {
						"aria-hidden": "true"
					})
				};
				n.update = function e(t, n, i) {
					var r = B(this.el_);
					var a = B(this.player_.el());
					var s = t.width * n;
					if(!a || !r) {
						return
					}
					var o = t.left - a.left + s;
					var l = t.width - s + (a.right - t.right);
					var u = r.width / 2;
					if(o < u) {
						u += u - o
					} else if(l < u) {
						u = l
					}
					if(u < 0) {
						u = 0
					} else if(u > r.width) {
						u = r.width
					}
					this.el_.style.right = "-" + u + "px";
					this.write(i)
				};
				n.write = function e(t) {
					P(this.el_, t)
				};
				n.updateTime = function e(t, n, i, r) {
					var a = this;
					if(this.rafId_) {
						this.cancelAnimationFrame(this.rafId_)
					}
					this.rafId_ = this.requestAnimationFrame(function() {
						var e;
						var s = a.player_.duration();
						if(a.player_.liveTracker && a.player_.liveTracker.isLive()) {
							var o = a.player_.liveTracker.liveWindow();
							var l = o - n * o;
							e = (l < 1 ? "" : "-") + Ei(l, o)
						} else {
							e = Ei(i, s)
						}
						a.update(t, n, e);
						if(r) {
							r()
						}
					})
				};
				return t
			}(He);
			He.registerComponent("TimeTooltip", Ui);
			var Mi = function(e) {
				Ke(t, e);

				function t(t, n) {
					var i;
					i = e.call(this, t, n) || this;
					i.update = Te(Se(Ye(i), i.update), Ae);
					return i
				}
				var n = t.prototype;
				n.createEl = function t() {
					return e.prototype.createEl.call(this, "div", {
						className: "vjs-play-progress vjs-slider-bar"
					}, {
						"aria-hidden": "true"
					})
				};
				n.update = function e(t, n) {
					var i = this.getChild("timeTooltip");
					if(!i) {
						return
					}
					var r = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();
					i.updateTime(t, n, r)
				};
				return t
			}(He);
			Mi.prototype.options_ = {
				children: []
			};
			if(!ft && !$e) {
				Mi.prototype.options_.children.push("timeTooltip")
			}
			He.registerComponent("PlayProgressBar", Mi);
			var Bi = function(e) {
				Ke(t, e);

				function t(t, n) {
					var i;
					i = e.call(this, t, n) || this;
					i.update = Te(Se(Ye(i), i.update), Ae);
					return i
				}
				var n = t.prototype;
				n.createEl = function t() {
					return e.prototype.createEl.call(this, "div", {
						className: "vjs-mouse-display"
					})
				};
				n.update = function e(t, n) {
					var i = this;
					var r = n * this.player_.duration();
					this.getChild("timeTooltip").updateTime(t, n, r, function() {
						i.el_.style.left = t.width * n + "px"
					})
				};
				return t
			}(He);
			Bi.prototype.options_ = {
				children: ["timeTooltip"]
			};
			He.registerComponent("MouseTimeDisplay", Bi);
			var Fi = 5;
			var Vi = 12;
			var qi = function(e) {
				Ke(n, e);

				function n(t, n) {
					var i;
					i = e.call(this, t, n) || this;
					i.setEventHandlers_();
					return i
				}
				var i = n.prototype;
				i.setEventHandlers_ = function e() {
					this.update_ = Se(this, this.update);
					this.update = Te(this.update_, Ae);
					this.on(this.player_, ["ended", "durationchange", "timeupdate"], this.update);
					if(this.player_.liveTracker) {
						this.on(this.player_.liveTracker, "liveedgechange", this.update)
					}
					this.updateInterval = null;
					this.on(this.player_, ["playing"], this.enableInterval_);
					this.on(this.player_, ["ended", "pause", "waiting"], this.disableInterval_);
					if("hidden" in t && "visibilityState" in t) {
						this.on(t, "visibilitychange", this.toggleVisibility_)
					}
				};
				i.toggleVisibility_ = function e(n) {
					if(t.hidden) {
						this.disableInterval_(n)
					} else {
						this.enableInterval_();
						this.update()
					}
				};
				i.enableInterval_ = function e() {
					if(this.updateInterval) {
						return
					}
					this.updateInterval = this.setInterval(this.update, Ae)
				};
				i.disableInterval_ = function e(t) {
					if(this.player_.liveTracker && this.player_.liveTracker.isLive() && t.type !== "ended") {
						return
					}
					if(!this.updateInterval) {
						return
					}
					this.clearInterval(this.updateInterval);
					this.updateInterval = null
				};
				i.createEl = function t() {
					return e.prototype.createEl.call(this, "div", {
						className: "vjs-progress-holder"
					}, {
						"aria-label": this.localize("Progress Bar")
					})
				};
				i.update = function t(n) {
					var i = this;
					var r = e.prototype.update.call(this);
					this.requestAnimationFrame(function() {
						var e = i.player_.ended() ? i.player_.duration() : i.getCurrentTime_();
						var t = i.player_.liveTracker;
						var n = i.player_.duration();
						if(t && t.isLive()) {
							n = i.player_.liveTracker.liveCurrentTime()
						}
						if(i.percent_ !== r) {
							i.el_.setAttribute("aria-valuenow", (r * 100).toFixed(2));
							i.percent_ = r
						}
						if(i.currentTime_ !== e || i.duration_ !== n) {
							i.el_.setAttribute("aria-valuetext", i.localize("progress bar timing: currentTime={1} duration={2}", [Ei(e, n), Ei(n, n)], "{1} of {2}"));
							i.currentTime_ = e;
							i.duration_ = n
						}
						if(i.bar) {
							i.bar.update(B(i.el()), i.getProgress())
						}
					});
					return r
				};
				i.getCurrentTime_ = function e() {
					return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime()
				};
				i.getPercent = function e() {
					var t = this.getCurrentTime_();
					var n;
					var i = this.player_.liveTracker;
					if(i && i.isLive()) {
						n = (t - i.seekableStart()) / i.liveWindow();
						if(i.atLiveEdge()) {
							n = 1
						}
					} else {
						n = t / this.player_.duration()
					}
					return n
				};
				i.handleMouseDown = function t(n) {
					if(!K(n)) {
						return
					}
					n.stopPropagation();
					this.player_.scrubbing(true);
					this.videoWasPlaying = !this.player_.paused();
					this.player_.pause();
					e.prototype.handleMouseDown.call(this, n)
				};
				i.handleMouseMove = function e(t) {
					if(!K(t)) {
						return
					}
					var n;
					var i = this.calculateDistance(t);
					var r = this.player_.liveTracker;
					if(!r || !r.isLive()) {
						n = i * this.player_.duration();
						if(n === this.player_.duration()) {
							n = n - .1
						}
					} else {
						var a = r.seekableStart();
						var s = r.liveCurrentTime();
						n = a + i * r.liveWindow();
						if(n >= s) {
							n = s
						}
						if(n <= a) {
							n = a + .1
						}
						if(n === Infinity) {
							return
						}
					}
					this.player_.currentTime(n)
				};
				i.enable = function t() {
					e.prototype.enable.call(this);
					var n = this.getChild("mouseTimeDisplay");
					if(!n) {
						return
					}
					n.show()
				};
				i.disable = function t() {
					e.prototype.disable.call(this);
					var n = this.getChild("mouseTimeDisplay");
					if(!n) {
						return
					}
					n.hide()
				};
				i.handleMouseUp = function t(n) {
					e.prototype.handleMouseUp.call(this, n);
					if(n) {
						n.stopPropagation()
					}
					this.player_.scrubbing(false);
					this.player_.trigger({
						type: "timeupdate",
						target: this,
						manuallyTriggered: true
					});
					if(this.videoWasPlaying) {
						Lt(this.player_.play())
					} else {
						this.update_()
					}
				};
				i.stepForward = function e() {
					this.player_.currentTime(this.player_.currentTime() + Fi)
				};
				i.stepBack = function e() {
					this.player_.currentTime(this.player_.currentTime() - Fi)
				};
				i.handleAction = function e(t) {
					if(this.player_.paused()) {
						this.player_.play()
					} else {
						this.player_.pause()
					}
				};
				i.handleKeyDown = function t(n) {
					if(Rt.isEventKey(n, "Space") || Rt.isEventKey(n, "Enter")) {
						n.preventDefault();
						n.stopPropagation();
						this.handleAction(n)
					} else if(Rt.isEventKey(n, "Home")) {
						n.preventDefault();
						n.stopPropagation();
						this.player_.currentTime(0)
					} else if(Rt.isEventKey(n, "End")) {
						n.preventDefault();
						n.stopPropagation();
						this.player_.currentTime(this.player_.duration())
					} else if(/^[0-9]$/.test(Rt(n))) {
						n.preventDefault();
						n.stopPropagation();
						var i = (Rt.codes[Rt(n)] - Rt.codes["0"]) * 10 / 100;
						this.player_.currentTime(this.player_.duration() * i)
					} else if(Rt.isEventKey(n, "PgDn")) {
						n.preventDefault();
						n.stopPropagation();
						this.player_.currentTime(this.player_.currentTime() - Fi * Vi)
					} else if(Rt.isEventKey(n, "PgUp")) {
						n.preventDefault();
						n.stopPropagation();
						this.player_.currentTime(this.player_.currentTime() + Fi * Vi)
					} else {
						e.prototype.handleKeyDown.call(this, n)
					}
				};
				return n
			}(xi);
			qi.prototype.options_ = {
				children: ["loadProgressBar", "playProgressBar"],
				barName: "playProgressBar"
			};
			if(!ft && !$e) {
				qi.prototype.options_.children.splice(1, 0, "mouseTimeDisplay")
			}
			He.registerComponent("SeekBar", qi);
			var Hi = function(e) {
				Ke(t, e);

				function t(t, n) {
					var i;
					i = e.call(this, t, n) || this;
					i.handleMouseMove = Te(Se(Ye(i), i.handleMouseMove), Ae);
					i.throttledHandleMouseSeek = Te(Se(Ye(i), i.handleMouseSeek), Ae);
					i.enable();
					return i
				}
				var n = t.prototype;
				n.createEl = function t() {
					return e.prototype.createEl.call(this, "div", {
						className: "vjs-progress-control vjs-control"
					})
				};
				n.handleMouseMove = function e(t) {
					var n = this.getChild("seekBar");
					if(!n) {
						return
					}
					var i = n.getChild("playProgressBar");
					var r = n.getChild("mouseTimeDisplay");
					if(!i && !r) {
						return
					}
					var a = n.el();
					var s = B(a);
					var o = V(a, t).x;
					o = Ni(0, 1, o);
					if(r) {
						r.update(s, o)
					}
					if(i) {
						i.update(s, n.getProgress())
					}
				};
				n.handleMouseSeek = function e(t) {
					var n = this.getChild("seekBar");
					if(n) {
						n.handleMouseMove(t)
					}
				};
				n.enabled = function e() {
					return this.enabled_
				};
				n.disable = function e() {
					this.children().forEach(function(e) {
						return e.disable && e.disable()
					});
					if(!this.enabled()) {
						return
					}
					this.off(["mousedown", "touchstart"], this.handleMouseDown);
					this.off(this.el_, "mousemove", this.handleMouseMove);
					this.handleMouseUp();
					this.addClass("disabled");
					this.enabled_ = false
				};
				n.enable = function e() {
					this.children().forEach(function(e) {
						return e.enable && e.enable()
					});
					if(this.enabled()) {
						return
					}
					this.on(["mousedown", "touchstart"], this.handleMouseDown);
					this.on(this.el_, "mousemove", this.handleMouseMove);
					this.removeClass("disabled");
					this.enabled_ = true
				};
				n.handleMouseDown = function e(t) {
					var n = this.el_.ownerDocument;
					var i = this.getChild("seekBar");
					if(i) {
						i.handleMouseDown(t)
					}
					this.on(n, "mousemove", this.throttledHandleMouseSeek);
					this.on(n, "touchmove", this.throttledHandleMouseSeek);
					this.on(n, "mouseup", this.handleMouseUp);
					this.on(n, "touchend", this.handleMouseUp)
				};
				n.handleMouseUp = function e(t) {
					var n = this.el_.ownerDocument;
					var i = this.getChild("seekBar");
					if(i) {
						i.handleMouseUp(t)
					}
					this.off(n, "mousemove", this.throttledHandleMouseSeek);
					this.off(n, "touchmove", this.throttledHandleMouseSeek);
					this.off(n, "mouseup", this.handleMouseUp);
					this.off(n, "touchend", this.handleMouseUp)
				};
				return t
			}(He);
			Hi.prototype.options_ = {
				children: ["seekBar"]
			};
			He.registerComponent("ProgressControl", Hi);
			var Gi = function(e) {
				Ke(n, e);

				function n(n, i) {
					var r;
					r = e.call(this, n, i) || this;
					r.on(n, ["enterpictureinpicture", "leavepictureinpicture"], r.handlePictureInPictureChange);
					if(!t.pictureInPictureEnabled) {
						r.disable()
					}
					return r
				}
				var i = n.prototype;
				i.buildCSSClass = function t() {
					return "vjs-picture-in-picture-control " + e.prototype.buildCSSClass.call(this)
				};
				i.handlePictureInPictureChange = function e(t) {
					if(this.player_.isInPictureInPicture()) {
						this.controlText("Exit Picture-in-Picture")
					} else {
						this.controlText("Picture-in-Picture")
					}
				};
				i.handleClick = function e(t) {
					if(!this.player_.isInPictureInPicture()) {
						this.player_.requestPictureInPicture()
					} else {
						this.player_.exitPictureInPicture()
					}
				};
				return n
			}(mi);
			Gi.prototype.controlText_ = "Picture-in-Picture";
			He.registerComponent("PictureInPictureToggle", Gi);
			var Yi = function(e) {
				Ke(n, e);

				function n(n, i) {
					var r;
					r = e.call(this, n, i) || this;
					r.on(n, "fullscreenchange", r.handleFullscreenChange);
					if(t[n.fsApi_.fullscreenEnabled] === false) {
						r.disable()
					}
					return r
				}
				var i = n.prototype;
				i.buildCSSClass = function t() {
					return "vjs-fullscreen-control " + e.prototype.buildCSSClass.call(this)
				};
				i.handleFullscreenChange = function e(t) {
					if(this.player_.isFullscreen()) {
						this.controlText("Non-Fullscreen")
					} else {
						this.controlText("Fullscreen")
					}
				};
				i.handleClick = function e(t) {
					if(!this.player_.isFullscreen()) {
						this.player_.requestFullscreen()
					} else {
						this.player_.exitFullscreen()
					}
				};
				return n
			}(mi);
			Yi.prototype.controlText_ = "Fullscreen";
			He.registerComponent("FullscreenToggle", Yi);
			var zi = function e(t, n) {
				if(n.tech_ && !n.tech_.featuresVolumeControl) {
					t.addClass("vjs-hidden")
				}
				t.on(n, "loadstart", function() {
					if(!n.tech_.featuresVolumeControl) {
						t.addClass("vjs-hidden")
					} else {
						t.removeClass("vjs-hidden")
					}
				})
			};
			var Ki = function(e) {
				Ke(t, e);

				function t() {
					return e.apply(this, arguments) || this
				}
				var n = t.prototype;
				n.createEl = function t() {
					return e.prototype.createEl.call(this, "div", {
						className: "vjs-volume-level",
						innerHTML: '<span class="vjs-control-text"></span>'
					})
				};
				return t
			}(He);
			He.registerComponent("VolumeLevel", Ki);
			var Wi = function(e) {
				Ke(t, e);

				function t(t, n) {
					var i;
					i = e.call(this, t, n) || this;
					i.on("slideractive", i.updateLastVolume_);
					i.on(t, "volumechange", i.updateARIAAttributes);
					t.ready(function() {
						return i.updateARIAAttributes()
					});
					return i
				}
				var n = t.prototype;
				n.createEl = function t() {
					return e.prototype.createEl.call(this, "div", {
						className: "vjs-volume-bar vjs-slider-bar"
					}, {
						"aria-label": this.localize("Volume Level"),
						"aria-live": "polite"
					})
				};
				n.handleMouseDown = function t(n) {
					if(!K(n)) {
						return
					}
					e.prototype.handleMouseDown.call(this, n)
				};
				n.handleMouseMove = function e(t) {
					if(!K(t)) {
						return
					}
					this.checkMuted();
					this.player_.volume(this.calculateDistance(t))
				};
				n.checkMuted = function e() {
					if(this.player_.muted()) {
						this.player_.muted(false)
					}
				};
				n.getPercent = function e() {
					if(this.player_.muted()) {
						return 0
					}
					return this.player_.volume()
				};
				n.stepForward = function e() {
					this.checkMuted();
					this.player_.volume(this.player_.volume() + .1)
				};
				n.stepBack = function e() {
					this.checkMuted();
					this.player_.volume(this.player_.volume() - .1)
				};
				n.updateARIAAttributes = function e(t) {
					var n = this.player_.muted() ? 0 : this.volumeAsPercentage_();
					this.el_.setAttribute("aria-valuenow", n);
					this.el_.setAttribute("aria-valuetext", n + "%")
				};
				n.volumeAsPercentage_ = function e() {
					return Math.round(this.player_.volume() * 100)
				};
				n.updateLastVolume_ = function e() {
					var t = this;
					var n = this.player_.volume();
					this.one("sliderinactive", function() {
						if(t.player_.volume() === 0) {
							t.player_.lastVolume_(n)
						}
					})
				};
				return t
			}(xi);
			Wi.prototype.options_ = {
				children: ["volumeLevel"],
				barName: "volumeLevel"
			};
			Wi.prototype.playerEvent = "volumechange";
			He.registerComponent("VolumeBar", Wi);
			var Xi = function(e) {
				Ke(t, e);

				function t(t, n) {
					var i;
					if(n === void 0) {
						n = {}
					}
					n.vertical = n.vertical || false;
					if(typeof n.volumeBar === "undefined" || g(n.volumeBar)) {
						n.volumeBar = n.volumeBar || {};
						n.volumeBar.vertical = n.vertical
					}
					i = e.call(this, t, n) || this;
					zi(Ye(i), t);
					i.throttledHandleMouseMove = Te(Se(Ye(i), i.handleMouseMove), Ae);
					i.on("mousedown", i.handleMouseDown);
					i.on("touchstart", i.handleMouseDown);
					i.on(i.volumeBar, ["focus", "slideractive"], function() {
						i.volumeBar.addClass("vjs-slider-active");
						i.addClass("vjs-slider-active");
						i.trigger("slideractive")
					});
					i.on(i.volumeBar, ["blur", "sliderinactive"], function() {
						i.volumeBar.removeClass("vjs-slider-active");
						i.removeClass("vjs-slider-active");
						i.trigger("sliderinactive")
					});
					return i
				}
				var n = t.prototype;
				n.createEl = function t() {
					var n = "vjs-volume-horizontal";
					if(this.options_.vertical) {
						n = "vjs-volume-vertical"
					}
					return e.prototype.createEl.call(this, "div", {
						className: "vjs-volume-control vjs-control " + n
					})
				};
				n.handleMouseDown = function e(t) {
					var n = this.el_.ownerDocument;
					this.on(n, "mousemove", this.throttledHandleMouseMove);
					this.on(n, "touchmove", this.throttledHandleMouseMove);
					this.on(n, "mouseup", this.handleMouseUp);
					this.on(n, "touchend", this.handleMouseUp)
				};
				n.handleMouseUp = function e(t) {
					var n = this.el_.ownerDocument;
					this.off(n, "mousemove", this.throttledHandleMouseMove);
					this.off(n, "touchmove", this.throttledHandleMouseMove);
					this.off(n, "mouseup", this.handleMouseUp);
					this.off(n, "touchend", this.handleMouseUp)
				};
				n.handleMouseMove = function e(t) {
					this.volumeBar.handleMouseMove(t)
				};
				return t
			}(He);
			Xi.prototype.options_ = {
				children: ["volumeBar"]
			};
			He.registerComponent("VolumeControl", Xi);
			var Ji = function e(t, n) {
				if(n.tech_ && !n.tech_.featuresMuteControl) {
					t.addClass("vjs-hidden")
				}
				t.on(n, "loadstart", function() {
					if(!n.tech_.featuresMuteControl) {
						t.addClass("vjs-hidden")
					} else {
						t.removeClass("vjs-hidden")
					}
				})
			};
			var Qi = function(e) {
				Ke(t, e);

				function t(t, n) {
					var i;
					i = e.call(this, t, n) || this;
					Ji(Ye(i), t);
					i.on(t, ["loadstart", "volumechange"], i.update);
					return i
				}
				var n = t.prototype;
				n.buildCSSClass = function t() {
					return "vjs-mute-control " + e.prototype.buildCSSClass.call(this)
				};
				n.handleClick = function e(t) {
					var n = this.player_.volume();
					var i = this.player_.lastVolume_();
					if(n === 0) {
						var r = i < .1 ? .1 : i;
						this.player_.volume(r);
						this.player_.muted(false)
					} else {
						this.player_.muted(this.player_.muted() ? false : true)
					}
				};
				n.update = function e(t) {
					this.updateIcon_();
					this.updateControlText_()
				};
				n.updateIcon_ = function e() {
					var t = this.player_.volume();
					var n = 3;
					if(ft && this.player_.tech_ && this.player_.tech_.el_) {
						this.player_.muted(this.player_.tech_.el_.muted)
					}
					if(t === 0 || this.player_.muted()) {
						n = 0
					} else if(t < .33) {
						n = 1
					} else if(t < .67) {
						n = 2
					}
					for(var i = 0; i < 4; i++) {
						I(this.el_, "vjs-vol-" + i)
					}
					j(this.el_, "vjs-vol-" + n)
				};
				n.updateControlText_ = function e() {
					var t = this.player_.muted() || this.player_.volume() === 0;
					var n = t ? "Unmute" : "Mute";
					if(this.controlText() !== n) {
						this.controlText(n)
					}
				};
				return t
			}(mi);
			Qi.prototype.controlText_ = "Mute";
			He.registerComponent("MuteToggle", Qi);
			var Zi = function(e) {
				Ke(n, e);

				function n(t, n) {
					var i;
					if(n === void 0) {
						n = {}
					}
					if(typeof n.inline !== "undefined") {
						n.inline = n.inline
					} else {
						n.inline = true
					}
					if(typeof n.volumeControl === "undefined" || g(n.volumeControl)) {
						n.volumeControl = n.volumeControl || {};
						n.volumeControl.vertical = !n.inline
					}
					i = e.call(this, t, n) || this;
					i.on(t, ["loadstart"], i.volumePanelState_);
					i.on(i.muteToggle, "keyup", i.handleKeyPress);
					i.on(i.volumeControl, "keyup", i.handleVolumeControlKeyUp);
					i.on("keydown", i.handleKeyPress);
					i.on("mouseover", i.handleMouseOver);
					i.on("mouseout", i.handleMouseOut);
					i.on(i.volumeControl, ["slideractive"], i.sliderActive_);
					i.on(i.volumeControl, ["sliderinactive"], i.sliderInactive_);
					return i
				}
				var i = n.prototype;
				i.sliderActive_ = function e() {
					this.addClass("vjs-slider-active")
				};
				i.sliderInactive_ = function e() {
					this.removeClass("vjs-slider-active")
				};
				i.volumePanelState_ = function e() {
					if(this.volumeControl.hasClass("vjs-hidden") && this.muteToggle.hasClass("vjs-hidden")) {
						this.addClass("vjs-hidden")
					}
					if(this.volumeControl.hasClass("vjs-hidden") && !this.muteToggle.hasClass("vjs-hidden")) {
						this.addClass("vjs-mute-toggle-only")
					}
				};
				i.createEl = function t() {
					var n = "vjs-volume-panel-horizontal";
					if(!this.options_.inline) {
						n = "vjs-volume-panel-vertical"
					}
					return e.prototype.createEl.call(this, "div", {
						className: "vjs-volume-panel vjs-control " + n
					})
				};
				i.dispose = function t() {
					this.handleMouseOut();
					e.prototype.dispose.call(this)
				};
				i.handleVolumeControlKeyUp = function e(t) {
					if(Rt.isEventKey(t, "Esc")) {
						this.muteToggle.focus()
					}
				};
				i.handleMouseOver = function e(n) {
					this.addClass("vjs-hover");
					ve(t, "keyup", Se(this, this.handleKeyPress))
				};
				i.handleMouseOut = function e(n) {
					this.removeClass("vjs-hover");
					ge(t, "keyup", Se(this, this.handleKeyPress))
				};
				i.handleKeyPress = function e(t) {
					if(Rt.isEventKey(t, "Esc")) {
						this.handleMouseOut()
					}
				};
				return n
			}(He);
			Zi.prototype.options_ = {
				children: ["muteToggle", "volumeControl"]
			};
			He.registerComponent("VolumePanel", Zi);
			var $i = function(e) {
				Ke(n, e);

				function n(t, n) {
					var i;
					i = e.call(this, t, n) || this;
					if(n) {
						i.menuButton_ = n.menuButton
					}
					i.focusedChild_ = -1;
					i.on("keydown", i.handleKeyDown);
					i.boundHandleBlur_ = Se(Ye(i), i.handleBlur);
					i.boundHandleTapClick_ = Se(Ye(i), i.handleTapClick);
					return i
				}
				var i = n.prototype;
				i.addEventListenerForItem = function e(t) {
					if(!(t instanceof He)) {
						return
					}
					this.on(t, "blur", this.boundHandleBlur_);
					this.on(t, ["tap", "click"], this.boundHandleTapClick_)
				};
				i.removeEventListenerForItem = function e(t) {
					if(!(t instanceof He)) {
						return
					}
					this.off(t, "blur", this.boundHandleBlur_);
					this.off(t, ["tap", "click"], this.boundHandleTapClick_)
				};
				i.removeChild = function t(n) {
					if(typeof n === "string") {
						n = this.getChild(n)
					}
					this.removeEventListenerForItem(n);
					e.prototype.removeChild.call(this, n)
				};
				i.addItem = function e(t) {
					var n = this.addChild(t);
					if(n) {
						this.addEventListenerForItem(n)
					}
				};
				i.createEl = function t() {
					var n = this.options_.contentElType || "ul";
					this.contentEl_ = E(n, {
						className: "vjs-menu-content"
					});
					this.contentEl_.setAttribute("role", "menu");
					var i = e.prototype.createEl.call(this, "div", {
						append: this.contentEl_,
						className: "vjs-menu"
					});
					i.appendChild(this.contentEl_);
					ve(i, "click", function(e) {
						e.preventDefault();
						e.stopImmediatePropagation()
					});
					return i
				};
				i.dispose = function t() {
					this.contentEl_ = null;
					this.boundHandleBlur_ = null;
					this.boundHandleTapClick_ = null;
					e.prototype.dispose.call(this)
				};
				i.handleBlur = function e(n) {
					var i = n.relatedTarget || t.activeElement;
					if(!this.children().some(function(e) {
							return e.el() === i
						})) {
						var r = this.menuButton_;
						if(r && r.buttonPressed_ && i !== r.el().firstChild) {
							r.unpressButton()
						}
					}
				};
				i.handleTapClick = function e(t) {
					if(this.menuButton_) {
						this.menuButton_.unpressButton();
						var n = this.children();
						if(!Array.isArray(n)) {
							return
						}
						var i = n.filter(function(e) {
							return e.el() === t.target
						})[0];
						if(!i) {
							return
						}
						if(i.name() !== "CaptionSettingsMenuItem") {
							this.menuButton_.focus()
						}
					}
				};
				i.handleKeyDown = function e(t) {
					if(Rt.isEventKey(t, "Left") || Rt.isEventKey(t, "Down")) {
						t.preventDefault();
						t.stopPropagation();
						this.stepForward()
					} else if(Rt.isEventKey(t, "Right") || Rt.isEventKey(t, "Up")) {
						t.preventDefault();
						t.stopPropagation();
						this.stepBack()
					}
				};
				i.stepForward = function e() {
					var t = 0;
					if(this.focusedChild_ !== undefined) {
						t = this.focusedChild_ + 1
					}
					this.focus(t)
				};
				i.stepBack = function e() {
					var t = 0;
					if(this.focusedChild_ !== undefined) {
						t = this.focusedChild_ - 1
					}
					this.focus(t)
				};
				i.focus = function e(t) {
					if(t === void 0) {
						t = 0
					}
					var n = this.children().slice();
					var i = n.length && n[0].className && /vjs-menu-title/.test(n[0].className);
					if(i) {
						n.shift()
					}
					if(n.length > 0) {
						if(t < 0) {
							t = 0
						} else if(t >= n.length) {
							t = n.length - 1
						}
						this.focusedChild_ = t;
						n[t].el_.focus()
					}
				};
				return n
			}(He);
			He.registerComponent("Menu", $i);
			var er = function(e) {
				Ke(n, e);

				function n(n, i) {
					var r;
					if(i === void 0) {
						i = {}
					}
					r = e.call(this, n, i) || this;
					r.menuButton_ = new mi(n, i);
					r.menuButton_.controlText(r.controlText_);
					r.menuButton_.el_.setAttribute("aria-haspopup", "true");
					var a = mi.prototype.buildCSSClass();
					r.menuButton_.el_.className = r.buildCSSClass() + " " + a;
					r.menuButton_.removeClass("vjs-control");
					r.addChild(r.menuButton_);
					r.update();
					r.enabled_ = true;
					r.on(r.menuButton_, "tap", r.handleClick);
					r.on(r.menuButton_, "click", r.handleClick);
					r.on(r.menuButton_, "keydown", r.handleKeyDown);
					r.on(r.menuButton_, "mouseenter", function() {
						r.addClass("vjs-hover");
						r.menu.show();
						ve(t, "keyup", Se(Ye(r), r.handleMenuKeyUp))
					});
					r.on("mouseleave", r.handleMouseLeave);
					r.on("keydown", r.handleSubmenuKeyDown);
					return r
				}
				var i = n.prototype;
				i.update = function e() {
					var t = this.createMenu();
					if(this.menu) {
						this.menu.dispose();
						this.removeChild(this.menu)
					}
					this.menu = t;
					this.addChild(t);
					this.buttonPressed_ = false;
					this.menuButton_.el_.setAttribute("aria-expanded", "false");
					if(this.items && this.items.length <= this.hideThreshold_) {
						this.hide()
					} else {
						this.show()
					}
				};
				i.createMenu = function e() {
					var t = new $i(this.player_, {
						menuButton: this
					});
					this.hideThreshold_ = 0;
					if(this.options_.title) {
						var n = E("li", {
							className: "vjs-menu-title",
							innerHTML: Fe(this.options_.title),
							tabIndex: -1
						});
						this.hideThreshold_ += 1;
						var i = new He(this.player_, {
							el: n
						});
						t.addItem(i)
					}
					this.items = this.createItems();
					if(this.items) {
						for(var r = 0; r < this.items.length; r++) {
							t.addItem(this.items[r])
						}
					}
					return t
				};
				i.createItems = function e() {};
				i.createEl = function t() {
					return e.prototype.createEl.call(this, "div", {
						className: this.buildWrapperCSSClass()
					}, {})
				};
				i.buildWrapperCSSClass = function t() {
					var n = "vjs-menu-button";
					if(this.options_.inline === true) {
						n += "-inline"
					} else {
						n += "-popup"
					}
					var i = mi.prototype.buildCSSClass();
					return "vjs-menu-button " + n + " " + i + " " + e.prototype.buildCSSClass.call(this)
				};
				i.buildCSSClass = function t() {
					var n = "vjs-menu-button";
					if(this.options_.inline === true) {
						n += "-inline"
					} else {
						n += "-popup"
					}
					return "vjs-menu-button " + n + " " + e.prototype.buildCSSClass.call(this)
				};
				i.controlText = function e(t, n) {
					if(n === void 0) {
						n = this.menuButton_.el()
					}
					return this.menuButton_.controlText(t, n)
				};
				i.dispose = function t() {
					this.handleMouseLeave();
					e.prototype.dispose.call(this)
				};
				i.handleClick = function e(t) {
					if(this.buttonPressed_) {
						this.unpressButton()
					} else {
						this.pressButton()
					}
				};
				i.handleMouseLeave = function e(n) {
					this.removeClass("vjs-hover");
					ge(t, "keyup", Se(this, this.handleMenuKeyUp))
				};
				i.focus = function e() {
					this.menuButton_.focus()
				};
				i.blur = function e() {
					this.menuButton_.blur()
				};
				i.handleKeyDown = function e(t) {
					if(Rt.isEventKey(t, "Esc") || Rt.isEventKey(t, "Tab")) {
						if(this.buttonPressed_) {
							this.unpressButton()
						}
						if(!Rt.isEventKey(t, "Tab")) {
							t.preventDefault();
							this.menuButton_.focus()
						}
					} else if(Rt.isEventKey(t, "Up") || Rt.isEventKey(t, "Down")) {
						if(!this.buttonPressed_) {
							t.preventDefault();
							this.pressButton()
						}
					}
				};
				i.handleMenuKeyUp = function e(t) {
					if(Rt.isEventKey(t, "Esc") || Rt.isEventKey(t, "Tab")) {
						this.removeClass("vjs-hover")
					}
				};
				i.handleSubmenuKeyPress = function e(t) {
					this.handleSubmenuKeyDown(t)
				};
				i.handleSubmenuKeyDown = function e(t) {
					if(Rt.isEventKey(t, "Esc") || Rt.isEventKey(t, "Tab")) {
						if(this.buttonPressed_) {
							this.unpressButton()
						}
						if(!Rt.isEventKey(t, "Tab")) {
							t.preventDefault();
							this.menuButton_.focus()
						}
					}
				};
				i.pressButton = function e() {
					if(this.enabled_) {
						this.buttonPressed_ = true;
						this.menu.show();
						this.menu.lockShowing();
						this.menuButton_.el_.setAttribute("aria-expanded", "true");
						if(ft && T()) {
							return
						}
						this.menu.focus()
					}
				};
				i.unpressButton = function e() {
					if(this.enabled_) {
						this.buttonPressed_ = false;
						this.menu.unlockShowing();
						this.menu.hide();
						this.menuButton_.el_.setAttribute("aria-expanded", "false")
					}
				};
				i.disable = function e() {
					this.unpressButton();
					this.enabled_ = false;
					this.addClass("vjs-disabled");
					this.menuButton_.disable()
				};
				i.enable = function e() {
					this.enabled_ = true;
					this.removeClass("vjs-disabled");
					this.menuButton_.enable()
				};
				return n
			}(He);
			He.registerComponent("MenuButton", er);
			var tr = function(e) {
				Ke(t, e);

				function t(t, n) {
					var i;
					var r = n.tracks;
					i = e.call(this, t, n) || this;
					if(i.items.length <= 1) {
						i.hide()
					}
					if(!r) {
						return Ye(i)
					}
					var a = Se(Ye(i), i.update);
					r.addEventListener("removetrack", a);
					r.addEventListener("addtrack", a);
					i.player_.on("ready", a);
					i.player_.on("dispose", function() {
						r.removeEventListener("removetrack", a);
						r.removeEventListener("addtrack", a)
					});
					return i
				}
				return t
			}(er);
			He.registerComponent("TrackButton", tr);
			var nr = ["Tab", "Esc", "Up", "Down", "Right", "Left"];
			var ir = function(e) {
				Ke(t, e);

				function t(t, n) {
					var i;
					i = e.call(this, t, n) || this;
					i.selectable = n.selectable;
					i.isSelected_ = n.selected || false;
					i.multiSelectable = n.multiSelectable;
					i.selected(i.isSelected_);
					if(i.selectable) {
						if(i.multiSelectable) {
							i.el_.setAttribute("role", "menuitemcheckbox")
						} else {
							i.el_.setAttribute("role", "menuitemradio")
						}
					} else {
						i.el_.setAttribute("role", "menuitem")
					}
					return i
				}
				var n = t.prototype;
				n.createEl = function t(n, i, r) {
					this.nonIconControl = true;
					return e.prototype.createEl.call(this, "li", h({
						className: "vjs-menu-item",
						innerHTML: '<span class="vjs-menu-item-text">' + this.localize(this.options_.label) + "</span>",
						tabIndex: -1
					}, i), r)
				};
				n.handleKeyDown = function t(n) {
					if(!nr.some(function(e) {
							return Rt.isEventKey(n, e)
						})) {
						e.prototype.handleKeyDown.call(this, n)
					}
				};
				n.handleClick = function e(t) {
					this.selected(true)
				};
				n.selected = function e(t) {
					if(this.selectable) {
						if(t) {
							this.addClass("vjs-selected");
							this.el_.setAttribute("aria-checked", "true");
							this.controlText(", selected");
							this.isSelected_ = true
						} else {
							this.removeClass("vjs-selected");
							this.el_.setAttribute("aria-checked", "false");
							this.controlText("");
							this.isSelected_ = false
						}
					}
				};
				return t
			}(li);
			He.registerComponent("MenuItem", ir);
			var rr = function(n) {
				Ke(i, n);

				function i(i, r) {
					var a;
					var s = r.track;
					var o = i.textTracks();
					r.label = s.label || s.language || "Unknown";
					r.selected = s.mode === "showing";
					a = n.call(this, i, r) || this;
					a.track = s;
					a.kinds = (r.kinds || [r.kind || a.track.kind]).filter(Boolean);
					var l = function e() {
						for(var t = arguments.length, n = new Array(t), i = 0; i < t; i++) {
							n[i] = arguments[i]
						}
						a.handleTracksChange.apply(Ye(a), n)
					};
					var u = function e() {
						for(var t = arguments.length, n = new Array(t), i = 0; i < t; i++) {
							n[i] = arguments[i]
						}
						a.handleSelectedLanguageChange.apply(Ye(a), n)
					};
					i.on(["loadstart", "texttrackchange"], l);
					o.addEventListener("change", l);
					o.addEventListener("selectedlanguagechange", u);
					a.on("dispose", function() {
						i.off(["loadstart", "texttrackchange"], l);
						o.removeEventListener("change", l);
						o.removeEventListener("selectedlanguagechange", u)
					});
					if(o.onchange === undefined) {
						var c;
						a.on(["tap", "click"], function() {
							if(typeof e.Event !== "object") {
								try {
									c = new e.Event("change")
								} catch(e) {}
							}
							if(!c) {
								c = t.createEvent("Event");
								c.initEvent("change", true, true)
							}
							o.dispatchEvent(c)
						})
					}
					a.handleTracksChange();
					return a
				}
				var r = i.prototype;
				r.handleClick = function e(t) {
					var i = this.track;
					var r = this.player_.textTracks();
					n.prototype.handleClick.call(this, t);
					if(!r) {
						return
					}
					for(var a = 0; a < r.length; a++) {
						var s = r[a];
						if(this.kinds.indexOf(s.kind) === -1) {
							continue
						}
						if(s === i) {
							if(s.mode !== "showing") {
								s.mode = "showing"
							}
						} else if(s.mode !== "disabled") {
							s.mode = "disabled"
						}
					}
				};
				r.handleTracksChange = function e(t) {
					var n = this.track.mode === "showing";
					if(n !== this.isSelected_) {
						this.selected(n)
					}
				};
				r.handleSelectedLanguageChange = function e(t) {
					if(this.track.mode === "showing") {
						var n = this.player_.cache_.selectedLanguage;
						if(n && n.enabled && n.language === this.track.language && n.kind !== this.track.kind) {
							return
						}
						this.player_.cache_.selectedLanguage = {
							enabled: true,
							language: this.track.language,
							kind: this.track.kind
						}
					}
				};
				r.dispose = function e() {
					this.track = null;
					n.prototype.dispose.call(this)
				};
				return i
			}(ir);
			He.registerComponent("TextTrackMenuItem", rr);
			var ar = function(e) {
				Ke(t, e);

				function t(t, n) {
					n.track = {
						player: t,
						kind: n.kind,
						kinds: n.kinds,
						default: false,
						mode: "disabled"
					};
					if(!n.kinds) {
						n.kinds = [n.kind]
					}
					if(n.label) {
						n.track.label = n.label
					} else {
						n.track.label = n.kinds.join(" and ") + " off"
					}
					n.selectable = true;
					n.multiSelectable = false;
					return e.call(this, t, n) || this
				}
				var n = t.prototype;
				n.handleTracksChange = function e(t) {
					var n = this.player().textTracks();
					var i = true;
					for(var r = 0, a = n.length; r < a; r++) {
						var s = n[r];
						if(this.options_.kinds.indexOf(s.kind) > -1 && s.mode === "showing") {
							i = false;
							break
						}
					}
					if(i !== this.isSelected_) {
						this.selected(i)
					}
				};
				n.handleSelectedLanguageChange = function e(t) {
					var n = this.player().textTracks();
					var i = true;
					for(var r = 0, a = n.length; r < a; r++) {
						var s = n[r];
						if(["captions", "descriptions", "subtitles"].indexOf(s.kind) > -1 && s.mode === "showing") {
							i = false;
							break
						}
					}
					if(i) {
						this.player_.cache_.selectedLanguage = {
							enabled: false
						}
					}
				};
				return t
			}(rr);
			He.registerComponent("OffTextTrackMenuItem", ar);
			var sr = function(e) {
				Ke(t, e);

				function t(t, n) {
					if(n === void 0) {
						n = {}
					}
					n.tracks = t.textTracks();
					return e.call(this, t, n) || this
				}
				var n = t.prototype;
				n.createItems = function e(t, n) {
					if(t === void 0) {
						t = []
					}
					if(n === void 0) {
						n = rr
					}
					var i;
					if(this.label_) {
						i = this.label_ + " off"
					}
					t.push(new ar(this.player_, {
						kinds: this.kinds_,
						kind: this.kind_,
						label: i
					}));
					this.hideThreshold_ += 1;
					var r = this.player_.textTracks();
					if(!Array.isArray(this.kinds_)) {
						this.kinds_ = [this.kind_]
					}
					for(var a = 0; a < r.length; a++) {
						var s = r[a];
						if(this.kinds_.indexOf(s.kind) > -1) {
							var o = new n(this.player_, {
								track: s,
								kinds: this.kinds_,
								kind: this.kind_,
								selectable: true,
								multiSelectable: false
							});
							o.addClass("vjs-" + s.kind + "-menu-item");
							t.push(o)
						}
					}
					return t
				};
				return t
			}(tr);
			He.registerComponent("TextTrackButton", sr);
			var or = function(e) {
				Ke(t, e);

				function t(t, n) {
					var i;
					var r = n.track;
					var a = n.cue;
					var s = t.currentTime();
					n.selectable = true;
					n.multiSelectable = false;
					n.label = a.text;
					n.selected = a.startTime <= s && s < a.endTime;
					i = e.call(this, t, n) || this;
					i.track = r;
					i.cue = a;
					r.addEventListener("cuechange", Se(Ye(i), i.update));
					return i
				}
				var n = t.prototype;
				n.handleClick = function t(n) {
					e.prototype.handleClick.call(this);
					this.player_.currentTime(this.cue.startTime);
					this.update(this.cue.startTime)
				};
				n.update = function e(t) {
					var n = this.cue;
					var i = this.player_.currentTime();
					this.selected(n.startTime <= i && i < n.endTime)
				};
				return t
			}(ir);
			He.registerComponent("ChaptersTrackMenuItem", or);
			var lr = function(e) {
				Ke(t, e);

				function t(t, n, i) {
					return e.call(this, t, n, i) || this
				}
				var n = t.prototype;
				n.buildCSSClass = function t() {
					return "vjs-chapters-button " + e.prototype.buildCSSClass.call(this)
				};
				n.buildWrapperCSSClass = function t() {
					return "vjs-chapters-button " + e.prototype.buildWrapperCSSClass.call(this)
				};
				n.update = function t(n) {
					if(!this.track_ || n && (n.type === "addtrack" || n.type === "removetrack")) {
						this.setTrack(this.findChaptersTrack())
					}
					e.prototype.update.call(this)
				};
				n.setTrack = function e(t) {
					if(this.track_ === t) {
						return
					}
					if(!this.updateHandler_) {
						this.updateHandler_ = this.update.bind(this)
					}
					if(this.track_) {
						var n = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);
						if(n) {
							n.removeEventListener("load", this.updateHandler_)
						}
						this.track_ = null
					}
					this.track_ = t;
					if(this.track_) {
						this.track_.mode = "hidden";
						var i = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);
						if(i) {
							i.addEventListener("load", this.updateHandler_)
						}
					}
				};
				n.findChaptersTrack = function e() {
					var t = this.player_.textTracks() || [];
					for(var n = t.length - 1; n >= 0; n--) {
						var i = t[n];
						if(i.kind === this.kind_) {
							return i
						}
					}
				};
				n.getMenuCaption = function e() {
					if(this.track_ && this.track_.label) {
						return this.track_.label
					}
					return this.localize(Fe(this.kind_))
				};
				n.createMenu = function t() {
					this.options_.title = this.getMenuCaption();
					return e.prototype.createMenu.call(this)
				};
				n.createItems = function e() {
					var t = [];
					if(!this.track_) {
						return t
					}
					var n = this.track_.cues;
					if(!n) {
						return t
					}
					for(var i = 0, r = n.length; i < r; i++) {
						var a = n[i];
						var s = new or(this.player_, {
							track: this.track_,
							cue: a
						});
						t.push(s)
					}
					return t
				};
				return t
			}(sr);
			lr.prototype.kind_ = "chapters";
			lr.prototype.controlText_ = "Chapters";
			He.registerComponent("ChaptersButton", lr);
			var ur = function(e) {
				Ke(t, e);

				function t(t, n, i) {
					var r;
					r = e.call(this, t, n, i) || this;
					var a = t.textTracks();
					var s = Se(Ye(r), r.handleTracksChange);
					a.addEventListener("change", s);
					r.on("dispose", function() {
						a.removeEventListener("change", s)
					});
					return r
				}
				var n = t.prototype;
				n.handleTracksChange = function e(t) {
					var n = this.player().textTracks();
					var i = false;
					for(var r = 0, a = n.length; r < a; r++) {
						var s = n[r];
						if(s.kind !== this.kind_ && s.mode === "showing") {
							i = true;
							break
						}
					}
					if(i) {
						this.disable()
					} else {
						this.enable()
					}
				};
				n.buildCSSClass = function t() {
					return "vjs-descriptions-button " + e.prototype.buildCSSClass.call(this)
				};
				n.buildWrapperCSSClass = function t() {
					return "vjs-descriptions-button " + e.prototype.buildWrapperCSSClass.call(this)
				};
				return t
			}(sr);
			ur.prototype.kind_ = "descriptions";
			ur.prototype.controlText_ = "Descriptions";
			He.registerComponent("DescriptionsButton", ur);
			var cr = function(e) {
				Ke(t, e);

				function t(t, n, i) {
					return e.call(this, t, n, i) || this
				}
				var n = t.prototype;
				n.buildCSSClass = function t() {
					return "vjs-subtitles-button " + e.prototype.buildCSSClass.call(this)
				};
				n.buildWrapperCSSClass = function t() {
					return "vjs-subtitles-button " + e.prototype.buildWrapperCSSClass.call(this)
				};
				return t
			}(sr);
			cr.prototype.kind_ = "subtitles";
			cr.prototype.controlText_ = "Subtitles";
			He.registerComponent("SubtitlesButton", cr);
			var dr = function(e) {
				Ke(t, e);

				function t(t, n) {
					var i;
					n.track = {
						player: t,
						kind: n.kind,
						label: n.kind + " settings",
						selectable: false,
						default: false,
						mode: "disabled"
					};
					n.selectable = false;
					n.name = "CaptionSettingsMenuItem";
					i = e.call(this, t, n) || this;
					i.addClass("vjs-texttrack-settings");
					i.controlText(", opens " + n.kind + " settings dialog");
					return i
				}
				var n = t.prototype;
				n.handleClick = function e(t) {
					this.player().getChild("textTrackSettings").open()
				};
				return t
			}(rr);
			He.registerComponent("CaptionSettingsMenuItem", dr);
			var fr = function(e) {
				Ke(t, e);

				function t(t, n, i) {
					return e.call(this, t, n, i) || this
				}
				var n = t.prototype;
				n.buildCSSClass = function t() {
					return "vjs-captions-button " + e.prototype.buildCSSClass.call(this)
				};
				n.buildWrapperCSSClass = function t() {
					return "vjs-captions-button " + e.prototype.buildWrapperCSSClass.call(this)
				};
				n.createItems = function t() {
					var n = [];
					if(!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild("textTrackSettings")) {
						n.push(new dr(this.player_, {
							kind: this.kind_
						}));
						this.hideThreshold_ += 1
					}
					return e.prototype.createItems.call(this, n)
				};
				return t
			}(sr);
			fr.prototype.kind_ = "captions";
			fr.prototype.controlText_ = "Captions";
			He.registerComponent("CaptionsButton", fr);
			var pr = function(e) {
				Ke(t, e);

				function t() {
					return e.apply(this, arguments) || this
				}
				var n = t.prototype;
				n.createEl = function t(n, i, r) {
					var a = '<span class="vjs-menu-item-text">' + this.localize(this.options_.label);
					if(this.options_.track.kind === "captions") {
						a += '\n        <span aria-hidden="true" class="vjs-icon-placeholder"></span>\n        <span class="vjs-control-text"> ' + this.localize("Captions") + "</span>\n      "
					}
					a += "</span>";
					var s = e.prototype.createEl.call(this, n, h({
						innerHTML: a
					}, i), r);
					return s
				};
				return t
			}(rr);
			He.registerComponent("SubsCapsMenuItem", pr);
			var hr = function(e) {
				Ke(t, e);

				function t(t, n) {
					var i;
					if(n === void 0) {
						n = {}
					}
					i = e.call(this, t, n) || this;
					i.label_ = "subtitles";
					if(["en", "en-us", "en-ca", "fr-ca"].indexOf(i.player_.language_) > -1) {
						i.label_ = "captions"
					}
					i.menuButton_.controlText(Fe(i.label_));
					return i
				}
				var n = t.prototype;
				n.buildCSSClass = function t() {
					return "vjs-subs-caps-button " + e.prototype.buildCSSClass.call(this)
				};
				n.buildWrapperCSSClass = function t() {
					return "vjs-subs-caps-button " + e.prototype.buildWrapperCSSClass.call(this)
				};
				n.createItems = function t() {
					var n = [];
					if(!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild("textTrackSettings")) {
						n.push(new dr(this.player_, {
							kind: this.label_
						}));
						this.hideThreshold_ += 1
					}
					n = e.prototype.createItems.call(this, n, pr);
					return n
				};
				return t
			}(sr);
			hr.prototype.kinds_ = ["captions", "subtitles"];
			hr.prototype.controlText_ = "Subtitles";
			He.registerComponent("SubsCapsButton", hr);
			var vr = function(e) {
				Ke(t, e);

				function t(t, n) {
					var i;
					var r = n.track;
					var a = t.audioTracks();
					n.label = r.label || r.language || "Unknown";
					n.selected = r.enabled;
					i = e.call(this, t, n) || this;
					i.track = r;
					i.addClass("vjs-" + r.kind + "-menu-item");
					var s = function e() {
						for(var t = arguments.length, n = new Array(t), r = 0; r < t; r++) {
							n[r] = arguments[r]
						}
						i.handleTracksChange.apply(Ye(i), n)
					};
					a.addEventListener("change", s);
					i.on("dispose", function() {
						a.removeEventListener("change", s)
					});
					return i
				}
				var n = t.prototype;
				n.createEl = function t(n, i, r) {
					var a = '<span class="vjs-menu-item-text">' + this.localize(this.options_.label);
					if(this.options_.track.kind === "main-desc") {
						a += '\n        <span aria-hidden="true" class="vjs-icon-placeholder"></span>\n        <span class="vjs-control-text"> ' + this.localize("Descriptions") + "</span>\n      "
					}
					a += "</span>";
					var s = e.prototype.createEl.call(this, n, h({
						innerHTML: a
					}, i), r);
					return s
				};
				n.handleClick = function t(n) {
					var i = this.player_.audioTracks();
					e.prototype.handleClick.call(this, n);
					for(var r = 0; r < i.length; r++) {
						var a = i[r];
						a.enabled = a === this.track
					}
				};
				n.handleTracksChange = function e(t) {
					this.selected(this.track.enabled)
				};
				return t
			}(ir);
			He.registerComponent("AudioTrackMenuItem", vr);
			var gr = function(e) {
				Ke(t, e);

				function t(t, n) {
					if(n === void 0) {
						n = {}
					}
					n.tracks = t.audioTracks();
					return e.call(this, t, n) || this
				}
				var n = t.prototype;
				n.buildCSSClass = function t() {
					return "vjs-audio-button " + e.prototype.buildCSSClass.call(this)
				};
				n.buildWrapperCSSClass = function t() {
					return "vjs-audio-button " + e.prototype.buildWrapperCSSClass.call(this)
				};
				n.createItems = function e(t) {
					if(t === void 0) {
						t = []
					}
					this.hideThreshold_ = 1;
					var n = this.player_.audioTracks();
					for(var i = 0; i < n.length; i++) {
						var r = n[i];
						t.push(new vr(this.player_, {
							track: r,
							selectable: true,
							multiSelectable: false
						}))
					}
					return t
				};
				return t
			}(tr);
			gr.prototype.controlText_ = "Audio Track";
			He.registerComponent("AudioTrackButton", gr);
			var mr = function(e) {
				Ke(t, e);

				function t(t, n) {
					var i;
					var r = n.rate;
					var a = parseFloat(r, 10);
					n.label = r;
					n.selected = a === 1;
					n.selectable = true;
					n.multiSelectable = false;
					i = e.call(this, t, n) || this;
					i.label = r;
					i.rate = a;
					i.on(t, "ratechange", i.update);
					return i
				}
				var n = t.prototype;
				n.handleClick = function t(n) {
					e.prototype.handleClick.call(this);
					this.player().playbackRate(this.rate)
				};
				n.update = function e(t) {
					this.selected(this.player().playbackRate() === this.rate)
				};
				return t
			}(ir);
			mr.prototype.contentElType = "button";
			He.registerComponent("PlaybackRateMenuItem", mr);
			var yr = function(e) {
				Ke(t, e);

				function t(t, n) {
					var i;
					i = e.call(this, t, n) || this;
					i.updateVisibility();
					i.updateLabel();
					i.on(t, "loadstart", i.updateVisibility);
					i.on(t, "ratechange", i.updateLabel);
					return i
				}
				var n = t.prototype;
				n.createEl = function t() {
					var n = e.prototype.createEl.call(this);
					this.labelEl_ = E("div", {
						className: "vjs-playback-rate-value",
						innerHTML: "1x"
					});
					n.appendChild(this.labelEl_);
					return n
				};
				n.dispose = function t() {
					this.labelEl_ = null;
					e.prototype.dispose.call(this)
				};
				n.buildCSSClass = function t() {
					return "vjs-playback-rate " + e.prototype.buildCSSClass.call(this)
				};
				n.buildWrapperCSSClass = function t() {
					return "vjs-playback-rate " + e.prototype.buildWrapperCSSClass.call(this)
				};
				n.createMenu = function e() {
					var t = new $i(this.player());
					var n = this.playbackRates();
					if(n) {
						for(var i = n.length - 1; i >= 0; i--) {
							t.addChild(new mr(this.player(), {
								rate: n[i] + "x"
							}))
						}
					}
					return t
				};
				n.updateARIAAttributes = function e() {
					this.el().setAttribute("aria-valuenow", this.player().playbackRate())
				};
				n.handleClick = function e(t) {
					var n = this.player().playbackRate();
					var i = this.playbackRates();
					var r = i[0];
					for(var a = 0; a < i.length; a++) {
						if(i[a] > n) {
							r = i[a];
							break
						}
					}
					this.player().playbackRate(r)
				};
				n.playbackRates = function e() {
					return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates
				};
				n.playbackRateSupported = function e() {
					return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0
				};
				n.updateVisibility = function e(t) {
					if(this.playbackRateSupported()) {
						this.removeClass("vjs-hidden")
					} else {
						this.addClass("vjs-hidden")
					}
				};
				n.updateLabel = function e(t) {
					if(this.playbackRateSupported()) {
						this.labelEl_.innerHTML = this.player().playbackRate() + "x"
					}
				};
				return t
			}(er);
			yr.prototype.controlText_ = "Playback Rate";
			He.registerComponent("PlaybackRateMenuButton", yr);
			var _r = function(e) {
				Ke(t, e);

				function t() {
					return e.apply(this, arguments) || this
				}
				var n = t.prototype;
				n.buildCSSClass = function t() {
					return "vjs-spacer " + e.prototype.buildCSSClass.call(this)
				};
				n.createEl = function t() {
					return e.prototype.createEl.call(this, "div", {
						className: this.buildCSSClass()
					})
				};
				return t
			}(He);
			He.registerComponent("Spacer", _r);
			var br = function(e) {
				Ke(t, e);

				function t() {
					return e.apply(this, arguments) || this
				}
				var n = t.prototype;
				n.buildCSSClass = function t() {
					return "vjs-custom-control-spacer " + e.prototype.buildCSSClass.call(this)
				};
				n.createEl = function t() {
					var n = e.prototype.createEl.call(this, {
						className: this.buildCSSClass()
					});
					n.innerHTML = "\xa0";
					return n
				};
				return t
			}(_r);
			He.registerComponent("CustomControlSpacer", br);
			var Ar = function(e) {
				Ke(t, e);

				function t() {
					return e.apply(this, arguments) || this
				}
				var n = t.prototype;
				n.createEl = function t() {
					return e.prototype.createEl.call(this, "div", {
						className: "vjs-control-bar",
						dir: "ltr"
					})
				};
				return t
			}(He);
			Ar.prototype.options_ = {
				children: ["playToggle", "volumePanel", "currentTimeDisplay", "timeDivider", "durationDisplay", "progressControl", "liveDisplay", "seekToLive", "remainingTimeDisplay", "customControlSpacer", "playbackRateMenuButton", "chaptersButton", "descriptionsButton", "subsCapsButton", "audioTrackButton", "fullscreenToggle"]
			};
			if("exitPictureInPicture" in t) {
				Ar.prototype.options_.children.splice(Ar.prototype.options_.children.length - 1, 0, "pictureInPictureToggle")
			}
			He.registerComponent("ControlBar", Ar);
			var Sr = function(e) {
				Ke(t, e);

				function t(t, n) {
					var i;
					i = e.call(this, t, n) || this;
					i.on(t, "error", i.open);
					return i
				}
				var n = t.prototype;
				n.buildCSSClass = function t() {
					return "vjs-error-display " + e.prototype.buildCSSClass.call(this)
				};
				n.content = function e() {
					var t = this.player().error();
					return t ? this.localize(t.message) : ""
				};
				return t
			}(Ht);
			Sr.prototype.options_ = u({}, Ht.prototype.options_, {
				pauseOnOpen: false,
				fillAlways: true,
				temporary: false,
				uncloseable: true
			});
			He.registerComponent("ErrorDisplay", Sr);
			var Tr = "vjs-text-track-settings";
			var kr = ["#000", "Black"];
			var Er = ["#00F", "Blue"];
			var Pr = ["#0FF", "Cyan"];
			var Cr = ["#0F0", "Green"];
			var wr = ["#F0F", "Magenta"];
			var jr = ["#F00", "Red"];
			var Ir = ["#FFF", "White"];
			var Lr = ["#FF0", "Yellow"];
			var Or = ["1", "Opaque"];
			var Nr = ["0.5", "Semi-Transparent"];
			var xr = ["0", "Transparent"];
			var Dr = {
				backgroundColor: {
					selector: ".vjs-bg-color > select",
					id: "captions-background-color-%s",
					label: "Color",
					options: [kr, Ir, jr, Cr, Er, Lr, wr, Pr]
				},
				backgroundOpacity: {
					selector: ".vjs-bg-opacity > select",
					id: "captions-background-opacity-%s",
					label: "Transparency",
					options: [Or, Nr, xr]
				},
				color: {
					selector: ".vjs-fg-color > select",
					id: "captions-foreground-color-%s",
					label: "Color",
					options: [Ir, kr, jr, Cr, Er, Lr, wr, Pr]
				},
				edgeStyle: {
					selector: ".vjs-edge-style > select",
					id: "%s",
					label: "Text Edge Style",
					options: [
						["none", "None"],
						["raised", "Raised"],
						["depressed", "Depressed"],
						["uniform", "Uniform"],
						["dropshadow", "Dropshadow"]
					]
				},
				fontFamily: {
					selector: ".vjs-font-family > select",
					id: "captions-font-family-%s",
					label: "Font Family",
					options: [
						["proportionalSansSerif", "Proportional Sans-Serif"],
						["monospaceSansSerif", "Monospace Sans-Serif"],
						["proportionalSerif", "Proportional Serif"],
						["monospaceSerif", "Monospace Serif"],
						["casual", "Casual"],
						["script", "Script"],
						["small-caps", "Small Caps"]
					]
				},
				fontPercent: {
					selector: ".vjs-font-percent > select",
					id: "captions-font-size-%s",
					label: "Font Size",
					options: [
						["0.50", "50%"],
						["0.75", "75%"],
						["1.00", "100%"],
						["1.25", "125%"],
						["1.50", "150%"],
						["1.75", "175%"],
						["2.00", "200%"],
						["3.00", "300%"],
						["4.00", "400%"]
					],
					default: 2,
					parser: function e(t) {
						return t === "1.00" ? null : Number(t)
					}
				},
				textOpacity: {
					selector: ".vjs-text-opacity > select",
					id: "captions-foreground-opacity-%s",
					label: "Transparency",
					options: [Or, Nr]
				},
				windowColor: {
					selector: ".vjs-window-color > select",
					id: "captions-window-color-%s",
					label: "Color"
				},
				windowOpacity: {
					selector: ".vjs-window-opacity > select",
					id: "captions-window-opacity-%s",
					label: "Transparency",
					options: [xr, Nr, Or]
				}
			};
			Dr.windowColor.options = Dr.backgroundColor.options;

			function Rr(e, t) {
				if(t) {
					e = t(e)
				}
				if(e && e !== "none") {
					return e
				}
			}

			function Ur(e, t) {
				var n = e.options[e.options.selectedIndex].value;
				return Rr(n, t)
			}

			function Mr(e, t, n) {
				if(!t) {
					return
				}
				for(var i = 0; i < e.options.length; i++) {
					if(Rr(e.options[i].value, n) === t) {
						e.selectedIndex = i;
						break
					}
				}
			}
			var Br = function(t) {
				Ke(n, t);

				function n(e, n) {
					var i;
					n.temporary = false;
					i = t.call(this, e, n) || this;
					i.updateDisplay = Se(Ye(i), i.updateDisplay);
					i.fill();
					i.hasBeenOpened_ = i.hasBeenFilled_ = true;
					i.endDialog = E("p", {
						className: "vjs-control-text",
						textContent: i.localize("End of dialog window.")
					});
					i.el().appendChild(i.endDialog);
					i.setDefaults();
					if(n.persistTextTrackSettings === undefined) {
						i.options_.persistTextTrackSettings = i.options_.playerOptions.persistTextTrackSettings
					}
					i.on(i.$(".vjs-done-button"), "click", function() {
						i.saveSettings();
						i.close()
					});
					i.on(i.$(".vjs-default-button"), "click", function() {
						i.setDefaults();
						i.updateDisplay()
					});
					f(Dr, function(e) {
						i.on(i.$(e.selector), "change", i.updateDisplay)
					});
					if(i.options_.persistTextTrackSettings) {
						i.restoreSettings()
					}
					return i
				}
				var i = n.prototype;
				i.dispose = function e() {
					this.endDialog = null;
					t.prototype.dispose.call(this)
				};
				i.createElSelect_ = function e(t, n, i) {
					var r = this;
					if(n === void 0) {
						n = ""
					}
					if(i === void 0) {
						i = "label"
					}
					var a = Dr[t];
					var s = a.id.replace("%s", this.id_);
					var o = [n, s].join(" ").trim();
					return ["<" + i + ' id="' + s + '" class="' + (i === "label" ? "vjs-label" : "") + '">', this.localize(a.label), "</" + i + ">", '<select aria-labelledby="' + o + '">'].concat(a.options.map(function(e) {
						var t = s + "-" + e[1].replace(/\W+/g, "");
						return ['<option id="' + t + '" value="' + e[0] + '" ', 'aria-labelledby="' + o + " " + t + '">', r.localize(e[1]), "</option>"].join("")
					})).concat("</select>").join("")
				};
				i.createElFgColor_ = function e() {
					var t = "captions-text-legend-" + this.id_;
					return ['<fieldset class="vjs-fg-color vjs-track-setting">', '<legend id="' + t + '">', this.localize("Text"), "</legend>", this.createElSelect_("color", t), '<span class="vjs-text-opacity vjs-opacity">', this.createElSelect_("textOpacity", t), "</span>", "</fieldset>"].join("")
				};
				i.createElBgColor_ = function e() {
					var t = "captions-background-" + this.id_;
					return ['<fieldset class="vjs-bg-color vjs-track-setting">', '<legend id="' + t + '">', this.localize("Background"), "</legend>", this.createElSelect_("backgroundColor", t), '<span class="vjs-bg-opacity vjs-opacity">', this.createElSelect_("backgroundOpacity", t), "</span>", "</fieldset>"].join("")
				};
				i.createElWinColor_ = function e() {
					var t = "captions-window-" + this.id_;
					return ['<fieldset class="vjs-window-color vjs-track-setting">', '<legend id="' + t + '">', this.localize("Window"), "</legend>", this.createElSelect_("windowColor", t), '<span class="vjs-window-opacity vjs-opacity">', this.createElSelect_("windowOpacity", t), "</span>", "</fieldset>"].join("")
				};
				i.createElColors_ = function e() {
					return E("div", {
						className: "vjs-track-settings-colors",
						innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join("")
					})
				};
				i.createElFont_ = function e() {
					return E("div", {
						className: "vjs-track-settings-font",
						innerHTML: ['<fieldset class="vjs-font-percent vjs-track-setting">', this.createElSelect_("fontPercent", "", "legend"), "</fieldset>", '<fieldset class="vjs-edge-style vjs-track-setting">', this.createElSelect_("edgeStyle", "", "legend"), "</fieldset>", '<fieldset class="vjs-font-family vjs-track-setting">', this.createElSelect_("fontFamily", "", "legend"), "</fieldset>"].join("")
					})
				};
				i.createElControls_ = function e() {
					var t = this.localize("restore all settings to the default values");
					return E("div", {
						className: "vjs-track-settings-controls",
						innerHTML: ['<button type="button" class="vjs-default-button" title="' + t + '">', this.localize("Reset"), '<span class="vjs-control-text"> ' + t + "</span>", "</button>", '<button type="button" class="vjs-done-button">' + this.localize("Done") + "</button>"].join("")
					})
				};
				i.content = function e() {
					return [this.createElColors_(), this.createElFont_(), this.createElControls_()]
				};
				i.label = function e() {
					return this.localize("Caption Settings Dialog")
				};
				i.description = function e() {
					return this.localize("Beginning of dialog window. Escape will cancel and close the window.")
				};
				i.buildCSSClass = function e() {
					return t.prototype.buildCSSClass.call(this) + " vjs-text-track-settings"
				};
				i.getValues = function e() {
					var t = this;
					return p(Dr, function(e, n, i) {
						var r = Ur(t.$(n.selector), n.parser);
						if(r !== undefined) {
							e[i] = r
						}
						return e
					}, {})
				};
				i.setValues = function e(t) {
					var n = this;
					f(Dr, function(e, i) {
						Mr(n.$(e.selector), t[i], e.parser)
					})
				};
				i.setDefaults = function e() {
					var t = this;
					f(Dr, function(e) {
						var n = e.hasOwnProperty("default") ? e["default"] : 0;
						t.$(e.selector).selectedIndex = n
					})
				};
				i.restoreSettings = function t() {
					var n;
					try {
						n = JSON.parse(e.localStorage.getItem(Tr))
					} catch(e) {
						s.warn(e)
					}
					if(n) {
						this.setValues(n)
					}
				};
				i.saveSettings = function t() {
					if(!this.options_.persistTextTrackSettings) {
						return
					}
					var n = this.getValues();
					try {
						if(Object.keys(n).length) {
							e.localStorage.setItem(Tr, JSON.stringify(n))
						} else {
							e.localStorage.removeItem(Tr)
						}
					} catch(e) {
						s.warn(e)
					}
				};
				i.updateDisplay = function e() {
					var t = this.player_.getChild("textTrackDisplay");
					if(t) {
						t.updateDisplay()
					}
				};
				i.conditionalBlur_ = function e() {
					this.previouslyActiveEl_ = null;
					var t = this.player_.controlBar;
					var n = t && t.subsCapsButton;
					var i = t && t.captionsButton;
					if(n) {
						n.focus()
					} else if(i) {
						i.focus()
					}
				};
				return n
			}(Ht);
			He.registerComponent("TextTrackSettings", Br);
			var Fr = function(t) {
				Ke(n, t);

				function n(n, i) {
					var r;
					var a = i.ResizeObserver || e.ResizeObserver;
					if(i.ResizeObserver === null) {
						a = false
					}
					var s = qe({
						createEl: !a,
						reportTouchActivity: false
					}, i);
					r = t.call(this, n, s) || this;
					r.ResizeObserver = i.ResizeObserver || e.ResizeObserver;
					r.loadListener_ = null;
					r.resizeObserver_ = null;
					r.debouncedHandler_ = ke(function() {
						r.resizeHandler()
					}, 100, false, Ye(r));
					if(a) {
						r.resizeObserver_ = new r.ResizeObserver(r.debouncedHandler_);
						r.resizeObserver_.observe(n.el())
					} else {
						r.loadListener_ = function() {
							if(!r.el_ || !r.el_.contentWindow) {
								return
							}
							var e = r.debouncedHandler_;
							var t = r.unloadListener_ = function() {
								ge(this, "resize", e);
								ge(this, "unload", t);
								t = null
							};
							ve(r.el_.contentWindow, "unload", t);
							ve(r.el_.contentWindow, "resize", e)
						};
						r.one("load", r.loadListener_)
					}
					return r
				}
				var i = n.prototype;
				i.createEl = function e() {
					return t.prototype.createEl.call(this, "iframe", {
						className: "vjs-resize-manager",
						tabIndex: -1
					}, {
						"aria-hidden": "true"
					})
				};
				i.resizeHandler = function e() {
					if(!this.player_ || !this.player_.trigger) {
						return
					}
					this.player_.trigger("playerresize")
				};
				i.dispose = function e() {
					if(this.debouncedHandler_) {
						this.debouncedHandler_.cancel()
					}
					if(this.resizeObserver_) {
						if(this.player_.el()) {
							this.resizeObserver_.unobserve(this.player_.el())
						}
						this.resizeObserver_.disconnect()
					}
					if(this.loadListener_) {
						this.off("load", this.loadListener_)
					}
					if(this.el_ && this.el_.contentWindow && this.unloadListener_) {
						this.unloadListener_.call(this.el_.contentWindow)
					}
					this.ResizeObserver = null;
					this.resizeObserver = null;
					this.debouncedHandler_ = null;
					this.loadListener_ = null;
					t.prototype.dispose.call(this)
				};
				return n
			}(He);
			He.registerComponent("ResizeManager", Fr);
			var Vr = function e(t) {
				var n = Math.floor(t.length / 2);
				var i = [].concat(t).sort(function(e, t) {
					return e - t
				});
				return t.length % 2 !== 0 ? i[n] : (i[n - 1] + i[n]) / 2
			};
			var qr = function(e) {
				Ke(n, e);

				function n(n, i) {
					var r;
					var a = qe({
						createEl: false
					}, i);
					r = e.call(this, n, a) || this;
					r.reset_();
					r.on(r.player_, "durationchange", r.handleDurationchange);
					if(st && "hidden" in t && "visibilityState" in t) {
						r.on(t, "visibilitychange", r.handleVisibilityChange)
					}
					return r
				}
				var i = n.prototype;
				i.handleVisibilityChange = function e() {
					if(this.player_.duration() !== Infinity) {
						return
					}
					if(t.hidden) {
						this.stopTracking()
					} else {
						this.startTracking()
					}
				};
				i.isBehind_ = function e() {
					if(!this.timeupdateSeen_) {
						return false
					}
					var t = this.liveCurrentTime();
					var n = this.player_.currentTime();
					var i = this.seekableIncrement_ * 2 + .07;
					return t !== Infinity && t - i >= n
				};
				i.trackLive_ = function e() {
					this.pastSeekEnd_ = this.pastSeekEnd_;
					var t = this.player_.seekable();
					if(!t || !t.length) {
						return
					}
					var n = this.seekableEnd();
					if(n !== this.lastSeekEnd_) {
						if(this.lastSeekEnd_) {
							this.seekableIncrementList_ = this.seekableIncrementList_.slice(-11);
							this.seekableIncrementList_.push(Math.abs(n - this.lastSeekEnd_));
							if(this.seekableIncrementList_.length > 3) {
								this.seekableIncrement_ = Vr(this.seekableIncrementList_)
							}
						}
						this.pastSeekEnd_ = 0;
						this.lastSeekEnd_ = n;
						this.trigger("seekableendchange")
					}
					if(this.pastSeekEnd() > this.seekableIncrement_ * 1.5) {
						this.pastSeekEnd_ = 0
					} else {
						this.pastSeekEnd_ = this.pastSeekEnd() + .03
					}
					if(this.isBehind_() !== this.behindLiveEdge()) {
						this.behindLiveEdge_ = this.isBehind_();
						this.trigger("liveedgechange")
					}
				};
				i.handleDurationchange = function e() {
					if(this.player_.duration() === Infinity) {
						this.startTracking()
					} else {
						this.stopTracking()
					}
				};
				i.startTracking = function e() {
					var t = this;
					if(this.isTracking()) {
						return
					}
					if(!this.timeupdateSeen_) {
						this.timeupdateSeen_ = this.player_.hasStarted()
					}
					this.trackingInterval_ = this.setInterval(this.trackLive_, Ae);
					this.trackLive_();
					this.on(this.player_, "play", this.trackLive_);
					this.on(this.player_, "pause", this.trackLive_);
					if(!this.timeupdateSeen_) {
						this.one(this.player_, "play", this.handlePlay);
						this.handleTimeupdate = function() {
							t.timeupdateSeen_ = true;
							t.handleTimeupdate = null
						};
						this.one(this.player_, "timeupdate", this.handleTimeupdate)
					}
				};
				i.handlePlay = function e() {
					this.one(this.player_, "timeupdate", this.seekToLiveEdge)
				};
				i.reset_ = function e() {
					this.pastSeekEnd_ = 0;
					this.lastSeekEnd_ = null;
					this.behindLiveEdge_ = null;
					this.timeupdateSeen_ = false;
					this.clearInterval(this.trackingInterval_);
					this.trackingInterval_ = null;
					this.seekableIncrement_ = 12;
					this.seekableIncrementList_ = [];
					this.off(this.player_, "play", this.trackLive_);
					this.off(this.player_, "pause", this.trackLive_);
					this.off(this.player_, "play", this.handlePlay);
					this.off(this.player_, "timeupdate", this.seekToLiveEdge);
					if(this.handleTimeupdate) {
						this.off(this.player_, "timeupdate", this.handleTimeupdate);
						this.handleTimeupdate = null
					}
				};
				i.stopTracking = function e() {
					if(!this.isTracking()) {
						return
					}
					this.reset_()
				};
				i.seekableEnd = function e() {
					var t = this.player_.seekable();
					var n = [];
					var i = t ? t.length : 0;
					while(i--) {
						n.push(t.end(i))
					}
					return n.length ? n.sort()[n.length - 1] : Infinity
				};
				i.seekableStart = function e() {
					var t = this.player_.seekable();
					var n = [];
					var i = t ? t.length : 0;
					while(i--) {
						n.push(t.start(i))
					}
					return n.length ? n.sort()[0] : 0
				};
				i.liveWindow = function e() {
					var t = this.liveCurrentTime();
					if(t === Infinity) {
						return Infinity
					}
					return t - this.seekableStart()
				};
				i.isLive = function e() {
					return this.isTracking()
				};
				i.atLiveEdge = function e() {
					return !this.behindLiveEdge()
				};
				i.liveCurrentTime = function e() {
					return this.pastSeekEnd() + this.seekableEnd()
				};
				i.pastSeekEnd = function e() {
					return this.pastSeekEnd_
				};
				i.behindLiveEdge = function e() {
					return this.behindLiveEdge_
				};
				i.isTracking = function e() {
					return typeof this.trackingInterval_ === "number"
				};
				i.seekToLiveEdge = function e() {
					if(this.atLiveEdge()) {
						return
					}
					this.player_.currentTime(this.liveCurrentTime());
					if(this.player_.paused()) {
						this.player_.play()
					}
				};
				i.dispose = function t() {
					this.stopTracking();
					e.prototype.dispose.call(this)
				};
				return n
			}(He);
			He.registerComponent("LiveTracker", qr);
			var Hr = function e(t) {
				var n = t.el();
				if(n.hasAttribute("src")) {
					t.triggerSourceset(n.src);
					return true
				}
				var i = t.$$("source");
				var r = [];
				var a = "";
				if(!i.length) {
					return false
				}
				for(var s = 0; s < i.length; s++) {
					var o = i[s].src;
					if(o && r.indexOf(o) === -1) {
						r.push(o)
					}
				}
				if(!r.length) {
					return false
				}
				if(r.length === 1) {
					a = r[0]
				}
				t.triggerSourceset(a);
				return true
			};
			var Gr = Object.defineProperty({}, "innerHTML", {
				get: function e() {
					return this.cloneNode(true).innerHTML
				},
				set: function n(i) {
					var r = t.createElement(this.nodeName.toLowerCase());
					r.innerHTML = i;
					var a = t.createDocumentFragment();
					while(r.childNodes.length) {
						a.appendChild(r.childNodes[0])
					}
					this.innerText = "";
					e.Element.prototype.appendChild.call(this, a);
					return this.innerHTML
				}
			});
			var Yr = function e(t, n) {
				var i = {};
				for(var r = 0; r < t.length; r++) {
					i = Object.getOwnPropertyDescriptor(t[r], n);
					if(i && i.set && i.get) {
						break
					}
				}
				i.enumerable = true;
				i.configurable = true;
				return i
			};
			var zr = function t(n) {
				return Yr([n.el(), e.HTMLMediaElement.prototype, e.Element.prototype, Gr], "innerHTML")
			};
			var Kr = function e(t) {
				var n = t.el();
				if(n.resetSourceWatch_) {
					return
				}
				var i = {};
				var r = zr(t);
				var a = function e(i) {
					return function() {
						for(var e = arguments.length, r = new Array(e), a = 0; a < e; a++) {
							r[a] = arguments[a]
						}
						var s = i.apply(n, r);
						Hr(t);
						return s
					}
				};
				["append", "appendChild", "insertAdjacentHTML"].forEach(function(e) {
					if(!n[e]) {
						return
					}
					i[e] = n[e];
					n[e] = a(i[e])
				});
				Object.defineProperty(n, "innerHTML", qe(r, {
					set: a(r.set)
				}));
				n.resetSourceWatch_ = function() {
					n.resetSourceWatch_ = null;
					Object.keys(i).forEach(function(e) {
						n[e] = i[e]
					});
					Object.defineProperty(n, "innerHTML", r)
				};
				t.one("sourceset", n.resetSourceWatch_)
			};
			var Wr = Object.defineProperty({}, "src", {
				get: function t() {
					if(this.hasAttribute("src")) {
						return sn(e.Element.prototype.getAttribute.call(this, "src"))
					}
					return ""
				},
				set: function t(n) {
					e.Element.prototype.setAttribute.call(this, "src", n);
					return n
				}
			});
			var Xr = function t(n) {
				return Yr([n.el(), e.HTMLMediaElement.prototype, Wr], "src")
			};
			var Jr = function e(t) {
				if(!t.featuresSourceset) {
					return
				}
				var n = t.el();
				if(n.resetSourceset_) {
					return
				}
				var i = Xr(t);
				var r = n.setAttribute;
				var a = n.load;
				Object.defineProperty(n, "src", qe(i, {
					set: function e(r) {
						var a = i.set.call(n, r);
						t.triggerSourceset(n.src);
						return a
					}
				}));
				n.setAttribute = function(e, i) {
					var a = r.call(n, e, i);
					if(/src/i.test(e)) {
						t.triggerSourceset(n.src)
					}
					return a
				};
				n.load = function() {
					var e = a.call(n);
					if(!Hr(t)) {
						t.triggerSourceset("");
						Kr(t)
					}
					return e
				};
				if(n.currentSrc) {
					t.triggerSourceset(n.currentSrc)
				} else if(!Hr(t)) {
					Kr(t)
				}
				n.resetSourceset_ = function() {
					n.resetSourceset_ = null;
					n.load = a;
					n.setAttribute = r;
					Object.defineProperty(n, "src", i);
					if(n.resetSourceWatch_) {
						n.resetSourceWatch_()
					}
				}
			};
			var Qr = function e(t, n, i, r) {
				if(r === void 0) {
					r = true
				}
				var a = function e(i) {
					return Object.defineProperty(t, n, {
						value: i,
						enumerable: true,
						writable: true
					})
				};
				var s = {
					configurable: true,
					enumerable: true,
					get: function e() {
						var t = i();
						a(t);
						return t
					}
				};
				if(r) {
					s.set = a
				}
				return Object.defineProperty(t, n, s)
			};
			var Zr = function(n) {
				Ke(i, n);

				function i(e, t) {
					var i;
					i = n.call(this, e, t) || this;
					var r = e.source;
					var a = false;
					if(r && (i.el_.currentSrc !== r.src || e.tag && e.tag.initNetworkState_ === 3)) {
						i.setSource(r)
					} else {
						i.handleLateInit_(i.el_)
					}
					if(e.enableSourceset) {
						i.setupSourcesetHandling_()
					}
					if(i.el_.hasChildNodes()) {
						var o = i.el_.childNodes;
						var l = o.length;
						var u = [];
						while(l--) {
							var c = o[l];
							var d = c.nodeName.toLowerCase();
							if(d === "track") {
								if(!i.featuresNativeTextTracks) {
									u.push(c)
								} else {
									i.remoteTextTrackEls().addTrackElement_(c);
									i.remoteTextTracks().addTrack(c.track);
									i.textTracks().addTrack(c.track);
									if(!a && !i.el_.hasAttribute("crossorigin") && ln(c.src)) {
										a = true
									}
								}
							}
						}
						for(var f = 0; f < u.length; f++) {
							i.el_.removeChild(u[f])
						}
					}
					i.proxyNativeTracks_();
					if(i.featuresNativeTextTracks && a) {
						s.warn("Text Tracks are being loaded from another origin but the crossorigin attribute isn't used.\n" + "This may prevent text tracks from loading.")
					}
					i.restoreMetadataTracksInIOSNativePlayer_();
					if((ut || dt || tt) && e.nativeControlsForTouch === true) {
						i.setControls(true)
					}
					i.proxyWebkitFullscreen_();
					i.triggerReady();
					return i
				}
				var r = i.prototype;
				r.dispose = function e() {
					if(this.el_ && this.el_.resetSourceset_) {
						this.el_.resetSourceset_()
					}
					i.disposeMediaElement(this.el_);
					this.options_ = null;
					n.prototype.dispose.call(this)
				};
				r.setupSourcesetHandling_ = function e() {
					Jr(this)
				};
				r.restoreMetadataTracksInIOSNativePlayer_ = function e() {
					var t = this.textTracks();
					var n;
					var i = function e() {
						n = [];
						for(var i = 0; i < t.length; i++) {
							var r = t[i];
							if(r.kind === "metadata") {
								n.push({
									track: r,
									storedMode: r.mode
								})
							}
						}
					};
					i();
					t.addEventListener("change", i);
					this.on("dispose", function() {
						return t.removeEventListener("change", i)
					});
					var r = function e() {
						for(var i = 0; i < n.length; i++) {
							var r = n[i];
							if(r.track.mode === "disabled" && r.track.mode !== r.storedMode) {
								r.track.mode = r.storedMode
							}
						}
						t.removeEventListener("change", e)
					};
					this.on("webkitbeginfullscreen", function() {
						t.removeEventListener("change", i);
						t.removeEventListener("change", r);
						t.addEventListener("change", r)
					});
					this.on("webkitendfullscreen", function() {
						t.removeEventListener("change", i);
						t.addEventListener("change", i);
						t.removeEventListener("change", r)
					})
				};
				r.overrideNative_ = function e(t, n) {
					var i = this;
					if(n !== this["featuresNative" + t + "Tracks"]) {
						return
					}
					var r = t.toLowerCase();
					if(this[r + "TracksListeners_"]) {
						Object.keys(this[r + "TracksListeners_"]).forEach(function(e) {
							var t = i.el()[r + "Tracks"];
							t.removeEventListener(e, i[r + "TracksListeners_"][e])
						})
					}
					this["featuresNative" + t + "Tracks"] = !n;
					this[r + "TracksListeners_"] = null;
					this.proxyNativeTracksForType_(r)
				};
				r.overrideNativeAudioTracks = function e(t) {
					this.overrideNative_("Audio", t)
				};
				r.overrideNativeVideoTracks = function e(t) {
					this.overrideNative_("Video", t)
				};
				r.proxyNativeTracksForType_ = function e(t) {
					var n = this;
					var i = Nn[t];
					var r = this.el()[i.getterName];
					var a = this[i.getterName]();
					if(!this["featuresNative" + i.capitalName + "Tracks"] || !r || !r.addEventListener) {
						return
					}
					var s = {
						change: function e(t) {
							a.trigger({
								type: "change",
								target: a,
								currentTarget: a,
								srcElement: a
							})
						},
						addtrack: function e(t) {
							a.addTrack(t.track)
						},
						removetrack: function e(t) {
							a.removeTrack(t.track)
						}
					};
					var o = function e() {
						var t = [];
						for(var n = 0; n < a.length; n++) {
							var i = false;
							for(var s = 0; s < r.length; s++) {
								if(r[s] === a[n]) {
									i = true;
									break
								}
							}
							if(!i) {
								t.push(a[n])
							}
						}
						while(t.length) {
							a.removeTrack(t.shift())
						}
					};
					this[i.getterName + "Listeners_"] = s;
					Object.keys(s).forEach(function(e) {
						var t = s[e];
						r.addEventListener(e, t);
						n.on("dispose", function(n) {
							return r.removeEventListener(e, t)
						})
					});
					this.on("loadstart", o);
					this.on("dispose", function(e) {
						return n.off("loadstart", o)
					})
				};
				r.proxyNativeTracks_ = function e() {
					var t = this;
					Nn.names.forEach(function(e) {
						t.proxyNativeTracksForType_(e)
					})
				};
				r.createEl = function e() {
					var n = this.options_.tag;
					if(!n || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {
						if(n) {
							var r = n.cloneNode(true);
							if(n.parentNode) {
								n.parentNode.insertBefore(r, n)
							}
							i.disposeMediaElement(n);
							n = r
						} else {
							n = t.createElement("video");
							var a = this.options_.tag && N(this.options_.tag);
							var s = qe({}, a);
							if(!ut || this.options_.nativeControlsForTouch !== true) {
								delete s.controls
							}
							O(n, h(s, {
								id: this.options_.techId,
								class: "vjs-tech"
							}))
						}
						n.playerId = this.options_.playerId
					}
					if(typeof this.options_.preload !== "undefined") {
						D(n, "preload", this.options_.preload)
					}
					var o = ["loop", "muted", "playsinline", "autoplay"];
					for(var l = 0; l < o.length; l++) {
						var u = o[l];
						var c = this.options_[u];
						if(typeof c !== "undefined") {
							if(c) {
								D(n, u, u)
							} else {
								R(n, u)
							}
							n[u] = c
						}
					}
					return n
				};
				r.handleLateInit_ = function e(t) {
					if(t.networkState === 0 || t.networkState === 3) {
						return
					}
					if(t.readyState === 0) {
						var n = false;
						var i = function e() {
							n = true
						};
						this.on("loadstart", i);
						var r = function e() {
							if(!n) {
								this.trigger("loadstart")
							}
						};
						this.on("loadedmetadata", r);
						this.ready(function() {
							this.off("loadstart", i);
							this.off("loadedmetadata", r);
							if(!n) {
								this.trigger("loadstart")
							}
						});
						return
					}
					var a = ["loadstart"];
					a.push("loadedmetadata");
					if(t.readyState >= 2) {
						a.push("loadeddata")
					}
					if(t.readyState >= 3) {
						a.push("canplay")
					}
					if(t.readyState >= 4) {
						a.push("canplaythrough")
					}
					this.ready(function() {
						a.forEach(function(e) {
							this.trigger(e)
						}, this)
					})
				};
				r.setCurrentTime = function e(t) {
					try {
						this.el_.currentTime = t
					} catch(e) {
						s(e, "Video is not ready. (Video.js)")
					}
				};
				r.duration = function e() {
					var t = this;
					if(this.el_.duration === Infinity && $e && rt && this.el_.currentTime === 0) {
						var n = function e() {
							if(t.el_.currentTime > 0) {
								if(t.el_.duration === Infinity) {
									t.trigger("durationchange")
								}
								t.off("timeupdate", e)
							}
						};
						this.on("timeupdate", n);
						return NaN
					}
					return this.el_.duration || NaN
				};
				r.width = function e() {
					return this.el_.offsetWidth
				};
				r.height = function e() {
					return this.el_.offsetHeight
				};
				r.proxyWebkitFullscreen_ = function e() {
					var t = this;
					if(!("webkitDisplayingFullscreen" in this.el_)) {
						return
					}
					var n = function e() {
						this.trigger("fullscreenchange", {
							isFullscreen: false
						})
					};
					var i = function e() {
						if("webkitPresentationMode" in this.el_ && this.el_.webkitPresentationMode !== "picture-in-picture") {
							this.one("webkitendfullscreen", n);
							this.trigger("fullscreenchange", {
								isFullscreen: true
							})
						}
					};
					this.on("webkitbeginfullscreen", i);
					this.on("dispose", function() {
						t.off("webkitbeginfullscreen", i);
						t.off("webkitendfullscreen", n)
					})
				};
				r.supportsFullScreen = function t() {
					if(typeof this.el_.webkitEnterFullScreen === "function") {
						var n = e.navigator && e.navigator.userAgent || "";
						if(/Android/.test(n) || !/Chrome|Mac OS X 10.5/.test(n)) {
							return true
						}
					}
					return false
				};
				r.enterFullScreen = function e() {
					var t = this.el_;
					if(t.paused && t.networkState <= t.HAVE_METADATA) {
						this.el_.play();
						this.setTimeout(function() {
							t.pause();
							t.webkitEnterFullScreen()
						}, 0)
					} else {
						t.webkitEnterFullScreen()
					}
				};
				r.exitFullScreen = function e() {
					this.el_.webkitExitFullScreen()
				};
				r.requestPictureInPicture = function e() {
					return this.el_.requestPictureInPicture()
				};
				r.src = function e(t) {
					if(t === undefined) {
						return this.el_.src
					}
					this.setSrc(t)
				};
				r.reset = function e() {
					i.resetMediaElement(this.el_)
				};
				r.currentSrc = function e() {
					if(this.currentSource_) {
						return this.currentSource_.src
					}
					return this.el_.currentSrc
				};
				r.setControls = function e(t) {
					this.el_.controls = !!t
				};
				r.addTextTrack = function e(t, i, r) {
					if(!this.featuresNativeTextTracks) {
						return n.prototype.addTextTrack.call(this, t, i, r)
					}
					return this.el_.addTextTrack(t, i, r)
				};
				r.createRemoteTextTrack = function e(i) {
					if(!this.featuresNativeTextTracks) {
						return n.prototype.createRemoteTextTrack.call(this, i)
					}
					var r = t.createElement("track");
					if(i.kind) {
						r.kind = i.kind
					}
					if(i.label) {
						r.label = i.label
					}
					if(i.language || i.srclang) {
						r.srclang = i.language || i.srclang
					}
					if(i["default"]) {
						r["default"] = i["default"]
					}
					if(i.id) {
						r.id = i.id
					}
					if(i.src) {
						r.src = i.src
					}
					return r
				};
				r.addRemoteTextTrack = function e(t, i) {
					var r = n.prototype.addRemoteTextTrack.call(this, t, i);
					if(this.featuresNativeTextTracks) {
						this.el().appendChild(r)
					}
					return r
				};
				r.removeRemoteTextTrack = function e(t) {
					n.prototype.removeRemoteTextTrack.call(this, t);
					if(this.featuresNativeTextTracks) {
						var i = this.$$("track");
						var r = i.length;
						while(r--) {
							if(t === i[r] || t === i[r].track) {
								this.el().removeChild(i[r])
							}
						}
					}
				};
				r.getVideoPlaybackQuality = function t() {
					if(typeof this.el().getVideoPlaybackQuality === "function") {
						return this.el().getVideoPlaybackQuality()
					}
					var n = {};
					if(typeof this.el().webkitDroppedFrameCount !== "undefined" && typeof this.el().webkitDecodedFrameCount !== "undefined") {
						n.droppedVideoFrames = this.el().webkitDroppedFrameCount;
						n.totalVideoFrames = this.el().webkitDecodedFrameCount
					}
					if(e.performance && typeof e.performance.now === "function") {
						n.creationTime = e.performance.now()
					} else if(e.performance && e.performance.timing && typeof e.performance.timing.navigationStart === "number") {
						n.creationTime = e.Date.now() - e.performance.timing.navigationStart
					}
					return n
				};
				return i
			}(Mn);
			Qr(Zr, "TEST_VID", function() {
				if(!A()) {
					return
				}
				var e = t.createElement("video");
				var n = t.createElement("track");
				n.kind = "captions";
				n.srclang = "en";
				n.label = "English";
				e.appendChild(n);
				return e
			});
			Zr.isSupported = function() {
				try {
					Zr.TEST_VID.volume = .5
				} catch(e) {
					return false
				}
				return !!(Zr.TEST_VID && Zr.TEST_VID.canPlayType)
			};
			Zr.canPlayType = function(e) {
				return Zr.TEST_VID.canPlayType(e)
			};
			Zr.canPlaySource = function(e, t) {
				return Zr.canPlayType(e.type)
			};
			Zr.canControlVolume = function() {
				try {
					var e = Zr.TEST_VID.volume;
					Zr.TEST_VID.volume = e / 2 + .1;
					return e !== Zr.TEST_VID.volume
				} catch(e) {
					return false
				}
			};
			Zr.canMuteVolume = function() {
				try {
					var e = Zr.TEST_VID.muted;
					Zr.TEST_VID.muted = !e;
					if(Zr.TEST_VID.muted) {
						D(Zr.TEST_VID, "muted", "muted")
					} else {
						R(Zr.TEST_VID, "muted", "muted")
					}
					return e !== Zr.TEST_VID.muted
				} catch(e) {
					return false
				}
			};
			Zr.canControlPlaybackRate = function() {
				if($e && rt && at < 58) {
					return false
				}
				try {
					var e = Zr.TEST_VID.playbackRate;
					Zr.TEST_VID.playbackRate = e / 2 + .1;
					return e !== Zr.TEST_VID.playbackRate
				} catch(e) {
					return false
				}
			};
			Zr.canOverrideAttributes = function() {
				try {
					var e = function e() {};
					Object.defineProperty(t.createElement("video"), "src", {
						get: e,
						set: e
					});
					Object.defineProperty(t.createElement("audio"), "src", {
						get: e,
						set: e
					});
					Object.defineProperty(t.createElement("video"), "innerHTML", {
						get: e,
						set: e
					});
					Object.defineProperty(t.createElement("audio"), "innerHTML", {
						get: e,
						set: e
					})
				} catch(e) {
					return false
				}
				return true
			};
			Zr.supportsNativeTextTracks = function() {
				return pt || ft && rt
			};
			Zr.supportsNativeVideoTracks = function() {
				return !!(Zr.TEST_VID && Zr.TEST_VID.videoTracks)
			};
			Zr.supportsNativeAudioTracks = function() {
				return !!(Zr.TEST_VID && Zr.TEST_VID.audioTracks)
			};
			Zr.Events = ["loadstart", "suspend", "abort", "error", "emptied", "stalled", "loadedmetadata", "loadeddata", "canplay", "canplaythrough", "playing", "waiting", "seeking", "seeked", "ended", "durationchange", "timeupdate", "progress", "play", "pause", "ratechange", "resize", "volumechange"];
			[
				["featuresVolumeControl", "canControlVolume"],
				["featuresMuteControl", "canMuteVolume"],
				["featuresPlaybackRate", "canControlPlaybackRate"],
				["featuresSourceset", "canOverrideAttributes"],
				["featuresNativeTextTracks", "supportsNativeTextTracks"],
				["featuresNativeVideoTracks", "supportsNativeVideoTracks"],
				["featuresNativeAudioTracks", "supportsNativeAudioTracks"]
			].forEach(function(e) {
				var t = e[0],
					n = e[1];
				Qr(Zr.prototype, t, function() {
					return Zr[n]()
				}, true)
			});
			Zr.prototype.movingMediaElementInDOM = !ft;
			Zr.prototype.featuresFullscreenResize = true;
			Zr.prototype.featuresProgressEvents = true;
			Zr.prototype.featuresTimeupdateEvents = true;
			var $r;
			Zr.patchCanPlayType = function() {
				if(et >= 4 && !nt && !rt) {
					$r = Zr.TEST_VID && Zr.TEST_VID.constructor.prototype.canPlayType;
					Zr.TEST_VID.constructor.prototype.canPlayType = function(e) {
						var t = /^application\/(?:x-|vnd\.apple\.)mpegurl/i;
						if(e && t.test(e)) {
							return "maybe"
						}
						return $r.call(this, e)
					}
				}
			};
			Zr.unpatchCanPlayType = function() {
				var e = Zr.TEST_VID.constructor.prototype.canPlayType;
				if($r) {
					Zr.TEST_VID.constructor.prototype.canPlayType = $r
				}
				return e
			};
			Zr.patchCanPlayType();
			Zr.disposeMediaElement = function(e) {
				if(!e) {
					return
				}
				if(e.parentNode) {
					e.parentNode.removeChild(e)
				}
				while(e.hasChildNodes()) {
					e.removeChild(e.firstChild)
				}
				e.removeAttribute("src");
				if(typeof e.load === "function") {
					(function() {
						try {
							e.load()
						} catch(e) {}
					})()
				}
			};
			Zr.resetMediaElement = function(e) {
				if(!e) {
					return
				}
				var t = e.querySelectorAll("source");
				var n = t.length;
				while(n--) {
					e.removeChild(t[n])
				}
				e.removeAttribute("src");
				if(typeof e.load === "function") {
					(function() {
						try {
							e.load()
						} catch(e) {}
					})()
				}
			};
			["muted", "defaultMuted", "autoplay", "controls", "loop", "playsinline"].forEach(function(e) {
				Zr.prototype[e] = function() {
					return this.el_[e] || this.el_.hasAttribute(e)
				}
			});
			["muted", "defaultMuted", "autoplay", "loop", "playsinline"].forEach(function(e) {
				Zr.prototype["set" + Fe(e)] = function(t) {
					this.el_[e] = t;
					if(t) {
						this.el_.setAttribute(e, e)
					} else {
						this.el_.removeAttribute(e)
					}
				}
			});
			["paused", "currentTime", "buffered", "volume", "poster", "preload", "error", "seeking", "seekable", "ended", "playbackRate", "defaultPlaybackRate", "played", "networkState", "readyState", "videoWidth", "videoHeight"].forEach(function(e) {
				Zr.prototype[e] = function() {
					return this.el_[e]
				}
			});
			["volume", "src", "poster", "preload", "playbackRate", "defaultPlaybackRate"].forEach(function(e) {
				Zr.prototype["set" + Fe(e)] = function(t) {
					this.el_[e] = t
				}
			});
			["pause", "load", "play"].forEach(function(e) {
				Zr.prototype[e] = function() {
					return this.el_[e]()
				}
			});
			Mn.withSourceHandlers(Zr);
			Zr.nativeSourceHandler = {};
			Zr.nativeSourceHandler.canPlayType = function(e) {
				try {
					return Zr.TEST_VID.canPlayType(e)
				} catch(e) {
					return ""
				}
			};
			Zr.nativeSourceHandler.canHandleSource = function(e, t) {
				if(e.type) {
					return Zr.nativeSourceHandler.canPlayType(e.type)
				} else if(e.src) {
					var n = on(e.src);
					return Zr.nativeSourceHandler.canPlayType("video/" + n)
				}
				return ""
			};
			Zr.nativeSourceHandler.handleSource = function(e, t, n) {
				t.setSrc(e.src)
			};
			Zr.nativeSourceHandler.dispose = function() {};
			Zr.registerSourceHandler(Zr.nativeSourceHandler);
			Mn.registerTech("Html5", Zr);
			var ea = ["progress", "abort", "suspend", "emptied", "stalled", "loadedmetadata", "loadeddata", "timeupdate", "resize", "volumechange", "texttrackchange"];
			var ta = {
				canplay: "CanPlay",
				canplaythrough: "CanPlayThrough",
				playing: "Playing",
				seeked: "Seeked"
			};
			var na = ["tiny", "xsmall", "small", "medium", "large", "xlarge", "huge"];
			var ia = {};
			na.forEach(function(e) {
				var t = e.charAt(0) === "x" ? "x-" + e.substring(1) : e;
				ia[e] = "vjs-layout-" + t
			});
			var ra = {
				tiny: 210,
				xsmall: 320,
				small: 425,
				medium: 768,
				large: 1440,
				xlarge: 2560,
				huge: Infinity
			};
			var aa = function(i) {
				Ke(r, i);

				function r(e, a, s) {
					var l;
					e.id = e.id || a.id || "vjs_video_" + se();
					a = h(r.getTagSettings(e), a);
					a.initChildren = false;
					a.createEl = false;
					a.evented = false;
					a.reportTouchActivity = false;
					if(!a.language) {
						if(typeof e.closest === "function") {
							var u = e.closest("[lang]");
							if(u && u.getAttribute) {
								a.language = u.getAttribute("lang")
							}
						} else {
							var c = e;
							while(c && c.nodeType === 1) {
								if(N(c).hasOwnProperty("lang")) {
									a.language = c.getAttribute("lang");
									break
								}
								c = c.parentNode
							}
						}
					}
					l = i.call(this, null, a, s) || this;
					l.boundDocumentFullscreenChange_ = Se(Ye(l), l.documentFullscreenChange_);
					l.boundFullWindowOnEscKey_ = Se(Ye(l), l.fullWindowOnEscKey);
					l.isFullscreen_ = false;
					l.log = o(l.id_);
					l.fsApi_ = bt;
					l.isPosterFromTech_ = false;
					l.queuedCallbacks_ = [];
					l.isReady_ = false;
					l.hasStarted_ = false;
					l.userActive_ = false;
					if(!l.options_ || !l.options_.techOrder || !l.options_.techOrder.length) {
						throw new Error("No techOrder specified. Did you overwrite " + "videojs.options instead of just changing the " + "properties you want to override?")
					}
					l.tag = e;
					l.tagAttributes = e && N(e);
					l.language(l.options_.language);
					if(a.languages) {
						var d = {};
						Object.getOwnPropertyNames(a.languages).forEach(function(e) {
							d[e.toLowerCase()] = a.languages[e]
						});
						l.languages_ = d
					} else {
						l.languages_ = r.prototype.options_.languages
					}
					l.resetCache_();
					l.poster_ = a.poster || "";
					l.controls_ = !!a.controls;
					e.controls = false;
					e.removeAttribute("controls");
					l.changingSrc_ = false;
					l.playCallbacks_ = [];
					l.playTerminatedQueue_ = [];
					if(e.hasAttribute("autoplay")) {
						l.autoplay(true)
					} else {
						l.autoplay(l.options_.autoplay)
					}
					if(a.plugins) {
						Object.keys(a.plugins).forEach(function(e) {
							if(typeof l[e] !== "function") {
								throw new Error('plugin "' + e + '" does not exist')
							}
						})
					}
					l.scrubbing_ = false;
					l.el_ = l.createEl();
					Re(Ye(l), {
						eventBusKey: "el_"
					});
					if(l.fsApi_.requestFullscreen) {
						ve(t, l.fsApi_.fullscreenchange, l.boundDocumentFullscreenChange_);
						l.on(l.fsApi_.fullscreenchange, l.boundDocumentFullscreenChange_)
					}
					if(l.fluid_) {
						l.on("playerreset", l.updateStyleEl_)
					}
					var f = qe(l.options_);
					if(a.plugins) {
						Object.keys(a.plugins).forEach(function(e) {
							l[e](a.plugins[e])
						})
					}
					l.options_.playerOptions = f;
					l.middleware_ = [];
					l.initChildren();
					l.isAudio(e.nodeName.toLowerCase() === "audio");
					if(l.controls()) {
						l.addClass("vjs-controls-enabled")
					} else {
						l.addClass("vjs-controls-disabled")
					}
					l.el_.setAttribute("role", "region");
					if(l.isAudio()) {
						l.el_.setAttribute("aria-label", l.localize("Audio Player"))
					} else {
						l.el_.setAttribute("aria-label", l.localize("Video Player"))
					}
					if(l.isAudio()) {
						l.addClass("vjs-audio")
					}
					if(l.flexNotSupported_()) {
						l.addClass("vjs-no-flex")
					}
					if(ut) {
						l.addClass("vjs-touch-enabled")
					}
					if(!ft) {
						l.addClass("vjs-workinghover")
					}
					r.players[l.id_] = Ye(l);
					var p = n.split(".")[0];
					l.addClass("vjs-v" + p);
					l.userActive(true);
					l.reportUserActivity();
					l.one("play", l.listenForUserActivity_);
					l.on("stageclick", l.handleStageClick_);
					l.on("keydown", l.handleKeyDown);
					l.breakpoints(l.options_.breakpoints);
					l.responsive(l.options_.responsive);
					return l
				}
				var a = r.prototype;
				a.dispose = function e() {
					var n = this;
					this.trigger("dispose");
					this.off("dispose");
					ge(t, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);
					ge(t, "keydown", this.boundFullWindowOnEscKey_);
					if(this.styleEl_ && this.styleEl_.parentNode) {
						this.styleEl_.parentNode.removeChild(this.styleEl_);
						this.styleEl_ = null
					}
					r.players[this.id_] = null;
					if(this.tag && this.tag.player) {
						this.tag.player = null
					}
					if(this.el_ && this.el_.player) {
						this.el_.player = null
					}
					if(this.tech_) {
						this.tech_.dispose();
						this.isPosterFromTech_ = false;
						this.poster_ = ""
					}
					if(this.playerElIngest_) {
						this.playerElIngest_ = null
					}
					if(this.tag) {
						this.tag = null
					}
					$n(this);
					Dn.names.forEach(function(e) {
						var t = Dn[e];
						var i = n[t.getterName]();
						if(i && i.off) {
							i.off()
						}
					});
					i.prototype.dispose.call(this)
				};
				a.createEl = function n() {
					var r = this.tag;
					var a;
					var s = this.playerElIngest_ = r.parentNode && r.parentNode.hasAttribute && r.parentNode.hasAttribute("data-vjs-player");
					var o = this.tag.tagName.toLowerCase() === "video-js";
					if(s) {
						a = this.el_ = r.parentNode
					} else if(!o) {
						a = this.el_ = i.prototype.createEl.call(this, "div")
					}
					var l = N(r);
					if(o) {
						a = this.el_ = r;
						r = this.tag = t.createElement("video");
						while(a.children.length) {
							r.appendChild(a.firstChild)
						}
						if(!w(a, "video-js")) {
							j(a, "video-js")
						}
						a.appendChild(r);
						s = this.playerElIngest_ = a;
						Object.keys(a).forEach(function(e) {
							try {
								r[e] = a[e]
							} catch(e) {}
						})
					}
					r.setAttribute("tabindex", "-1");
					l.tabindex = "-1";
					if(st || rt && lt) {
						r.setAttribute("role", "application");
						l.role = "application"
					}
					r.removeAttribute("width");
					r.removeAttribute("height");
					if("width" in l) {
						delete l.width
					}
					if("height" in l) {
						delete l.height
					}
					Object.getOwnPropertyNames(l).forEach(function(e) {
						if(!(o && e === "class")) {
							a.setAttribute(e, l[e])
						}
						if(o) {
							r.setAttribute(e, l[e])
						}
					});
					r.playerId = r.id;
					r.id += "_html5_api";
					r.className = "vjs-tech";
					r.player = a.player = this;
					this.addClass("vjs-paused");
					if(e.VIDEOJS_NO_DYNAMIC_STYLE !== true) {
						this.styleEl_ = ne("vjs-styles-dimensions");
						var u = W(".vjs-styles-defaults");
						var c = W("head");
						c.insertBefore(this.styleEl_, u ? u.nextSibling : c.firstChild)
					}
					this.fill_ = false;
					this.fluid_ = false;
					this.width(this.options_.width);
					this.height(this.options_.height);
					this.fill(this.options_.fill);
					this.fluid(this.options_.fluid);
					this.aspectRatio(this.options_.aspectRatio);
					var d = r.getElementsByTagName("a");
					for(var f = 0; f < d.length; f++) {
						var p = d.item(f);
						j(p, "vjs-hidden");
						p.setAttribute("hidden", "hidden")
					}
					r.initNetworkState_ = r.networkState;
					if(r.parentNode && !s) {
						r.parentNode.insertBefore(a, r)
					}
					C(r, a);
					this.children_.unshift(r);
					this.el_.setAttribute("lang", this.language_);
					this.el_ = a;
					return a
				};
				a.width = function e(t) {
					return this.dimension("width", t)
				};
				a.height = function e(t) {
					return this.dimension("height", t)
				};
				a.dimension = function e(t, n) {
					var i = t + "_";
					if(n === undefined) {
						return this[i] || 0
					}
					if(n === "" || n === "auto") {
						this[i] = undefined;
						this.updateStyleEl_();
						return
					}
					var r = parseFloat(n);
					if(isNaN(r)) {
						s.error('Improper value "' + n + '" supplied for for ' + t);
						return
					}
					this[i] = r;
					this.updateStyleEl_()
				};
				a.fluid = function e(t) {
					if(t === undefined) {
						return !!this.fluid_
					}
					this.fluid_ = !!t;
					if(Ce(this)) {
						this.off("playerreset", this.updateStyleEl_)
					}
					if(t) {
						this.addClass("vjs-fluid");
						this.fill(false);
						we(function() {
							this.on("playerreset", this.updateStyleEl_)
						})
					} else {
						this.removeClass("vjs-fluid")
					}
					this.updateStyleEl_()
				};
				a.fill = function e(t) {
					if(t === undefined) {
						return !!this.fill_
					}
					this.fill_ = !!t;
					if(t) {
						this.addClass("vjs-fill");
						this.fluid(false)
					} else {
						this.removeClass("vjs-fill")
					}
				};
				a.aspectRatio = function e(t) {
					if(t === undefined) {
						return this.aspectRatio_
					}
					if(!/^\d+\:\d+$/.test(t)) {
						throw new Error("Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.")
					}
					this.aspectRatio_ = t;
					this.fluid(true);
					this.updateStyleEl_()
				};
				a.updateStyleEl_ = function t() {
					if(e.VIDEOJS_NO_DYNAMIC_STYLE === true) {
						var n = typeof this.width_ === "number" ? this.width_ : this.options_.width;
						var i = typeof this.height_ === "number" ? this.height_ : this.options_.height;
						var r = this.tech_ && this.tech_.el();
						if(r) {
							if(n >= 0) {
								r.width = n
							}
							if(i >= 0) {
								r.height = i
							}
						}
						return
					}
					var a;
					var s;
					var o;
					var l;
					if(this.aspectRatio_ !== undefined && this.aspectRatio_ !== "auto") {
						o = this.aspectRatio_
					} else if(this.videoWidth() > 0) {
						o = this.videoWidth() + ":" + this.videoHeight()
					} else {
						o = "16:9"
					}
					var u = o.split(":");
					var c = u[1] / u[0];
					if(this.width_ !== undefined) {
						a = this.width_
					} else if(this.height_ !== undefined) {
						a = this.height_ / c
					} else {
						a = this.videoWidth() || 300
					}
					if(this.height_ !== undefined) {
						s = this.height_
					} else {
						s = a * c
					}
					if(/^[^a-zA-Z]/.test(this.id())) {
						l = "dimensions-" + this.id()
					} else {
						l = this.id() + "-dimensions"
					}
					this.addClass(l);
					ie(this.styleEl_, "\n      ." + l + " {\n        width: " + a + "px;\n        height: " + s + "px;\n      }\n\n      ." + l + ".vjs-fluid {\n        padding-top: " + c * 100 + "%;\n      }\n    ")
				};
				a.loadTech_ = function e(t, n) {
					var i = this;
					if(this.tech_) {
						this.unloadTech_()
					}
					var r = Fe(t);
					var a = t.charAt(0).toLowerCase() + t.slice(1);
					if(r !== "Html5" && this.tag) {
						Mn.getTech("Html5").disposeMediaElement(this.tag);
						this.tag.player = null;
						this.tag = null
					}
					this.techName_ = r;
					this.isReady_ = false;
					var s = typeof this.autoplay() === "string" ? false : this.autoplay();
					var o = {
						source: n,
						autoplay: s,
						nativeControlsForTouch: this.options_.nativeControlsForTouch,
						playerId: this.id(),
						techId: this.id() + "_" + a + "_api",
						playsinline: this.options_.playsinline,
						preload: this.options_.preload,
						loop: this.options_.loop,
						muted: this.options_.muted,
						poster: this.poster(),
						language: this.language(),
						playerElIngest: this.playerElIngest_ || false,
						"vtt.js": this.options_["vtt.js"],
						canOverridePoster: !!this.options_.techCanOverridePoster,
						enableSourceset: this.options_.enableSourceset,
						Promise: this.options_.Promise
					};
					Dn.names.forEach(function(e) {
						var t = Dn[e];
						o[t.getterName] = i[t.privateName]
					});
					h(o, this.options_[r]);
					h(o, this.options_[a]);
					h(o, this.options_[t.toLowerCase()]);
					if(this.tag) {
						o.tag = this.tag
					}
					if(n && n.src === this.cache_.src && this.cache_.currentTime > 0) {
						o.startTime = this.cache_.currentTime
					}
					var l = Mn.getTech(t);
					if(!l) {
						throw new Error("No Tech named '" + r + "' exists! '" + r + "' should be registered using videojs.registerTech()'")
					}
					this.tech_ = new l(o);
					this.tech_.ready(Se(this, this.handleTechReady_), true);
					Dt.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);
					ea.forEach(function(e) {
						i.on(i.tech_, e, i["handleTech" + Fe(e) + "_"])
					});
					Object.keys(ta).forEach(function(e) {
						i.on(i.tech_, e, function(t) {
							if(i.tech_.playbackRate() === 0 && i.tech_.seeking()) {
								i.queuedCallbacks_.push({
									callback: i["handleTech" + ta[e] + "_"].bind(i),
									event: t
								});
								return
							}
							i["handleTech" + ta[e] + "_"](t)
						})
					});
					this.on(this.tech_, "loadstart", this.handleTechLoadStart_);
					this.on(this.tech_, "sourceset", this.handleTechSourceset_);
					this.on(this.tech_, "waiting", this.handleTechWaiting_);
					this.on(this.tech_, "ended", this.handleTechEnded_);
					this.on(this.tech_, "seeking", this.handleTechSeeking_);
					this.on(this.tech_, "play", this.handleTechPlay_);
					this.on(this.tech_, "firstplay", this.handleTechFirstPlay_);
					this.on(this.tech_, "pause", this.handleTechPause_);
					this.on(this.tech_, "durationchange", this.handleTechDurationChange_);
					this.on(this.tech_, "fullscreenchange", this.handleTechFullscreenChange_);
					this.on(this.tech_, "enterpictureinpicture", this.handleTechEnterPictureInPicture_);
					this.on(this.tech_, "leavepictureinpicture", this.handleTechLeavePictureInPicture_);
					this.on(this.tech_, "error", this.handleTechError_);
					this.on(this.tech_, "loadedmetadata", this.updateStyleEl_);
					this.on(this.tech_, "posterchange", this.handleTechPosterChange_);
					this.on(this.tech_, "textdata", this.handleTechTextData_);
					this.on(this.tech_, "ratechange", this.handleTechRateChange_);
					this.usingNativeControls(this.techGet_("controls"));
					if(this.controls() && !this.usingNativeControls()) {
						this.addTechControlsListeners_()
					}
					if(this.tech_.el().parentNode !== this.el() && (r !== "Html5" || !this.tag)) {
						C(this.tech_.el(), this.el())
					}
					if(this.tag) {
						this.tag.player = null;
						this.tag = null
					}
				};
				a.unloadTech_ = function e() {
					var t = this;
					Dn.names.forEach(function(e) {
						var n = Dn[e];
						t[n.privateName] = t[n.getterName]()
					});
					this.textTracksJson_ = Dt.textTracksToJson(this.tech_);
					this.isReady_ = false;
					this.tech_.dispose();
					this.tech_ = false;
					if(this.isPosterFromTech_) {
						this.poster_ = "";
						this.trigger("posterchange")
					}
					this.isPosterFromTech_ = false
				};
				a.tech = function e(t) {
					if(t === undefined) {
						s.warn("Using the tech directly can be dangerous. I hope you know what you're doing.\n" + "See https://github.com/videojs/video.js/issues/2617 for more info.\n")
					}
					return this.tech_
				};
				a.addTechControlsListeners_ = function e() {
					this.removeTechControlsListeners_();
					this.on(this.tech_, "mouseup", this.handleTechClick_);
					this.on(this.tech_, "dblclick", this.handleTechDoubleClick_);
					this.on(this.tech_, "touchstart", this.handleTechTouchStart_);
					this.on(this.tech_, "touchmove", this.handleTechTouchMove_);
					this.on(this.tech_, "touchend", this.handleTechTouchEnd_);
					this.on(this.tech_, "tap", this.handleTechTap_)
				};
				a.removeTechControlsListeners_ = function e() {
					this.off(this.tech_, "tap", this.handleTechTap_);
					this.off(this.tech_, "touchstart", this.handleTechTouchStart_);
					this.off(this.tech_, "touchmove", this.handleTechTouchMove_);
					this.off(this.tech_, "touchend", this.handleTechTouchEnd_);
					this.off(this.tech_, "mouseup", this.handleTechClick_);
					this.off(this.tech_, "dblclick", this.handleTechDoubleClick_)
				};
				a.handleTechReady_ = function e() {
					this.triggerReady();
					if(this.cache_.volume) {
						this.techCall_("setVolume", this.cache_.volume)
					}
					this.handleTechPosterChange_();
					this.handleTechDurationChange_()
				};
				a.handleTechLoadStart_ = function e() {
					this.removeClass("vjs-ended");
					this.removeClass("vjs-seeking");
					this.error(null);
					this.handleTechDurationChange_();
					if(!this.paused()) {
						this.trigger("loadstart");
						this.trigger("firstplay")
					} else {
						this.hasStarted(false);
						this.trigger("loadstart")
					}
					this.manualAutoplay_(this.autoplay())
				};
				a.manualAutoplay_ = function e(t) {
					var n = this;
					if(!this.tech_ || typeof t !== "string") {
						return
					}
					var i = function e() {
						var t = n.muted();
						n.muted(true);
						var i = function e() {
							n.muted(t)
						};
						n.playTerminatedQueue_.push(i);
						var r = n.play();
						if(!It(r)) {
							return
						}
						return r["catch"](i)
					};
					var r;
					if(t === "any" && this.muted() !== true) {
						r = this.play();
						if(It(r)) {
							r = r["catch"](i)
						}
					} else if(t === "muted" && this.muted() !== true) {
						r = i()
					} else {
						r = this.play()
					}
					if(!It(r)) {
						return
					}
					return r.then(function() {
						n.trigger({
							type: "autoplay-success",
							autoplay: t
						})
					})["catch"](function(e) {
						n.trigger({
							type: "autoplay-failure",
							autoplay: t
						})
					})
				};
				a.updateSourceCaches_ = function e(t) {
					if(t === void 0) {
						t = ""
					}
					var n = t;
					var i = "";
					if(typeof n !== "string") {
						n = t.src;
						i = t.type
					}
					this.cache_.source = this.cache_.source || {};
					this.cache_.sources = this.cache_.sources || [];
					if(n && !i) {
						i = ri(this, n)
					}
					this.cache_.source = qe({}, t, {
						src: n,
						type: i
					});
					var r = this.cache_.sources.filter(function(e) {
						return e.src && e.src === n
					});
					var a = [];
					var s = this.$$("source");
					var o = [];
					for(var l = 0; l < s.length; l++) {
						var u = N(s[l]);
						a.push(u);
						if(u.src && u.src === n) {
							o.push(u.src)
						}
					}
					if(o.length && !r.length) {
						this.cache_.sources = a
					} else if(!r.length) {
						this.cache_.sources = [this.cache_.source]
					}
					this.cache_.src = n
				};
				a.handleTechSourceset_ = function e(t) {
					var n = this;
					if(!this.changingSrc_) {
						var i = function e(t) {
							return n.updateSourceCaches_(t)
						};
						var r = this.currentSource().src;
						var a = t.src;
						if(r && !/^blob:/.test(r) && /^blob:/.test(a)) {
							if(!this.lastSource_ || this.lastSource_.tech !== a && this.lastSource_.player !== r) {
								i = function e() {}
							}
						}
						i(a);
						if(!t.src) {
							this.tech_.any(["sourceset", "loadstart"], function(e) {
								if(e.type === "sourceset") {
									return
								}
								var t = n.techGet("currentSrc");
								n.lastSource_.tech = t;
								n.updateSourceCaches_(t)
							})
						}
					}
					this.lastSource_ = {
						player: this.currentSource().src,
						tech: t.src
					};
					this.trigger({
						src: t.src,
						type: "sourceset"
					})
				};
				a.hasStarted = function e(t) {
					if(t === undefined) {
						return this.hasStarted_
					}
					if(t === this.hasStarted_) {
						return
					}
					this.hasStarted_ = t;
					if(this.hasStarted_) {
						this.addClass("vjs-has-started");
						this.trigger("firstplay")
					} else {
						this.removeClass("vjs-has-started")
					}
				};
				a.handleTechPlay_ = function e() {
					this.removeClass("vjs-ended");
					this.removeClass("vjs-paused");
					this.addClass("vjs-playing");
					this.hasStarted(true);
					this.trigger("play")
				};
				a.handleTechRateChange_ = function e() {
					if(this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {
						this.queuedCallbacks_.forEach(function(e) {
							return e.callback(e.event)
						});
						this.queuedCallbacks_ = []
					}
					this.cache_.lastPlaybackRate = this.tech_.playbackRate();
					this.trigger("ratechange")
				};
				a.handleTechWaiting_ = function e() {
					var t = this;
					this.addClass("vjs-waiting");
					this.trigger("waiting");
					var n = this.currentTime();
					var i = function e() {
						if(n !== t.currentTime()) {
							t.removeClass("vjs-waiting");
							t.off("timeupdate", e)
						}
					};
					this.on("timeupdate", i)
				};
				a.handleTechCanPlay_ = function e() {
					this.removeClass("vjs-waiting");
					this.trigger("canplay")
				};
				a.handleTechCanPlayThrough_ = function e() {
					this.removeClass("vjs-waiting");
					this.trigger("canplaythrough")
				};
				a.handleTechPlaying_ = function e() {
					this.removeClass("vjs-waiting");
					this.trigger("playing")
				};
				a.handleTechSeeking_ = function e() {
					this.addClass("vjs-seeking");
					this.trigger("seeking")
				};
				a.handleTechSeeked_ = function e() {
					this.removeClass("vjs-seeking");
					this.removeClass("vjs-ended");
					this.trigger("seeked")
				};
				a.handleTechFirstPlay_ = function e() {
					if(this.options_.starttime) {
						s.warn("Passing the `starttime` option to the player will be deprecated in 6.0");
						this.currentTime(this.options_.starttime)
					}
					this.addClass("vjs-has-started");
					this.trigger("firstplay")
				};
				a.handleTechPause_ = function e() {
					this.removeClass("vjs-playing");
					this.addClass("vjs-paused");
					this.trigger("pause")
				};
				a.handleTechEnded_ = function e() {
					this.addClass("vjs-ended");
					if(this.options_.loop) {
						this.currentTime(0);
						this.play()
					} else if(!this.paused()) {
						this.pause()
					}
					this.trigger("ended")
				};
				a.handleTechDurationChange_ = function e() {
					this.duration(this.techGet_("duration"))
				};
				a.handleTechClick_ = function e(t) {
					if(!K(t)) {
						return
					}
					if(!this.controls_) {
						return
					}
					if(this.paused()) {
						Lt(this.play())
					} else {
						this.pause()
					}
				};
				a.handleTechDoubleClick_ = function e(t) {
					if(!this.controls_) {
						return
					}
					var n = Array.prototype.some.call(this.$$(".vjs-control-bar, .vjs-modal-dialog"), function(e) {
						return e.contains(t.target)
					});
					if(!n) {
						if(this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {
							if(this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === "function") {
								this.options_.userActions.doubleClick.call(this, t)
							} else if(this.isFullscreen()) {
								this.exitFullscreen()
							} else {
								this.requestFullscreen()
							}
						}
					}
				};
				a.handleTechTap_ = function e() {
					this.userActive(!this.userActive())
				};
				a.handleTechTouchStart_ = function e() {
					this.userWasActive = this.userActive()
				};
				a.handleTechTouchMove_ = function e() {
					if(this.userWasActive) {
						this.reportUserActivity()
					}
				};
				a.handleTechTouchEnd_ = function e(t) {
					t.preventDefault()
				};
				a.handleStageClick_ = function e() {
					this.reportUserActivity()
				};
				a.toggleFullscreenClass_ = function e() {
					if(this.isFullscreen()) {
						this.addClass("vjs-fullscreen")
					} else {
						this.removeClass("vjs-fullscreen")
					}
				};
				a.documentFullscreenChange_ = function e(n) {
					var i = n.target.player;
					if(i && i !== this) {
						return
					}
					var r = this.el();
					var a = t[this.fsApi_.fullscreenElement] === r;
					if(!a && r.matches) {
						a = r.matches(":" + this.fsApi_.fullscreen)
					} else if(!a && r.msMatchesSelector) {
						a = r.msMatchesSelector(":" + this.fsApi_.fullscreen)
					}
					this.isFullscreen(a)
				};
				a.handleTechFullscreenChange_ = function e(t, n) {
					if(n) {
						this.isFullscreen(n.isFullscreen)
					}
				};
				a.togglePictureInPictureClass_ = function e() {
					if(this.isInPictureInPicture()) {
						this.addClass("vjs-picture-in-picture")
					} else {
						this.removeClass("vjs-picture-in-picture")
					}
				};
				a.handleTechEnterPictureInPicture_ = function e(t) {
					this.isInPictureInPicture(true)
				};
				a.handleTechLeavePictureInPicture_ = function e(t) {
					this.isInPictureInPicture(false)
				};
				a.handleTechError_ = function e() {
					var t = this.tech_.error();
					this.error(t)
				};
				a.handleTechTextData_ = function e() {
					var t = null;
					if(arguments.length > 1) {
						t = arguments[1]
					}
					this.trigger("textdata", t)
				};
				a.getCache = function e() {
					return this.cache_
				};
				a.resetCache_ = function e() {
					this.cache_ = {
						currentTime: 0,
						inactivityTimeout: this.options_.inactivityTimeout,
						duration: NaN,
						lastVolume: 1,
						lastPlaybackRate: this.defaultPlaybackRate(),
						media: null,
						src: "",
						source: {},
						sources: [],
						volume: 1
					}
				};
				a.techCall_ = function e(t, n) {
					this.ready(function() {
						if(t in Xn) {
							return zn(this.middleware_, this.tech_, t, n)
						} else if(t in Jn) {
							return Kn(this.middleware_, this.tech_, t, n)
						}
						try {
							if(this.tech_) {
								this.tech_[t](n)
							}
						} catch(e) {
							s(e);
							throw e
						}
					}, true)
				};
				a.techGet_ = function e(t) {
					if(!this.tech_ || !this.tech_.isReady_) {
						return
					}
					if(t in Wn) {
						return Yn(this.middleware_, this.tech_, t)
					} else if(t in Jn) {
						return Kn(this.middleware_, this.tech_, t)
					}
					try {
						return this.tech_[t]()
					} catch(e) {
						if(this.tech_[t] === undefined) {
							s("Video.js: " + t + " method not defined for " + this.techName_ + " playback technology.", e);
							throw e
						}
						if(e.name === "TypeError") {
							s("Video.js: " + t + " unavailable on " + this.techName_ + " playback technology element.", e);
							this.tech_.isReady_ = false;
							throw e
						}
						s(e);
						throw e
					}
				};
				a.play = function t() {
					var n = this;
					var i = this.options_.Promise || e.Promise;
					if(i) {
						return new i(function(e) {
							n.play_(e)
						})
					}
					return this.play_()
				};
				a.play_ = function e(t) {
					var n = this;
					if(t === void 0) {
						t = Lt
					}
					this.playCallbacks_.push(t);
					var i = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc()));
					if(this.waitToPlay_) {
						this.off(["ready", "loadstart"], this.waitToPlay_);
						this.waitToPlay_ = null
					}
					if(!this.isReady_ || !i) {
						this.waitToPlay_ = function(e) {
							n.play_()
						};
						this.one(["ready", "loadstart"], this.waitToPlay_);
						if(!i && (pt || ft)) {
							this.load()
						}
						return
					}
					var r = this.techGet_("play");
					if(r === null) {
						this.runPlayTerminatedQueue_()
					} else {
						this.runPlayCallbacks_(r)
					}
				};
				a.runPlayTerminatedQueue_ = function e() {
					var t = this.playTerminatedQueue_.slice(0);
					this.playTerminatedQueue_ = [];
					t.forEach(function(e) {
						e()
					})
				};
				a.runPlayCallbacks_ = function e(t) {
					var n = this.playCallbacks_.slice(0);
					this.playCallbacks_ = [];
					this.playTerminatedQueue_ = [];
					n.forEach(function(e) {
						e(t)
					})
				};
				a.pause = function e() {
					this.techCall_("pause")
				};
				a.paused = function e() {
					return this.techGet_("paused") === false ? false : true
				};
				a.played = function e() {
					return this.techGet_("played") || yt(0, 0)
				};
				a.scrubbing = function e(t) {
					if(typeof t === "undefined") {
						return this.scrubbing_
					}
					this.scrubbing_ = !!t;
					if(t) {
						this.addClass("vjs-scrubbing")
					} else {
						this.removeClass("vjs-scrubbing")
					}
				};
				a.currentTime = function e(t) {
					if(typeof t !== "undefined") {
						if(t < 0) {
							t = 0
						}
						this.techCall_("setCurrentTime", t);
						return
					}
					this.cache_.currentTime = this.techGet_("currentTime") || 0;
					return this.cache_.currentTime
				};
				a.duration = function e(t) {
					if(t === undefined) {
						return this.cache_.duration !== undefined ? this.cache_.duration : NaN
					}
					t = parseFloat(t);
					if(t < 0) {
						t = Infinity
					}
					if(t !== this.cache_.duration) {
						this.cache_.duration = t;
						if(t === Infinity) {
							this.addClass("vjs-live");
							if(this.options_.liveui && this.player_.liveTracker) {
								this.addClass("vjs-liveui")
							}
						} else {
							this.removeClass("vjs-live");
							this.removeClass("vjs-liveui")
						}
						if(!isNaN(t)) {
							this.trigger("durationchange")
						}
					}
				};
				a.remainingTime = function e() {
					return this.duration() - this.currentTime()
				};
				a.remainingTimeDisplay = function e() {
					return Math.floor(this.duration()) - Math.floor(this.currentTime())
				};
				a.buffered = function e() {
					var e = this.techGet_("buffered");
					if(!e || !e.length) {
						e = yt(0, 0)
					}
					return e
				};
				a.bufferedPercent = function e() {
					return _t(this.buffered(), this.duration())
				};
				a.bufferedEnd = function e() {
					var t = this.buffered();
					var n = this.duration();
					var i = t.end(t.length - 1);
					if(i > n) {
						i = n
					}
					return i
				};
				a.volume = function e(t) {
					var n;
					if(t !== undefined) {
						n = Math.max(0, Math.min(1, parseFloat(t)));
						this.cache_.volume = n;
						this.techCall_("setVolume", n);
						if(n > 0) {
							this.lastVolume_(n)
						}
						return
					}
					n = parseFloat(this.techGet_("volume"));
					return isNaN(n) ? 1 : n
				};
				a.muted = function e(t) {
					if(t !== undefined) {
						this.techCall_("setMuted", t);
						return
					}
					return this.techGet_("muted") || false
				};
				a.defaultMuted = function e(t) {
					if(t !== undefined) {
						return this.techCall_("setDefaultMuted", t)
					}
					return this.techGet_("defaultMuted") || false
				};
				a.lastVolume_ = function e(t) {
					if(t !== undefined && t !== 0) {
						this.cache_.lastVolume = t;
						return
					}
					return this.cache_.lastVolume
				};
				a.supportsFullScreen = function e() {
					return this.techGet_("supportsFullScreen") || false
				};
				a.isFullscreen = function e(t) {
					if(t !== undefined) {
						var n = this.isFullscreen_;
						this.isFullscreen_ = Boolean(t);
						if(this.isFullscreen_ !== n && this.fsApi_.prefixed) {
							this.trigger("fullscreenchange")
						}
						this.toggleFullscreenClass_();
						return
					}
					return this.isFullscreen_
				};
				a.requestFullscreen = function e(t) {
					var n = this;
					var i;
					if(!this.fsApi_.prefixed) {
						i = this.options_.fullscreen && this.options_.fullscreen.options || {};
						if(t !== undefined) {
							i = t
						}
					}
					if(this.fsApi_.requestFullscreen) {
						var r = this.el_[this.fsApi_.requestFullscreen](i);
						if(r) {
							r.then(function() {
								return n.isFullscreen(true)
							}, function() {
								return n.isFullscreen(false)
							})
						}
						return r
					} else if(this.tech_.supportsFullScreen()) {
						this.techCall_("enterFullScreen")
					} else {
						this.enterFullWindow()
					}
				};
				a.exitFullscreen = function e() {
					var n = this;
					if(this.fsApi_.requestFullscreen) {
						var i = t[this.fsApi_.exitFullscreen]();
						if(i) {
							i.then(function() {
								return n.isFullscreen(false)
							})
						}
						return i
					} else if(this.tech_.supportsFullScreen()) {
						this.techCall_("exitFullScreen")
					} else {
						this.exitFullWindow()
					}
				};
				a.enterFullWindow = function e() {
					this.isFullscreen(true);
					this.isFullWindow = true;
					this.docOrigOverflow = t.documentElement.style.overflow;
					ve(t, "keydown", this.boundFullWindowOnEscKey_);
					t.documentElement.style.overflow = "hidden";
					j(t.body, "vjs-full-window");
					this.trigger("enterFullWindow")
				};
				a.fullWindowOnEscKey = function e(t) {
					if(Rt.isEventKey(t, "Esc")) {
						if(this.isFullscreen() === true) {
							this.exitFullscreen()
						} else {
							this.exitFullWindow()
						}
					}
				};
				a.exitFullWindow = function e() {
					this.isFullscreen(false);
					this.isFullWindow = false;
					ge(t, "keydown", this.boundFullWindowOnEscKey_);
					t.documentElement.style.overflow = this.docOrigOverflow;
					I(t.body, "vjs-full-window");
					this.trigger("exitFullWindow")
				};
				a.isInPictureInPicture = function e(t) {
					if(t !== undefined) {
						this.isInPictureInPicture_ = !!t;
						this.togglePictureInPictureClass_();
						return
					}
					return !!this.isInPictureInPicture_
				};
				a.requestPictureInPicture = function e() {
					if("pictureInPictureEnabled" in t) {
						return this.techGet_("requestPictureInPicture")
					}
				};
				a.exitPictureInPicture = function e() {
					if("pictureInPictureEnabled" in t) {
						return t.exitPictureInPicture()
					}
				};
				a.handleKeyDown = function e(t) {
					var n = this.options_.userActions;
					if(!n || !n.hotkeys) {
						return
					}
					var i = function e(t) {
						var n = t.tagName.toLowerCase();
						if(t.isContentEditable) {
							return true
						}
						var i = ["button", "checkbox", "hidden", "radio", "reset", "submit"];
						if(n === "input") {
							return i.indexOf(t.type) === -1
						}
						var r = ["textarea"];
						return r.indexOf(n) !== -1
					};
					if(i(this.el_.ownerDocument.activeElement)) {
						return
					}
					if(typeof n.hotkeys === "function") {
						n.hotkeys.call(this, t)
					} else {
						this.handleHotkeys(t)
					}
				};
				a.handleHotkeys = function e(n) {
					var i = this.options_.userActions ? this.options_.userActions.hotkeys : {};
					var r = i.fullscreenKey,
						a = r === void 0 ? function(e) {
							return Rt.isEventKey(e, "f")
						} : r,
						s = i.muteKey,
						o = s === void 0 ? function(e) {
							return Rt.isEventKey(e, "m")
						} : s,
						l = i.playPauseKey,
						u = l === void 0 ? function(e) {
							return Rt.isEventKey(e, "k") || Rt.isEventKey(e, "Space")
						} : l;
					if(a.call(this, n)) {
						n.preventDefault();
						n.stopPropagation();
						var c = He.getComponent("FullscreenToggle");
						if(t[this.fsApi_.fullscreenEnabled] !== false) {
							c.prototype.handleClick.call(this, n)
						}
					} else if(o.call(this, n)) {
						n.preventDefault();
						n.stopPropagation();
						var d = He.getComponent("MuteToggle");
						d.prototype.handleClick.call(this, n)
					} else if(u.call(this, n)) {
						n.preventDefault();
						n.stopPropagation();
						var f = He.getComponent("PlayToggle");
						f.prototype.handleClick.call(this, n)
					}
				};
				a.canPlayType = function e(t) {
					var n;
					for(var i = 0, r = this.options_.techOrder; i < r.length; i++) {
						var a = r[i];
						var o = Mn.getTech(a);
						if(!o) {
							o = He.getComponent(a)
						}
						if(!o) {
							s.error('The "' + a + '" tech is undefined. Skipped browser support check for that tech.');
							continue
						}
						if(o.isSupported()) {
							n = o.canPlayType(t);
							if(n) {
								return n
							}
						}
					}
					return ""
				};
				a.selectSource = function e(t) {
					var n = this;
					var i = this.options_.techOrder.map(function(e) {
						return [e, Mn.getTech(e)]
					}).filter(function(e) {
						var t = e[0],
							n = e[1];
						if(n) {
							return n.isSupported()
						}
						s.error('The "' + t + '" tech is undefined. Skipped browser support check for that tech.');
						return false
					});
					var r = function e(t, n, i) {
						var r;
						t.some(function(e) {
							return n.some(function(t) {
								r = i(e, t);
								if(r) {
									return true
								}
							})
						});
						return r
					};
					var a;
					var o = function e(t) {
						return function(e, n) {
							return t(n, e)
						}
					};
					var l = function e(t, i) {
						var r = t[0],
							a = t[1];
						if(a.canPlaySource(i, n.options_[r.toLowerCase()])) {
							return {
								source: i,
								tech: r
							}
						}
					};
					if(this.options_.sourceOrder) {
						a = r(t, i, o(l))
					} else {
						a = r(i, t, l)
					}
					return a || false
				};
				a.src = function e(t) {
					var n = this;
					if(typeof t === "undefined") {
						return this.cache_.src || ""
					}
					var i = ai(t);
					if(!i.length) {
						this.setTimeout(function() {
							this.error({
								code: 4,
								message: this.localize(this.options_.notSupportedMessage)
							})
						}, 0);
						return
					}
					this.changingSrc_ = true;
					this.cache_.sources = i;
					this.updateSourceCaches_(i[0]);
					Hn(this, i[0], function(e, t) {
						n.middleware_ = t;
						n.cache_.sources = i;
						n.updateSourceCaches_(e);
						var r = n.src_(e);
						if(r) {
							if(i.length > 1) {
								return n.src(i.slice(1))
							}
							n.changingSrc_ = false;
							n.setTimeout(function() {
								this.error({
									code: 4,
									message: this.localize(this.options_.notSupportedMessage)
								})
							}, 0);
							n.triggerReady();
							return
						}
						Gn(t, n.tech_)
					})
				};
				a.src_ = function e(t) {
					var n = this;
					var i = this.selectSource([t]);
					if(!i) {
						return true
					}
					if(!Ve(i.tech, this.techName_)) {
						this.changingSrc_ = true;
						this.loadTech_(i.tech, i.source);
						this.tech_.ready(function() {
							n.changingSrc_ = false
						});
						return false
					}
					this.ready(function() {
						if(this.tech_.constructor.prototype.hasOwnProperty("setSource")) {
							this.techCall_("setSource", t)
						} else {
							this.techCall_("src", t.src)
						}
						this.changingSrc_ = false
					}, true);
					return false
				};
				a.load = function e() {
					this.techCall_("load")
				};
				a.reset = function t() {
					var n = this;
					var i = this.options_.Promise || e.Promise;
					if(this.paused() || !i) {
						this.doReset_()
					} else {
						var r = this.play();
						Lt(r.then(function() {
							return n.doReset_()
						}))
					}
				};
				a.doReset_ = function e() {
					if(this.tech_) {
						this.tech_.clearTracks("text")
					}
					this.resetCache_();
					this.poster("");
					this.loadTech_(this.options_.techOrder[0], null);
					this.techCall_("reset");
					this.resetControlBarUI_();
					if(Ce(this)) {
						this.trigger("playerreset")
					}
				};
				a.resetControlBarUI_ = function e() {
					this.resetProgressBar_();
					this.resetPlaybackRate_();
					this.resetVolumeBar_()
				};
				a.resetProgressBar_ = function e() {
					this.currentTime(0);
					var t = this.controlBar,
						n = t.durationDisplay,
						i = t.remainingTimeDisplay;
					if(n) {
						n.updateContent()
					}
					if(i) {
						i.updateContent()
					}
				};
				a.resetPlaybackRate_ = function e() {
					this.playbackRate(this.defaultPlaybackRate());
					this.handleTechRateChange_()
				};
				a.resetVolumeBar_ = function e() {
					this.volume(1);
					this.trigger("volumechange")
				};
				a.currentSources = function e() {
					var t = this.currentSource();
					var n = [];
					if(Object.keys(t).length !== 0) {
						n.push(t)
					}
					return this.cache_.sources || n
				};
				a.currentSource = function e() {
					return this.cache_.source || {}
				};
				a.currentSrc = function e() {
					return this.currentSource() && this.currentSource().src || ""
				};
				a.currentType = function e() {
					return this.currentSource() && this.currentSource().type || ""
				};
				a.preload = function e(t) {
					if(t !== undefined) {
						this.techCall_("setPreload", t);
						this.options_.preload = t;
						return
					}
					return this.techGet_("preload")
				};
				a.autoplay = function e(t) {
					if(t === undefined) {
						return this.options_.autoplay || false
					}
					var n;
					if(typeof t === "string" && /(any|play|muted)/.test(t)) {
						this.options_.autoplay = t;
						this.manualAutoplay_(t);
						n = false
					} else if(!t) {
						this.options_.autoplay = false
					} else {
						this.options_.autoplay = true
					}
					n = typeof n === "undefined" ? this.options_.autoplay : n;
					if(this.tech_) {
						this.techCall_("setAutoplay", n)
					}
				};
				a.playsinline = function e(t) {
					if(t !== undefined) {
						this.techCall_("setPlaysinline", t);
						this.options_.playsinline = t;
						return this
					}
					return this.techGet_("playsinline")
				};
				a.loop = function e(t) {
					if(t !== undefined) {
						this.techCall_("setLoop", t);
						this.options_.loop = t;
						return
					}
					return this.techGet_("loop")
				};
				a.poster = function e(t) {
					if(t === undefined) {
						return this.poster_
					}
					if(!t) {
						t = ""
					}
					if(t === this.poster_) {
						return
					}
					this.poster_ = t;
					this.techCall_("setPoster", t);
					this.isPosterFromTech_ = false;
					this.trigger("posterchange")
				};
				a.handleTechPosterChange_ = function e() {
					if((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {
						var t = this.tech_.poster() || "";
						if(t !== this.poster_) {
							this.poster_ = t;
							this.isPosterFromTech_ = true;
							this.trigger("posterchange")
						}
					}
				};
				a.controls = function e(t) {
					if(t === undefined) {
						return !!this.controls_
					}
					t = !!t;
					if(this.controls_ === t) {
						return
					}
					this.controls_ = t;
					if(this.usingNativeControls()) {
						this.techCall_("setControls", t)
					}
					if(this.controls_) {
						this.removeClass("vjs-controls-disabled");
						this.addClass("vjs-controls-enabled");
						this.trigger("controlsenabled");
						if(!this.usingNativeControls()) {
							this.addTechControlsListeners_()
						}
					} else {
						this.removeClass("vjs-controls-enabled");
						this.addClass("vjs-controls-disabled");
						this.trigger("controlsdisabled");
						if(!this.usingNativeControls()) {
							this.removeTechControlsListeners_()
						}
					}
				};
				a.usingNativeControls = function e(t) {
					if(t === undefined) {
						return !!this.usingNativeControls_
					}
					t = !!t;
					if(this.usingNativeControls_ === t) {
						return
					}
					this.usingNativeControls_ = t;
					if(this.usingNativeControls_) {
						this.addClass("vjs-using-native-controls");
						this.trigger("usingnativecontrols")
					} else {
						this.removeClass("vjs-using-native-controls");
						this.trigger("usingcustomcontrols")
					}
				};
				a.error = function e(t) {
					if(t === undefined) {
						return this.error_ || null
					}
					if(this.options_.suppressNotSupportedError && t && t.code === 4) {
						var n = function e() {
							this.error(t)
						};
						this.options_.suppressNotSupportedError = false;
						this.any(["click", "touchstart"], n);
						this.one("loadstart", function() {
							this.off(["click", "touchstart"], n)
						});
						return
					}
					if(t === null) {
						this.error_ = t;
						this.removeClass("vjs-error");
						if(this.errorDisplay) {
							this.errorDisplay.close()
						}
						return
					}
					this.error_ = new Pt(t);
					this.addClass("vjs-error");
					s.error("(CODE:" + this.error_.code + " " + Pt.errorTypes[this.error_.code] + ")", this.error_.message, this.error_);
					this.trigger("error");
					return
				};
				a.reportUserActivity = function e(t) {
					this.userActivity_ = true
				};
				a.userActive = function e(t) {
					if(t === undefined) {
						return this.userActive_
					}
					t = !!t;
					if(t === this.userActive_) {
						return
					}
					this.userActive_ = t;
					if(this.userActive_) {
						this.userActivity_ = true;
						this.removeClass("vjs-user-inactive");
						this.addClass("vjs-user-active");
						this.trigger("useractive");
						return
					}
					if(this.tech_) {
						this.tech_.one("mousemove", function(e) {
							e.stopPropagation();
							e.preventDefault()
						})
					}
					this.userActivity_ = false;
					this.removeClass("vjs-user-active");
					this.addClass("vjs-user-inactive");
					this.trigger("userinactive")
				};
				a.listenForUserActivity_ = function e() {
					var t;
					var n;
					var i;
					var r = Se(this, this.reportUserActivity);
					var a = function e(t) {
						if(t.screenX !== n || t.screenY !== i) {
							n = t.screenX;
							i = t.screenY;
							r()
						}
					};
					var s = function e() {
						r();
						this.clearInterval(t);
						t = this.setInterval(r, 250)
					};
					var o = function e(n) {
						r();
						this.clearInterval(t)
					};
					this.on("mousedown", s);
					this.on("mousemove", a);
					this.on("mouseup", o);
					this.on("mouseleave", o);
					var l = this.getChild("controlBar");
					if(l && !ft && !$e) {
						l.on("mouseenter", function(e) {
							this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;
							this.player().options_.inactivityTimeout = 0
						});
						l.on("mouseleave", function(e) {
							this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout
						})
					}
					this.on("keydown", r);
					this.on("keyup", r);
					var u;
					this.setInterval(function() {
						if(!this.userActivity_) {
							return
						}
						this.userActivity_ = false;
						this.userActive(true);
						this.clearTimeout(u);
						var e = this.options_.inactivityTimeout;
						if(e <= 0) {
							return
						}
						u = this.setTimeout(function() {
							if(!this.userActivity_) {
								this.userActive(false)
							}
						}, e)
					}, 250)
				};
				a.playbackRate = function e(t) {
					if(t !== undefined) {
						this.techCall_("setPlaybackRate", t);
						return
					}
					if(this.tech_ && this.tech_.featuresPlaybackRate) {
						return this.cache_.lastPlaybackRate || this.techGet_("playbackRate")
					}
					return 1
				};
				a.defaultPlaybackRate = function e(t) {
					if(t !== undefined) {
						return this.techCall_("setDefaultPlaybackRate", t)
					}
					if(this.tech_ && this.tech_.featuresPlaybackRate) {
						return this.techGet_("defaultPlaybackRate")
					}
					return 1
				};
				a.isAudio = function e(t) {
					if(t !== undefined) {
						this.isAudio_ = !!t;
						return
					}
					return !!this.isAudio_
				};
				a.addTextTrack = function e(t, n, i) {
					if(this.tech_) {
						return this.tech_.addTextTrack(t, n, i)
					}
				};
				a.addRemoteTextTrack = function e(t, n) {
					if(this.tech_) {
						return this.tech_.addRemoteTextTrack(t, n)
					}
				};
				a.removeRemoteTextTrack = function e(t) {
					if(t === void 0) {
						t = {}
					}
					var n = t,
						i = n.track;
					if(!i) {
						i = t
					}
					if(this.tech_) {
						return this.tech_.removeRemoteTextTrack(i)
					}
				};
				a.getVideoPlaybackQuality = function e() {
					return this.techGet_("getVideoPlaybackQuality")
				};
				a.videoWidth = function e() {
					return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0
				};
				a.videoHeight = function e() {
					return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0
				};
				a.language = function e(t) {
					if(t === undefined) {
						return this.language_
					}
					this.language_ = String(t).toLowerCase()
				};
				a.languages = function e() {
					return qe(r.prototype.options_.languages, this.languages_)
				};
				a.toJSON = function e() {
					var t = qe(this.options_);
					var n = t.tracks;
					t.tracks = [];
					for(var i = 0; i < n.length; i++) {
						var r = n[i];
						r = qe(r);
						r.player = undefined;
						t.tracks[i] = r
					}
					return t
				};
				a.createModal = function e(t, n) {
					var i = this;
					n = n || {};
					n.content = t || "";
					var r = new Ht(this, n);
					this.addChild(r);
					r.on("dispose", function() {
						i.removeChild(r)
					});
					r.open();
					return r
				};
				a.updateCurrentBreakpoint_ = function e() {
					if(!this.responsive()) {
						return
					}
					var t = this.currentBreakpoint();
					var n = this.currentWidth();
					for(var i = 0; i < na.length; i++) {
						var r = na[i];
						var a = this.breakpoints_[r];
						if(n <= a) {
							if(t === r) {
								return
							}
							if(t) {
								this.removeClass(ia[t])
							}
							this.addClass(ia[r]);
							this.breakpoint_ = r;
							break
						}
					}
				};
				a.removeCurrentBreakpoint_ = function e() {
					var t = this.currentBreakpointClass();
					this.breakpoint_ = "";
					if(t) {
						this.removeClass(t)
					}
				};
				a.breakpoints = function e(t) {
					if(t === undefined) {
						return h(this.breakpoints_)
					}
					this.breakpoint_ = "";
					this.breakpoints_ = h({}, ra, t);
					this.updateCurrentBreakpoint_();
					return h(this.breakpoints_)
				};
				a.responsive = function e(t) {
					if(t === undefined) {
						return this.responsive_
					}
					t = Boolean(t);
					var n = this.responsive_;
					if(t === n) {
						return
					}
					this.responsive_ = t;
					if(t) {
						this.on("playerresize", this.updateCurrentBreakpoint_);
						this.updateCurrentBreakpoint_()
					} else {
						this.off("playerresize", this.updateCurrentBreakpoint_);
						this.removeCurrentBreakpoint_()
					}
					return t
				};
				a.currentBreakpoint = function e() {
					return this.breakpoint_
				};
				a.currentBreakpointClass = function e() {
					return ia[this.breakpoint_] || ""
				};
				a.loadMedia = function e(t, n) {
					var i = this;
					if(!t || typeof t !== "object") {
						return
					}
					this.reset();
					this.cache_.media = qe(t);
					var r = this.cache_.media,
						a = r.artwork,
						s = r.poster,
						o = r.src,
						l = r.textTracks;
					if(!a && s) {
						this.cache_.media.artwork = [{
							src: s,
							type: ii(s)
						}]
					}
					if(o) {
						this.src(o)
					}
					if(s) {
						this.poster(s)
					}
					if(Array.isArray(l)) {
						l.forEach(function(e) {
							return i.addRemoteTextTrack(e, false)
						})
					}
					this.ready(n)
				};
				a.getMedia = function e() {
					if(!this.cache_.media) {
						var t = this.poster();
						var n = this.currentSources();
						var i = Array.prototype.map.call(this.remoteTextTracks(), function(e) {
							return {
								kind: e.kind,
								label: e.label,
								language: e.language,
								src: e.src
							}
						});
						var r = {
							src: n,
							textTracks: i
						};
						if(t) {
							r.poster = t;
							r.artwork = [{
								src: r.poster,
								type: ii(r.poster)
							}]
						}
						return r
					}
					return qe(this.cache_.media)
				};
				r.getTagSettings = function e(t) {
					var n = {
						sources: [],
						tracks: []
					};
					var i = N(t);
					var r = i["data-setup"];
					if(w(t, "vjs-fill")) {
						i.fill = true
					}
					if(w(t, "vjs-fluid")) {
						i.fluid = true
					}
					if(r !== null) {
						var a = wt(r || "{}"),
							o = a[0],
							l = a[1];
						if(o) {
							s.error(o)
						}
						h(i, l)
					}
					h(n, i);
					if(t.hasChildNodes()) {
						var u = t.childNodes;
						for(var c = 0, d = u.length; c < d; c++) {
							var f = u[c];
							var p = f.nodeName.toLowerCase();
							if(p === "source") {
								n.sources.push(N(f))
							} else if(p === "track") {
								n.tracks.push(N(f))
							}
						}
					}
					return n
				};
				a.flexNotSupported_ = function e() {
					var n = t.createElement("i");
					return !("flexBasis" in n.style || "webkitFlexBasis" in n.style || "mozFlexBasis" in n.style || "msFlexBasis" in n.style || "msFlexOrder" in n.style)
				};
				return r
			}(He);
			Dn.names.forEach(function(e) {
				var t = Dn[e];
				aa.prototype[t.getterName] = function() {
					if(this.tech_) {
						return this.tech_[t.getterName]()
					}
					this[t.privateName] = this[t.privateName] || new t.ListClass;
					return this[t.privateName]
				}
			});
			aa.players = {};
			var sa = e.navigator;
			aa.prototype.options_ = {
				techOrder: Mn.defaultTechOrder_,
				html5: {},
				flash: {},
				inactivityTimeout: 2e3,
				playbackRates: [],
				liveui: false,
				children: ["mediaLoader", "posterImage", "textTrackDisplay", "loadingSpinner", "bigPlayButton", "liveTracker", "controlBar", "errorDisplay", "textTrackSettings", "resizeManager"],
				language: sa && (sa.languages && sa.languages[0] || sa.userLanguage || sa.language) || "en",
				languages: {},
				notSupportedMessage: "No compatible source was found for this media.",
				fullscreen: {
					options: {
						navigationUI: "hide"
					}
				},
				breakpoints: {},
				responsive: false
			};
			["ended", "seeking", "seekable", "networkState", "readyState"].forEach(function(e) {
				aa.prototype[e] = function() {
					return this.techGet_(e)
				}
			});
			ea.forEach(function(e) {
				aa.prototype["handleTech" + Fe(e) + "_"] = function() {
					return this.trigger(e)
				}
			});
			He.registerComponent("Player", aa);
			var oa = l(function(e) {
				function t(n, i) {
					e.exports = t = Object.setPrototypeOf || function e(t, n) {
						t.__proto__ = n;
						return t
					};
					return t(n, i)
				}
				e.exports = t
			});
			var la = l(function(e) {
				function t() {
					if(typeof Reflect === "undefined" || !Reflect.construct) return false;
					if(Reflect.construct.sham) return false;
					if(typeof Proxy === "function") return true;
					try {
						Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));
						return true
					} catch(e) {
						return false
					}
				}

				function n(i, r, a) {
					if(t()) {
						e.exports = n = Reflect.construct
					} else {
						e.exports = n = function e(t, n, i) {
							var r = [null];
							r.push.apply(r, n);
							var a = Function.bind.apply(t, r);
							var s = new a;
							if(i) oa(s, i.prototype);
							return s
						}
					}
					return n.apply(null, arguments)
				}
				e.exports = n
			});
			var ua = "plugin";
			var ca = "activePlugins_";
			var da = {};
			var fa = function e(t) {
				return da.hasOwnProperty(t)
			};
			var pa = function e(t) {
				return fa(t) ? da[t] : undefined
			};
			var ha = function e(t, n) {
				t[ca] = t[ca] || {};
				t[ca][n] = true
			};
			var va = function e(t, n, i) {
				var r = (i ? "before" : "") + "pluginsetup";
				t.trigger(r, n);
				t.trigger(r + ":" + n.name, n)
			};
			var ga = function e(t, n) {
				var i = function e() {
					va(this, {
						name: t,
						plugin: n,
						instance: null
					}, true);
					var i = n.apply(this, arguments);
					ha(this, t);
					va(this, {
						name: t,
						plugin: n,
						instance: i
					});
					return i
				};
				Object.keys(n).forEach(function(e) {
					i[e] = n[e]
				});
				return i
			};
			var ma = function e(t, n) {
				n.prototype.name = t;
				return function() {
					va(this, {
						name: t,
						plugin: n,
						instance: null
					}, true);
					for(var e = arguments.length, i = new Array(e), r = 0; r < e; r++) {
						i[r] = arguments[r]
					}
					var a = la(n, [this].concat(i));
					this[t] = function() {
						return a
					};
					va(this, a.getEventHash());
					return a
				}
			};
			var ya = function() {
				function e(t) {
					if(this.constructor === e) {
						throw new Error("Plugin must be sub-classed; not directly instantiated.")
					}
					this.player = t;
					Re(this);
					delete this.trigger;
					Me(this, this.constructor.defaultState);
					ha(t, this.name);
					this.dispose = Se(this, this.dispose);
					t.on("dispose", this.dispose)
				}
				var t = e.prototype;
				t.version = function e() {
					return this.constructor.VERSION
				};
				t.getEventHash = function e(t) {
					if(t === void 0) {
						t = {}
					}
					t.name = this.name;
					t.plugin = this.constructor;
					t.instance = this;
					return t
				};
				t.trigger = function e(t, n) {
					if(n === void 0) {
						n = {}
					}
					return me(this.eventBusEl_, t, this.getEventHash(n))
				};
				t.handleStateChanged = function e(t) {};
				t.dispose = function e() {
					var t = this.name,
						n = this.player;
					this.trigger("dispose");
					this.off();
					n.off("dispose", this.dispose);
					n[ca][t] = false;
					this.player = this.state = null;
					n[t] = ma(t, da[t])
				};
				e.isBasic = function t(n) {
					var i = typeof n === "string" ? pa(n) : n;
					return typeof i === "function" && !e.prototype.isPrototypeOf(i.prototype)
				};
				e.registerPlugin = function t(n, i) {
					if(typeof n !== "string") {
						throw new Error('Illegal plugin name, "' + n + '", must be a string, was ' + typeof n + ".")
					}
					if(fa(n)) {
						s.warn('A plugin named "' + n + '" already exists. You may want to avoid re-registering plugins!')
					} else if(aa.prototype.hasOwnProperty(n)) {
						throw new Error('Illegal plugin name, "' + n + '", cannot share a name with an existing player method!')
					}
					if(typeof i !== "function") {
						throw new Error('Illegal plugin for "' + n + '", must be a function, was ' + typeof i + ".")
					}
					da[n] = i;
					if(n !== ua) {
						if(e.isBasic(i)) {
							aa.prototype[n] = ga(n, i)
						} else {
							aa.prototype[n] = ma(n, i)
						}
					}
					return i
				};
				e.deregisterPlugin = function e(t) {
					if(t === ua) {
						throw new Error("Cannot de-register base plugin.")
					}
					if(fa(t)) {
						delete da[t];
						delete aa.prototype[t]
					}
				};
				e.getPlugins = function e(t) {
					if(t === void 0) {
						t = Object.keys(da)
					}
					var n;
					t.forEach(function(e) {
						var t = pa(e);
						if(t) {
							n = n || {};
							n[e] = t
						}
					});
					return n
				};
				e.getPluginVersion = function e(t) {
					var n = pa(t);
					return n && n.VERSION || ""
				};
				return e
			}();
			ya.getPlugin = pa;
			ya.BASE_PLUGIN_NAME = ua;
			ya.registerPlugin(ua, ya);
			aa.prototype.usingPlugin = function(e) {
				return !!this[ca] && this[ca][e] === true
			};
			aa.prototype.hasPlugin = function(e) {
				return !!fa(e)
			};

			function _a(e, t) {
				if(typeof t !== "function" && t !== null) {
					throw new TypeError("Super expression must either be null or a function")
				}
				e.prototype = Object.create(t && t.prototype, {
					constructor: {
						value: e,
						writable: true,
						configurable: true
					}
				});
				if(t) oa(e, t)
			}
			var ba = _a;
			var Aa = function e(t, n) {
				if(n === void 0) {
					n = {}
				}
				var i = function e() {
					t.apply(this, arguments)
				};
				var r = {};
				if(typeof n === "object") {
					if(n.constructor !== Object.prototype.constructor) {
						i = n.constructor
					}
					r = n
				} else if(typeof n === "function") {
					i = n
				}
				ba(i, t);
				if(t) {
					i.super_ = t
				}
				for(var a in r) {
					if(r.hasOwnProperty(a)) {
						i.prototype[a] = r[a]
					}
				}
				return i
			};
			var Sa = function e(t) {
				return t.indexOf("#") === 0 ? t.slice(1) : t
			};

			function Ta(e, t, n) {
				var i = Ta.getPlayer(e);
				if(i) {
					if(t) {
						s.warn('Player "' + e + '" is already initialised. Options will not be applied.')
					}
					if(n) {
						i.ready(n)
					}
					return i
				}
				var r = typeof e === "string" ? W("#" + Sa(e)) : e;
				if(!S(r)) {
					throw new TypeError("The element or ID supplied is not valid. (videojs)")
				}
				if(!r.ownerDocument.defaultView || !r.ownerDocument.body.contains(r)) {
					s.warn("The element supplied is not included in the DOM")
				}
				t = t || {};
				Ta.hooks("beforesetup").forEach(function(e) {
					var n = e(r, qe(t));
					if(!v(n) || Array.isArray(n)) {
						s.error("please return an object in beforesetup hooks");
						return
					}
					t = qe(t, n)
				});
				var a = He.getComponent("Player");
				i = new a(r, t, n);
				Ta.hooks("setup").forEach(function(e) {
					return e(i)
				});
				return i
			}
			Ta.hooks_ = {};
			Ta.hooks = function(e, t) {
				Ta.hooks_[e] = Ta.hooks_[e] || [];
				if(t) {
					Ta.hooks_[e] = Ta.hooks_[e].concat(t)
				}
				return Ta.hooks_[e]
			};
			Ta.hook = function(e, t) {
				Ta.hooks(e, t)
			};
			Ta.hookOnce = function(e, t) {
				Ta.hooks(e, [].concat(t).map(function(t) {
					var n = function n() {
						Ta.removeHook(e, n);
						return t.apply(void 0, arguments)
					};
					return n
				}))
			};
			Ta.removeHook = function(e, t) {
				var n = Ta.hooks(e).indexOf(t);
				if(n <= -1) {
					return false
				}
				Ta.hooks_[e] = Ta.hooks_[e].slice();
				Ta.hooks_[e].splice(n, 1);
				return true
			};
			if(e.VIDEOJS_NO_DYNAMIC_STYLE !== true && A()) {
				var ka = W(".vjs-styles-defaults");
				if(!ka) {
					ka = ne("vjs-styles-defaults");
					var Ea = W("head");
					if(Ea) {
						Ea.insertBefore(ka, Ea.firstChild)
					}
					ie(ka, "\n      .video-js {\n        width: 300px;\n        height: 150px;\n      }\n\n      .vjs-fluid {\n        padding-top: 56.25%\n      }\n    ")
				}
			}
			ee(1, Ta);
			Ta.VERSION = n;
			Ta.options = aa.prototype.options_;
			Ta.getPlayers = function() {
				return aa.players
			};
			Ta.getPlayer = function(e) {
				var t = aa.players;
				var n;
				if(typeof e === "string") {
					var i = Sa(e);
					var r = t[i];
					if(r) {
						return r
					}
					n = W("#" + i)
				} else {
					n = e
				}
				if(S(n)) {
					var a = n,
						s = a.player,
						o = a.playerId;
					if(s || t[o]) {
						return s || t[o]
					}
				}
			};
			Ta.getAllPlayers = function() {
				return Object.keys(aa.players).map(function(e) {
					return aa.players[e]
				}).filter(Boolean)
			};
			Ta.players = aa.players;
			Ta.getComponent = He.getComponent;
			Ta.registerComponent = function(e, t) {
				if(Mn.isTech(t)) {
					s.warn("The " + e + " tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)")
				}
				He.registerComponent.call(He, e, t)
			};
			Ta.getTech = Mn.getTech;
			Ta.registerTech = Mn.registerTech;
			Ta.use = qn;
			Object.defineProperty(Ta, "middleware", {
				value: {},
				writeable: false,
				enumerable: true
			});
			Object.defineProperty(Ta.middleware, "TERMINATOR", {
				value: Vn,
				writeable: false,
				enumerable: true
			});
			Ta.browser = ht;
			Ta.TOUCH_ENABLED = ut;
			Ta.extend = Aa;
			Ta.mergeOptions = qe;
			Ta.bind = Se;
			Ta.registerPlugin = ya.registerPlugin;
			Ta.deregisterPlugin = ya.deregisterPlugin;
			Ta.plugin = function(e, t) {
				s.warn("videojs.plugin() is deprecated; use videojs.registerPlugin() instead");
				return ya.registerPlugin(e, t)
			};
			Ta.getPlugins = ya.getPlugins;
			Ta.getPlugin = ya.getPlugin;
			Ta.getPluginVersion = ya.getPluginVersion;
			Ta.addLanguage = function(e, t) {
				var n;
				e = ("" + e).toLowerCase();
				Ta.options.languages = qe(Ta.options.languages, (n = {}, n[e] = t, n));
				return Ta.options.languages[e]
			};
			Ta.log = s;
			Ta.createLogger = o;
			Ta.createTimeRange = Ta.createTimeRanges = yt;
			Ta.formatTime = Ei;
			Ta.setFormatTime = Ti;
			Ta.resetFormatTime = ki;
			Ta.parseUrl = an;
			Ta.isCrossOrigin = ln;
			Ta.EventTarget = Ee;
			Ta.on = ve;
			Ta.one = ye;
			Ta.off = ge;
			Ta.trigger = me;
			Ta.xhr = hn;
			Ta.TextTrack = En;
			Ta.AudioTrack = Pn;
			Ta.VideoTrack = Cn;
			["isEl", "isTextNode", "createEl", "hasClass", "addClass", "removeClass", "toggleClass", "setAttributes", "getAttributes", "emptyEl", "appendContent", "insertContent"].forEach(function(e) {
				Ta[e] = function() {
					s.warn("videojs." + e + "() is deprecated; use videojs.dom." + e + "() instead");
					return J[e].apply(null, arguments)
				}
			});
			Ta.computedStyle = m;
			Ta.dom = J;
			Ta.url = un;
			Ta.defineLazyProperty = Qr;
			return Ta
		});
		var videojs = BrightcovePlayerCore.dedupeVideojs(window.videojs, previousVideojs);
		var core = new BrightcovePlayerCore({
			accountId: "4358179114001",
			adConfigId: "",
			autoplay: "play",
			css: {},
			embedId: "default",
			media: {
				poster: {}
			},
			plugins: [{
				name: "ima3",
				autoInit: true,
				options: {
					adTechOrder: ["html5"],
					hardTimeouts: true,
					requestMode: "onload",
					serverUrl: "",
					timeout: 8e3,
					useMediaCuePoints: false,
					vpaidMode: "ENABLED"
				}
			}, {
				name: "perSourceBehaviors",
				autoInit: true
			}, {
				name: "contextmenu",
				autoInit: true
			}, {
				name: "contextmenuUI",
				autoInit: true
			}, {
				name: "bcAnalytics",
				autoInit: true,
				options: {
					accountId: "4358179114001",
					embedId: "default",
					platformVersion: "6.40.3",
					playerId: "VNXYOEC7Ep",
					playerName: "FUNimation Player - Website(IMA Prod)"
				}
			}, {
				name: "errors",
				autoInit: true,
				options: {}
			}, {
				name: "catalog",
				autoInit: true,
				options: {
					accountId: "4358179114001",
					policyKey: "BCpkADawqM1p0sCjd1G8EM1hqjsgcVlZhjhBLIwvCTpG4j_KK1c5maWjHlCYMZCtuXL7tTYKig0N11g-Rp8DpYMI0CDREjusrseVEBm5n4oxGoTuyKnHTeinI8wFbNDYEbmKDU0aAVrZ0TSx"
				}
			}, {
				name: "dock",
				autoInit: false
			}, {
				name: "playlist",
				autoInit: false
			}, {
				name: "comscore",
				autoInit: true,
				options: {
					c2: "3000012",
					labelmapping: 'c3="*null",c4="FUNIMATION",c6="*null"'
				}
			}],
			playerId: "VNXYOEC7Ep",
			preload: "auto",
			videoCloud: {
				policy_key: "BCpkADawqM1p0sCjd1G8EM1hqjsgcVlZhjhBLIwvCTpG4j_KK1c5maWjHlCYMZCtuXL7tTYKig0N11g-Rp8DpYMI0CDREjusrseVEBm5n4oxGoTuyKnHTeinI8wFbNDYEbmKDU0aAVrZ0TSx",
				video: null
			},
			skin: "luna",
			hls: {
				handleManifestRedirects: true,
				options: {
					handleManifestRedirects: true
				}
			},
			playersCDN: "//players.brightcove.net",
			version: "6.40.3"
		}, {});
		var util = core.util;
		if(!videojs.getTech("flash")) {
			(function(e, t) {
				typeof exports === "object" && typeof module !== "undefined" ? module.exports = t(require("video.js")) : typeof define === "function" && define.amd ? define(["video.js"], t) : e.videojsFlash = t(e.videojs)
			})(this, function(e) {
				"use strict";
				e = e && e.hasOwnProperty("default") ? e["default"] : e;
				var t = "5.4.1";
				var n = "2.1.0";

				function i(e) {
					e.streamingFormats = {
						"rtmp/mp4": "MP4",
						"rtmp/flv": "FLV"
					};
					e.streamFromParts = function(e, t) {
						return e + "&" + t
					};
					e.streamToParts = function(e) {
						var t = {
							connection: "",
							stream: ""
						};
						if(!e) {
							return t
						}
						var n = e.search(/&(?!\w+=)/);
						var i = void 0;
						if(n !== -1) {
							i = n + 1
						} else {
							n = i = e.lastIndexOf("/") + 1;
							if(n === 0) {
								n = i = e.length
							}
						}
						t.connection = e.substring(0, n);
						t.stream = e.substring(i, e.length);
						return t
					};
					e.isStreamingType = function(t) {
						return t in e.streamingFormats
					};
					e.RTMP_RE = /^rtmp[set]?:\/\//i;
					e.isStreamingSrc = function(t) {
						return e.RTMP_RE.test(t)
					};
					e.rtmpSourceHandler = {};
					e.rtmpSourceHandler.canPlayType = function(t) {
						if(e.isStreamingType(t)) {
							return "maybe"
						}
						return ""
					};
					e.rtmpSourceHandler.canHandleSource = function(t, n) {
						var i = e.rtmpSourceHandler.canPlayType(t.type);
						if(i) {
							return i
						}
						if(e.isStreamingSrc(t.src)) {
							return "maybe"
						}
						return ""
					};
					e.rtmpSourceHandler.handleSource = function(t, n, i) {
						var r = e.streamToParts(t.src);
						n.setRtmpConnection(r.connection);
						n.setRtmpStream(r.stream)
					};
					e.registerSourceHandler(e.rtmpSourceHandler);
					return e
				}
				var r = typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
				var a;
				if(typeof window !== "undefined") {
					a = window
				} else if(typeof r !== "undefined") {
					a = r
				} else if(typeof self !== "undefined") {
					a = self
				} else {
					a = {}
				}
				var s = a;
				var o = function(e, t) {
					if(!(e instanceof t)) {
						throw new TypeError("Cannot call a class as a function")
					}
				};
				var l = function(e, t) {
					if(typeof t !== "function" && t !== null) {
						throw new TypeError("Super expression must either be null or a function, not " + typeof t)
					}
					e.prototype = Object.create(t && t.prototype, {
						constructor: {
							value: e,
							enumerable: false,
							writable: true,
							configurable: true
						}
					});
					if(t) Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t
				};
				var u = function(e, t) {
					if(!e) {
						throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
					}
					return t && (typeof t === "object" || typeof t === "function") ? t : e
				};
				var c = e.getComponent("Tech");
				var d = e.dom;
				var f = e.url;
				var p = e.createTimeRange;
				var h = e.mergeOptions;
				var v = s && s.navigator || {};
				var g = function(e) {
					l(n, e);

					function n(t, i) {
						o(this, n);
						var r = u(this, e.call(this, t, i));
						if(t.source) {
							r.ready(function() {
								this.setSource(t.source)
							}, true)
						}
						if(t.startTime) {
							r.ready(function() {
								this.load();
								this.play();
								this.currentTime(t.startTime)
							}, true)
						}
						s.videojs = s.videojs || {};
						s.videojs.Flash = s.videojs.Flash || {};
						s.videojs.Flash.onReady = n.onReady;
						s.videojs.Flash.onEvent = n.onEvent;
						s.videojs.Flash.onError = n.onError;
						r.on("seeked", function() {
							this.lastSeekTarget_ = undefined
						});
						return r
					}
					n.prototype.createEl = function e() {
						var i = this.options_;
						if(!i.swf) {
							i.swf = "https://vjs.zencdn.net/swf/" + t + "/video-js.swf"
						}
						var r = i.techId;
						var a = h({
							readyFunction: "videojs.Flash.onReady",
							eventProxyFunction: "videojs.Flash.onEvent",
							errorEventProxyFunction: "videojs.Flash.onError",
							autoplay: i.autoplay,
							preload: i.preload,
							loop: i.loop,
							muted: i.muted
						}, i.flashVars);
						var s = h({
							wmode: "opaque",
							bgcolor: "#000000"
						}, i.params);
						var o = h({
							id: r,
							name: r,
							class: "vjs-tech"
						}, i.attributes);
						this.el_ = n.embed(i.swf, a, s, o);
						this.el_.tech = this;
						return this.el_
					};
					n.prototype.play = function e() {
						if(this.ended()) {
							this.setCurrentTime(0)
						}
						this.el_.vjs_play()
					};
					n.prototype.pause = function e() {
						this.el_.vjs_pause()
					};
					n.prototype.src = function e(t) {
						if(t === undefined) {
							return this.currentSrc()
						}
						return this.setSrc(t)
					};
					n.prototype.setSrc = function e(t) {
						var n = this;
						t = f.getAbsoluteURL(t);
						this.el_.vjs_src(t);
						if(this.autoplay()) {
							this.setTimeout(function() {
								return n.play()
							}, 0)
						}
					};
					n.prototype.seeking = function e() {
						return this.lastSeekTarget_ !== undefined
					};
					n.prototype.setCurrentTime = function t(n) {
						var i = this.seekable();
						if(i.length) {
							n = n > i.start(0) ? n : i.start(0);
							n = n < i.end(i.length - 1) ? n : i.end(i.length - 1);
							this.lastSeekTarget_ = n;
							this.trigger("seeking");
							this.el_.vjs_setProperty("currentTime", n);
							e.prototype.setCurrentTime.call(this)
						}
					};
					n.prototype.currentTime = function e() {
						if(this.seeking()) {
							return this.lastSeekTarget_ || 0
						}
						return this.el_.vjs_getProperty("currentTime")
					};
					n.prototype.currentSrc = function e() {
						if(this.currentSource_) {
							return this.currentSource_.src
						}
						return this.el_.vjs_getProperty("currentSrc")
					};
					n.prototype.duration = function e() {
						if(this.readyState() === 0) {
							return NaN
						}
						var e = this.el_.vjs_getProperty("duration");
						return e >= 0 ? e : Infinity
					};
					n.prototype.load = function e() {
						this.el_.vjs_load()
					};
					n.prototype.poster = function e() {
						this.el_.vjs_getProperty("poster")
					};
					n.prototype.setPoster = function e() {};
					n.prototype.seekable = function e() {
						var t = this.duration();
						if(t === 0) {
							return p()
						}
						return p(0, t)
					};
					n.prototype.buffered = function e() {
						var t = this.el_.vjs_getProperty("buffered");
						if(t.length === 0) {
							return p()
						}
						return p(t[0][0], t[0][1])
					};
					n.prototype.supportsFullScreen = function e() {
						return false
					};
					n.prototype.enterFullScreen = function e() {
						return false
					};
					n.prototype.getVideoPlaybackQuality = function e() {
						var t = this.el_.vjs_getProperty("getVideoPlaybackQuality");
						if(s.performance && typeof s.performance.now === "function") {
							t.creationTime = s.performance.now()
						} else if(s.performance && s.performance.timing && typeof s.performance.timing.navigationStart === "number") {
							t.creationTime = s.Date.now() - s.performance.timing.navigationStart
						}
						return t
					};
					return n
				}(c);
				var m = ["rtmpConnection", "rtmpStream", "preload", "defaultPlaybackRate", "playbackRate", "autoplay", "loop", "controls", "volume", "muted", "defaultMuted"];
				var y = ["networkState", "readyState", "initialTime", "startOffsetTime", "paused", "ended", "videoWidth", "videoHeight"];
				var _ = g.prototype;

				function b(e) {
					var t = e.charAt(0).toUpperCase() + e.slice(1);
					_["set" + t] = function(t) {
						return this.el_.vjs_setProperty(e, t)
					}
				}

				function A(e) {
					_[e] = function() {
						return this.el_.vjs_getProperty(e)
					}
				}
				for(var S = 0; S < m.length; S++) {
					A(m[S]);
					b(m[S])
				}
				for(var T = 0; T < y.length; T++) {
					A(y[T])
				}
				g.isSupported = function() {
					if(e.browser.IS_CHROME && !e.browser.IS_ANDROID || e.browser.IS_SAFARI && !e.browser.IS_IOS) {
						return true
					}
					return g.version()[0] >= 10
				};
				c.withSourceHandlers(g);
				g.nativeSourceHandler = {};
				g.nativeSourceHandler.canPlayType = function(e) {
					if(e in g.formats) {
						return "maybe"
					}
					return ""
				};
				g.nativeSourceHandler.canHandleSource = function(e, t) {
					var n = void 0;

					function i(e) {
						var t = f.getFileExtension(e);
						if(t) {
							return "video/" + t
						}
						return ""
					}
					if(!e.type) {
						n = i(e.src)
					} else {
						n = e.type.replace(/;.*/, "").toLowerCase()
					}
					return g.nativeSourceHandler.canPlayType(n)
				};
				g.nativeSourceHandler.handleSource = function(e, t, n) {
					t.setSrc(e.src)
				};
				g.nativeSourceHandler.dispose = function() {};
				g.registerSourceHandler(g.nativeSourceHandler);
				g.formats = {
					"video/flv": "FLV",
					"video/x-flv": "FLV",
					"video/mp4": "MP4",
					"video/m4v": "MP4"
				};
				g.onReady = function(e) {
					var t = d.$("#" + e);
					var n = t && t.tech;
					if(n && n.el()) {
						g.checkReady(n)
					}
				};
				g.checkReady = function(e) {
					if(!e.el()) {
						return
					}
					if(e.el().vjs_getProperty) {
						e.triggerReady()
					} else {
						this.setTimeout(function() {
							g.checkReady(e)
						}, 50)
					}
				};
				g.onEvent = function(e, t) {
					var n = d.$("#" + e).tech;
					var i = Array.prototype.slice.call(arguments, 2);
					n.setTimeout(function() {
						n.trigger(t, i)
					}, 1)
				};
				g.onError = function(e, t) {
					var n = d.$("#" + e).tech;
					if(t === "srcnotfound") {
						return n.error(4)
					}
					if(typeof t === "string") {
						n.error("FLASH: " + t)
					} else {
						t.origin = "flash";
						n.error(t)
					}
				};
				g.version = function() {
					var e = "0,0,0";
					try {
						e = new s.ActiveXObject("ShockwaveFlash.ShockwaveFlash").GetVariable("$version").replace(/\D+/g, ",").match(/^,?(.+),?$/)[1]
					} catch(t) {
						try {
							if(v.mimeTypes["application/x-shockwave-flash"].enabledPlugin) {
								e = (v.plugins["Shockwave Flash 2.0"] || v.plugins["Shockwave Flash"]).description.replace(/\D+/g, ",").match(/^,?(.+),?$/)[1]
							}
						} catch(e) {}
					}
					return e.split(",")
				};
				g.embed = function(e, t, n, i) {
					var r = g.getEmbedCode(e, t, n, i);
					var a = d.createEl("div", {
						innerHTML: r
					}).childNodes[0];
					return a
				};
				g.getEmbedCode = function(e, t, n, i) {
					var r = '<object type="application/x-shockwave-flash" ';
					var a = "";
					var s = "";
					var o = "";
					if(t) {
						Object.getOwnPropertyNames(t).forEach(function(e) {
							a += e + "=" + t[e] + "&amp;"
						})
					}
					n = h({
						movie: e,
						flashvars: a,
						allowScriptAccess: "always",
						allowNetworking: "all"
					}, n);
					Object.getOwnPropertyNames(n).forEach(function(e) {
						s += '<param name="' + e + '" value="' + n[e] + '" />'
					});
					i = h({
						data: e,
						width: "100%",
						height: "100%"
					}, i);
					Object.getOwnPropertyNames(i).forEach(function(e) {
						o += e + '="' + i[e] + '" '
					});
					return "" + r + o + ">" + s + "</object>"
				};
				i(g);
				if(c.getTech("Flash")) {
					e.log.warn("Not using videojs-flash as it appears to already be registered");
					e.log.warn("videojs-flash should only be used with video.js@6 and above")
				} else {
					e.registerTech("Flash", g)
				}
				g.VERSION = n;
				return g
			})
		}(function(e, t) {
			typeof exports === "object" && typeof module !== "undefined" ? t(exports, require("global/window"), require("video.js")) : typeof define === "function" && define.amd ? define(["exports", "global/window", "video.js"], t) : t(e.videojsFlashlsSourceHandler = {}, e.window, e.videojs)
		})(this, function(e, t, n) {
			"use strict";
			t = t && t.hasOwnProperty("default") ? t["default"] : t;
			n = n && n.hasOwnProperty("default") ? n["default"] : n;
			var i = function() {
				this.init = function() {
					var e = {};
					this.on = function(t, n) {
						if(!e[t]) {
							e[t] = []
						}
						e[t] = e[t].concat(n)
					};
					this.off = function(t, n) {
						var i;
						if(!e[t]) {
							return false
						}
						i = e[t].indexOf(n);
						e[t] = e[t].slice();
						e[t].splice(i, 1);
						return i > -1
					};
					this.trigger = function(t) {
						var n, i, r, a;
						n = e[t];
						if(!n) {
							return
						}
						if(arguments.length === 2) {
							r = n.length;
							for(i = 0; i < r; ++i) {
								n[i].call(this, arguments[1])
							}
						} else {
							a = [];
							i = arguments.length;
							for(i = 1; i < arguments.length; ++i) {
								a.push(arguments[i])
							}
							r = n.length;
							for(i = 0; i < r; ++i) {
								n[i].apply(this, a)
							}
						}
					};
					this.dispose = function() {
						e = {}
					}
				}
			};
			i.prototype.pipe = function(e) {
				this.on("data", function(t) {
					e.push(t)
				});
				this.on("done", function(t) {
					e.flush(t)
				});
				return e
			};
			i.prototype.push = function(e) {
				this.trigger("data", e)
			};
			i.prototype.flush = function(e) {
				this.trigger("done", e)
			};
			var r = i;
			var a = 4,
				s = 128;
			var o = function(e) {
				var t = 0,
					n = {
						payloadType: -1,
						payloadSize: 0
					},
					i = 0,
					r = 0;
				while(t < e.byteLength) {
					if(e[t] === s) {
						break
					}
					while(e[t] === 255) {
						i += 255;
						t++
					}
					i += e[t++];
					while(e[t] === 255) {
						r += 255;
						t++
					}
					r += e[t++];
					if(!n.payload && i === a) {
						n.payloadType = i;
						n.payloadSize = r;
						n.payload = e.subarray(t, t + r);
						break
					}
					t += r;
					i = 0;
					r = 0
				}
				return n
			};
			var l = function(e) {
				if(e.payload[0] !== 181) {
					return null
				}
				if((e.payload[1] << 8 | e.payload[2]) !== 49) {
					return null
				}
				if(String.fromCharCode(e.payload[3], e.payload[4], e.payload[5], e.payload[6]) !== "GA94") {
					return null
				}
				if(e.payload[7] !== 3) {
					return null
				}
				return e.payload.subarray(8, e.payload.length - 1)
			};
			var u = function(e, t) {
				var n = [],
					i, r, a, s;
				if(!(t[0] & 64)) {
					return n
				}
				r = t[0] & 31;
				for(i = 0; i < r; i++) {
					a = i * 3;
					s = {
						type: t[a + 2] & 3,
						pts: e
					};
					if(t[a + 2] & 4) {
						s.ccData = t[a + 3] << 8 | t[a + 4];
						n.push(s)
					}
				}
				return n
			};
			var c = function(e) {
				var t = e.byteLength,
					n = [],
					i = 1,
					r, a;
				while(i < t - 2) {
					if(e[i] === 0 && e[i + 1] === 0 && e[i + 2] === 3) {
						n.push(i + 2);
						i += 2
					} else {
						i++
					}
				}
				if(n.length === 0) {
					return e
				}
				r = t - n.length;
				a = new Uint8Array(r);
				var s = 0;
				for(i = 0; i < r; s++, i++) {
					if(s === n[0]) {
						s++;
						n.shift()
					}
					a[i] = e[s]
				}
				return a
			};
			var d = {
				parseSei: o,
				parseUserData: l,
				parseCaptionPackets: u,
				discardEmulationPreventionBytes: c,
				USER_DATA_REGISTERED_ITU_T_T35: a
			};
			var f = function() {
				f.prototype.init.call(this);
				this.captionPackets_ = [];
				this.ccStreams_ = [new y(0, 0), new y(0, 1), new y(1, 0), new y(1, 1)];
				this.reset();
				this.ccStreams_.forEach(function(e) {
					e.on("data", this.trigger.bind(this, "data"));
					e.on("done", this.trigger.bind(this, "done"))
				}, this)
			};
			f.prototype = new r;
			f.prototype.push = function(e) {
				var t, n, i;
				if(e.nalUnitType !== "sei_rbsp") {
					return
				}
				t = d.parseSei(e.escapedRBSP);
				if(t.payloadType !== d.USER_DATA_REGISTERED_ITU_T_T35) {
					return
				}
				n = d.parseUserData(t);
				if(!n) {
					return
				}
				if(e.dts < this.latestDts_) {
					this.ignoreNextEqualDts_ = true;
					return
				} else if(e.dts === this.latestDts_ && this.ignoreNextEqualDts_) {
					this.numSameDts_--;
					if(!this.numSameDts_) {
						this.ignoreNextEqualDts_ = false
					}
					return
				}
				i = d.parseCaptionPackets(e.pts, n);
				this.captionPackets_ = this.captionPackets_.concat(i);
				if(this.latestDts_ !== e.dts) {
					this.numSameDts_ = 0
				}
				this.numSameDts_++;
				this.latestDts_ = e.dts
			};
			f.prototype.flush = function() {
				if(!this.captionPackets_.length) {
					this.ccStreams_.forEach(function(e) {
						e.flush()
					}, this);
					return
				}
				this.captionPackets_.forEach(function(e, t) {
					e.presortIndex = t
				});
				this.captionPackets_.sort(function(e, t) {
					if(e.pts === t.pts) {
						return e.presortIndex - t.presortIndex
					}
					return e.pts - t.pts
				});
				this.captionPackets_.forEach(function(e) {
					if(e.type < 2) {
						this.dispatchCea608Packet(e)
					}
				}, this);
				this.captionPackets_.length = 0;
				this.ccStreams_.forEach(function(e) {
					e.flush()
				}, this);
				return
			};
			f.prototype.reset = function() {
				this.latestDts_ = null;
				this.ignoreNextEqualDts_ = false;
				this.numSameDts_ = 0;
				this.activeCea608Channel_ = [null, null];
				this.ccStreams_.forEach(function(e) {
					e.reset()
				})
			};
			f.prototype.dispatchCea608Packet = function(e) {
				if(this.setsChannel1Active(e)) {
					this.activeCea608Channel_[e.type] = 0
				} else if(this.setsChannel2Active(e)) {
					this.activeCea608Channel_[e.type] = 1
				}
				if(this.activeCea608Channel_[e.type] === null) {
					return
				}
				this.ccStreams_[(e.type << 1) + this.activeCea608Channel_[e.type]].push(e)
			};
			f.prototype.setsChannel1Active = function(e) {
				return(e.ccData & 30720) === 4096
			};
			f.prototype.setsChannel2Active = function(e) {
				return(e.ccData & 30720) === 6144
			};
			var p = {
				42: 225,
				92: 233,
				94: 237,
				95: 243,
				96: 250,
				123: 231,
				124: 247,
				125: 209,
				126: 241,
				127: 9608,
				304: 174,
				305: 176,
				306: 189,
				307: 191,
				308: 8482,
				309: 162,
				310: 163,
				311: 9834,
				312: 224,
				313: 160,
				314: 232,
				315: 226,
				316: 234,
				317: 238,
				318: 244,
				319: 251,
				544: 193,
				545: 201,
				546: 211,
				547: 218,
				548: 220,
				549: 252,
				550: 8216,
				551: 161,
				552: 42,
				553: 39,
				554: 8212,
				555: 169,
				556: 8480,
				557: 8226,
				558: 8220,
				559: 8221,
				560: 192,
				561: 194,
				562: 199,
				563: 200,
				564: 202,
				565: 203,
				566: 235,
				567: 206,
				568: 207,
				569: 239,
				570: 212,
				571: 217,
				572: 249,
				573: 219,
				574: 171,
				575: 187,
				800: 195,
				801: 227,
				802: 205,
				803: 204,
				804: 236,
				805: 210,
				806: 242,
				807: 213,
				808: 245,
				809: 123,
				810: 125,
				811: 92,
				812: 94,
				813: 95,
				814: 124,
				815: 126,
				816: 196,
				817: 228,
				818: 214,
				819: 246,
				820: 223,
				821: 165,
				822: 164,
				823: 9474,
				824: 197,
				825: 229,
				826: 216,
				827: 248,
				828: 9484,
				829: 9488,
				830: 9492,
				831: 9496
			};
			var h = function(e) {
				if(e === null) {
					return ""
				}
				e = p[e] || e;
				return String.fromCharCode(e)
			};
			var v = 14;
			var g = [4352, 4384, 4608, 4640, 5376, 5408, 5632, 5664, 5888, 5920, 4096, 4864, 4896, 5120, 5152];
			var m = function() {
				var e = [],
					t = v + 1;
				while(t--) {
					e.push("")
				}
				return e
			};
			var y = function(e, t) {
				y.prototype.init.call(this);
				this.field_ = e || 0;
				this.dataChannel_ = t || 0;
				this.name_ = "CC" + ((this.field_ << 1 | this.dataChannel_) + 1);
				this.setConstants();
				this.reset();
				this.push = function(e) {
					var t, n, i, r, a;
					t = e.ccData & 32639;
					if(t === this.lastControlCode_) {
						this.lastControlCode_ = null;
						return
					}
					if((t & 61440) === 4096) {
						this.lastControlCode_ = t
					} else if(t !== this.PADDING_) {
						this.lastControlCode_ = null
					}
					i = t >>> 8;
					r = t & 255;
					if(t === this.PADDING_) {
						return
					} else if(t === this.RESUME_CAPTION_LOADING_) {
						this.mode_ = "popOn"
					} else if(t === this.END_OF_CAPTION_) {
						this.mode_ = "popOn";
						this.clearFormatting(e.pts);
						this.flushDisplayed(e.pts);
						n = this.displayed_;
						this.displayed_ = this.nonDisplayed_;
						this.nonDisplayed_ = n;
						this.startPts_ = e.pts
					} else if(t === this.ROLL_UP_2_ROWS_) {
						this.rollUpRows_ = 2;
						this.setRollUp(e.pts)
					} else if(t === this.ROLL_UP_3_ROWS_) {
						this.rollUpRows_ = 3;
						this.setRollUp(e.pts)
					} else if(t === this.ROLL_UP_4_ROWS_) {
						this.rollUpRows_ = 4;
						this.setRollUp(e.pts)
					} else if(t === this.CARRIAGE_RETURN_) {
						this.clearFormatting(e.pts);
						this.flushDisplayed(e.pts);
						this.shiftRowsUp_();
						this.startPts_ = e.pts
					} else if(t === this.BACKSPACE_) {
						if(this.mode_ === "popOn") {
							this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1)
						} else {
							this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1)
						}
					} else if(t === this.ERASE_DISPLAYED_MEMORY_) {
						this.flushDisplayed(e.pts);
						this.displayed_ = m()
					} else if(t === this.ERASE_NON_DISPLAYED_MEMORY_) {
						this.nonDisplayed_ = m()
					} else if(t === this.RESUME_DIRECT_CAPTIONING_) {
						if(this.mode_ !== "paintOn") {
							this.flushDisplayed(e.pts);
							this.displayed_ = m()
						}
						this.mode_ = "paintOn";
						this.startPts_ = e.pts
					} else if(this.isSpecialCharacter(i, r)) {
						i = (i & 3) << 8;
						a = h(i | r);
						this[this.mode_](e.pts, a);
						this.column_++
					} else if(this.isExtCharacter(i, r)) {
						if(this.mode_ === "popOn") {
							this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1)
						} else {
							this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1)
						}
						i = (i & 3) << 8;
						a = h(i | r);
						this[this.mode_](e.pts, a);
						this.column_++
					} else if(this.isMidRowCode(i, r)) {
						this.clearFormatting(e.pts);
						this[this.mode_](e.pts, " ");
						this.column_++;
						if((r & 14) === 14) {
							this.addFormatting(e.pts, ["i"])
						}
						if((r & 1) === 1) {
							this.addFormatting(e.pts, ["u"])
						}
					} else if(this.isOffsetControlCode(i, r)) {
						this.column_ += r & 3
					} else if(this.isPAC(i, r)) {
						var s = g.indexOf(t & 7968);
						if(this.mode_ === "rollUp") {
							this.setRollUp(e.pts, s)
						}
						if(s !== this.row_) {
							this.clearFormatting(e.pts);
							this.row_ = s
						}
						if(r & 1 && this.formatting_.indexOf("u") === -1) {
							this.addFormatting(e.pts, ["u"])
						}
						if((t & 16) === 16) {
							this.column_ = ((t & 14) >> 1) * 4
						}
						if(this.isColorPAC(r)) {
							if((r & 14) === 14) {
								this.addFormatting(e.pts, ["i"])
							}
						}
					} else if(this.isNormalChar(i)) {
						if(r === 0) {
							r = null
						}
						a = h(i);
						a += h(r);
						this[this.mode_](e.pts, a);
						this.column_ += a.length
					}
				}
			};
			y.prototype = new r;
			y.prototype.flushDisplayed = function(e) {
				var t = this.displayed_.map(function(e) {
					return e.trim()
				}).join("\n").replace(/^\n+|\n+$/g, "");
				if(t.length) {
					this.trigger("data", {
						startPts: this.startPts_,
						endPts: e,
						text: t,
						stream: this.name_
					})
				}
			};
			y.prototype.reset = function() {
				this.mode_ = "popOn";
				this.topRow_ = 0;
				this.startPts_ = 0;
				this.displayed_ = m();
				this.nonDisplayed_ = m();
				this.lastControlCode_ = null;
				this.column_ = 0;
				this.row_ = v;
				this.rollUpRows_ = 2;
				this.formatting_ = []
			};
			y.prototype.setConstants = function() {
				if(this.dataChannel_ === 0) {
					this.BASE_ = 16;
					this.EXT_ = 17;
					this.CONTROL_ = (20 | this.field_) << 8;
					this.OFFSET_ = 23
				} else if(this.dataChannel_ === 1) {
					this.BASE_ = 24;
					this.EXT_ = 25;
					this.CONTROL_ = (28 | this.field_) << 8;
					this.OFFSET_ = 31
				}
				this.PADDING_ = 0;
				this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 32;
				this.END_OF_CAPTION_ = this.CONTROL_ | 47;
				this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 37;
				this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 38;
				this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 39;
				this.CARRIAGE_RETURN_ = this.CONTROL_ | 45;
				this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 41;
				this.BACKSPACE_ = this.CONTROL_ | 33;
				this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 44;
				this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 46
			};
			y.prototype.isSpecialCharacter = function(e, t) {
				return e === this.EXT_ && t >= 48 && t <= 63
			};
			y.prototype.isExtCharacter = function(e, t) {
				return(e === this.EXT_ + 1 || e === this.EXT_ + 2) && (t >= 32 && t <= 63)
			};
			y.prototype.isMidRowCode = function(e, t) {
				return e === this.EXT_ && (t >= 32 && t <= 47)
			};
			y.prototype.isOffsetControlCode = function(e, t) {
				return e === this.OFFSET_ && (t >= 33 && t <= 35)
			};
			y.prototype.isPAC = function(e, t) {
				return e >= this.BASE_ && e < this.BASE_ + 8 && (t >= 64 && t <= 127)
			};
			y.prototype.isColorPAC = function(e) {
				return e >= 64 && e <= 79 || e >= 96 && e <= 127
			};
			y.prototype.isNormalChar = function(e) {
				return e >= 32 && e <= 127
			};
			y.prototype.setRollUp = function(e, t) {
				if(this.mode_ !== "rollUp") {
					this.row_ = v;
					this.mode_ = "rollUp";
					this.flushDisplayed(e);
					this.nonDisplayed_ = m();
					this.displayed_ = m()
				}
				if(t !== undefined && t !== this.row_) {
					for(var n = 0; n < this.rollUpRows_; n++) {
						this.displayed_[t - n] = this.displayed_[this.row_ - n];
						this.displayed_[this.row_ - n] = ""
					}
				}
				if(t === undefined) {
					t = this.row_
				}
				this.topRow_ = t - this.rollUpRows_ + 1
			};
			y.prototype.addFormatting = function(e, t) {
				this.formatting_ = this.formatting_.concat(t);
				var n = t.reduce(function(e, t) {
					return e + "<" + t + ">"
				}, "");
				this[this.mode_](e, n)
			};
			y.prototype.clearFormatting = function(e) {
				if(!this.formatting_.length) {
					return
				}
				var t = this.formatting_.reverse().reduce(function(e, t) {
					return e + "</" + t + ">"
				}, "");
				this.formatting_ = [];
				this[this.mode_](e, t)
			};
			y.prototype.popOn = function(e, t) {
				var n = this.nonDisplayed_[this.row_];
				n += t;
				this.nonDisplayed_[this.row_] = n
			};
			y.prototype.rollUp = function(e, t) {
				var n = this.displayed_[this.row_];
				n += t;
				this.displayed_[this.row_] = n
			};
			y.prototype.shiftRowsUp_ = function() {
				var e;
				for(e = 0; e < this.topRow_; e++) {
					this.displayed_[e] = ""
				}
				for(e = this.row_ + 1; e < v + 1; e++) {
					this.displayed_[e] = ""
				}
				for(e = this.topRow_; e < this.row_; e++) {
					this.displayed_[e] = this.displayed_[e + 1]
				}
				this.displayed_[this.row_] = ""
			};
			y.prototype.paintOn = function(e, t) {
				var n = this.displayed_[this.row_];
				n += t;
				this.displayed_[this.row_] = n
			};
			var _ = {
				CaptionStream: f,
				Cea608Stream: y
			};
			var b = _.CaptionStream;
			var A = {
				H264_STREAM_TYPE: 27,
				ADTS_STREAM_TYPE: 15,
				METADATA_STREAM_TYPE: 21
			};
			var S = function(e, t, n) {
					var i, r = "";
					for(i = t; i < n; i++) {
						r += "%" + ("00" + e[i].toString(16)).slice(-2)
					}
					return r
				},
				T = function(e, t, n) {
					return decodeURIComponent(S(e, t, n))
				},
				k = function(e, t, n) {
					return unescape(S(e, t, n))
				},
				E = function(e) {
					return e[0] << 21 | e[1] << 14 | e[2] << 7 | e[3]
				},
				P = {
					TXXX: function(e) {
						var t;
						if(e.data[0] !== 3) {
							return
						}
						for(t = 1; t < e.data.length; t++) {
							if(e.data[t] === 0) {
								e.description = T(e.data, 1, t);
								e.value = T(e.data, t + 1, e.data.length).replace(/\0*$/, "");
								break
							}
						}
						e.data = e.value
					},
					WXXX: function(e) {
						var t;
						if(e.data[0] !== 3) {
							return
						}
						for(t = 1; t < e.data.length; t++) {
							if(e.data[t] === 0) {
								e.description = T(e.data, 1, t);
								e.url = T(e.data, t + 1, e.data.length);
								break
							}
						}
					},
					PRIV: function(e) {
						var t;
						for(t = 0; t < e.data.length; t++) {
							if(e.data[t] === 0) {
								e.owner = k(e.data, 0, t);
								break
							}
						}
						e.privateData = e.data.subarray(t + 1);
						e.data = e.privateData
					}
				},
				C;
			C = function(e) {
				var t = {
						debug: !!(e && e.debug),
						descriptor: e && e.descriptor
					},
					n = 0,
					i = [],
					r = 0,
					a;
				C.prototype.init.call(this);
				this.dispatchType = A.METADATA_STREAM_TYPE.toString(16);
				if(t.descriptor) {
					for(a = 0; a < t.descriptor.length; a++) {
						this.dispatchType += ("00" + t.descriptor[a].toString(16)).slice(-2)
					}
				}
				this.push = function(e) {
					var a, s, o, l, u, c;
					if(e.type !== "timed-metadata") {
						return
					}
					if(e.dataAlignmentIndicator) {
						r = 0;
						i.length = 0
					}
					if(i.length === 0 && (e.data.length < 10 || e.data[0] !== "I".charCodeAt(0) || e.data[1] !== "D".charCodeAt(0) || e.data[2] !== "3".charCodeAt(0))) {
						if(t.debug) {
							console.log("Skipping unrecognized metadata packet")
						}
						return
					}
					i.push(e);
					r += e.data.byteLength;
					if(i.length === 1) {
						n = E(e.data.subarray(6, 10));
						n += 10
					}
					if(r < n) {
						return
					}
					a = {
						data: new Uint8Array(n),
						frames: [],
						pts: i[0].pts,
						dts: i[0].dts
					};
					for(u = 0; u < n;) {
						a.data.set(i[0].data.subarray(0, n - u), u);
						u += i[0].data.byteLength;
						r -= i[0].data.byteLength;
						i.shift()
					}
					s = 10;
					if(a.data[5] & 64) {
						s += 4;
						s += E(a.data.subarray(10, 14));
						n -= E(a.data.subarray(16, 20))
					}
					do {
						o = E(a.data.subarray(s + 4, s + 8));
						if(o < 1) {
							return console.log("Malformed ID3 frame encountered. Skipping metadata parsing.")
						}
						c = String.fromCharCode(a.data[s], a.data[s + 1], a.data[s + 2], a.data[s + 3]);
						l = {
							id: c,
							data: a.data.subarray(s + 10, s + o + 10)
						};
						l.key = l.id;
						if(P[l.id]) {
							P[l.id](l);
							if(l.owner === "com.apple.streaming.transportStreamTimestamp") {
								var d = l.data,
									f = (d[3] & 1) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;
								f *= 4;
								f += d[7] & 3;
								l.timeStamp = f;
								if(a.pts === undefined && a.dts === undefined) {
									a.pts = l.timeStamp;
									a.dts = l.timeStamp
								}
								this.trigger("timestamp", l)
							}
						}
						a.frames.push(l);
						s += 10;
						s += o
					} while (s < n);
					this.trigger("data", a)
				}
			};
			C.prototype = new r;
			var w = C;
			var j = function e(t, n) {
				var i = {
					id: n.index + "",
					width: n.width,
					height: n.height,
					bandwidth: n.bitrate,
					isEnabled_: true
				};
				i.enabled = function(e) {
					if(typeof e === "undefined") {
						return i.isEnabled_
					}
					if(e === i.isEnabled_) {
						return
					}
					if(e === true || e === false) {
						i.isEnabled_ = e;
						t()
					}
				};
				return i
			};
			var I = function e(t) {
				var n = null;
				var i = function e() {
					var i = n.filter(function(e) {
						return e.enabled()
					});
					if(i.length === n.length || i.length === 0) {
						t.el_.vjs_setProperty("autoLevelCapping", -1);
						t.el_.vjs_setProperty("level", -1);
						return
					}
					if(i.length === 1) {
						t.el_.vjs_setProperty("level", parseInt(i[0].id, 10));
						t.el_.vjs_setProperty("autoLevelCapping", -1);
						return
					}
					var r = i[i.length - 1].id;
					t.el_.vjs_setProperty("autoLevelCapping", parseInt(r, 10));
					t.el_.vjs_setProperty("level", -1)
				};
				return function() {
					if(!n) {
						var e = t.el_.vjs_getProperty("levels");
						n = e.filter(function(e) {
							return !e.audio
						}).map(j.bind(null, i))
					}
					return n
				}
			};
			var L = function e(t) {
				var n = t.el_.vjs_getProperty("audioTracks");
				var i = t.audioTracks();
				var r = null;
				for(var a = 0; a < i.length; a++) {
					if(i[a].enabled) {
						r = i[a].id;
						break
					}
				}
				if(r === null) {
					return
				}
				for(var s = 0; s < n.length; s++) {
					if(r === n[s].title) {
						t.el_.vjs_setProperty("audioTrack", s);
						return
					}
				}
			};
			var O = function e(t) {
				var i = t.el_.vjs_getProperty("altAudioTracks");
				var r = t.el_.vjs_getProperty("audioTracks");
				var a = t.el_.vjs_getProperty("audioTrack");
				r.forEach(function(e, r) {
					var s = i[e.id];
					t.audioTracks().addTrack(new n.AudioTrack({
						id: s.name,
						enabled: a === r,
						language: s.lang,
						default: s.default_track,
						label: s.name
					}))
				})
			};
			var N = "1.4.8";
			var x = function e(t) {
				Object.defineProperties(t.frame, {
					id: {
						get: function e() {
							n.log.warn("cue.frame.id is deprecated. Use cue.value.key instead.");
							return t.value.key
						}
					},
					value: {
						get: function e() {
							n.log.warn("cue.frame.value is deprecated. Use cue.value.data instead.");
							return t.value.data
						}
					},
					privateData: {
						get: function e() {
							n.log.warn("cue.frame.privateData is deprecated. Use cue.value.data instead.");
							return t.value.data
						}
					}
				})
			};
			var D = function e(t, n, i) {
				var r = t.remoteTextTracks() || [];
				for(var a = 0; a < r.length; a++) {
					var s = r[a];
					if(s.kind === n && s.label === i) {
						t.removeRemoteTextTrack(s)
					}
				}
			};
			var R = function e(t) {
				var n = new Uint8Array(t.length);
				for(var i = 0; i < t.length; i++) {
					n[i] = t.charCodeAt(i)
				}
				return n
			};
			var U = function e(t, n, i) {
				var r;
				var a;
				if(!i) {
					return
				}
				if(!i.cues) {
					return
				}
				r = i.cues.length;
				while(r--) {
					a = i.cues[r];
					if(a.startTime <= n && a.endTime >= t) {
						i.removeCue(a)
					}
				}
			};
			var M = function e(t, n) {
				if(t.length) {
					U(0, t.start(0), n)
				}
			};
			var B = function e(t, n) {
				var i = -1;
				for(var r = 0; r < t.length; r++) {
					if(t[r].id === n) {
						i = r;
						break
					}
				}
				t.selectedIndex_ = i;
				t.trigger({
					selectedIndex: i,
					type: "change"
				})
			};
			var F = 1 / 30;
			var V = function e(t, i) {
				var r = [];
				if(t && t.length) {
					for(var a = 0; a < t.length; a++) {
						if(i(t.start(a), t.end(a))) {
							r.push([t.start(a), t.end(a)])
						}
					}
				}
				return n.createTimeRanges(r)
			};
			var q = function e(t, n) {
				return V(t, function(e, t) {
					return e - F <= n && t + F >= n
				})
			};
			var H = function() {
				function e(e, t, i) {
					var r = this;
					if(t.options_ && t.options_.playerId) {
						var a = n(t.options_.playerId);
						if(!a.hasOwnProperty("hls")) {
							Object.defineProperty(a, "hls", {
								get: function e() {
									n.log.warn("player.hls is deprecated. Use player.tech_.hls instead.");
									t.trigger({
										type: "usage",
										name: "flashls-player-access"
									});
									return r
								}
							})
						}
					}
					Object.defineProperties(this, {
						stats: {
							get: function e() {
								return this.tech_.el_.vjs_getProperty("stats")
							}
						},
						bandwidth: {
							get: function e() {
								return this.tech_.el_.vjs_getProperty("stats").bandwidth
							}
						}
					});
					this.tech_ = t;
					this.metadataTrack_ = null;
					this.inbandTextTracks_ = {};
					this.metadataStream_ = new w;
					this.captionStream_ = new b;
					this.offsetPts = null;
					this.offsetDts = null;
					this.onLoadedmetadata_ = this.onLoadedmetadata_.bind(this);
					this.onSeeking_ = this.onSeeking_.bind(this);
					this.onId3updated_ = this.onId3updated_.bind(this);
					this.onCaptionData_ = this.onCaptionData_.bind(this);
					this.onMetadataStreamData_ = this.onMetadataStreamData_.bind(this);
					this.onCaptionStreamData_ = this.onCaptionStreamData_.bind(this);
					this.onLevelSwitch_ = this.onLevelSwitch_.bind(this);
					this.onLevelLoaded_ = this.onLevelLoaded_.bind(this);
					this.onFragmentLoaded_ = this.onFragmentLoaded_.bind(this);
					this.onAudioTrackChanged = this.onAudioTrackChanged.bind(this);
					this.onPlay_ = this.onPlay_.bind(this);
					this.tech_.on("loadedmetadata", this.onLoadedmetadata_);
					this.tech_.on("seeking", this.onSeeking_);
					this.tech_.on("id3updated", this.onId3updated_);
					this.tech_.on("captiondata", this.onCaptionData_);
					this.tech_.on("levelswitch", this.onLevelSwitch_);
					this.tech_.on("levelloaded", this.onLevelLoaded_);
					this.tech_.on("fragmentloaded", this.onFragmentLoaded_);
					this.tech_.on("play", this.onPlay_);
					this.metadataStream_.on("data", this.onMetadataStreamData_);
					this.captionStream_.on("data", this.onCaptionStreamData_);
					this.playlists = new n.EventTarget;
					this.playlists.media = function() {
						return r.media_()
					}
				}
				var i = e.prototype;
				i.src = function e(t) {
					if(!t) {
						return
					}
					this.tech_.setSrc(t.src)
				};
				i.onPlay_ = function e() {
					if(this.tech_.duration() === Infinity) {
						var t = this.seekable();
						if(this.tech_.currentTime() < t.start(0)) {
							return this.tech_.setCurrentTime(t.end(t.length - 1))
						}
					}
				};
				i.seekable = function e() {
					var t = this.tech_.el_.vjs_getProperty("seekableStart");
					var i = this.tech_.el_.vjs_getProperty("seekableEnd");
					if(i === 0) {
						return n.createTimeRange()
					}
					return n.createTimeRange(t, i)
				};
				i.media_ = function e() {
					var t = this.tech_.el_.vjs_getProperty("levels");
					var n = this.tech_.el_.vjs_getProperty("level");
					var i;
					if(t.length) {
						i = {
							resolvedUri: t[n].url,
							attributes: {
								BANDWIDTH: t[n].bitrate,
								RESOLUTION: {
									width: t[n].width,
									height: t[n].height
								}
							}
						}
					}
					return i
				};
				i.onLoadedmetadata_ = function e() {
					var t = this;
					this.representations = I(this.tech_);
					var i = n.players[this.tech_.options_.playerId];
					if(i && i.qualityLevels) {
						this.qualityLevels_ = i.qualityLevels();
						this.representations().forEach(function(e) {
							t.qualityLevels_.addQualityLevel(e)
						});
						B(this.qualityLevels_, this.tech_.el_.vjs_getProperty("level") + "")
					}
					O(this.tech_);
					this.tech_.audioTracks().on("change", this.onAudioTrackChanged)
				};
				i.onAudioTrackChanged = function e() {
					L(this.tech_)
				};
				i.onLevelSwitch_ = function e(t, n) {
					if(this.qualityLevels_) {
						B(this.qualityLevels_, n[0].levelIndex + "")
					}
					this.playlists.trigger("mediachange");
					this.tech_.trigger({
						type: "mediachange",
						bubbles: true
					})
				};
				i.onLevelLoaded_ = function e() {
					this.playlists.trigger("loadedplaylist")
				};
				i.onFragmentLoaded_ = function e() {
					this.tech_.trigger("bandwidthupdate");
					this.captionStream_.flush()
				};
				i.onSeeking_ = function e() {
					var t = this;
					U(0, Infinity, this.metadataTrack_);
					var n = q(this.tech_.buffered(), this.tech_.currentTime());
					if(!n.length) {
						Object.keys(this.inbandTextTracks_).forEach(function(e) {
							U(0, Infinity, t.inbandTextTracks_[e])
						});
						this.captionStream_.reset()
					}
				};
				i.onId3updated_ = function e(n, i) {
					var r = t.atob(i[0]);
					var a = R(r);
					var s = {
						type: "timed-metadata",
						dataAlignmentIndicator: true,
						data: a
					};
					this.metadataStream_.push(s)
				};
				i.onMetadataStreamData_ = function e(n) {
					var i = this;
					if(!this.metadataTrack_) {
						this.metadataTrack_ = this.tech_.addRemoteTextTrack({
							kind: "metadata",
							label: "Timed Metadata"
						}, false).track;
						this.metadataTrack_.inBandMetadataTrackDispatchType = "15"
					}
					M(this.tech_.buffered(), this.metadataTrack_);
					var r = this.tech_.currentTime();
					n.frames.forEach(function(e) {
						var n = new t.VTTCue(r, r + .1, e.value || e.url || e.data || "");
						n.frame = e;
						n.value = e;
						x(n);
						i.metadataTrack_.addCue(n)
					});
					if(this.metadataTrack_.cues && this.metadataTrack_.cues.length) {
						var a = this.metadataTrack_.cues;
						var s = [];
						var o = this.tech_.duration();
						if(isNaN(o) || Math.abs(o) === Infinity) {
							o = Number.MAX_VALUE
						}
						for(var l = 0; l < a.length; l++) {
							s.push(a[l])
						}
						s.sort(function(e, t) {
							return e.startTime - t.startTime
						});
						for(var u = 0; u < s.length - 1; u++) {
							if(s[u].endTime !== s[u + 1].startTime) {
								s[u].endTime = s[u + 1].startTime
							}
						}
						s[s.length - 1].endTime = o
					}
				};
				i.onCaptionData_ = function e(n, i) {
					var r = this;
					i[0].forEach(function(e) {
						if(!r.offsetPts) {
							r.offsetPts = e.pos
						}
						if(!r.offsetDts) {
							r.offsetDts = e.dts
						}
						r.captionStream_.push({
							pts: (e.pos - r.offsetPts) * 9e4,
							dts: (e.dts - r.offsetDts) * 9e4,
							escapedRBSP: R(t.atob(e.data)),
							nalUnitType: "sei_rbsp"
						})
					})
				};
				i.onCaptionStreamData_ = function e(n) {
					if(n) {
						if(!this.inbandTextTracks_[n.stream]) {
							D(this.tech_, "captions", n.stream);
							this.inbandTextTracks_[n.stream] = this.tech_.addRemoteTextTrack({
								kind: "captions",
								label: n.stream,
								id: n.stream
							}, false).track
						}
						M(this.tech_.buffered(), this.inbandTextTracks_[n.stream]);
						this.inbandTextTracks_[n.stream].addCue(new t.VTTCue(n.startPts / 9e4, n.endPts / 9e4, n.text))
					}
				};
				i.dispose = function e() {
					this.tech_.off("loadedmetadata", this.onLoadedmetadata_);
					this.tech_.off("seeked", this.onSeeking_);
					this.tech_.off("id3updated", this.onId3updated_);
					this.tech_.off("captiondata", this.onCaptionData_);
					this.tech_.audioTracks().off("change", this.onAudioTrackChanged);
					this.tech_.off("levelswitch", this.onLevelSwitch_);
					this.tech_.off("levelloaded", this.onLevelLoaded_);
					this.tech_.off("fragmentloaded", this.onFragmentLoaded_);
					this.tech_.off("play", this.onPlay_);
					if(this.qualityLevels_) {
						this.qualityLevels_.dispose()
					}
				};
				return e
			}();
			var G = {};
			var Y = /^(audio|video|application)\/(x-|vnd\.apple\.)?mpegurl/i;
			G.canPlayType = function(e) {
				return Y.test(e) ? "maybe" : ""
			};
			G.canHandleSource = function(e, t) {
				return G.canPlayType(e.type) === "maybe"
			};
			G.handleSource = function(e, t, n) {
				t.hls = new H(e, t, n);
				t.hls.src(e);
				return t.hls
			};
			n.getTech("Flash").registerSourceHandler(G, 0);
			G.VERSION = N;
			e.FlashlsHandler = H;
			e.default = G;
			Object.defineProperty(e, "__esModule", {
				value: true
			})
		});
		(function(e, t) {
			typeof exports === "object" && typeof module !== "undefined" ? t(exports, require("video.js")) : typeof define === "function" && define.amd ? define(["exports", "video.js"], t) : t(e.videojsHttpStreaming = {}, e.videojs)
		})(this, function(e, t) {
			"use strict";
			t = t && t.hasOwnProperty("default") ? t["default"] : t;
			var n = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};

			function i(e, t) {
				return t = {
					exports: {}
				}, e(t, t.exports), t.exports
			}
			var r = {};
			var a = typeof n !== "undefined" ? n : typeof window !== "undefined" ? window : {};
			var s;
			if(typeof document !== "undefined") {
				s = document
			} else {
				s = a["__GLOBAL_DOCUMENT_CACHE@4"];
				if(!s) {
					s = a["__GLOBAL_DOCUMENT_CACHE@4"] = r
				}
			}
			var o = s;
			var l = i(function(e, t) {
				(function(t) {
					var n = /^((?:[a-zA-Z0-9+\-.]+:)?)(\/\/[^\/?#]*)?((?:[^\/\?#]*\/)*.*?)??(;.*?)?(\?.*?)?(#.*?)?$/;
					var i = /^([^\/?#]*)(.*)$/;
					var r = /(?:\/|^)\.(?=\/)/g;
					var a = /(?:\/|^)\.\.\/(?!\.\.\/).*?(?=\/)/g;
					var s = {
						buildAbsoluteURL: function e(t, n, r) {
							r = r || {};
							t = t.trim();
							n = n.trim();
							if(!n) {
								if(!r.alwaysNormalize) {
									return t
								}
								var a = s.parseURL(t);
								if(!a) {
									throw new Error("Error trying to parse base URL.")
								}
								a.path = s.normalizePath(a.path);
								return s.buildURLFromParts(a)
							}
							var o = s.parseURL(n);
							if(!o) {
								throw new Error("Error trying to parse relative URL.")
							}
							if(o.scheme) {
								if(!r.alwaysNormalize) {
									return n
								}
								o.path = s.normalizePath(o.path);
								return s.buildURLFromParts(o)
							}
							var l = s.parseURL(t);
							if(!l) {
								throw new Error("Error trying to parse base URL.")
							}
							if(!l.netLoc && l.path && l.path[0] !== "/") {
								var u = i.exec(l.path);
								l.netLoc = u[1];
								l.path = u[2]
							}
							if(l.netLoc && !l.path) {
								l.path = "/"
							}
							var c = {
								scheme: l.scheme,
								netLoc: o.netLoc,
								path: null,
								params: o.params,
								query: o.query,
								fragment: o.fragment
							};
							if(!o.netLoc) {
								c.netLoc = l.netLoc;
								if(o.path[0] !== "/") {
									if(!o.path) {
										c.path = l.path;
										if(!o.params) {
											c.params = l.params;
											if(!o.query) {
												c.query = l.query
											}
										}
									} else {
										var d = l.path;
										var f = d.substring(0, d.lastIndexOf("/") + 1) + o.path;
										c.path = s.normalizePath(f)
									}
								}
							}
							if(c.path === null) {
								c.path = r.alwaysNormalize ? s.normalizePath(o.path) : o.path
							}
							return s.buildURLFromParts(c)
						},
						parseURL: function e(t) {
							var i = n.exec(t);
							if(!i) {
								return null
							}
							return {
								scheme: i[1] || "",
								netLoc: i[2] || "",
								path: i[3] || "",
								params: i[4] || "",
								query: i[5] || "",
								fragment: i[6] || ""
							}
						},
						normalizePath: function e(t) {
							t = t.split("").reverse().join("").replace(r, "");
							while(t.length !== (t = t.replace(a, "")).length) {}
							return t.split("").reverse().join("")
						},
						buildURLFromParts: function e(t) {
							return t.scheme + t.netLoc + t.path + t.params + t.query + t.fragment
						}
					};
					e.exports = s
				})(n)
			});
			var u;
			if(typeof window !== "undefined") {
				u = window
			} else if(typeof n !== "undefined") {
				u = n
			} else if(typeof self !== "undefined") {
				u = self
			} else {
				u = {}
			}
			var c = u;
			var d = function e(t, n) {
				if(/^[a-z]+:/i.test(n)) {
					return n
				}
				if(!/\/\//i.test(t)) {
					t = l.buildAbsoluteURL(c.location.href, t)
				}
				return l.buildAbsoluteURL(t, n)
			};
			var f = function e(t, n, i) {
				if(t && i.responseURL && n !== i.responseURL) {
					return i.responseURL
				}
				return n
			};

			function p() {
				p = Object.assign || function(e) {
					for(var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for(var i in n) {
							if(Object.prototype.hasOwnProperty.call(n, i)) {
								e[i] = n[i]
							}
						}
					}
					return e
				};
				return p.apply(this, arguments)
			}

			function h(e, t) {
				e.prototype = Object.create(t.prototype);
				e.prototype.constructor = e;
				e.__proto__ = t
			}

			function v(e) {
				if(e === void 0) {
					throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
				}
				return e
			}
			var g = function() {
				function e() {
					this.listeners = {}
				}
				var t = e.prototype;
				t.on = function e(t, n) {
					if(!this.listeners[t]) {
						this.listeners[t] = []
					}
					this.listeners[t].push(n)
				};
				t.off = function e(t, n) {
					if(!this.listeners[t]) {
						return false
					}
					var i = this.listeners[t].indexOf(n);
					this.listeners[t].splice(i, 1);
					return i > -1
				};
				t.trigger = function e(t) {
					var n = this.listeners[t];
					var i;
					var r;
					var a;
					if(!n) {
						return
					}
					if(arguments.length === 2) {
						r = n.length;
						for(i = 0; i < r; ++i) {
							n[i].call(this, arguments[1])
						}
					} else {
						a = Array.prototype.slice.call(arguments, 1);
						r = n.length;
						for(i = 0; i < r; ++i) {
							n[i].apply(this, a)
						}
					}
				};
				t.dispose = function e() {
					this.listeners = {}
				};
				t.pipe = function e(t) {
					this.on("data", function(e) {
						t.push(e)
					})
				};
				return e
			}();
			var m = function(e) {
				h(t, e);

				function t() {
					var t;
					t = e.call(this) || this;
					t.buffer = "";
					return t
				}
				var n = t.prototype;
				n.push = function e(t) {
					var n;
					this.buffer += t;
					n = this.buffer.indexOf("\n");
					for(; n > -1; n = this.buffer.indexOf("\n")) {
						this.trigger("data", this.buffer.substring(0, n));
						this.buffer = this.buffer.substring(n + 1)
					}
				};
				return t
			}(g);
			var y = function e() {
				var t = "[^=]*";
				var n = '"[^"]*"|[^,]*';
				var i = "(?:" + t + ")=(?:" + n + ")";
				return new RegExp("(?:^|,)(" + i + ")")
			};
			var _ = function e(t) {
				var n = t.split(y());
				var i = {};
				var r = n.length;
				var a;
				while(r--) {
					if(n[r] === "") {
						continue
					}
					a = /([^=]*)=(.*)/.exec(n[r]).slice(1);
					a[0] = a[0].replace(/^\s+|\s+$/g, "");
					a[1] = a[1].replace(/^\s+|\s+$/g, "");
					a[1] = a[1].replace(/^['"](.*)['"]$/g, "$1");
					i[a[0]] = a[1]
				}
				return i
			};
			var b = function(e) {
				h(t, e);

				function t() {
					var t;
					t = e.call(this) || this;
					t.customParsers = [];
					t.tagMappers = [];
					return t
				}
				var n = t.prototype;
				n.push = function e(t) {
					var n = this;
					var i;
					var r;
					t = t.trim();
					if(t.length === 0) {
						return
					}
					if(t[0] !== "#") {
						this.trigger("data", {
							type: "uri",
							uri: t
						});
						return
					}
					var a = this.tagMappers.reduce(function(e, n) {
						var i = n(t);
						if(i === t) {
							return e
						}
						return e.concat([i])
					}, [t]);
					a.forEach(function(e) {
						for(var t = 0; t < n.customParsers.length; t++) {
							if(n.customParsers[t].call(n, e)) {
								return
							}
						}
						if(e.indexOf("#EXT") !== 0) {
							n.trigger("data", {
								type: "comment",
								text: e.slice(1)
							});
							return
						}
						e = e.replace("\r", "");
						i = /^#EXTM3U/.exec(e);
						if(i) {
							n.trigger("data", {
								type: "tag",
								tagType: "m3u"
							});
							return
						}
						i = /^#EXTINF:?([0-9\.]*)?,?(.*)?$/.exec(e);
						if(i) {
							r = {
								type: "tag",
								tagType: "inf"
							};
							if(i[1]) {
								r.duration = parseFloat(i[1])
							}
							if(i[2]) {
								r.title = i[2]
							}
							n.trigger("data", r);
							return
						}
						i = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(e);
						if(i) {
							r = {
								type: "tag",
								tagType: "targetduration"
							};
							if(i[1]) {
								r.duration = parseInt(i[1], 10)
							}
							n.trigger("data", r);
							return
						}
						i = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(e);
						if(i) {
							r = {
								type: "tag",
								tagType: "totalduration"
							};
							if(i[1]) {
								r.duration = parseInt(i[1], 10)
							}
							n.trigger("data", r);
							return
						}
						i = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(e);
						if(i) {
							r = {
								type: "tag",
								tagType: "version"
							};
							if(i[1]) {
								r.version = parseInt(i[1], 10)
							}
							n.trigger("data", r);
							return
						}
						i = /^#EXT-X-MEDIA-SEQUENCE:?(\-?[0-9.]*)?/.exec(e);
						if(i) {
							r = {
								type: "tag",
								tagType: "media-sequence"
							};
							if(i[1]) {
								r.number = parseInt(i[1], 10)
							}
							n.trigger("data", r);
							return
						}
						i = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\-?[0-9.]*)?/.exec(e);
						if(i) {
							r = {
								type: "tag",
								tagType: "discontinuity-sequence"
							};
							if(i[1]) {
								r.number = parseInt(i[1], 10)
							}
							n.trigger("data", r);
							return
						}
						i = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(e);
						if(i) {
							r = {
								type: "tag",
								tagType: "playlist-type"
							};
							if(i[1]) {
								r.playlistType = i[1]
							}
							n.trigger("data", r);
							return
						}
						i = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(e);
						if(i) {
							r = {
								type: "tag",
								tagType: "byterange"
							};
							if(i[1]) {
								r.length = parseInt(i[1], 10)
							}
							if(i[2]) {
								r.offset = parseInt(i[2], 10)
							}
							n.trigger("data", r);
							return
						}
						i = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(e);
						if(i) {
							r = {
								type: "tag",
								tagType: "allow-cache"
							};
							if(i[1]) {
								r.allowed = !/NO/.test(i[1])
							}
							n.trigger("data", r);
							return
						}
						i = /^#EXT-X-MAP:?(.*)$/.exec(e);
						if(i) {
							r = {
								type: "tag",
								tagType: "map"
							};
							if(i[1]) {
								var a = _(i[1]);
								if(a.URI) {
									r.uri = a.URI
								}
								if(a.BYTERANGE) {
									var s = a.BYTERANGE.split("@"),
										o = s[0],
										l = s[1];
									r.byterange = {};
									if(o) {
										r.byterange.length = parseInt(o, 10)
									}
									if(l) {
										r.byterange.offset = parseInt(l, 10)
									}
								}
							}
							n.trigger("data", r);
							return
						}
						i = /^#EXT-X-STREAM-INF:?(.*)$/.exec(e);
						if(i) {
							r = {
								type: "tag",
								tagType: "stream-inf"
							};
							if(i[1]) {
								r.attributes = _(i[1]);
								if(r.attributes.RESOLUTION) {
									var u = r.attributes.RESOLUTION.split("x");
									var c = {};
									if(u[0]) {
										c.width = parseInt(u[0], 10)
									}
									if(u[1]) {
										c.height = parseInt(u[1], 10)
									}
									r.attributes.RESOLUTION = c
								}
								if(r.attributes.BANDWIDTH) {
									r.attributes.BANDWIDTH = parseInt(r.attributes.BANDWIDTH, 10)
								}
								if(r.attributes["PROGRAM-ID"]) {
									r.attributes["PROGRAM-ID"] = parseInt(r.attributes["PROGRAM-ID"], 10)
								}
							}
							n.trigger("data", r);
							return
						}
						i = /^#EXT-X-MEDIA:?(.*)$/.exec(e);
						if(i) {
							r = {
								type: "tag",
								tagType: "media"
							};
							if(i[1]) {
								r.attributes = _(i[1])
							}
							n.trigger("data", r);
							return
						}
						i = /^#EXT-X-ENDLIST/.exec(e);
						if(i) {
							n.trigger("data", {
								type: "tag",
								tagType: "endlist"
							});
							return
						}
						i = /^#EXT-X-DISCONTINUITY/.exec(e);
						if(i) {
							n.trigger("data", {
								type: "tag",
								tagType: "discontinuity"
							});
							return
						}
						i = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(e);
						if(i) {
							r = {
								type: "tag",
								tagType: "program-date-time"
							};
							if(i[1]) {
								r.dateTimeString = i[1];
								r.dateTimeObject = new Date(i[1])
							}
							n.trigger("data", r);
							return
						}
						i = /^#EXT-X-KEY:?(.*)$/.exec(e);
						if(i) {
							r = {
								type: "tag",
								tagType: "key"
							};
							if(i[1]) {
								r.attributes = _(i[1]);
								if(r.attributes.IV) {
									if(r.attributes.IV.substring(0, 2).toLowerCase() === "0x") {
										r.attributes.IV = r.attributes.IV.substring(2)
									}
									r.attributes.IV = r.attributes.IV.match(/.{8}/g);
									r.attributes.IV[0] = parseInt(r.attributes.IV[0], 16);
									r.attributes.IV[1] = parseInt(r.attributes.IV[1], 16);
									r.attributes.IV[2] = parseInt(r.attributes.IV[2], 16);
									r.attributes.IV[3] = parseInt(r.attributes.IV[3], 16);
									r.attributes.IV = new Uint32Array(r.attributes.IV)
								}
							}
							n.trigger("data", r);
							return
						}
						i = /^#EXT-X-START:?(.*)$/.exec(e);
						if(i) {
							r = {
								type: "tag",
								tagType: "start"
							};
							if(i[1]) {
								r.attributes = _(i[1]);
								r.attributes["TIME-OFFSET"] = parseFloat(r.attributes["TIME-OFFSET"]);
								r.attributes.PRECISE = /YES/.test(r.attributes.PRECISE)
							}
							n.trigger("data", r);
							return
						}
						i = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(e);
						if(i) {
							r = {
								type: "tag",
								tagType: "cue-out-cont"
							};
							if(i[1]) {
								r.data = i[1]
							} else {
								r.data = ""
							}
							n.trigger("data", r);
							return
						}
						i = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(e);
						if(i) {
							r = {
								type: "tag",
								tagType: "cue-out"
							};
							if(i[1]) {
								r.data = i[1]
							} else {
								r.data = ""
							}
							n.trigger("data", r);
							return
						}
						i = /^#EXT-X-CUE-IN:?(.*)?$/.exec(e);
						if(i) {
							r = {
								type: "tag",
								tagType: "cue-in"
							};
							if(i[1]) {
								r.data = i[1]
							} else {
								r.data = ""
							}
							n.trigger("data", r);
							return
						}
						n.trigger("data", {
							type: "tag",
							data: e.slice(4)
						})
					})
				};
				n.addParser = function e(t) {
					var n = this;
					var i = t.expression,
						r = t.customType,
						a = t.dataParser,
						s = t.segment;
					if(typeof a !== "function") {
						a = function e(t) {
							return t
						}
					}
					this.customParsers.push(function(e) {
						var t = i.exec(e);
						if(t) {
							n.trigger("data", {
								type: "custom",
								data: a(e),
								customType: r,
								segment: s
							});
							return true
						}
					})
				};
				n.addTagMapper = function e(t) {
					var n = t.expression,
						i = t.map;
					var r = function e(t) {
						if(n.test(t)) {
							return i(t)
						}
						return t
					};
					this.tagMappers.push(r)
				};
				return t
			}(g);

			function A(e) {
				var t = c.atob(e || "");
				var n = new Uint8Array(t.length);
				for(var i = 0; i < t.length; i++) {
					n[i] = t.charCodeAt(i)
				}
				return n
			}
			var S = function(e) {
				h(t, e);

				function t() {
					var t;
					t = e.call(this) || this;
					t.lineStream = new m;
					t.parseStream = new b;
					t.lineStream.pipe(t.parseStream);
					var n = v(t);
					var i = [];
					var r = {};
					var a;
					var s;
					var o = function e() {};
					var l = {
						AUDIO: {},
						VIDEO: {},
						"CLOSED-CAPTIONS": {},
						SUBTITLES: {}
					};
					var u = "urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed";
					var c = 0;
					t.manifest = {
						allowCache: true,
						discontinuityStarts: [],
						segments: []
					};
					t.parseStream.on("data", function(e) {
						var t;
						var d;
						({
							tag: function f() {
								(({
									"allow-cache": function t() {
										this.manifest.allowCache = e.allowed;
										if(!("allowed" in e)) {
											this.trigger("info", {
												message: "defaulting allowCache to YES"
											});
											this.manifest.allowCache = true
										}
									},
									byterange: function t() {
										var t = {};
										if("length" in e) {
											r.byterange = t;
											t.length = e.length;
											if(!("offset" in e)) {
												this.trigger("info", {
													message: "defaulting offset to zero"
												});
												e.offset = 0
											}
										}
										if("offset" in e) {
											r.byterange = t;
											t.offset = e.offset
										}
									},
									endlist: function e() {
										this.manifest.endList = true
									},
									inf: function t() {
										if(!("mediaSequence" in this.manifest)) {
											this.manifest.mediaSequence = 0;
											this.trigger("info", {
												message: "defaulting media sequence to zero"
											})
										}
										if(!("discontinuitySequence" in this.manifest)) {
											this.manifest.discontinuitySequence = 0;
											this.trigger("info", {
												message: "defaulting discontinuity sequence to zero"
											})
										}
										if(e.duration > 0) {
											r.duration = e.duration
										}
										if(e.duration === 0) {
											r.duration = .01;
											this.trigger("info", {
												message: "updating zero segment duration to a small value"
											})
										}
										this.manifest.segments = i
									},
									key: function t() {
										if(!e.attributes) {
											this.trigger("warn", {
												message: "ignoring key declaration without attribute list"
											});
											return
										}
										if(e.attributes.METHOD === "NONE") {
											s = null;
											return
										}
										if(!e.attributes.URI) {
											this.trigger("warn", {
												message: "ignoring key declaration without URI"
											});
											return
										}
										if(e.attributes.KEYFORMAT === u) {
											var n = ["SAMPLE-AES", "SAMPLE-AES-CTR", "SAMPLE-AES-CENC"];
											if(n.indexOf(e.attributes.METHOD) === -1) {
												this.trigger("warn", {
													message: "invalid key method provided for Widevine"
												});
												return
											}
											if(e.attributes.METHOD === "SAMPLE-AES-CENC") {
												this.trigger("warn", {
													message: "SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead"
												})
											}
											if(e.attributes.URI.substring(0, 23) !== "data:text/plain;base64,") {
												this.trigger("warn", {
													message: "invalid key URI provided for Widevine"
												});
												return
											}
											if(!(e.attributes.KEYID && e.attributes.KEYID.substring(0, 2) === "0x")) {
												this.trigger("warn", {
													message: "invalid key ID provided for Widevine"
												});
												return
											}
											this.manifest.contentProtection = {
												"com.widevine.alpha": {
													attributes: {
														schemeIdUri: e.attributes.KEYFORMAT,
														keyId: e.attributes.KEYID.substring(2)
													},
													pssh: A(e.attributes.URI.split(",")[1])
												}
											};
											return
										}
										if(!e.attributes.METHOD) {
											this.trigger("warn", {
												message: "defaulting key method to AES-128"
											})
										}
										s = {
											method: e.attributes.METHOD || "AES-128",
											uri: e.attributes.URI
										};
										if(typeof e.attributes.IV !== "undefined") {
											s.iv = e.attributes.IV
										}
									},
									"media-sequence": function t() {
										if(!isFinite(e.number)) {
											this.trigger("warn", {
												message: "ignoring invalid media sequence: " + e.number
											});
											return
										}
										this.manifest.mediaSequence = e.number
									},
									"discontinuity-sequence": function t() {
										if(!isFinite(e.number)) {
											this.trigger("warn", {
												message: "ignoring invalid discontinuity sequence: " + e.number
											});
											return
										}
										this.manifest.discontinuitySequence = e.number;
										c = e.number
									},
									"playlist-type": function t() {
										if(!/VOD|EVENT/.test(e.playlistType)) {
											this.trigger("warn", {
												message: "ignoring unknown playlist type: " + e.playlist
											});
											return
										}
										this.manifest.playlistType = e.playlistType
									},
									map: function t() {
										a = {};
										if(e.uri) {
											a.uri = e.uri
										}
										if(e.byterange) {
											a.byterange = e.byterange
										}
									},
									"stream-inf": function t() {
										this.manifest.playlists = i;
										this.manifest.mediaGroups = this.manifest.mediaGroups || l;
										if(!e.attributes) {
											this.trigger("warn", {
												message: "ignoring empty stream-inf attributes"
											});
											return
										}
										if(!r.attributes) {
											r.attributes = {}
										}
										p(r.attributes, e.attributes)
									},
									media: function n() {
										this.manifest.mediaGroups = this.manifest.mediaGroups || l;
										if(!(e.attributes && e.attributes.TYPE && e.attributes["GROUP-ID"] && e.attributes.NAME)) {
											this.trigger("warn", {
												message: "ignoring incomplete or missing media group"
											});
											return
										}
										var i = this.manifest.mediaGroups[e.attributes.TYPE];
										i[e.attributes["GROUP-ID"]] = i[e.attributes["GROUP-ID"]] || {};
										t = i[e.attributes["GROUP-ID"]];
										d = {
											default: /yes/i.test(e.attributes.DEFAULT)
										};
										if(d.default) {
											d.autoselect = true
										} else {
											d.autoselect = /yes/i.test(e.attributes.AUTOSELECT)
										}
										if(e.attributes.LANGUAGE) {
											d.language = e.attributes.LANGUAGE
										}
										if(e.attributes.URI) {
											d.uri = e.attributes.URI
										}
										if(e.attributes["INSTREAM-ID"]) {
											d.instreamId = e.attributes["INSTREAM-ID"]
										}
										if(e.attributes.CHARACTERISTICS) {
											d.characteristics = e.attributes.CHARACTERISTICS
										}
										if(e.attributes.FORCED) {
											d.forced = /yes/i.test(e.attributes.FORCED)
										}
										t[e.attributes.NAME] = d
									},
									discontinuity: function e() {
										c += 1;
										r.discontinuity = true;
										this.manifest.discontinuityStarts.push(i.length)
									},
									"program-date-time": function t() {
										if(typeof this.manifest.dateTimeString === "undefined") {
											this.manifest.dateTimeString = e.dateTimeString;
											this.manifest.dateTimeObject = e.dateTimeObject
										}
										r.dateTimeString = e.dateTimeString;
										r.dateTimeObject = e.dateTimeObject
									},
									targetduration: function t() {
										if(!isFinite(e.duration) || e.duration < 0) {
											this.trigger("warn", {
												message: "ignoring invalid target duration: " + e.duration
											});
											return
										}
										this.manifest.targetDuration = e.duration
									},
									totalduration: function t() {
										if(!isFinite(e.duration) || e.duration < 0) {
											this.trigger("warn", {
												message: "ignoring invalid total duration: " + e.duration
											});
											return
										}
										this.manifest.totalDuration = e.duration
									},
									start: function t() {
										if(!e.attributes || isNaN(e.attributes["TIME-OFFSET"])) {
											this.trigger("warn", {
												message: "ignoring start declaration without appropriate attribute list"
											});
											return
										}
										this.manifest.start = {
											timeOffset: e.attributes["TIME-OFFSET"],
											precise: e.attributes.PRECISE
										}
									},
									"cue-out": function t() {
										r.cueOut = e.data
									},
									"cue-out-cont": function t() {
										r.cueOutCont = e.data
									},
									"cue-in": function t() {
										r.cueIn = e.data
									}
								})[e.tagType] || o).call(n)
							},
							uri: function t() {
								r.uri = e.uri;
								i.push(r);
								if(this.manifest.targetDuration && !("duration" in r)) {
									this.trigger("warn", {
										message: "defaulting segment duration to the target duration"
									});
									r.duration = this.manifest.targetDuration
								}
								if(s) {
									r.key = s
								}
								r.timeline = c;
								if(a) {
									r.map = a
								}
								r = {}
							},
							comment: function e() {},
							custom: function t() {
								if(e.segment) {
									r.custom = r.custom || {};
									r.custom[e.customType] = e.data
								} else {
									this.manifest.custom = this.manifest.custom || {};
									this.manifest.custom[e.customType] = e.data
								}
							}
						})[e.type].call(n)
					});
					return t
				}
				var n = t.prototype;
				n.push = function e(t) {
					this.lineStream.push(t)
				};
				n.end = function e() {
					this.lineStream.push("\n")
				};
				n.addParser = function e(t) {
					this.parseStream.addParser(t)
				};
				n.addTagMapper = function e(t) {
					this.parseStream.addTagMapper(t)
				};
				return t
			}(g);
			var T = function(e, t) {
				if(!(e instanceof t)) {
					throw new TypeError("Cannot call a class as a function")
				}
			};
			var k = function() {
				function e(e, t) {
					for(var n = 0; n < t.length; n++) {
						var i = t[n];
						i.enumerable = i.enumerable || false;
						i.configurable = true;
						if("value" in i) i.writable = true;
						Object.defineProperty(e, i.key, i)
					}
				}
				return function(t, n, i) {
					if(n) e(t.prototype, n);
					if(i) e(t, i);
					return t
				}
			}();
			var E = function e(t, n, i) {
				if(t === null) t = Function.prototype;
				var r = Object.getOwnPropertyDescriptor(t, n);
				if(r === undefined) {
					var a = Object.getPrototypeOf(t);
					if(a === null) {
						return undefined
					} else {
						return e(a, n, i)
					}
				} else if("value" in r) {
					return r.value
				} else {
					var s = r.get;
					if(s === undefined) {
						return undefined
					}
					return s.call(i)
				}
			};
			var P = function(e, t) {
				if(typeof t !== "function" && t !== null) {
					throw new TypeError("Super expression must either be null or a function, not " + typeof t)
				}
				e.prototype = Object.create(t && t.prototype, {
					constructor: {
						value: e,
						enumerable: false,
						writable: true,
						configurable: true
					}
				});
				if(t) Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t
			};
			var C = function(e, t) {
				if(!e) {
					throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
				}
				return t && (typeof t === "object" || typeof t === "function") ? t : e
			};
			var w = function() {
				function e(e, t) {
					var n = [];
					var i = true;
					var r = false;
					var a = undefined;
					try {
						for(var s = e[Symbol.iterator](), o; !(i = (o = s.next()).done); i = true) {
							n.push(o.value);
							if(t && n.length === t) break
						}
					} catch(e) {
						r = true;
						a = e
					} finally {
						try {
							if(!i && s["return"]) s["return"]()
						} finally {
							if(r) throw a
						}
					}
					return n
				}
				return function(t, n) {
					if(Array.isArray(t)) {
						return t
					} else if(Symbol.iterator in Object(t)) {
						return e(t, n)
					} else {
						throw new TypeError("Invalid attempt to destructure non-iterable instance")
					}
				}
			}();
			var j = t.mergeOptions,
				I = t.EventTarget,
				L = t.log;
			var O = function e(t, n) {
				["AUDIO", "SUBTITLES"].forEach(function(e) {
					for(var i in t.mediaGroups[e]) {
						for(var r in t.mediaGroups[e][i]) {
							var a = t.mediaGroups[e][i][r];
							n(a, e, i, r)
						}
					}
				})
			};
			var N = function e(t, n, i) {
				var r = n.slice();
				i = i || 0;
				var a = Math.min(t.length, n.length + i);
				for(var s = i; s < a; s++) {
					r[s - i] = j(t[s], r[s - i])
				}
				return r
			};
			var x = function e(t, n) {
				if(!t.resolvedUri) {
					t.resolvedUri = d(n, t.uri)
				}
				if(t.key && !t.key.resolvedUri) {
					t.key.resolvedUri = d(n, t.key.uri)
				}
				if(t.map && !t.map.resolvedUri) {
					t.map.resolvedUri = d(n, t.map.uri)
				}
			};
			var D = function e(t, n) {
				var i = j(t, {});
				var r = i.playlists[n.id];
				if(!r) {
					return null
				}
				if(r.segments && n.segments && r.segments.length === n.segments.length && r.endList === n.endList && r.mediaSequence === n.mediaSequence) {
					return null
				}
				var a = j(r, n);
				if(r.segments) {
					a.segments = N(r.segments, n.segments, n.mediaSequence - r.mediaSequence)
				}
				a.segments.forEach(function(e) {
					x(e, a.resolvedUri)
				});
				for(var s = 0; s < i.playlists.length; s++) {
					if(i.playlists[s].id === n.id) {
						i.playlists[s] = a
					}
				}
				i.playlists[n.id] = a;
				i.playlists[n.uri] = a;
				return i
			};
			var R = function e(t, n) {
				return t + "-" + n
			};
			var U = function e(t) {
				var n = t.playlists.length;
				while(n--) {
					var i = t.playlists[n];
					i.resolvedUri = d(t.uri, i.uri);
					i.id = R(n, i.uri);
					t.playlists[i.id] = i;
					t.playlists[i.uri] = i;
					if(!i.attributes) {
						i.attributes = {};
						L.warn("Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.")
					}
				}
			};
			var M = function e(t) {
				O(t, function(e) {
					if(e.uri) {
						e.resolvedUri = d(t.uri, e.uri)
					}
				})
			};
			var B = function e(t, n) {
				var i = t.segments[t.segments.length - 1];
				var r = void 0;
				if(n && i && i.duration) {
					r = i.duration * 1e3
				} else {
					r = (t.targetDuration || 10) * 500
				}
				return r
			};
			var F = function(e) {
				P(t, e);

				function t(e, n) {
					var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
					T(this, t);
					var r = C(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this));
					var a = i.withCredentials,
						s = a === undefined ? false : a,
						o = i.handleManifestRedirects,
						l = o === undefined ? false : o;
					r.srcUrl = e;
					r.hls_ = n;
					r.withCredentials = s;
					r.handleManifestRedirects = l;
					var u = n.options_;
					r.customTagParsers = u && u.customTagParsers || [];
					r.customTagMappers = u && u.customTagMappers || [];
					if(!r.srcUrl) {
						throw new Error("A non-empty playlist URL is required")
					}
					r.state = "HAVE_NOTHING";
					r.on("mediaupdatetimeout", function() {
						if(r.state !== "HAVE_METADATA") {
							return
						}
						r.state = "HAVE_CURRENT_METADATA";
						r.request = r.hls_.xhr({
							uri: d(r.master.uri, r.media().uri),
							withCredentials: r.withCredentials
						}, function(e, t) {
							if(!r.request) {
								return
							}
							if(e) {
								return r.playlistRequestError(r.request, r.media(), "HAVE_METADATA")
							}
							r.haveMetadata(r.request, r.media().uri, r.media().id)
						})
					});
					return r
				}
				k(t, [{
					key: "playlistRequestError",
					value: function e(t, n, i) {
						var r = n.uri,
							a = n.id;
						this.request = null;
						if(i) {
							this.state = i
						}
						this.error = {
							playlist: this.master.playlists[a],
							status: t.status,
							message: "HLS playlist request error at URL: " + r + ".",
							responseText: t.responseText,
							code: t.status >= 500 ? 4 : 2
						};
						this.trigger("error")
					}
				}, {
					key: "haveMetadata",
					value: function e(t, n, i) {
						var r = this;
						this.request = null;
						this.state = "HAVE_METADATA";
						var a = new S;
						this.customTagParsers.forEach(function(e) {
							return a.addParser(e)
						});
						this.customTagMappers.forEach(function(e) {
							return a.addTagMapper(e)
						});
						a.push(t.responseText);
						a.end();
						a.manifest.uri = n;
						a.manifest.id = i;
						a.manifest.attributes = a.manifest.attributes || {};
						var s = D(this.master, a.manifest);
						this.targetDuration = a.manifest.targetDuration;
						if(s) {
							this.master = s;
							this.media_ = this.master.playlists[i]
						} else {
							this.trigger("playlistunchanged")
						}
						if(!this.media().endList) {
							c.clearTimeout(this.mediaUpdateTimeout);
							this.mediaUpdateTimeout = c.setTimeout(function() {
								r.trigger("mediaupdatetimeout")
							}, B(this.media(), !!s))
						}
						this.trigger("loadedplaylist")
					}
				}, {
					key: "dispose",
					value: function e() {
						this.trigger("dispose");
						this.stopRequest();
						c.clearTimeout(this.mediaUpdateTimeout);
						c.clearTimeout(this.finalRenditionTimeout);
						this.off()
					}
				}, {
					key: "stopRequest",
					value: function e() {
						if(this.request) {
							var t = this.request;
							this.request = null;
							t.onreadystatechange = null;
							t.abort()
						}
					}
				}, {
					key: "media",
					value: function e(t, n) {
						var i = this;
						if(!t) {
							return this.media_
						}
						if(this.state === "HAVE_NOTHING") {
							throw new Error("Cannot switch media playlist from " + this.state)
						}
						if(typeof t === "string") {
							if(!this.master.playlists[t]) {
								throw new Error("Unknown playlist URI: " + t)
							}
							t = this.master.playlists[t]
						}
						c.clearTimeout(this.finalRenditionTimeout);
						if(n) {
							var r = t.targetDuration / 2 * 1e3 || 5 * 1e3;
							this.finalRenditionTimeout = c.setTimeout(this.media.bind(this, t, false), r);
							return
						}
						var a = this.state;
						var s = !this.media_ || t.id !== this.media_.id;
						if(this.master.playlists[t.id].endList) {
							if(this.request) {
								this.request.onreadystatechange = null;
								this.request.abort();
								this.request = null
							}
							this.state = "HAVE_METADATA";
							this.media_ = t;
							if(s) {
								this.trigger("mediachanging");
								this.trigger("mediachange")
							}
							return
						}
						if(!s) {
							return
						}
						this.state = "SWITCHING_MEDIA";
						if(this.request) {
							if(t.resolvedUri === this.request.url) {
								return
							}
							this.request.onreadystatechange = null;
							this.request.abort();
							this.request = null
						}
						if(this.media_) {
							this.trigger("mediachanging")
						}
						this.request = this.hls_.xhr({
							uri: t.resolvedUri,
							withCredentials: this.withCredentials
						}, function(e, n) {
							if(!i.request) {
								return
							}
							t.resolvedUri = f(i.handleManifestRedirects, t.resolvedUri, n);
							if(e) {
								return i.playlistRequestError(i.request, t, a)
							}
							i.haveMetadata(n, t.uri, t.id);
							if(a === "HAVE_MASTER") {
								i.trigger("loadedmetadata")
							} else {
								i.trigger("mediachange")
							}
						})
					}
				}, {
					key: "pause",
					value: function e() {
						this.stopRequest();
						c.clearTimeout(this.mediaUpdateTimeout);
						if(this.state === "HAVE_NOTHING") {
							this.started = false
						}
						if(this.state === "SWITCHING_MEDIA") {
							if(this.media_) {
								this.state = "HAVE_METADATA"
							} else {
								this.state = "HAVE_MASTER"
							}
						} else if(this.state === "HAVE_CURRENT_METADATA") {
							this.state = "HAVE_METADATA"
						}
					}
				}, {
					key: "load",
					value: function e(t) {
						var n = this;
						c.clearTimeout(this.mediaUpdateTimeout);
						var i = this.media();
						if(t) {
							var r = i ? i.targetDuration / 2 * 1e3 : 5 * 1e3;
							this.mediaUpdateTimeout = c.setTimeout(function() {
								return n.load()
							}, r);
							return
						}
						if(!this.started) {
							this.start();
							return
						}
						if(i && !i.endList) {
							this.trigger("mediaupdatetimeout")
						} else {
							this.trigger("loadedplaylist")
						}
					}
				}, {
					key: "start",
					value: function e() {
						var t = this;
						this.started = true;
						this.request = this.hls_.xhr({
							uri: this.srcUrl,
							withCredentials: this.withCredentials
						}, function(e, n) {
							if(!t.request) {
								return
							}
							t.request = null;
							if(e) {
								t.error = {
									status: n.status,
									message: "HLS playlist request error at URL: " + t.srcUrl + ".",
									responseText: n.responseText,
									code: 2
								};
								if(t.state === "HAVE_NOTHING") {
									t.started = false
								}
								return t.trigger("error")
							}
							var i = new S;
							t.customTagParsers.forEach(function(e) {
								return i.addParser(e)
							});
							t.customTagMappers.forEach(function(e) {
								return i.addTagMapper(e)
							});
							i.push(n.responseText);
							i.end();
							t.state = "HAVE_MASTER";
							t.srcUrl = f(t.handleManifestRedirects, t.srcUrl, n);
							i.manifest.uri = t.srcUrl;
							if(i.manifest.playlists) {
								t.master = i.manifest;
								U(t.master);
								M(t.master);
								t.trigger("loadedplaylist");
								if(!t.request) {
									t.media(i.manifest.playlists[0])
								}
								return
							}
							var r = R(0, t.srcUrl);
							t.master = {
								mediaGroups: {
									AUDIO: {},
									VIDEO: {},
									"CLOSED-CAPTIONS": {},
									SUBTITLES: {}
								},
								uri: c.location.href,
								playlists: [{
									uri: t.srcUrl,
									id: r,
									resolvedUri: t.srcUrl,
									attributes: {}
								}]
							};
							t.master.playlists[r] = t.master.playlists[0];
							t.master.playlists[t.srcUrl] = t.master.playlists[0];
							t.haveMetadata(n, t.srcUrl, r);
							return t.trigger("loadedmetadata")
						})
					}
				}]);
				return t
			}(I);
			var V = t.createTimeRange;
			var q = function e(t, n) {
				var i = 0;
				var r = n - t.mediaSequence;
				var a = t.segments[r];
				if(a) {
					if(typeof a.start !== "undefined") {
						return {
							result: a.start,
							precise: true
						}
					}
					if(typeof a.end !== "undefined") {
						return {
							result: a.end - a.duration,
							precise: true
						}
					}
				}
				while(r--) {
					a = t.segments[r];
					if(typeof a.end !== "undefined") {
						return {
							result: i + a.end,
							precise: true
						}
					}
					i += a.duration;
					if(typeof a.start !== "undefined") {
						return {
							result: i + a.start,
							precise: true
						}
					}
				}
				return {
					result: i,
					precise: false
				}
			};
			var H = function e(t, n) {
				var i = 0;
				var r = void 0;
				var a = n - t.mediaSequence;
				for(; a < t.segments.length; a++) {
					r = t.segments[a];
					if(typeof r.start !== "undefined") {
						return {
							result: r.start - i,
							precise: true
						}
					}
					i += r.duration;
					if(typeof r.end !== "undefined") {
						return {
							result: r.end - i,
							precise: true
						}
					}
				}
				return {
					result: -1,
					precise: false
				}
			};
			var G = function e(t, n, i) {
				var r = void 0;
				var a = void 0;
				if(typeof n === "undefined") {
					n = t.mediaSequence + t.segments.length
				}
				if(n < t.mediaSequence) {
					return 0
				}
				r = q(t, n);
				if(r.precise) {
					return r.result
				}
				a = H(t, n);
				if(a.precise) {
					return a.result
				}
				return r.result + i
			};
			var Y = function e(t, n, i) {
				if(!t) {
					return 0
				}
				if(typeof i !== "number") {
					i = 0
				}
				if(typeof n === "undefined") {
					if(t.totalDuration) {
						return t.totalDuration
					}
					if(!t.endList) {
						return c.Infinity
					}
				}
				return G(t, n, i)
			};
			var z = function e(t, n, i) {
				var r = 0;
				if(n > i) {
					var a = [i, n];
					n = a[0];
					i = a[1]
				}
				if(n < 0) {
					for(var s = n; s < Math.min(0, i); s++) {
						r += t.targetDuration
					}
					n = 0
				}
				for(var o = n; o < i; o++) {
					r += t.segments[o].duration
				}
				return r
			};
			var K = function e(t, n) {
				if(!t.segments.length) {
					return 0
				}
				var i = t.segments.length;
				var r = t.segments[i - 1].duration || t.targetDuration;
				var a = typeof n === "number" ? n : r + t.targetDuration * 2;
				if(a === 0) {
					return i
				}
				var s = 0;
				while(i--) {
					s += t.segments[i].duration;
					if(s >= a) {
						break
					}
				}
				return Math.max(0, i)
			};
			var W = function e(t, n, i, r) {
				if(!t || !t.segments) {
					return null
				}
				if(t.endList) {
					return Y(t)
				}
				if(n === null) {
					return null
				}
				n = n || 0;
				var a = i ? K(t, r) : t.segments.length;
				return G(t, t.mediaSequence + a, n)
			};
			var X = function e(t, n, i) {
				var r = true;
				var a = n || 0;
				var s = W(t, n, r, i);
				if(s === null) {
					return V()
				}
				return V(a, s)
			};
			var J = function e(t) {
				return t - Math.floor(t) === 0
			};
			var Q = function e(t, n) {
				if(J(n)) {
					return n + t * .1
				}
				var i = n.toString().split(".")[1].length;
				for(var r = 1; r <= i; r++) {
					var a = Math.pow(10, r);
					var s = n * a;
					if(J(s) || r === i) {
						return(s + t) / a
					}
				}
			};
			var Z = Q.bind(null, 1);
			var $ = Q.bind(null, -1);
			var ee = function e(t, n, i, r) {
				var a = void 0;
				var s = void 0;
				var o = t.segments.length;
				var l = n - r;
				if(l < 0) {
					if(i > 0) {
						for(a = i - 1; a >= 0; a--) {
							s = t.segments[a];
							l += $(s.duration);
							if(l > 0) {
								return {
									mediaIndex: a,
									startTime: r - z(t, i, a)
								}
							}
						}
					}
					return {
						mediaIndex: 0,
						startTime: n
					}
				}
				if(i < 0) {
					for(a = i; a < 0; a++) {
						l -= t.targetDuration;
						if(l < 0) {
							return {
								mediaIndex: 0,
								startTime: n
							}
						}
					}
					i = 0
				}
				for(a = i; a < o; a++) {
					s = t.segments[a];
					l -= Z(s.duration);
					if(l < 0) {
						return {
							mediaIndex: a,
							startTime: r + z(t, i, a)
						}
					}
				}
				return {
					mediaIndex: o - 1,
					startTime: n
				}
			};
			var te = function e(t) {
				return t.excludeUntil && t.excludeUntil > Date.now()
			};
			var ne = function e(t) {
				return t.excludeUntil && t.excludeUntil === Infinity
			};
			var ie = function e(t) {
				var n = te(t);
				return !t.disabled && !n
			};
			var re = function e(t) {
				return t.disabled
			};
			var ae = function e(t) {
				for(var n = 0; n < t.segments.length; n++) {
					if(t.segments[n].key) {
						return true
					}
				}
				return false
			};
			var se = function e(t) {
				for(var n = 0; n < t.segments.length; n++) {
					if(t.segments[n].map) {
						return true
					}
				}
				return false
			};
			var oe = function e(t, n) {
				return n.attributes && n.attributes[t]
			};
			var le = function e(t, n, i) {
				var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
				if(!oe("BANDWIDTH", i)) {
					return NaN
				}
				var a = t * i.attributes.BANDWIDTH;
				return(a - r * 8) / n
			};
			var ue = function e(t, n) {
				if(t.playlists.length === 1) {
					return true
				}
				var i = n.attributes.BANDWIDTH || Number.MAX_VALUE;
				return t.playlists.filter(function(e) {
					if(!ie(e)) {
						return false
					}
					return(e.attributes.BANDWIDTH || 0) < i
				}).length === 0
			};
			var ce = {
				duration: Y,
				seekable: X,
				safeLiveIndex: K,
				getMediaInfoForTime: ee,
				isEnabled: ie,
				isDisabled: re,
				isBlacklisted: te,
				isIncompatible: ne,
				playlistEnd: W,
				isAes: ae,
				isFmp4: se,
				hasAttribute: oe,
				estimateSegmentRequestTime: le,
				isLowestEnabledRendition: ue
			};
			var de = t.xhr,
				fe = t.mergeOptions;
			var pe = function e() {
				var n = function e(n, i) {
					n = fe({
						timeout: 45e3
					}, n);
					var r = e.beforeRequest || t.Hls.xhr.beforeRequest;
					if(r && typeof r === "function") {
						var a = r(n);
						if(a) {
							n = a
						}
					}
					var s = de(n, function(e, t) {
						var n = s.response;
						if(!e && n) {
							s.responseTime = Date.now();
							s.roundTripTime = s.responseTime - s.requestTime;
							s.bytesReceived = n.byteLength || n.length;
							if(!s.bandwidth) {
								s.bandwidth = Math.floor(s.bytesReceived / s.roundTripTime * 8 * 1e3)
							}
						}
						if(t.headers) {
							s.responseHeaders = t.headers
						}
						if(e && e.code === "ETIMEDOUT") {
							s.timedout = true
						}
						if(!e && !s.aborted && t.statusCode !== 200 && t.statusCode !== 206 && t.statusCode !== 0) {
							e = new Error("XHR Failed with a response of: " + (s && (n || s.responseText)))
						}
						i(e, s)
					});
					var o = s.abort;
					s.abort = function() {
						s.aborted = true;
						return o.apply(s, arguments)
					};
					s.uri = n.uri;
					s.requestTime = Date.now();
					return s
				};
				return n
			};
			var he = function e(t) {
				var n = void 0;
				var i = void 0;
				i = t.offset + t.length - 1;
				n = t.offset;
				return "bytes=" + n + "-" + i
			};
			var ve = function e(t) {
				var n = {};
				if(t.byterange) {
					n.Range = he(t.byterange)
				}
				return n
			};

			function ge(e) {
				return e.subarray(0, e.byteLength - e[e.byteLength - 1])
			}
			var me = function e(t, n) {
				if(!(t instanceof n)) {
					throw new TypeError("Cannot call a class as a function")
				}
			};
			var ye = function() {
				function e(e, t) {
					for(var n = 0; n < t.length; n++) {
						var i = t[n];
						i.enumerable = i.enumerable || false;
						i.configurable = true;
						if("value" in i) i.writable = true;
						Object.defineProperty(e, i.key, i)
					}
				}
				return function(t, n, i) {
					if(n) e(t.prototype, n);
					if(i) e(t, i);
					return t
				}
			}();
			var _e = function e(t, n) {
				if(typeof n !== "function" && n !== null) {
					throw new TypeError("Super expression must either be null or a function, not " + typeof n)
				}
				t.prototype = Object.create(n && n.prototype, {
					constructor: {
						value: t,
						enumerable: false,
						writable: true,
						configurable: true
					}
				});
				if(n) Object.setPrototypeOf ? Object.setPrototypeOf(t, n) : t.__proto__ = n
			};
			var be = function e(t, n) {
				if(!t) {
					throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
				}
				return n && (typeof n === "object" || typeof n === "function") ? n : t
			};
			var Ae = function e() {
				var t = [
					[
						[],
						[],
						[],
						[],
						[]
					],
					[
						[],
						[],
						[],
						[],
						[]
					]
				];
				var n = t[0];
				var i = t[1];
				var r = n[4];
				var a = i[4];
				var s = void 0;
				var o = void 0;
				var l = void 0;
				var u = [];
				var c = [];
				var d = void 0;
				var f = void 0;
				var p = void 0;
				var h = void 0;
				var v = void 0;
				var g = void 0;
				for(s = 0; s < 256; s++) {
					c[(u[s] = s << 1 ^ (s >> 7) * 283) ^ s] = s
				}
				for(o = l = 0; !r[o]; o ^= d || 1, l = c[l] || 1) {
					h = l ^ l << 1 ^ l << 2 ^ l << 3 ^ l << 4;
					h = h >> 8 ^ h & 255 ^ 99;
					r[o] = h;
					a[h] = o;
					p = u[f = u[d = u[o]]];
					g = p * 16843009 ^ f * 65537 ^ d * 257 ^ o * 16843008;
					v = u[h] * 257 ^ h * 16843008;
					for(s = 0; s < 4; s++) {
						n[s][o] = v = v << 24 ^ v >>> 8;
						i[s][h] = g = g << 24 ^ g >>> 8
					}
				}
				for(s = 0; s < 5; s++) {
					n[s] = n[s].slice(0);
					i[s] = i[s].slice(0)
				}
				return t
			};
			var Se = null;
			var Te = function() {
				function e(t) {
					me(this, e);
					if(!Se) {
						Se = Ae()
					}
					this._tables = [
						[Se[0][0].slice(), Se[0][1].slice(), Se[0][2].slice(), Se[0][3].slice(), Se[0][4].slice()],
						[Se[1][0].slice(), Se[1][1].slice(), Se[1][2].slice(), Se[1][3].slice(), Se[1][4].slice()]
					];
					var n = void 0;
					var i = void 0;
					var r = void 0;
					var a = void 0;
					var s = void 0;
					var o = this._tables[0][4];
					var l = this._tables[1];
					var u = t.length;
					var c = 1;
					if(u !== 4 && u !== 6 && u !== 8) {
						throw new Error("Invalid aes key size")
					}
					a = t.slice(0);
					s = [];
					this._key = [a, s];
					for(n = u; n < 4 * u + 28; n++) {
						r = a[n - 1];
						if(n % u === 0 || u === 8 && n % u === 4) {
							r = o[r >>> 24] << 24 ^ o[r >> 16 & 255] << 16 ^ o[r >> 8 & 255] << 8 ^ o[r & 255];
							if(n % u === 0) {
								r = r << 8 ^ r >>> 24 ^ c << 24;
								c = c << 1 ^ (c >> 7) * 283
							}
						}
						a[n] = a[n - u] ^ r
					}
					for(i = 0; n; i++, n--) {
						r = a[i & 3 ? n : n - 4];
						if(n <= 4 || i < 4) {
							s[i] = r
						} else {
							s[i] = l[0][o[r >>> 24]] ^ l[1][o[r >> 16 & 255]] ^ l[2][o[r >> 8 & 255]] ^ l[3][o[r & 255]]
						}
					}
				}
				e.prototype.decrypt = function e(t, n, i, r, a, s) {
					var o = this._key[1];
					var l = t ^ o[0];
					var u = r ^ o[1];
					var c = i ^ o[2];
					var d = n ^ o[3];
					var f = void 0;
					var p = void 0;
					var h = void 0;
					var v = o.length / 4 - 2;
					var g = void 0;
					var m = 4;
					var y = this._tables[1];
					var _ = y[0];
					var b = y[1];
					var A = y[2];
					var S = y[3];
					var T = y[4];
					for(g = 0; g < v; g++) {
						f = _[l >>> 24] ^ b[u >> 16 & 255] ^ A[c >> 8 & 255] ^ S[d & 255] ^ o[m];
						p = _[u >>> 24] ^ b[c >> 16 & 255] ^ A[d >> 8 & 255] ^ S[l & 255] ^ o[m + 1];
						h = _[c >>> 24] ^ b[d >> 16 & 255] ^ A[l >> 8 & 255] ^ S[u & 255] ^ o[m + 2];
						d = _[d >>> 24] ^ b[l >> 16 & 255] ^ A[u >> 8 & 255] ^ S[c & 255] ^ o[m + 3];
						m += 4;
						l = f;
						u = p;
						c = h
					}
					for(g = 0; g < 4; g++) {
						a[(3 & -g) + s] = T[l >>> 24] << 24 ^ T[u >> 16 & 255] << 16 ^ T[c >> 8 & 255] << 8 ^ T[d & 255] ^ o[m++];
						f = l;
						l = u;
						u = c;
						c = d;
						d = f
					}
				};
				return e
			}();
			var ke = function() {
				function e() {
					me(this, e);
					this.listeners = {}
				}
				e.prototype.on = function e(t, n) {
					if(!this.listeners[t]) {
						this.listeners[t] = []
					}
					this.listeners[t].push(n)
				};
				e.prototype.off = function e(t, n) {
					if(!this.listeners[t]) {
						return false
					}
					var i = this.listeners[t].indexOf(n);
					this.listeners[t].splice(i, 1);
					return i > -1
				};
				e.prototype.trigger = function e(t) {
					var n = this.listeners[t];
					if(!n) {
						return
					}
					if(arguments.length === 2) {
						var i = n.length;
						for(var r = 0; r < i; ++r) {
							n[r].call(this, arguments[1])
						}
					} else {
						var a = Array.prototype.slice.call(arguments, 1);
						var s = n.length;
						for(var o = 0; o < s; ++o) {
							n[o].apply(this, a)
						}
					}
				};
				e.prototype.dispose = function e() {
					this.listeners = {}
				};
				e.prototype.pipe = function e(t) {
					this.on("data", function(e) {
						t.push(e)
					})
				};
				return e
			}();
			var Ee = function(e) {
				_e(t, e);

				function t() {
					me(this, t);
					var n = be(this, e.call(this, ke));
					n.jobs = [];
					n.delay = 1;
					n.timeout_ = null;
					return n
				}
				t.prototype.processJob_ = function e() {
					this.jobs.shift()();
					if(this.jobs.length) {
						this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay)
					} else {
						this.timeout_ = null
					}
				};
				t.prototype.push = function e(t) {
					this.jobs.push(t);
					if(!this.timeout_) {
						this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay)
					}
				};
				return t
			}(ke);
			var Pe = function e(t) {
				return t << 24 | (t & 65280) << 8 | (t & 16711680) >> 8 | t >>> 24
			};
			var Ce = function e(t, n, i) {
				var r = new Int32Array(t.buffer, t.byteOffset, t.byteLength >> 2);
				var a = new Te(Array.prototype.slice.call(n));
				var s = new Uint8Array(t.byteLength);
				var o = new Int32Array(s.buffer);
				var l = void 0;
				var u = void 0;
				var c = void 0;
				var d = void 0;
				var f = void 0;
				var p = void 0;
				var h = void 0;
				var v = void 0;
				var g = void 0;
				l = i[0];
				u = i[1];
				c = i[2];
				d = i[3];
				for(g = 0; g < r.length; g += 4) {
					f = Pe(r[g]);
					p = Pe(r[g + 1]);
					h = Pe(r[g + 2]);
					v = Pe(r[g + 3]);
					a.decrypt(f, p, h, v, o, g);
					o[g] = Pe(o[g] ^ l);
					o[g + 1] = Pe(o[g + 1] ^ u);
					o[g + 2] = Pe(o[g + 2] ^ c);
					o[g + 3] = Pe(o[g + 3] ^ d);
					l = f;
					u = p;
					c = h;
					d = v
				}
				return s
			};
			var we = function() {
				function e(t, n, i, r) {
					me(this, e);
					var a = e.STEP;
					var s = new Int32Array(t.buffer);
					var o = new Uint8Array(t.byteLength);
					var l = 0;
					this.asyncStream_ = new Ee;
					this.asyncStream_.push(this.decryptChunk_(s.subarray(l, l + a), n, i, o));
					for(l = a; l < s.length; l += a) {
						i = new Uint32Array([Pe(s[l - 4]), Pe(s[l - 3]), Pe(s[l - 2]), Pe(s[l - 1])]);
						this.asyncStream_.push(this.decryptChunk_(s.subarray(l, l + a), n, i, o))
					}
					this.asyncStream_.push(function() {
						r(null, ge(o))
					})
				}
				e.prototype.decryptChunk_ = function e(t, n, i, r) {
					return function() {
						var e = Ce(t, n, i);
						r.set(e, t.byteOffset)
					}
				};
				ye(e, null, [{
					key: "STEP",
					get: function e() {
						return 32e3
					}
				}]);
				return e
			}();
			var je = function e(t, n) {
				return t.start(n) + "-" + t.end(n)
			};
			var Ie = function e(t, n) {
				var i = t.toString(16);
				return "00".substring(0, 2 - i.length) + i + (n % 2 ? " " : "")
			};
			var Le = function e(t) {
				if(t >= 32 && t < 126) {
					return String.fromCharCode(t)
				}
				return "."
			};
			var Oe = function e(t) {
				var n = {};
				Object.keys(t).forEach(function(e) {
					var i = t[e];
					if(ArrayBuffer.isView(i)) {
						n[e] = {
							bytes: i.buffer,
							byteOffset: i.byteOffset,
							byteLength: i.byteLength
						}
					} else {
						n[e] = i
					}
				});
				return n
			};
			var Ne = function e(t) {
				var n = t.byterange || {
					length: Infinity,
					offset: 0
				};
				return [n.length, n.offset, t.resolvedUri].join(",")
			};
			var xe = function e(t) {
				return t.resolvedUri
			};
			var De = function e(t) {
				var n = Array.prototype.slice.call(t);
				var i = 16;
				var r = "";
				var a = void 0;
				var s = void 0;
				for(var o = 0; o < n.length / i; o++) {
					a = n.slice(o * i, o * i + i).map(Ie).join("");
					s = n.slice(o * i, o * i + i).map(Le).join("");
					r += a + " " + s + "\n"
				}
				return r
			};
			var Re = function e(t) {
				var n = t.bytes;
				return De(n)
			};
			var Ue = function e(t) {
				var n = "";
				var i = void 0;
				for(i = 0; i < t.length; i++) {
					n += je(t, i) + " "
				}
				return n
			};
			var Me = Object.freeze({
				createTransferableMessage: Oe,
				initSegmentId: Ne,
				segmentKeyId: xe,
				hexDump: De,
				tagDump: Re,
				textRanges: Ue
			});
			var Be = .25;
			var Fe = function e(t, n) {
				if(!n.dateTimeObject) {
					return null
				}
				var i = n.videoTimingInfo.transmuxerPrependedSeconds;
				var r = n.videoTimingInfo.transmuxedPresentationStart;
				var a = r + i;
				var s = t - a;
				return new Date(n.dateTimeObject.getTime() + s * 1e3)
			};
			var Ve = function e(t) {
				return t.transmuxedPresentationEnd - t.transmuxedPresentationStart - t.transmuxerPrependedSeconds
			};
			var qe = function e(t, n) {
				var i = void 0;
				try {
					i = new Date(t)
				} catch(e) {
					return null
				}
				if(!n || !n.segments || n.segments.length === 0) {
					return null
				}
				var r = n.segments[0];
				if(i < r.dateTimeObject) {
					return null
				}
				for(var a = 0; a < n.segments.length - 1; a++) {
					r = n.segments[a];
					var s = n.segments[a + 1].dateTimeObject;
					if(i < s) {
						break
					}
				}
				var o = n.segments[n.segments.length - 1];
				var l = o.dateTimeObject;
				var u = o.videoTimingInfo ? Ve(o.videoTimingInfo) : o.duration + o.duration * Be;
				var c = new Date(l.getTime() + u * 1e3);
				if(i > c) {
					return null
				}
				if(i > l) {
					r = o
				}
				return {
					segment: r,
					estimatedStart: r.videoTimingInfo ? r.videoTimingInfo.transmuxedPresentationStart : ce.duration(n, n.mediaSequence + n.segments.indexOf(r)),
					type: r.videoTimingInfo ? "accurate" : "estimate"
				}
			};
			var He = function e(t, n) {
				if(!n || !n.segments || n.segments.length === 0) {
					return null
				}
				var i = 0;
				var r = void 0;
				for(var a = 0; a < n.segments.length; a++) {
					r = n.segments[a];
					i = r.videoTimingInfo ? r.videoTimingInfo.transmuxedPresentationEnd : i + r.duration;
					if(t <= i) {
						break
					}
				}
				var s = n.segments[n.segments.length - 1];
				if(s.videoTimingInfo && s.videoTimingInfo.transmuxedPresentationEnd < t) {
					return null
				}
				if(t > i) {
					if(t > i + s.duration * Be) {
						return null
					}
					r = s
				}
				return {
					segment: r,
					estimatedStart: r.videoTimingInfo ? r.videoTimingInfo.transmuxedPresentationStart : i - r.duration,
					type: r.videoTimingInfo ? "accurate" : "estimate"
				}
			};
			var Ge = function e(t, n) {
				var i = void 0;
				var r = void 0;
				try {
					i = new Date(t);
					r = new Date(n)
				} catch(e) {}
				var a = i.getTime();
				var s = r.getTime();
				return(s - a) / 1e3
			};
			var Ye = function e(t) {
				if(!t.segments || t.segments.length === 0) {
					return false
				}
				for(var n = 0; n < t.segments.length; n++) {
					var i = t.segments[n];
					if(!i.dateTimeObject) {
						return false
					}
				}
				return true
			};
			var ze = function e(t) {
				var n = t.playlist,
					i = t.time,
					r = i === undefined ? undefined : i,
					a = t.callback;
				if(!a) {
					throw new Error("getProgramTime: callback must be provided")
				}
				if(!n || r === undefined) {
					return a({
						message: "getProgramTime: playlist and time must be provided"
					})
				}
				var s = He(r, n);
				if(!s) {
					return a({
						message: "valid programTime was not found"
					})
				}
				if(s.type === "estimate") {
					return a({
						message: "Accurate programTime could not be determined." + " Please seek to e.seekTime and try again",
						seekTime: s.estimatedStart
					})
				}
				var o = {
					mediaSeconds: r
				};
				var l = Fe(r, s.segment);
				if(l) {
					o.programDateTime = l.toISOString()
				}
				return a(null, o)
			};
			var Ke = function e(t) {
				var n = t.programTime,
					i = t.playlist,
					r = t.retryCount,
					a = r === undefined ? 2 : r,
					s = t.seekTo,
					o = t.pauseAfterSeek,
					l = o === undefined ? true : o,
					u = t.tech,
					c = t.callback;
				if(!c) {
					throw new Error("seekToProgramTime: callback must be provided")
				}
				if(typeof n === "undefined" || !i || !s) {
					return c({
						message: "seekToProgramTime: programTime, seekTo and playlist must be provided"
					})
				}
				if(!i.endList && !u.hasStarted_) {
					return c({
						message: "player must be playing a live stream to start buffering"
					})
				}
				if(!Ye(i)) {
					return c({
						message: "programDateTime tags must be provided in the manifest " + i.resolvedUri
					})
				}
				var d = qe(n, i);
				if(!d) {
					return c({
						message: n + " was not found in the stream"
					})
				}
				var f = d.segment;
				var p = Ge(f.dateTimeObject, n);
				if(d.type === "estimate") {
					if(a === 0) {
						return c({
							message: n + " is not buffered yet. Try again"
						})
					}
					s(d.estimatedStart + p);
					u.one("seeked", function() {
						e({
							programTime: n,
							playlist: i,
							retryCount: a - 1,
							seekTo: s,
							pauseAfterSeek: l,
							tech: u,
							callback: c
						})
					});
					return
				}
				var h = f.start + p;
				var v = function e() {
					return c(null, u.currentTime())
				};
				u.one("seeked", v);
				if(l) {
					u.pause()
				}
				s(h)
			};
			var We = 1 / 30;
			var Xe = We * 3;
			var Je = function e(n, i) {
				var r = [];
				var a = void 0;
				if(n && n.length) {
					for(a = 0; a < n.length; a++) {
						if(i(n.start(a), n.end(a))) {
							r.push([n.start(a), n.end(a)])
						}
					}
				}
				return t.createTimeRanges(r)
			};
			var Qe = function e(t, n) {
				return Je(t, function(e, t) {
					return e - Xe <= n && t + Xe >= n
				})
			};
			var Ze = function e(t, n) {
				return Je(t, function(e) {
					return e - We >= n
				})
			};
			var $e = function e(n) {
				if(n.length < 2) {
					return t.createTimeRanges()
				}
				var i = [];
				for(var r = 1; r < n.length; r++) {
					var a = n.end(r - 1);
					var s = n.start(r);
					i.push([a, s])
				}
				return t.createTimeRanges(i)
			};
			var et = function e(t) {
				var n = [];
				if(!t || !t.length) {
					return ""
				}
				for(var i = 0; i < t.length; i++) {
					n.push(t.start(i) + " => " + t.end(i))
				}
				return n.join(", ")
			};
			var tt = function e(t, n) {
				var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
				var r = t.length ? t.end(t.length - 1) : 0;
				return(r - n) / i
			};
			var nt = function e(t) {
				var n = [];
				for(var i = 0; i < t.length; i++) {
					n.push({
						start: t.start(i),
						end: t.end(i)
					})
				}
				return n
			};
			var it = function e(t, n, i) {
				var r = n.player_;
				if(i.captions && i.captions.length) {
					if(!t.inbandTextTracks_) {
						t.inbandTextTracks_ = {}
					}
					for(var a in i.captionStreams) {
						if(!t.inbandTextTracks_[a]) {
							r.tech_.trigger({
								type: "usage",
								name: "hls-608"
							});
							var s = r.textTracks().getTrackById(a);
							if(s) {
								t.inbandTextTracks_[a] = s
							} else {
								t.inbandTextTracks_[a] = r.addRemoteTextTrack({
									kind: "captions",
									id: a,
									label: a
								}, false).track
							}
						}
					}
				}
				if(i.metadata && i.metadata.length && !t.metadataTrack_) {
					t.metadataTrack_ = r.addRemoteTextTrack({
						kind: "metadata",
						label: "Timed Metadata"
					}, false).track;
					t.metadataTrack_.inBandMetadataTrackDispatchType = i.metadata.dispatchType
				}
			};
			var rt = function e(t, n, i) {
				var r = void 0;
				var a = void 0;
				if(!i) {
					return
				}
				if(!i.cues) {
					return
				}
				r = i.cues.length;
				while(r--) {
					a = i.cues[r];
					if(a.startTime <= n && a.endTime >= t) {
						i.removeCue(a)
					}
				}
			};
			var at = function e(n) {
				Object.defineProperties(n.frame, {
					id: {
						get: function e() {
							t.log.warn("cue.frame.id is deprecated. Use cue.value.key instead.");
							return n.value.key
						}
					},
					value: {
						get: function e() {
							t.log.warn("cue.frame.value is deprecated. Use cue.value.data instead.");
							return n.value.data
						}
					},
					privateData: {
						get: function e() {
							t.log.warn("cue.frame.privateData is deprecated. Use cue.value.data instead.");
							return n.value.data
						}
					}
				})
			};
			var st = function e(t) {
				var n = void 0;
				if(isNaN(t) || Math.abs(t) === Infinity) {
					n = Number.MAX_VALUE
				} else {
					n = t
				}
				return n
			};
			var ot = function e(t, n, i) {
				var r = c.WebKitDataCue || c.VTTCue;
				if(n) {
					n.forEach(function(e) {
						var t = e.stream;
						this.inbandTextTracks_[t].addCue(new r(e.startTime + this.timestampOffset, e.endTime + this.timestampOffset, e.text))
					}, t)
				}
				if(i) {
					var a = st(t.mediaSource_.duration);
					i.forEach(function(e) {
						var t = e.cueTime + this.timestampOffset;
						if(typeof t !== "number" || c.isNaN(t) || t < 0 || !(t < Infinity)) {
							return
						}
						e.frames.forEach(function(e) {
							var n = new r(t, t, e.value || e.url || e.data || "");
							n.frame = e;
							n.value = e;
							at(n);
							this.metadataTrack_.addCue(n)
						}, this)
					}, t);
					if(t.metadataTrack_ && t.metadataTrack_.cues && t.metadataTrack_.cues.length) {
						var s = t.metadataTrack_.cues;
						var o = [];
						for(var l = 0; l < s.length; l++) {
							if(s[l]) {
								o.push(s[l])
							}
						}
						var u = o.reduce(function(e, t) {
							var n = e[t.startTime] || [];
							n.push(t);
							e[t.startTime] = n;
							return e
						}, {});
						var d = Object.keys(u).sort(function(e, t) {
							return Number(e) - Number(t)
						});
						d.forEach(function(e, t) {
							var n = u[e];
							var i = Number(d[t + 1]) || a;
							n.forEach(function(e) {
								e.endTime = i
							})
						})
					}
				}
			};
			var lt = typeof window !== "undefined" ? window : {},
				ut = typeof Symbol === "undefined" ? "__target" : Symbol(),
				ct = "application/javascript",
				dt = lt.BlobBuilder || lt.WebKitBlobBuilder || lt.MozBlobBuilder || lt.MSBlobBuilder,
				ft = lt.URL || lt.webkitURL || ft && ft.msURL,
				pt = lt.Worker;

			function ht(e, t) {
				return function n(i) {
					var r = this;
					if(!t) {
						return new pt(e)
					} else if(pt && !i) {
						var a = t.toString().replace(/^function.+?{/, "").slice(0, -1),
							s = yt(a);
						this[ut] = new pt(s);
						_t(this[ut], s);
						return this[ut]
					} else {
						var o = {
							postMessage: function e(t) {
								if(r.onmessage) {
									setTimeout(function() {
										r.onmessage({
											data: t,
											target: o
										})
									})
								}
							}
						};
						t.call(o);
						this.postMessage = function(e) {
							setTimeout(function() {
								o.onmessage({
									data: e,
									target: r
								})
							})
						};
						this.isThisThread = true
					}
				}
			}
			if(pt) {
				var vt, gt = yt("self.onmessage = function () {}"),
					mt = new Uint8Array(1);
				try {
					vt = new pt(gt);
					vt.postMessage(mt, [mt.buffer])
				} catch(e) {
					pt = null
				} finally {
					ft.revokeObjectURL(gt);
					if(vt) {
						vt.terminate()
					}
				}
			}

			function yt(e) {
				try {
					return ft.createObjectURL(new Blob([e], {
						type: ct
					}))
				} catch(n) {
					var t = new dt;
					t.append(e);
					return ft.createObjectURL(t.getBlob(type))
				}
			}

			function _t(e, t) {
				if(!e || !t) return;
				var n = e.terminate;
				e.objURL = t;
				e.terminate = function() {
					if(e.objURL) ft.revokeObjectURL(e.objURL);
					n.call(e)
				}
			}
			var bt = new ht("./transmuxer-worker.worker.js", function(e, t) {
				var n = this;
				var i = function() {
					var e = function e() {
						this.init = function() {
							var e = {};
							this.on = function(t, n) {
								if(!e[t]) {
									e[t] = []
								}
								e[t] = e[t].concat(n)
							};
							this.off = function(t, n) {
								var i;
								if(!e[t]) {
									return false
								}
								i = e[t].indexOf(n);
								e[t] = e[t].slice();
								e[t].splice(i, 1);
								return i > -1
							};
							this.trigger = function(t) {
								var n, i, r, a;
								n = e[t];
								if(!n) {
									return
								}
								if(arguments.length === 2) {
									r = n.length;
									for(i = 0; i < r; ++i) {
										n[i].call(this, arguments[1])
									}
								} else {
									a = [];
									i = arguments.length;
									for(i = 1; i < arguments.length; ++i) {
										a.push(arguments[i])
									}
									r = n.length;
									for(i = 0; i < r; ++i) {
										n[i].apply(this, a)
									}
								}
							};
							this.dispose = function() {
								e = {}
							}
						}
					};
					e.prototype.pipe = function(e) {
						this.on("data", function(t) {
							e.push(t)
						});
						this.on("done", function(t) {
							e.flush(t)
						});
						this.on("partialdone", function(t) {
							e.partialFlush(t)
						});
						this.on("endedtimeline", function(t) {
							e.endTimeline(t)
						});
						this.on("reset", function(t) {
							e.reset(t)
						});
						return e
					};
					e.prototype.push = function(e) {
						this.trigger("data", e)
					};
					e.prototype.flush = function(e) {
						this.trigger("done", e)
					};
					e.prototype.partialFlush = function(e) {
						this.trigger("partialdone", e)
					};
					e.prototype.endTimeline = function(e) {
						this.trigger("endedtimeline", e)
					};
					e.prototype.reset = function(e) {
						this.trigger("reset", e)
					};
					var t = e;
					var i = Math.pow(2, 32) - 1;
					var r, a, s, o, l, u, c, d, f, p, h, v, g, m, y, _, b, A, S, T, k, E, P, C, w, j, I, L, O, N, x, D, R, U, M, B;
					(function() {
						var e;
						P = {
							avc1: [],
							avcC: [],
							btrt: [],
							dinf: [],
							dref: [],
							esds: [],
							ftyp: [],
							hdlr: [],
							mdat: [],
							mdhd: [],
							mdia: [],
							mfhd: [],
							minf: [],
							moof: [],
							moov: [],
							mp4a: [],
							mvex: [],
							mvhd: [],
							pasp: [],
							sdtp: [],
							smhd: [],
							stbl: [],
							stco: [],
							stsc: [],
							stsd: [],
							stsz: [],
							stts: [],
							styp: [],
							tfdt: [],
							tfhd: [],
							traf: [],
							trak: [],
							trun: [],
							trex: [],
							tkhd: [],
							vmhd: []
						};
						if(typeof Uint8Array === "undefined") {
							return
						}
						for(e in P) {
							if(P.hasOwnProperty(e)) {
								P[e] = [e.charCodeAt(0), e.charCodeAt(1), e.charCodeAt(2), e.charCodeAt(3)]
							}
						}
						C = new Uint8Array(["i".charCodeAt(0), "s".charCodeAt(0), "o".charCodeAt(0), "m".charCodeAt(0)]);
						j = new Uint8Array(["a".charCodeAt(0), "v".charCodeAt(0), "c".charCodeAt(0), "1".charCodeAt(0)]);
						w = new Uint8Array([0, 0, 0, 1]);
						I = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 105, 100, 101, 111, 72, 97, 110, 100, 108, 101, 114, 0]);
						L = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0]);
						O = {
							video: I,
							audio: L
						};
						D = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1]);
						x = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]);
						R = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]);
						U = R;
						M = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
						B = R;
						N = new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0])
					})();
					r = function e(t) {
						var n = [],
							i = 0,
							r, a, s;
						for(r = 1; r < arguments.length; r++) {
							n.push(arguments[r])
						}
						r = n.length;
						while(r--) {
							i += n[r].byteLength
						}
						a = new Uint8Array(i + 8);
						s = new DataView(a.buffer, a.byteOffset, a.byteLength);
						s.setUint32(0, a.byteLength);
						a.set(t, 4);
						for(r = 0, i = 8; r < n.length; r++) {
							a.set(n[r], i);
							i += n[r].byteLength
						}
						return a
					};
					a = function e() {
						return r(P.dinf, r(P.dref, D))
					};
					s = function e(t) {
						return r(P.esds, new Uint8Array([0, 0, 0, 0, 3, 25, 0, 0, 0, 4, 17, 64, 21, 0, 6, 0, 0, 0, 218, 192, 0, 0, 218, 192, 5, 2, t.audioobjecttype << 3 | t.samplingfrequencyindex >>> 1, t.samplingfrequencyindex << 7 | t.channelcount << 3, 6, 1, 2]))
					};
					o = function e() {
						return r(P.ftyp, C, w, C, j)
					};
					_ = function e(t) {
						return r(P.hdlr, O[t])
					};
					l = function e(t) {
						return r(P.mdat, t)
					};
					y = function e(t) {
						var n = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 3, 0, 1, 95, 144, t.duration >>> 24 & 255, t.duration >>> 16 & 255, t.duration >>> 8 & 255, t.duration & 255, 85, 196, 0, 0]);
						if(t.samplerate) {
							n[12] = t.samplerate >>> 24 & 255;
							n[13] = t.samplerate >>> 16 & 255;
							n[14] = t.samplerate >>> 8 & 255;
							n[15] = t.samplerate & 255
						}
						return r(P.mdhd, n)
					};
					m = function e(t) {
						return r(P.mdia, y(t), _(t.type), c(t))
					};
					u = function e(t) {
						return r(P.mfhd, new Uint8Array([0, 0, 0, 0, (t & 4278190080) >> 24, (t & 16711680) >> 16, (t & 65280) >> 8, t & 255]))
					};
					c = function e(t) {
						return r(P.minf, t.type === "video" ? r(P.vmhd, N) : r(P.smhd, x), a(), A(t))
					};
					d = function e(t, n) {
						var i = [],
							a = n.length;
						while(a--) {
							i[a] = T(n[a])
						}
						return r.apply(null, [P.moof, u(t)].concat(i))
					};
					f = function e(t) {
						var n = t.length,
							i = [];
						while(n--) {
							i[n] = v(t[n])
						}
						return r.apply(null, [P.moov, h(4294967295)].concat(i).concat(p(t)))
					};
					p = function e(t) {
						var n = t.length,
							i = [];
						while(n--) {
							i[n] = k(t[n])
						}
						return r.apply(null, [P.mvex].concat(i))
					};
					h = function e(t) {
						var n = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 95, 144, (t & 4278190080) >> 24, (t & 16711680) >> 16, (t & 65280) >> 8, t & 255, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255]);
						return r(P.mvhd, n)
					};
					b = function e(t) {
						var n = t.samples || [],
							i = new Uint8Array(4 + n.length),
							a, s;
						for(s = 0; s < n.length; s++) {
							a = n[s].flags;
							i[s + 4] = a.dependsOn << 4 | a.isDependedOn << 2 | a.hasRedundancy
						}
						return r(P.sdtp, i)
					};
					A = function e(t) {
						return r(P.stbl, S(t), r(P.stts, B), r(P.stsc, U), r(P.stsz, M), r(P.stco, R))
					};
					(function() {
						var e, t;
						S = function n(i) {
							return r(P.stsd, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1]), i.type === "video" ? e(i) : t(i))
						};
						e = function e(t) {
							var n = t.sps || [],
								i = t.pps || [],
								a = [],
								s = [],
								o, l;
							for(o = 0; o < n.length; o++) {
								a.push((n[o].byteLength & 65280) >>> 8);
								a.push(n[o].byteLength & 255);
								a = a.concat(Array.prototype.slice.call(n[o]))
							}
							for(o = 0; o < i.length; o++) {
								s.push((i[o].byteLength & 65280) >>> 8);
								s.push(i[o].byteLength & 255);
								s = s.concat(Array.prototype.slice.call(i[o]))
							}
							l = [P.avc1, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (t.width & 65280) >> 8, t.width & 255, (t.height & 65280) >> 8, t.height & 255, 0, 72, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 1, 19, 118, 105, 100, 101, 111, 106, 115, 45, 99, 111, 110, 116, 114, 105, 98, 45, 104, 108, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 17, 17]), r(P.avcC, new Uint8Array([1, t.profileIdc, t.profileCompatibility, t.levelIdc, 255].concat([n.length], a, [i.length], s))), r(P.btrt, new Uint8Array([0, 28, 156, 128, 0, 45, 198, 192, 0, 45, 198, 192]))];
							if(t.sarRatio) {
								var u = t.sarRatio[0],
									c = t.sarRatio[1];
								l.push(r(P.pasp, new Uint8Array([(u & 4278190080) >> 24, (u & 16711680) >> 16, (u & 65280) >> 8, u & 255, (c & 4278190080) >> 24, (c & 16711680) >> 16, (c & 65280) >> 8, c & 255])))
							}
							return r.apply(null, l)
						};
						t = function e(t) {
							return r(P.mp4a, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, (t.channelcount & 65280) >> 8, t.channelcount & 255, (t.samplesize & 65280) >> 8, t.samplesize & 255, 0, 0, 0, 0, (t.samplerate & 65280) >> 8, t.samplerate & 255, 0, 0]), s(t))
						}
					})();
					g = function e(t) {
						var n = new Uint8Array([0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, (t.id & 4278190080) >> 24, (t.id & 16711680) >> 16, (t.id & 65280) >> 8, t.id & 255, 0, 0, 0, 0, (t.duration & 4278190080) >> 24, (t.duration & 16711680) >> 16, (t.duration & 65280) >> 8, t.duration & 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, (t.width & 65280) >> 8, t.width & 255, 0, 0, (t.height & 65280) >> 8, t.height & 255, 0, 0]);
						return r(P.tkhd, n)
					};
					T = function e(t) {
						var n, a, s, o, l, u, c;
						n = r(P.tfhd, new Uint8Array([0, 0, 0, 58, (t.id & 4278190080) >> 24, (t.id & 16711680) >> 16, (t.id & 65280) >> 8, t.id & 255, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));
						u = Math.floor(t.baseMediaDecodeTime / (i + 1));
						c = Math.floor(t.baseMediaDecodeTime % (i + 1));
						a = r(P.tfdt, new Uint8Array([1, 0, 0, 0, u >>> 24 & 255, u >>> 16 & 255, u >>> 8 & 255, u & 255, c >>> 24 & 255, c >>> 16 & 255, c >>> 8 & 255, c & 255]));
						l = 32 + 20 + 8 + 16 + 8 + 8;
						if(t.type === "audio") {
							s = E(t, l);
							return r(P.traf, n, a, s)
						}
						o = b(t);
						s = E(t, o.length + l);
						return r(P.traf, n, a, s, o)
					};
					v = function e(t) {
						t.duration = t.duration || 4294967295;
						return r(P.trak, g(t), m(t))
					};
					k = function e(t) {
						var n = new Uint8Array([0, 0, 0, 0, (t.id & 4278190080) >> 24, (t.id & 16711680) >> 16, (t.id & 65280) >> 8, t.id & 255, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]);
						if(t.type !== "video") {
							n[n.length - 1] = 0
						}
						return r(P.trex, n)
					};
					(function() {
						var e, t, n;
						n = function e(t, n) {
							var i = 0,
								r = 0,
								a = 0,
								s = 0;
							if(t.length) {
								if(t[0].duration !== undefined) {
									i = 1
								}
								if(t[0].size !== undefined) {
									r = 2
								}
								if(t[0].flags !== undefined) {
									a = 4
								}
								if(t[0].compositionTimeOffset !== undefined) {
									s = 8
								}
							}
							return [0, 0, i | r | a | s, 1, (t.length & 4278190080) >>> 24, (t.length & 16711680) >>> 16, (t.length & 65280) >>> 8, t.length & 255, (n & 4278190080) >>> 24, (n & 16711680) >>> 16, (n & 65280) >>> 8, n & 255]
						};
						t = function e(t, i) {
							var a, s, o, l;
							s = t.samples || [];
							i += 8 + 12 + 16 * s.length;
							a = n(s, i);
							for(l = 0; l < s.length; l++) {
								o = s[l];
								a = a.concat([(o.duration & 4278190080) >>> 24, (o.duration & 16711680) >>> 16, (o.duration & 65280) >>> 8, o.duration & 255, (o.size & 4278190080) >>> 24, (o.size & 16711680) >>> 16, (o.size & 65280) >>> 8, o.size & 255, o.flags.isLeading << 2 | o.flags.dependsOn, o.flags.isDependedOn << 6 | o.flags.hasRedundancy << 4 | o.flags.paddingValue << 1 | o.flags.isNonSyncSample, o.flags.degradationPriority & 240 << 8, o.flags.degradationPriority & 15, (o.compositionTimeOffset & 4278190080) >>> 24, (o.compositionTimeOffset & 16711680) >>> 16, (o.compositionTimeOffset & 65280) >>> 8, o.compositionTimeOffset & 255])
							}
							return r(P.trun, new Uint8Array(a))
						};
						e = function e(t, i) {
							var a, s, o, l;
							s = t.samples || [];
							i += 8 + 12 + 8 * s.length;
							a = n(s, i);
							for(l = 0; l < s.length; l++) {
								o = s[l];
								a = a.concat([(o.duration & 4278190080) >>> 24, (o.duration & 16711680) >>> 16, (o.duration & 65280) >>> 8, o.duration & 255, (o.size & 4278190080) >>> 24, (o.size & 16711680) >>> 16, (o.size & 65280) >>> 8, o.size & 255])
							}
							return r(P.trun, new Uint8Array(a))
						};
						E = function n(i, r) {
							if(i.type === "audio") {
								return e(i, r)
							}
							return t(i, r)
						}
					})();
					var F = {
						ftyp: o,
						mdat: l,
						moof: d,
						moov: f,
						initSegment: function e(t) {
							var n = o(),
								i = f(t),
								r;
							r = new Uint8Array(n.byteLength + i.byteLength);
							r.set(n);
							r.set(i, n.byteLength);
							return r
						}
					};
					var V = function e(t) {
						var n, i, r = [],
							a = [];
						a.byteLength = 0;
						a.nalCount = 0;
						a.duration = 0;
						r.byteLength = 0;
						for(n = 0; n < t.length; n++) {
							i = t[n];
							if(i.nalUnitType === "access_unit_delimiter_rbsp") {
								if(r.length) {
									r.duration = i.dts - r.dts;
									a.byteLength += r.byteLength;
									a.nalCount += r.length;
									a.duration += r.duration;
									a.push(r)
								}
								r = [i];
								r.byteLength = i.data.byteLength;
								r.pts = i.pts;
								r.dts = i.dts
							} else {
								if(i.nalUnitType === "slice_layer_without_partitioning_rbsp_idr") {
									r.keyFrame = true
								}
								r.duration = i.dts - r.dts;
								r.byteLength += i.data.byteLength;
								r.push(i)
							}
						}
						if(a.length && (!r.duration || r.duration <= 0)) {
							r.duration = a[a.length - 1].duration
						}
						a.byteLength += r.byteLength;
						a.nalCount += r.length;
						a.duration += r.duration;
						a.push(r);
						return a
					};
					var q = function e(t) {
						var n, i, r = [],
							a = [];
						r.byteLength = 0;
						r.nalCount = 0;
						r.duration = 0;
						r.pts = t[0].pts;
						r.dts = t[0].dts;
						a.byteLength = 0;
						a.nalCount = 0;
						a.duration = 0;
						a.pts = t[0].pts;
						a.dts = t[0].dts;
						for(n = 0; n < t.length; n++) {
							i = t[n];
							if(i.keyFrame) {
								if(r.length) {
									a.push(r);
									a.byteLength += r.byteLength;
									a.nalCount += r.nalCount;
									a.duration += r.duration
								}
								r = [i];
								r.nalCount = i.length;
								r.byteLength = i.byteLength;
								r.pts = i.pts;
								r.dts = i.dts;
								r.duration = i.duration
							} else {
								r.duration += i.duration;
								r.nalCount += i.length;
								r.byteLength += i.byteLength;
								r.push(i)
							}
						}
						if(a.length && r.duration <= 0) {
							r.duration = a[a.length - 1].duration
						}
						a.byteLength += r.byteLength;
						a.nalCount += r.nalCount;
						a.duration += r.duration;
						a.push(r);
						return a
					};
					var H = function e(t) {
						var n;
						if(!t[0][0].keyFrame && t.length > 1) {
							n = t.shift();
							t.byteLength -= n.byteLength;
							t.nalCount -= n.nalCount;
							t[0][0].dts = n.dts;
							t[0][0].pts = n.pts;
							t[0][0].duration += n.duration
						}
						return t
					};
					var G = function e() {
						return {
							size: 0,
							flags: {
								isLeading: 0,
								dependsOn: 1,
								isDependedOn: 0,
								hasRedundancy: 0,
								degradationPriority: 0,
								isNonSyncSample: 1
							}
						}
					};
					var Y = function e(t, n) {
						var i = G();
						i.dataOffset = n;
						i.compositionTimeOffset = t.pts - t.dts;
						i.duration = t.duration;
						i.size = 4 * t.length;
						i.size += t.byteLength;
						if(t.keyFrame) {
							i.flags.dependsOn = 2;
							i.flags.isNonSyncSample = 0
						}
						return i
					};
					var z = function e(t, n) {
						var i, r, a, s, o, l = n || 0,
							u = [];
						for(i = 0; i < t.length; i++) {
							s = t[i];
							for(r = 0; r < s.length; r++) {
								o = s[r];
								a = Y(o, l);
								l += a.size;
								u.push(a)
							}
						}
						return u
					};
					var K = function e(t) {
						var n, i, r, a, s, o, l = 0,
							u = t.byteLength,
							c = t.nalCount,
							d = u + 4 * c,
							f = new Uint8Array(d),
							p = new DataView(f.buffer);
						for(n = 0; n < t.length; n++) {
							a = t[n];
							for(i = 0; i < a.length; i++) {
								s = a[i];
								for(r = 0; r < s.length; r++) {
									o = s[r];
									p.setUint32(l, o.data.byteLength);
									l += 4;
									f.set(o.data, l);
									l += o.data.byteLength
								}
							}
						}
						return f
					};
					var W = function e(t, n) {
						var i, r = n || 0,
							a = [];
						i = Y(t, r);
						a.push(i);
						return a
					};
					var X = function e(t) {
						var n, i, r = 0,
							a = t.byteLength,
							s = t.length,
							o = a + 4 * s,
							l = new Uint8Array(o),
							u = new DataView(l.buffer);
						for(n = 0; n < t.length; n++) {
							i = t[n];
							u.setUint32(r, i.data.byteLength);
							r += 4;
							l.set(i.data, r);
							r += i.data.byteLength
						}
						return l
					};
					var J = {
						groupNalsIntoFrames: V,
						groupFramesIntoGops: q,
						extendFirstKeyFrame: H,
						generateSampleTable: z,
						concatenateNalData: K,
						generateSampleTableForFrame: W,
						concatenateNalDataForFrame: X
					};
					var Q = [33, 16, 5, 32, 164, 27];
					var Z = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];
					var $ = function e(t) {
						var n = [];
						while(t--) {
							n.push(0)
						}
						return n
					};
					var ee = function e(t) {
						return Object.keys(t).reduce(function(e, n) {
							e[n] = new Uint8Array(t[n].reduce(function(e, t) {
								return e.concat(t)
							}, []));
							return e
						}, {})
					};
					var te = {
						96000: [Q, [227, 64], $(154), [56]],
						88200: [Q, [231], $(170), [56]],
						64000: [Q, [248, 192], $(240), [56]],
						48000: [Q, [255, 192], $(268), [55, 148, 128], $(54), [112]],
						44100: [Q, [255, 192], $(268), [55, 163, 128], $(84), [112]],
						32000: [Q, [255, 192], $(268), [55, 234], $(226), [112]],
						24000: [Q, [255, 192], $(268), [55, 255, 128], $(268), [111, 112], $(126), [224]],
						16000: [Q, [255, 192], $(268), [55, 255, 128], $(268), [111, 255], $(269), [223, 108], $(195), [1, 192]],
						12000: [Z, $(268), [3, 127, 248], $(268), [6, 255, 240], $(268), [13, 255, 224], $(268), [27, 253, 128], $(259), [56]],
						11025: [Z, $(268), [3, 127, 248], $(268), [6, 255, 240], $(268), [13, 255, 224], $(268), [27, 255, 192], $(268), [55, 175, 128], $(108), [112]],
						8000: [Z, $(268), [3, 121, 16], $(47), [7]]
					};
					var ne = ee(te);
					var ie = 9e4,
						re, ae, se, oe, le, ue, ce;
					re = function e(t) {
						return t * ie
					};
					ae = function e(t, n) {
						return t * n
					};
					se = function e(t) {
						return t / ie
					};
					oe = function e(t, n) {
						return t / n
					};
					le = function e(t, n) {
						return re(oe(t, n))
					};
					ue = function e(t, n) {
						return ae(se(t), n)
					};
					ce = function e(t, n, i) {
						return se(i ? t : t - n)
					};
					var de = {
						ONE_SECOND_IN_TS: ie,
						secondsToVideoTs: re,
						secondsToAudioTs: ae,
						videoTsToSeconds: se,
						audioTsToSeconds: oe,
						audioTsToVideoTs: le,
						videoTsToAudioTs: ue,
						metadataTsToSeconds: ce
					};
					var fe = function e(t) {
						var n, i, r = 0;
						for(n = 0; n < t.length; n++) {
							i = t[n];
							r += i.data.byteLength
						}
						return r
					};
					var pe = function e(t, n, i, r) {
						var a, s = 0,
							o = 0,
							l = 0,
							u = 0,
							c, d, f;
						if(!n.length) {
							return
						}
						a = de.audioTsToVideoTs(t.baseMediaDecodeTime, t.samplerate);
						s = Math.ceil(de.ONE_SECOND_IN_TS / (t.samplerate / 1024));
						if(i && r) {
							o = a - Math.max(i, r);
							l = Math.floor(o / s);
							u = l * s
						}
						if(l < 1 || u > de.ONE_SECOND_IN_TS / 2) {
							return
						}
						c = ne[t.samplerate];
						if(!c) {
							c = n[0].data
						}
						for(d = 0; d < l; d++) {
							f = n[0];
							n.splice(0, 0, {
								data: c,
								dts: f.dts - s,
								pts: f.pts - s
							})
						}
						t.baseMediaDecodeTime -= Math.floor(de.videoTsToAudioTs(u, t.samplerate))
					};
					var he = function e(t, n, i) {
						if(n.minSegmentDts >= i) {
							return t
						}
						n.minSegmentDts = Infinity;
						return t.filter(function(e) {
							if(e.dts >= i) {
								n.minSegmentDts = Math.min(n.minSegmentDts, e.dts);
								n.minSegmentPts = n.minSegmentDts;
								return true
							}
							return false
						})
					};
					var ve = function e(t) {
						var n, i, r = [];
						for(n = 0; n < t.length; n++) {
							i = t[n];
							r.push({
								size: i.data.byteLength,
								duration: 1024
							})
						}
						return r
					};
					var ge = function e(t) {
						var n, i, r = 0,
							a = new Uint8Array(fe(t));
						for(n = 0; n < t.length; n++) {
							i = t[n];
							a.set(i.data, r);
							r += i.data.byteLength
						}
						return a
					};
					var me = {
						prefixWithSilence: pe,
						trimAdtsFramesByEarliestDts: he,
						generateSampleTable: ve,
						concatenateFrameData: ge
					};
					var ye = de.ONE_SECOND_IN_TS;
					var _e = function e(t, n) {
						if(typeof n.pts === "number") {
							if(t.timelineStartInfo.pts === undefined) {
								t.timelineStartInfo.pts = n.pts
							}
							if(t.minSegmentPts === undefined) {
								t.minSegmentPts = n.pts
							} else {
								t.minSegmentPts = Math.min(t.minSegmentPts, n.pts)
							}
							if(t.maxSegmentPts === undefined) {
								t.maxSegmentPts = n.pts
							} else {
								t.maxSegmentPts = Math.max(t.maxSegmentPts, n.pts)
							}
						}
						if(typeof n.dts === "number") {
							if(t.timelineStartInfo.dts === undefined) {
								t.timelineStartInfo.dts = n.dts
							}
							if(t.minSegmentDts === undefined) {
								t.minSegmentDts = n.dts
							} else {
								t.minSegmentDts = Math.min(t.minSegmentDts, n.dts)
							}
							if(t.maxSegmentDts === undefined) {
								t.maxSegmentDts = n.dts
							} else {
								t.maxSegmentDts = Math.max(t.maxSegmentDts, n.dts)
							}
						}
					};
					var be = function e(t) {
						delete t.minSegmentDts;
						delete t.maxSegmentDts;
						delete t.minSegmentPts;
						delete t.maxSegmentPts
					};
					var Ae = function e(t, n) {
						var i, r, a = t.minSegmentDts;
						if(!n) {
							a -= t.timelineStartInfo.dts
						}
						i = t.timelineStartInfo.baseMediaDecodeTime;
						i += a;
						i = Math.max(0, i);
						if(t.type === "audio") {
							r = t.samplerate / ye;
							i *= r;
							i = Math.floor(i)
						}
						return i
					};
					var Se = {
						clearDtsInfo: be,
						calculateTrackBaseMediaDecodeTime: Ae,
						collectDtsInfo: _e
					};
					var Te = 4,
						ke = 128;
					var Ee = function e(t) {
						var n = 0,
							i = {
								payloadType: -1,
								payloadSize: 0
							},
							r = 0,
							a = 0;
						while(n < t.byteLength) {
							if(t[n] === ke) {
								break
							}
							while(t[n] === 255) {
								r += 255;
								n++
							}
							r += t[n++];
							while(t[n] === 255) {
								a += 255;
								n++
							}
							a += t[n++];
							if(!i.payload && r === Te) {
								i.payloadType = r;
								i.payloadSize = a;
								i.payload = t.subarray(n, n + a);
								break
							}
							n += a;
							r = 0;
							a = 0
						}
						return i
					};
					var Pe = function e(t) {
						if(t.payload[0] !== 181) {
							return null
						}
						if((t.payload[1] << 8 | t.payload[2]) !== 49) {
							return null
						}
						if(String.fromCharCode(t.payload[3], t.payload[4], t.payload[5], t.payload[6]) !== "GA94") {
							return null
						}
						if(t.payload[7] !== 3) {
							return null
						}
						return t.payload.subarray(8, t.payload.length - 1)
					};
					var Ce = function e(t, n) {
						var i = [],
							r, a, s, o;
						if(!(n[0] & 64)) {
							return i
						}
						a = n[0] & 31;
						for(r = 0; r < a; r++) {
							s = r * 3;
							o = {
								type: n[s + 2] & 3,
								pts: t
							};
							if(n[s + 2] & 4) {
								o.ccData = n[s + 3] << 8 | n[s + 4];
								i.push(o)
							}
						}
						return i
					};
					var we = function e(t) {
						var n = t.byteLength,
							i = [],
							r = 1,
							a, s;
						while(r < n - 2) {
							if(t[r] === 0 && t[r + 1] === 0 && t[r + 2] === 3) {
								i.push(r + 2);
								r += 2
							} else {
								r++
							}
						}
						if(i.length === 0) {
							return t
						}
						a = n - i.length;
						s = new Uint8Array(a);
						var o = 0;
						for(r = 0; r < a; o++, r++) {
							if(o === i[0]) {
								o++;
								i.shift()
							}
							s[r] = t[o]
						}
						return s
					};
					var je = {
						parseSei: Ee,
						parseUserData: Pe,
						parseCaptionPackets: Ce,
						discardEmulationPreventionBytes: we,
						USER_DATA_REGISTERED_ITU_T_T35: Te
					};
					var Ie = function e() {
						e.prototype.init.call(this);
						this.captionPackets_ = [];
						this.ccStreams_ = [new Re(0, 0), new Re(0, 1), new Re(1, 0), new Re(1, 1)];
						this.reset();
						this.ccStreams_.forEach(function(e) {
							e.on("data", this.trigger.bind(this, "data"));
							e.on("partialdone", this.trigger.bind(this, "partialdone"));
							e.on("done", this.trigger.bind(this, "done"))
						}, this)
					};
					Ie.prototype = new t;
					Ie.prototype.push = function(e) {
						var t, n, i;
						if(e.nalUnitType !== "sei_rbsp") {
							return
						}
						t = je.parseSei(e.escapedRBSP);
						if(t.payloadType !== je.USER_DATA_REGISTERED_ITU_T_T35) {
							return
						}
						n = je.parseUserData(t);
						if(!n) {
							return
						}
						if(e.dts < this.latestDts_) {
							this.ignoreNextEqualDts_ = true;
							return
						} else if(e.dts === this.latestDts_ && this.ignoreNextEqualDts_) {
							this.numSameDts_--;
							if(!this.numSameDts_) {
								this.ignoreNextEqualDts_ = false
							}
							return
						}
						i = je.parseCaptionPackets(e.pts, n);
						this.captionPackets_ = this.captionPackets_.concat(i);
						if(this.latestDts_ !== e.dts) {
							this.numSameDts_ = 0
						}
						this.numSameDts_++;
						this.latestDts_ = e.dts
					};
					Ie.prototype.flushCCStreams = function(e) {
						this.ccStreams_.forEach(function(t) {
							return e === "flush" ? t.flush() : t.partialFlush()
						}, this)
					};
					Ie.prototype.flushStream = function(e) {
						if(!this.captionPackets_.length) {
							this.flushCCStreams(e);
							return
						}
						this.captionPackets_.forEach(function(e, t) {
							e.presortIndex = t
						});
						this.captionPackets_.sort(function(e, t) {
							if(e.pts === t.pts) {
								return e.presortIndex - t.presortIndex
							}
							return e.pts - t.pts
						});
						this.captionPackets_.forEach(function(e) {
							if(e.type < 2) {
								this.dispatchCea608Packet(e)
							}
						}, this);
						this.captionPackets_.length = 0;
						this.flushCCStreams(e)
					};
					Ie.prototype.flush = function() {
						return this.flushStream("flush")
					};
					Ie.prototype.partialFlush = function() {
						return this.flushStream("partialFlush")
					};
					Ie.prototype.reset = function() {
						this.latestDts_ = null;
						this.ignoreNextEqualDts_ = false;
						this.numSameDts_ = 0;
						this.activeCea608Channel_ = [null, null];
						this.ccStreams_.forEach(function(e) {
							e.reset()
						})
					};
					Ie.prototype.dispatchCea608Packet = function(e) {
						if(this.setsTextOrXDSActive(e)) {
							this.activeCea608Channel_[e.type] = null
						} else if(this.setsChannel1Active(e)) {
							this.activeCea608Channel_[e.type] = 0
						} else if(this.setsChannel2Active(e)) {
							this.activeCea608Channel_[e.type] = 1
						}
						if(this.activeCea608Channel_[e.type] === null) {
							return
						}
						this.ccStreams_[(e.type << 1) + this.activeCea608Channel_[e.type]].push(e)
					};
					Ie.prototype.setsChannel1Active = function(e) {
						return(e.ccData & 30720) === 4096
					};
					Ie.prototype.setsChannel2Active = function(e) {
						return(e.ccData & 30720) === 6144
					};
					Ie.prototype.setsTextOrXDSActive = function(e) {
						return(e.ccData & 28928) === 256 || (e.ccData & 30974) === 4138 || (e.ccData & 30974) === 6186
					};
					var Le = {
						42: 225,
						92: 233,
						94: 237,
						95: 243,
						96: 250,
						123: 231,
						124: 247,
						125: 209,
						126: 241,
						127: 9608,
						304: 174,
						305: 176,
						306: 189,
						307: 191,
						308: 8482,
						309: 162,
						310: 163,
						311: 9834,
						312: 224,
						313: 160,
						314: 232,
						315: 226,
						316: 234,
						317: 238,
						318: 244,
						319: 251,
						544: 193,
						545: 201,
						546: 211,
						547: 218,
						548: 220,
						549: 252,
						550: 8216,
						551: 161,
						552: 42,
						553: 39,
						554: 8212,
						555: 169,
						556: 8480,
						557: 8226,
						558: 8220,
						559: 8221,
						560: 192,
						561: 194,
						562: 199,
						563: 200,
						564: 202,
						565: 203,
						566: 235,
						567: 206,
						568: 207,
						569: 239,
						570: 212,
						571: 217,
						572: 249,
						573: 219,
						574: 171,
						575: 187,
						800: 195,
						801: 227,
						802: 205,
						803: 204,
						804: 236,
						805: 210,
						806: 242,
						807: 213,
						808: 245,
						809: 123,
						810: 125,
						811: 92,
						812: 94,
						813: 95,
						814: 124,
						815: 126,
						816: 196,
						817: 228,
						818: 214,
						819: 246,
						820: 223,
						821: 165,
						822: 164,
						823: 9474,
						824: 197,
						825: 229,
						826: 216,
						827: 248,
						828: 9484,
						829: 9488,
						830: 9492,
						831: 9496
					};
					var Oe = function e(t) {
						if(t === null) {
							return ""
						}
						t = Le[t] || t;
						return String.fromCharCode(t)
					};
					var Ne = 14;
					var xe = [4352, 4384, 4608, 4640, 5376, 5408, 5632, 5664, 5888, 5920, 4096, 4864, 4896, 5120, 5152];
					var De = function e() {
						var t = [],
							n = Ne + 1;
						while(n--) {
							t.push("")
						}
						return t
					};
					var Re = function e(t, n) {
						e.prototype.init.call(this);
						this.field_ = t || 0;
						this.dataChannel_ = n || 0;
						this.name_ = "CC" + ((this.field_ << 1 | this.dataChannel_) + 1);
						this.setConstants();
						this.reset();
						this.push = function(e) {
							var t, n, i, r, a;
							t = e.ccData & 32639;
							if(t === this.lastControlCode_) {
								this.lastControlCode_ = null;
								return
							}
							if((t & 61440) === 4096) {
								this.lastControlCode_ = t
							} else if(t !== this.PADDING_) {
								this.lastControlCode_ = null
							}
							i = t >>> 8;
							r = t & 255;
							if(t === this.PADDING_) {
								return
							} else if(t === this.RESUME_CAPTION_LOADING_) {
								this.mode_ = "popOn"
							} else if(t === this.END_OF_CAPTION_) {
								this.mode_ = "popOn";
								this.clearFormatting(e.pts);
								this.flushDisplayed(e.pts);
								n = this.displayed_;
								this.displayed_ = this.nonDisplayed_;
								this.nonDisplayed_ = n;
								this.startPts_ = e.pts
							} else if(t === this.ROLL_UP_2_ROWS_) {
								this.rollUpRows_ = 2;
								this.setRollUp(e.pts)
							} else if(t === this.ROLL_UP_3_ROWS_) {
								this.rollUpRows_ = 3;
								this.setRollUp(e.pts)
							} else if(t === this.ROLL_UP_4_ROWS_) {
								this.rollUpRows_ = 4;
								this.setRollUp(e.pts)
							} else if(t === this.CARRIAGE_RETURN_) {
								this.clearFormatting(e.pts);
								this.flushDisplayed(e.pts);
								this.shiftRowsUp_();
								this.startPts_ = e.pts
							} else if(t === this.BACKSPACE_) {
								if(this.mode_ === "popOn") {
									this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1)
								} else {
									this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1)
								}
							} else if(t === this.ERASE_DISPLAYED_MEMORY_) {
								this.flushDisplayed(e.pts);
								this.displayed_ = De()
							} else if(t === this.ERASE_NON_DISPLAYED_MEMORY_) {
								this.nonDisplayed_ = De()
							} else if(t === this.RESUME_DIRECT_CAPTIONING_) {
								if(this.mode_ !== "paintOn") {
									this.flushDisplayed(e.pts);
									this.displayed_ = De()
								}
								this.mode_ = "paintOn";
								this.startPts_ = e.pts
							} else if(this.isSpecialCharacter(i, r)) {
								i = (i & 3) << 8;
								a = Oe(i | r);
								this[this.mode_](e.pts, a);
								this.column_++
							} else if(this.isExtCharacter(i, r)) {
								if(this.mode_ === "popOn") {
									this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1)
								} else {
									this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1)
								}
								i = (i & 3) << 8;
								a = Oe(i | r);
								this[this.mode_](e.pts, a);
								this.column_++
							} else if(this.isMidRowCode(i, r)) {
								this.clearFormatting(e.pts);
								this[this.mode_](e.pts, " ");
								this.column_++;
								if((r & 14) === 14) {
									this.addFormatting(e.pts, ["i"])
								}
								if((r & 1) === 1) {
									this.addFormatting(e.pts, ["u"])
								}
							} else if(this.isOffsetControlCode(i, r)) {
								this.column_ += r & 3
							} else if(this.isPAC(i, r)) {
								var s = xe.indexOf(t & 7968);
								if(this.mode_ === "rollUp") {
									if(s - this.rollUpRows_ + 1 < 0) {
										s = this.rollUpRows_ - 1
									}
									this.setRollUp(e.pts, s)
								}
								if(s !== this.row_) {
									this.clearFormatting(e.pts);
									this.row_ = s
								}
								if(r & 1 && this.formatting_.indexOf("u") === -1) {
									this.addFormatting(e.pts, ["u"])
								}
								if((t & 16) === 16) {
									this.column_ = ((t & 14) >> 1) * 4
								}
								if(this.isColorPAC(r)) {
									if((r & 14) === 14) {
										this.addFormatting(e.pts, ["i"])
									}
								}
							} else if(this.isNormalChar(i)) {
								if(r === 0) {
									r = null
								}
								a = Oe(i);
								a += Oe(r);
								this[this.mode_](e.pts, a);
								this.column_ += a.length
							}
						}
					};
					Re.prototype = new t;
					Re.prototype.flushDisplayed = function(e) {
						var t = this.displayed_.map(function(e) {
							try {
								return e.trim()
							} catch(e) {
								console.error("Skipping malformed caption.");
								return ""
							}
						}).join("\n").replace(/^\n+|\n+$/g, "");
						if(t.length) {
							this.trigger("data", {
								startPts: this.startPts_,
								endPts: e,
								text: t,
								stream: this.name_
							})
						}
					};
					Re.prototype.reset = function() {
						this.mode_ = "popOn";
						this.topRow_ = 0;
						this.startPts_ = 0;
						this.displayed_ = De();
						this.nonDisplayed_ = De();
						this.lastControlCode_ = null;
						this.column_ = 0;
						this.row_ = Ne;
						this.rollUpRows_ = 2;
						this.formatting_ = []
					};
					Re.prototype.setConstants = function() {
						if(this.dataChannel_ === 0) {
							this.BASE_ = 16;
							this.EXT_ = 17;
							this.CONTROL_ = (20 | this.field_) << 8;
							this.OFFSET_ = 23
						} else if(this.dataChannel_ === 1) {
							this.BASE_ = 24;
							this.EXT_ = 25;
							this.CONTROL_ = (28 | this.field_) << 8;
							this.OFFSET_ = 31
						}
						this.PADDING_ = 0;
						this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 32;
						this.END_OF_CAPTION_ = this.CONTROL_ | 47;
						this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 37;
						this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 38;
						this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 39;
						this.CARRIAGE_RETURN_ = this.CONTROL_ | 45;
						this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 41;
						this.BACKSPACE_ = this.CONTROL_ | 33;
						this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 44;
						this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 46
					};
					Re.prototype.isSpecialCharacter = function(e, t) {
						return e === this.EXT_ && t >= 48 && t <= 63
					};
					Re.prototype.isExtCharacter = function(e, t) {
						return(e === this.EXT_ + 1 || e === this.EXT_ + 2) && t >= 32 && t <= 63
					};
					Re.prototype.isMidRowCode = function(e, t) {
						return e === this.EXT_ && t >= 32 && t <= 47
					};
					Re.prototype.isOffsetControlCode = function(e, t) {
						return e === this.OFFSET_ && t >= 33 && t <= 35
					};
					Re.prototype.isPAC = function(e, t) {
						return e >= this.BASE_ && e < this.BASE_ + 8 && t >= 64 && t <= 127
					};
					Re.prototype.isColorPAC = function(e) {
						return e >= 64 && e <= 79 || e >= 96 && e <= 127
					};
					Re.prototype.isNormalChar = function(e) {
						return e >= 32 && e <= 127
					};
					Re.prototype.setRollUp = function(e, t) {
						if(this.mode_ !== "rollUp") {
							this.row_ = Ne;
							this.mode_ = "rollUp";
							this.flushDisplayed(e);
							this.nonDisplayed_ = De();
							this.displayed_ = De()
						}
						if(t !== undefined && t !== this.row_) {
							for(var n = 0; n < this.rollUpRows_; n++) {
								this.displayed_[t - n] = this.displayed_[this.row_ - n];
								this.displayed_[this.row_ - n] = ""
							}
						}
						if(t === undefined) {
							t = this.row_
						}
						this.topRow_ = t - this.rollUpRows_ + 1
					};
					Re.prototype.addFormatting = function(e, t) {
						this.formatting_ = this.formatting_.concat(t);
						var n = t.reduce(function(e, t) {
							return e + "<" + t + ">"
						}, "");
						this[this.mode_](e, n)
					};
					Re.prototype.clearFormatting = function(e) {
						if(!this.formatting_.length) {
							return
						}
						var t = this.formatting_.reverse().reduce(function(e, t) {
							return e + "</" + t + ">"
						}, "");
						this.formatting_ = [];
						this[this.mode_](e, t)
					};
					Re.prototype.popOn = function(e, t) {
						var n = this.nonDisplayed_[this.row_];
						n += t;
						this.nonDisplayed_[this.row_] = n
					};
					Re.prototype.rollUp = function(e, t) {
						var n = this.displayed_[this.row_];
						n += t;
						this.displayed_[this.row_] = n
					};
					Re.prototype.shiftRowsUp_ = function() {
						var e;
						for(e = 0; e < this.topRow_; e++) {
							this.displayed_[e] = ""
						}
						for(e = this.row_ + 1; e < Ne + 1; e++) {
							this.displayed_[e] = ""
						}
						for(e = this.topRow_; e < this.row_; e++) {
							this.displayed_[e] = this.displayed_[e + 1]
						}
						this.displayed_[this.row_] = ""
					};
					Re.prototype.paintOn = function(e, t) {
						var n = this.displayed_[this.row_];
						n += t;
						this.displayed_[this.row_] = n
					};
					var Ue = {
						CaptionStream: Ie,
						Cea608Stream: Re
					};
					var Me = {
						H264_STREAM_TYPE: 27,
						ADTS_STREAM_TYPE: 15,
						METADATA_STREAM_TYPE: 21
					};
					var Be = 8589934592;
					var Fe = 4294967296;
					var Ve = "shared";
					var qe = function e(t, n) {
						var i = 1;
						if(t > n) {
							i = -1
						}
						while(Math.abs(n - t) > Fe) {
							t += i * Be
						}
						return t
					};
					var He = function e(t) {
						var n, i;
						e.prototype.init.call(this);
						this.type_ = t || Ve;
						this.push = function(e) {
							if(this.type_ !== Ve && e.type !== this.type_) {
								return
							}
							if(i === undefined) {
								i = e.dts
							}
							e.dts = qe(e.dts, i);
							e.pts = qe(e.pts, i);
							n = e.dts;
							this.trigger("data", e)
						};
						this.flush = function() {
							i = n;
							this.trigger("done")
						};
						this.endTimeline = function() {
							this.flush();
							this.trigger("endedtimeline")
						};
						this.discontinuity = function() {
							i = void 0;
							n = void 0
						};
						this.reset = function() {
							this.discontinuity();
							this.trigger("reset")
						}
					};
					He.prototype = new t;
					var Ge = {
						TimestampRolloverStream: He,
						handleRollover: qe
					};
					var Ye = function e(t, n, i) {
							var r, a = "";
							for(r = n; r < i; r++) {
								a += "%" + ("00" + t[r].toString(16)).slice(-2)
							}
							return a
						},
						ze = function e(t, n, i) {
							return decodeURIComponent(Ye(t, n, i))
						},
						Ke = function e(t, n, i) {
							return unescape(Ye(t, n, i))
						},
						We = function e(t) {
							return t[0] << 21 | t[1] << 14 | t[2] << 7 | t[3]
						},
						Xe = {
							TXXX: function e(t) {
								var n;
								if(t.data[0] !== 3) {
									return
								}
								for(n = 1; n < t.data.length; n++) {
									if(t.data[n] === 0) {
										t.description = ze(t.data, 1, n);
										t.value = ze(t.data, n + 1, t.data.length).replace(/\0*$/, "");
										break
									}
								}
								t.data = t.value
							},
							WXXX: function e(t) {
								var n;
								if(t.data[0] !== 3) {
									return
								}
								for(n = 1; n < t.data.length; n++) {
									if(t.data[n] === 0) {
										t.description = ze(t.data, 1, n);
										t.url = ze(t.data, n + 1, t.data.length);
										break
									}
								}
							},
							PRIV: function e(t) {
								var n;
								for(n = 0; n < t.data.length; n++) {
									if(t.data[n] === 0) {
										t.owner = Ke(t.data, 0, n);
										break
									}
								}
								t.privateData = t.data.subarray(n + 1);
								t.data = t.privateData
							}
						},
						Je;
					Je = function e(t) {
						var n = {
								debug: !!(t && t.debug),
								descriptor: t && t.descriptor
							},
							i = 0,
							r = [],
							a = 0,
							s;
						Je.prototype.init.call(this);
						this.dispatchType = Me.METADATA_STREAM_TYPE.toString(16);
						if(n.descriptor) {
							for(s = 0; s < n.descriptor.length; s++) {
								this.dispatchType += ("00" + n.descriptor[s].toString(16)).slice(-2)
							}
						}
						this.push = function(e) {
							var t, s, o, l, u, c;
							if(e.type !== "timed-metadata") {
								return
							}
							if(e.dataAlignmentIndicator) {
								a = 0;
								r.length = 0
							}
							if(r.length === 0 && (e.data.length < 10 || e.data[0] !== "I".charCodeAt(0) || e.data[1] !== "D".charCodeAt(0) || e.data[2] !== "3".charCodeAt(0))) {
								if(n.debug) {
									console.log("Skipping unrecognized metadata packet")
								}
								return
							}
							r.push(e);
							a += e.data.byteLength;
							if(r.length === 1) {
								i = We(e.data.subarray(6, 10));
								i += 10
							}
							if(a < i) {
								return
							}
							t = {
								data: new Uint8Array(i),
								frames: [],
								pts: r[0].pts,
								dts: r[0].dts
							};
							for(u = 0; u < i;) {
								t.data.set(r[0].data.subarray(0, i - u), u);
								u += r[0].data.byteLength;
								a -= r[0].data.byteLength;
								r.shift()
							}
							s = 10;
							if(t.data[5] & 64) {
								s += 4;
								s += We(t.data.subarray(10, 14));
								i -= We(t.data.subarray(16, 20))
							}
							do {
								o = We(t.data.subarray(s + 4, s + 8));
								if(o < 1) {
									return console.log("Malformed ID3 frame encountered. Skipping metadata parsing.")
								}
								c = String.fromCharCode(t.data[s], t.data[s + 1], t.data[s + 2], t.data[s + 3]);
								l = {
									id: c,
									data: t.data.subarray(s + 10, s + o + 10)
								};
								l.key = l.id;
								if(Xe[l.id]) {
									Xe[l.id](l);
									if(l.owner === "com.apple.streaming.transportStreamTimestamp") {
										var d = l.data,
											f = (d[3] & 1) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;
										f *= 4;
										f += d[7] & 3;
										l.timeStamp = f;
										if(t.pts === undefined && t.dts === undefined) {
											t.pts = l.timeStamp;
											t.dts = l.timeStamp
										}
										this.trigger("timestamp", l)
									}
								}
								t.frames.push(l);
								s += 10;
								s += o
							} while (s < i);
							this.trigger("data", t)
						}
					};
					Je.prototype = new t;
					var Qe = Je;
					var Ze = Ge.TimestampRolloverStream;
					var $e, et, tt;
					var nt = 188,
						it = 71;
					$e = function e() {
						var t = new Uint8Array(nt),
							n = 0;
						$e.prototype.init.call(this);
						this.push = function(e) {
							var i = 0,
								r = nt,
								a;
							if(n) {
								a = new Uint8Array(e.byteLength + n);
								a.set(t.subarray(0, n));
								a.set(e, n);
								n = 0
							} else {
								a = e
							}
							while(r < a.byteLength) {
								if(a[i] === it && a[r] === it) {
									this.trigger("data", a.subarray(i, r));
									i += nt;
									r += nt;
									continue
								}
								i++;
								r++
							}
							if(i < a.byteLength) {
								t.set(a.subarray(i), 0);
								n = a.byteLength - i
							}
						};
						this.flush = function() {
							if(n === nt && t[0] === it) {
								this.trigger("data", t);
								n = 0
							}
							this.trigger("done")
						};
						this.endTimeline = function() {
							this.flush();
							this.trigger("endedtimeline")
						};
						this.reset = function() {
							n = 0;
							this.trigger("reset")
						}
					};
					$e.prototype = new t;
					et = function e() {
						var t, n, i, r;
						et.prototype.init.call(this);
						r = this;
						this.packetsWaitingForPmt = [];
						this.programMapTable = undefined;
						t = function e(t, r) {
							var a = 0;
							if(r.payloadUnitStartIndicator) {
								a += t[a] + 1
							}
							if(r.type === "pat") {
								n(t.subarray(a), r)
							} else {
								i(t.subarray(a), r)
							}
						};
						n = function e(t, n) {
							n.section_number = t[7];
							n.last_section_number = t[8];
							r.pmtPid = (t[10] & 31) << 8 | t[11];
							n.pmtPid = r.pmtPid
						};
						i = function e(t, n) {
							var i, a, s, o;
							if(!(t[5] & 1)) {
								return
							}
							r.programMapTable = {
								video: null,
								audio: null,
								"timed-metadata": {}
							};
							i = (t[1] & 15) << 8 | t[2];
							a = 3 + i - 4;
							s = (t[10] & 15) << 8 | t[11];
							o = 12 + s;
							while(o < a) {
								var l = t[o];
								var u = (t[o + 1] & 31) << 8 | t[o + 2];
								if(l === Me.H264_STREAM_TYPE && r.programMapTable.video === null) {
									r.programMapTable.video = u
								} else if(l === Me.ADTS_STREAM_TYPE && r.programMapTable.audio === null) {
									r.programMapTable.audio = u
								} else if(l === Me.METADATA_STREAM_TYPE) {
									r.programMapTable["timed-metadata"][u] = l
								}
								o += ((t[o + 3] & 15) << 8 | t[o + 4]) + 5
							}
							n.programMapTable = r.programMapTable
						};
						this.push = function(e) {
							var n = {},
								i = 4;
							n.payloadUnitStartIndicator = !!(e[1] & 64);
							n.pid = e[1] & 31;
							n.pid <<= 8;
							n.pid |= e[2];
							if((e[3] & 48) >>> 4 > 1) {
								i += e[i] + 1
							}
							if(n.pid === 0) {
								n.type = "pat";
								t(e.subarray(i), n);
								this.trigger("data", n)
							} else if(n.pid === this.pmtPid) {
								n.type = "pmt";
								t(e.subarray(i), n);
								this.trigger("data", n);
								while(this.packetsWaitingForPmt.length) {
									this.processPes_.apply(this, this.packetsWaitingForPmt.shift())
								}
							} else if(this.programMapTable === undefined) {
								this.packetsWaitingForPmt.push([e, i, n])
							} else {
								this.processPes_(e, i, n)
							}
						};
						this.processPes_ = function(e, t, n) {
							if(n.pid === this.programMapTable.video) {
								n.streamType = Me.H264_STREAM_TYPE
							} else if(n.pid === this.programMapTable.audio) {
								n.streamType = Me.ADTS_STREAM_TYPE
							} else {
								n.streamType = this.programMapTable["timed-metadata"][n.pid]
							}
							n.type = "pes";
							n.data = e.subarray(t);
							this.trigger("data", n)
						}
					};
					et.prototype = new t;
					et.STREAM_TYPES = {
						h264: 27,
						adts: 15
					};
					tt = function e() {
						var t = this,
							n = {
								data: [],
								size: 0
							},
							i = {
								data: [],
								size: 0
							},
							r = {
								data: [],
								size: 0
							},
							a, s = function e(t, n) {
								var i;
								n.packetLength = 6 + (t[4] << 8 | t[5]);
								n.dataAlignmentIndicator = (t[6] & 4) !== 0;
								i = t[7];
								if(i & 192) {
									n.pts = (t[9] & 14) << 27 | (t[10] & 255) << 20 | (t[11] & 254) << 12 | (t[12] & 255) << 5 | (t[13] & 254) >>> 3;
									n.pts *= 4;
									n.pts += (t[13] & 6) >>> 1;
									n.dts = n.pts;
									if(i & 64) {
										n.dts = (t[14] & 14) << 27 | (t[15] & 255) << 20 | (t[16] & 254) << 12 | (t[17] & 255) << 5 | (t[18] & 254) >>> 3;
										n.dts *= 4;
										n.dts += (t[18] & 6) >>> 1
									}
								}
								n.data = t.subarray(9 + t[8])
							},
							o = function e(n, i, r) {
								var a = new Uint8Array(n.size),
									o = {
										type: i
									},
									l = 0,
									u = 0,
									c = false,
									d;
								if(!n.data.length || n.size < 9) {
									return
								}
								o.trackId = n.data[0].pid;
								for(l = 0; l < n.data.length; l++) {
									d = n.data[l];
									a.set(d.data, u);
									u += d.data.byteLength
								}
								s(a, o);
								c = i === "video" || o.packetLength <= n.size;
								if(r || c) {
									n.size = 0;
									n.data.length = 0
								}
								if(c) {
									t.trigger("data", o)
								}
							};
						tt.prototype.init.call(this);
						this.push = function(e) {
							({
								pat: function e() {},
								pes: function t() {
									var a, s;
									switch(e.streamType) {
										case Me.H264_STREAM_TYPE:
										case Me.H264_STREAM_TYPE:
											a = n;
											s = "video";
											break;
										case Me.ADTS_STREAM_TYPE:
											a = i;
											s = "audio";
											break;
										case Me.METADATA_STREAM_TYPE:
											a = r;
											s = "timed-metadata";
											break;
										default:
											return
									}
									if(e.payloadUnitStartIndicator) {
										o(a, s, true)
									}
									a.data.push(e);
									a.size += e.data.byteLength
								},
								pmt: function n() {
									var i = {
										type: "metadata",
										tracks: []
									};
									a = e.programMapTable;
									if(a.video !== null) {
										i.tracks.push({
											timelineStartInfo: {
												baseMediaDecodeTime: 0
											},
											id: +a.video,
											codec: "avc",
											type: "video"
										})
									}
									if(a.audio !== null) {
										i.tracks.push({
											timelineStartInfo: {
												baseMediaDecodeTime: 0
											},
											id: +a.audio,
											codec: "adts",
											type: "audio"
										})
									}
									t.trigger("data", i)
								}
							})[e.type]()
						};
						this.reset = function() {
							n.size = 0;
							n.data.length = 0;
							i.size = 0;
							i.data.length = 0;
							this.trigger("reset")
						};
						this.flushStreams_ = function() {
							o(n, "video");
							o(i, "audio");
							o(r, "timed-metadata")
						};
						this.flush = function() {
							this.flushStreams_();
							this.trigger("done")
						}
					};
					tt.prototype = new t;
					var rt = {
						PAT_PID: 0,
						MP2T_PACKET_LENGTH: nt,
						TransportPacketStream: $e,
						TransportParseStream: et,
						ElementaryStream: tt,
						TimestampRolloverStream: Ze,
						CaptionStream: Ue.CaptionStream,
						Cea608Stream: Ue.Cea608Stream,
						MetadataStream: Qe
					};
					for(var at in Me) {
						if(Me.hasOwnProperty(at)) {
							rt[at] = Me[at]
						}
					}
					var st = rt;
					var ot = de.ONE_SECOND_IN_TS;
					var lt;
					var ut = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350];
					lt = function e(t) {
						var n, i = 0;
						lt.prototype.init.call(this);
						this.push = function(e) {
							var r = 0,
								a, s, o, l, u, c;
							if(!t) {
								i = 0
							}
							if(e.type !== "audio") {
								return
							}
							if(n) {
								l = n;
								n = new Uint8Array(l.byteLength + e.data.byteLength);
								n.set(l);
								n.set(e.data, l.byteLength)
							} else {
								n = e.data
							}
							while(r + 5 < n.length) {
								if(n[r] !== 255 || (n[r + 1] & 246) !== 240) {
									r++;
									continue
								}
								s = (~n[r + 1] & 1) * 2;
								a = (n[r + 3] & 3) << 11 | n[r + 4] << 3 | (n[r + 5] & 224) >> 5;
								u = ((n[r + 6] & 3) + 1) * 1024;
								c = u * ot / ut[(n[r + 2] & 60) >>> 2];
								o = r + a;
								if(n.byteLength < o) {
									return
								}
								this.trigger("data", {
									pts: e.pts + i * c,
									dts: e.dts + i * c,
									sampleCount: u,
									audioobjecttype: (n[r + 2] >>> 6 & 3) + 1,
									channelcount: (n[r + 2] & 1) << 2 | (n[r + 3] & 192) >>> 6,
									samplerate: ut[(n[r + 2] & 60) >>> 2],
									samplingfrequencyindex: (n[r + 2] & 60) >>> 2,
									samplesize: 16,
									data: n.subarray(r + 7 + s, o)
								});
								i++;
								if(n.byteLength === o) {
									n = undefined;
									return
								}
								n = n.subarray(o)
							}
						};
						this.flush = function() {
							i = 0;
							this.trigger("done")
						};
						this.reset = function() {
							n = void 0;
							this.trigger("reset")
						};
						this.endTimeline = function() {
							n = void 0;
							this.trigger("endedtimeline")
						}
					};
					lt.prototype = new t;
					var ct = lt;
					var dt;
					dt = function e(t) {
						var n = t.byteLength,
							i = 0,
							r = 0;
						this.length = function() {
							return 8 * n
						};
						this.bitsAvailable = function() {
							return 8 * n + r
						};
						this.loadWord = function() {
							var e = t.byteLength - n,
								a = new Uint8Array(4),
								s = Math.min(4, n);
							if(s === 0) {
								throw new Error("no bytes available")
							}
							a.set(t.subarray(e, e + s));
							i = new DataView(a.buffer).getUint32(0);
							r = s * 8;
							n -= s
						};
						this.skipBits = function(e) {
							var t;
							if(r > e) {
								i <<= e;
								r -= e
							} else {
								e -= r;
								t = Math.floor(e / 8);
								e -= t * 8;
								n -= t;
								this.loadWord();
								i <<= e;
								r -= e
							}
						};
						this.readBits = function(e) {
							var t = Math.min(r, e),
								a = i >>> 32 - t;
							r -= t;
							if(r > 0) {
								i <<= t
							} else if(n > 0) {
								this.loadWord()
							}
							t = e - t;
							if(t > 0) {
								return a << t | this.readBits(t)
							}
							return a
						};
						this.skipLeadingZeros = function() {
							var e;
							for(e = 0; e < r; ++e) {
								if((i & 2147483648 >>> e) !== 0) {
									i <<= e;
									r -= e;
									return e
								}
							}
							this.loadWord();
							return e + this.skipLeadingZeros()
						};
						this.skipUnsignedExpGolomb = function() {
							this.skipBits(1 + this.skipLeadingZeros())
						};
						this.skipExpGolomb = function() {
							this.skipBits(1 + this.skipLeadingZeros())
						};
						this.readUnsignedExpGolomb = function() {
							var e = this.skipLeadingZeros();
							return this.readBits(e + 1) - 1
						};
						this.readExpGolomb = function() {
							var e = this.readUnsignedExpGolomb();
							if(1 & e) {
								return 1 + e >>> 1
							}
							return -1 * (e >>> 1)
						};
						this.readBoolean = function() {
							return this.readBits(1) === 1
						};
						this.readUnsignedByte = function() {
							return this.readBits(8)
						};
						this.loadWord()
					};
					var ft = dt;
					var pt, ht;
					var vt;
					ht = function e() {
						var t = 0,
							n, i;
						ht.prototype.init.call(this);
						this.push = function(e) {
							var r;
							if(!i) {
								i = e.data
							} else {
								r = new Uint8Array(i.byteLength + e.data.byteLength);
								r.set(i);
								r.set(e.data, i.byteLength);
								i = r
							}
							var a = i.byteLength;
							for(; t < a - 3; t++) {
								if(i[t + 2] === 1) {
									n = t + 5;
									break
								}
							}
							while(n < a) {
								switch(i[n]) {
									case 0:
										if(i[n - 1] !== 0) {
											n += 2;
											break
										} else if(i[n - 2] !== 0) {
											n++;
											break
										}
										if(t + 3 !== n - 2) {
											this.trigger("data", i.subarray(t + 3, n - 2))
										}
										do {
											n++
										} while (i[n] !== 1 && n < a);
										t = n - 2;
										n += 3;
										break;
									case 1:
										if(i[n - 1] !== 0 || i[n - 2] !== 0) {
											n += 3;
											break
										}
										this.trigger("data", i.subarray(t + 3, n - 2));
										t = n - 2;
										n += 3;
										break;
									default:
										n += 3;
										break
								}
							}
							i = i.subarray(t);
							n -= t;
							t = 0
						};
						this.reset = function() {
							i = null;
							t = 0;
							this.trigger("reset")
						};
						this.flush = function() {
							if(i && i.byteLength > 3) {
								this.trigger("data", i.subarray(t + 3))
							}
							i = null;
							t = 0;
							this.trigger("done")
						};
						this.endTimeline = function() {
							this.flush();
							this.trigger("endedtimeline")
						}
					};
					ht.prototype = new t;
					vt = {
						100: true,
						110: true,
						122: true,
						244: true,
						44: true,
						83: true,
						86: true,
						118: true,
						128: true,
						138: true,
						139: true,
						134: true
					};
					pt = function e() {
						var t = new ht,
							n, i, r, a, s, o, l;
						pt.prototype.init.call(this);
						n = this;
						this.push = function(e) {
							if(e.type !== "video") {
								return
							}
							i = e.trackId;
							r = e.pts;
							a = e.dts;
							t.push(e)
						};
						t.on("data", function(e) {
							var t = {
								trackId: i,
								pts: r,
								dts: a,
								data: e
							};
							switch(e[0] & 31) {
								case 5:
									t.nalUnitType = "slice_layer_without_partitioning_rbsp_idr";
									break;
								case 6:
									t.nalUnitType = "sei_rbsp";
									t.escapedRBSP = s(e.subarray(1));
									break;
								case 7:
									t.nalUnitType = "seq_parameter_set_rbsp";
									t.escapedRBSP = s(e.subarray(1));
									t.config = o(t.escapedRBSP);
									break;
								case 8:
									t.nalUnitType = "pic_parameter_set_rbsp";
									break;
								case 9:
									t.nalUnitType = "access_unit_delimiter_rbsp";
									break;
								default:
									break
							}
							n.trigger("data", t)
						});
						t.on("done", function() {
							n.trigger("done")
						});
						t.on("partialdone", function() {
							n.trigger("partialdone")
						});
						t.on("reset", function() {
							n.trigger("reset")
						});
						t.on("endedtimeline", function() {
							n.trigger("endedtimeline")
						});
						this.flush = function() {
							t.flush()
						};
						this.partialFlush = function() {
							t.partialFlush()
						};
						this.reset = function() {
							t.reset()
						};
						this.endTimeline = function() {
							t.endTimeline()
						};
						l = function e(t, n) {
							var i = 8,
								r = 8,
								a, s;
							for(a = 0; a < t; a++) {
								if(r !== 0) {
									s = n.readExpGolomb();
									r = (i + s + 256) % 256
								}
								i = r === 0 ? i : r
							}
						};
						s = function e(t) {
							var n = t.byteLength,
								i = [],
								r = 1,
								a, s;
							while(r < n - 2) {
								if(t[r] === 0 && t[r + 1] === 0 && t[r + 2] === 3) {
									i.push(r + 2);
									r += 2
								} else {
									r++
								}
							}
							if(i.length === 0) {
								return t
							}
							a = n - i.length;
							s = new Uint8Array(a);
							var o = 0;
							for(r = 0; r < a; o++, r++) {
								if(o === i[0]) {
									o++;
									i.shift()
								}
								s[r] = t[o]
							}
							return s
						};
						o = function e(t) {
							var n = 0,
								i = 0,
								r = 0,
								a = 0,
								s = 1,
								o, u, c, d, f, p, h, v, g, m, y, _, b, A;
							o = new ft(t);
							u = o.readUnsignedByte();
							d = o.readUnsignedByte();
							c = o.readUnsignedByte();
							o.skipUnsignedExpGolomb();
							if(vt[u]) {
								f = o.readUnsignedExpGolomb();
								if(f === 3) {
									o.skipBits(1)
								}
								o.skipUnsignedExpGolomb();
								o.skipUnsignedExpGolomb();
								o.skipBits(1);
								if(o.readBoolean()) {
									y = f !== 3 ? 8 : 12;
									for(A = 0; A < y; A++) {
										if(o.readBoolean()) {
											if(A < 6) {
												l(16, o)
											} else {
												l(64, o)
											}
										}
									}
								}
							}
							o.skipUnsignedExpGolomb();
							p = o.readUnsignedExpGolomb();
							if(p === 0) {
								o.readUnsignedExpGolomb()
							} else if(p === 1) {
								o.skipBits(1);
								o.skipExpGolomb();
								o.skipExpGolomb();
								h = o.readUnsignedExpGolomb();
								for(A = 0; A < h; A++) {
									o.skipExpGolomb()
								}
							}
							o.skipUnsignedExpGolomb();
							o.skipBits(1);
							v = o.readUnsignedExpGolomb();
							g = o.readUnsignedExpGolomb();
							m = o.readBits(1);
							if(m === 0) {
								o.skipBits(1)
							}
							o.skipBits(1);
							if(o.readBoolean()) {
								n = o.readUnsignedExpGolomb();
								i = o.readUnsignedExpGolomb();
								r = o.readUnsignedExpGolomb();
								a = o.readUnsignedExpGolomb()
							}
							if(o.readBoolean()) {
								if(o.readBoolean()) {
									b = o.readUnsignedByte();
									switch(b) {
										case 1:
											_ = [1, 1];
											break;
										case 2:
											_ = [12, 11];
											break;
										case 3:
											_ = [10, 11];
											break;
										case 4:
											_ = [16, 11];
											break;
										case 5:
											_ = [40, 33];
											break;
										case 6:
											_ = [24, 11];
											break;
										case 7:
											_ = [20, 11];
											break;
										case 8:
											_ = [32, 11];
											break;
										case 9:
											_ = [80, 33];
											break;
										case 10:
											_ = [18, 11];
											break;
										case 11:
											_ = [15, 11];
											break;
										case 12:
											_ = [64, 33];
											break;
										case 13:
											_ = [160, 99];
											break;
										case 14:
											_ = [4, 3];
											break;
										case 15:
											_ = [3, 2];
											break;
										case 16:
											_ = [2, 1];
											break;
										case 255:
											{
												_ = [o.readUnsignedByte() << 8 | o.readUnsignedByte(), o.readUnsignedByte() << 8 | o.readUnsignedByte()];
												break
											}
									}
									if(_) {
										s = _[0] / _[1]
									}
								}
							}
							return {
								profileIdc: u,
								levelIdc: c,
								profileCompatibility: d,
								width: Math.ceil(((v + 1) * 16 - n * 2 - i * 2) * s),
								height: (2 - m) * (g + 1) * 16 - r * 2 - a * 2,
								sarRatio: _
							}
						}
					};
					pt.prototype = new t;
					var gt = {
						H264Stream: pt,
						NalByteStream: ht
					};
					var mt = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350];
					var yt = function e(t) {
						if(t[0] === "I".charCodeAt(0) && t[1] === "D".charCodeAt(0) && t[2] === "3".charCodeAt(0)) {
							return true
						}
						return false
					};
					var _t = function e(t) {
						return t[0] << 21 | t[1] << 14 | t[2] << 7 | t[3]
					};
					var bt = function e(t, n, i) {
						var r, a = "";
						for(r = n; r < i; r++) {
							a += "%" + ("00" + t[r].toString(16)).slice(-2)
						}
						return a
					};
					var At = function e(t, n, i) {
						return unescape(bt(t, n, i))
					};
					var St = function e(t, n) {
						var i = t[n + 6] << 21 | t[n + 7] << 14 | t[n + 8] << 7 | t[n + 9],
							r = t[n + 5],
							a = (r & 16) >> 4;
						if(a) {
							return i + 20
						}
						return i + 10
					};
					var Tt = function e(t, n) {
						var i = (t[n + 5] & 224) >> 5,
							r = t[n + 4] << 3,
							a = t[n + 3] & 3 << 11;
						return a | r | i
					};
					var kt = function e(t, n) {
						if(t[n] === "I".charCodeAt(0) && t[n + 1] === "D".charCodeAt(0) && t[n + 2] === "3".charCodeAt(0)) {
							return "timed-metadata"
						} else if(t[n] & 255 === 255 && (t[n + 1] & 240) === 240) {
							return "audio"
						}
						return null
					};
					var Et = function e(t) {
						var n = 0;
						while(n + 5 < t.length) {
							if(t[n] !== 255 || (t[n + 1] & 246) !== 240) {
								n++;
								continue
							}
							return mt[(t[n + 2] & 60) >>> 2]
						}
						return null
					};
					var Pt = function e(t) {
						var n, i, r, a;
						n = 10;
						if(t[5] & 64) {
							n += 4;
							n += _t(t.subarray(10, 14))
						}
						do {
							i = _t(t.subarray(n + 4, n + 8));
							if(i < 1) {
								return null
							}
							a = String.fromCharCode(t[n], t[n + 1], t[n + 2], t[n + 3]);
							if(a === "PRIV") {
								r = t.subarray(n + 10, n + i + 10);
								for(var s = 0; s < r.byteLength; s++) {
									if(r[s] === 0) {
										var o = At(r, 0, s);
										if(o === "com.apple.streaming.transportStreamTimestamp") {
											var l = r.subarray(s + 1);
											var u = (l[3] & 1) << 30 | l[4] << 22 | l[5] << 14 | l[6] << 6 | l[7] >>> 2;
											u *= 4;
											u += l[7] & 3;
											return u
										}
										break
									}
								}
							}
							n += 10;
							n += i
						} while (n < t.byteLength);
						return null
					};
					var Ct = {
						isLikelyAacData: yt,
						parseId3TagSize: St,
						parseAdtsSize: Tt,
						parseType: kt,
						parseSampleRate: Et,
						parseAacTimestamp: Pt
					};
					var wt;
					wt = function e() {
						var t = new Uint8Array,
							n = 0;
						wt.prototype.init.call(this);
						this.setTimestamp = function(e) {
							n = e
						};
						this.push = function(e) {
							var i = 0,
								r = 0,
								a, s, o, l;
							if(t.length) {
								l = t.length;
								t = new Uint8Array(e.byteLength + l);
								t.set(t.subarray(0, l));
								t.set(e, l)
							} else {
								t = e
							}
							while(t.length - r >= 3) {
								if(t[r] === "I".charCodeAt(0) && t[r + 1] === "D".charCodeAt(0) && t[r + 2] === "3".charCodeAt(0)) {
									if(t.length - r < 10) {
										break
									}
									i = Ct.parseId3TagSize(t, r);
									if(r + i > t.length) {
										break
									}
									s = {
										type: "timed-metadata",
										data: t.subarray(r, r + i)
									};
									this.trigger("data", s);
									r += i;
									continue
								} else if((t[r] & 255) === 255 && (t[r + 1] & 240) === 240) {
									if(t.length - r < 7) {
										break
									}
									i = Ct.parseAdtsSize(t, r);
									if(r + i > t.length) {
										break
									}
									o = {
										type: "audio",
										data: t.subarray(r, r + i),
										pts: n,
										dts: n
									};
									this.trigger("data", o);
									r += i;
									continue
								}
								r++
							}
							a = t.length - r;
							if(a > 0) {
								t = t.subarray(r)
							} else {
								t = new Uint8Array
							}
						};
						this.reset = function() {
							t = new Uint8Array;
							this.trigger("reset")
						};
						this.endTimeline = function() {
							t = new Uint8Array;
							this.trigger("endedtimeline")
						}
					};
					wt.prototype = new t;
					var jt = wt;
					var It = gt.H264Stream;
					var Lt = Ct.isLikelyAacData;
					var Ot = de.ONE_SECOND_IN_TS;
					var Nt = ["audioobjecttype", "channelcount", "samplerate", "samplingfrequencyindex", "samplesize"];
					var xt = ["width", "height", "profileIdc", "levelIdc", "profileCompatibility", "sarRatio"];
					var Dt, Rt, Ut, Mt;
					var Bt = function e(t, n) {
						var i;
						if(t.length !== n.length) {
							return false
						}
						for(i = 0; i < t.length; i++) {
							if(t[i] !== n[i]) {
								return false
							}
						}
						return true
					};
					var Ft = function e(t, n, i, r, a, s) {
						var o = i - n,
							l = r - n,
							u = a - i;
						return {
							start: {
								dts: t,
								pts: t + o
							},
							end: {
								dts: t + l,
								pts: t + u
							},
							prependedContentDuration: s,
							baseMediaDecodeTime: t
						}
					};
					Rt = function e(t, n) {
						var i = [],
							r = 0,
							a = 0,
							s = 0,
							o = Infinity;
						n = n || {};
						Rt.prototype.init.call(this);
						this.push = function(e) {
							Se.collectDtsInfo(t, e);
							if(t) {
								Nt.forEach(function(n) {
									t[n] = e[n]
								})
							}
							i.push(e)
						};
						this.setEarliestDts = function(e) {
							a = e - t.timelineStartInfo.baseMediaDecodeTime
						};
						this.setVideoBaseMediaDecodeTime = function(e) {
							o = e
						};
						this.setAudioAppendStart = function(e) {
							s = e
						};
						this.flush = function() {
							var e, l, u, c, d;
							if(i.length === 0) {
								this.trigger("done", "AudioSegmentStream");
								return
							}
							e = me.trimAdtsFramesByEarliestDts(i, t, a);
							t.baseMediaDecodeTime = Se.calculateTrackBaseMediaDecodeTime(t, n.keepOriginalTimestamps);
							me.prefixWithSilence(t, e, s, o);
							t.samples = me.generateSampleTable(e);
							u = F.mdat(me.concatenateFrameData(e));
							i = [];
							l = F.moof(r, [t]);
							c = new Uint8Array(l.byteLength + u.byteLength);
							r++;
							c.set(l);
							c.set(u, l.byteLength);
							Se.clearDtsInfo(t);
							d = Math.ceil(Ot * 1024 / t.samplerate);
							if(e.length) {
								this.trigger("timingInfo", {
									start: e[0].pts,
									end: e[0].pts + e.length * d
								})
							}
							this.trigger("data", {
								track: t,
								boxes: c
							});
							this.trigger("done", "AudioSegmentStream")
						};
						this.reset = function() {
							Se.clearDtsInfo(t);
							i = [];
							this.trigger("reset")
						}
					};
					Rt.prototype = new t;
					Dt = function e(t, n) {
						var i = 0,
							r = [],
							a = [],
							s, o;
						n = n || {};
						Dt.prototype.init.call(this);
						delete t.minPTS;
						this.gopCache_ = [];
						this.push = function(e) {
							Se.collectDtsInfo(t, e);
							if(e.nalUnitType === "seq_parameter_set_rbsp" && !s) {
								s = e.config;
								t.sps = [e.data];
								xt.forEach(function(e) {
									t[e] = s[e]
								}, this)
							}
							if(e.nalUnitType === "pic_parameter_set_rbsp" && !o) {
								o = e.data;
								t.pps = [e.data]
							}
							r.push(e)
						};
						this.flush = function() {
							var e, s, o, l, u, c, d = 0,
								f, p;
							while(r.length) {
								if(r[0].nalUnitType === "access_unit_delimiter_rbsp") {
									break
								}
								r.shift()
							}
							if(r.length === 0) {
								this.resetStream_();
								this.trigger("done", "VideoSegmentStream");
								return
							}
							e = J.groupNalsIntoFrames(r);
							o = J.groupFramesIntoGops(e);
							if(!o[0][0].keyFrame) {
								s = this.getGopForFusion_(r[0], t);
								if(s) {
									d = s.duration;
									o.unshift(s);
									o.byteLength += s.byteLength;
									o.nalCount += s.nalCount;
									o.pts = s.pts;
									o.dts = s.dts;
									o.duration += s.duration
								} else {
									o = J.extendFirstKeyFrame(o)
								}
							}
							if(a.length) {
								var h;
								if(n.alignGopsAtEnd) {
									h = this.alignGopsAtEnd_(o)
								} else {
									h = this.alignGopsAtStart_(o)
								}
								if(!h) {
									this.gopCache_.unshift({
										gop: o.pop(),
										pps: t.pps,
										sps: t.sps
									});
									this.gopCache_.length = Math.min(6, this.gopCache_.length);
									r = [];
									this.resetStream_();
									this.trigger("done", "VideoSegmentStream");
									return
								}
								Se.clearDtsInfo(t);
								o = h
							}
							Se.collectDtsInfo(t, o);
							t.samples = J.generateSampleTable(o);
							u = F.mdat(J.concatenateNalData(o));
							t.baseMediaDecodeTime = Se.calculateTrackBaseMediaDecodeTime(t, n.keepOriginalTimestamps);
							this.trigger("processedGopsInfo", o.map(function(e) {
								return {
									pts: e.pts,
									dts: e.dts,
									byteLength: e.byteLength
								}
							}));
							f = o[0];
							p = o[o.length - 1];
							this.trigger("segmentTimingInfo", Ft(t.baseMediaDecodeTime, f.dts, f.pts, p.dts + p.duration, p.pts + p.duration, d));
							this.trigger("timingInfo", {
								start: o[0].pts,
								end: o[o.length - 1].pts + o[o.length - 1].duration
							});
							this.gopCache_.unshift({
								gop: o.pop(),
								pps: t.pps,
								sps: t.sps
							});
							this.gopCache_.length = Math.min(6, this.gopCache_.length);
							r = [];
							this.trigger("baseMediaDecodeTime", t.baseMediaDecodeTime);
							this.trigger("timelineStartInfo", t.timelineStartInfo);
							l = F.moof(i, [t]);
							c = new Uint8Array(l.byteLength + u.byteLength);
							i++;
							c.set(l);
							c.set(u, l.byteLength);
							this.trigger("data", {
								track: t,
								boxes: c
							});
							this.resetStream_();
							this.trigger("done", "VideoSegmentStream")
						};
						this.reset = function() {
							this.resetStream_();
							r = [];
							this.gopCache_.length = 0;
							a.length = 0;
							this.trigger("reset")
						};
						this.resetStream_ = function() {
							Se.clearDtsInfo(t);
							s = undefined;
							o = undefined
						};
						this.getGopForFusion_ = function(e) {
							var n = 45e3,
								i = 1e4,
								r = Infinity,
								a, s, o, l, u;
							for(u = 0; u < this.gopCache_.length; u++) {
								l = this.gopCache_[u];
								o = l.gop;
								if(!(t.pps && Bt(t.pps[0], l.pps[0])) || !(t.sps && Bt(t.sps[0], l.sps[0]))) {
									continue
								}
								if(o.dts < t.timelineStartInfo.dts) {
									continue
								}
								a = e.dts - o.dts - o.duration;
								if(a >= -i && a <= n) {
									if(!s || r > a) {
										s = l;
										r = a
									}
								}
							}
							if(s) {
								return s.gop
							}
							return null
						};
						this.alignGopsAtStart_ = function(e) {
							var t, n, i, r, s, o, l, u;
							s = e.byteLength;
							o = e.nalCount;
							l = e.duration;
							t = n = 0;
							while(t < a.length && n < e.length) {
								i = a[t];
								r = e[n];
								if(i.pts === r.pts) {
									break
								}
								if(r.pts > i.pts) {
									t++;
									continue
								}
								n++;
								s -= r.byteLength;
								o -= r.nalCount;
								l -= r.duration
							}
							if(n === 0) {
								return e
							}
							if(n === e.length) {
								return null
							}
							u = e.slice(n);
							u.byteLength = s;
							u.duration = l;
							u.nalCount = o;
							u.pts = u[0].pts;
							u.dts = u[0].dts;
							return u
						};
						this.alignGopsAtEnd_ = function(e) {
							var t, n, i, r, s, o;
							t = a.length - 1;
							n = e.length - 1;
							s = null;
							o = false;
							while(t >= 0 && n >= 0) {
								i = a[t];
								r = e[n];
								if(i.pts === r.pts) {
									o = true;
									break
								}
								if(i.pts > r.pts) {
									t--;
									continue
								}
								if(t === a.length - 1) {
									s = n
								}
								n--
							}
							if(!o && s === null) {
								return null
							}
							var l;
							if(o) {
								l = n
							} else {
								l = s
							}
							if(l === 0) {
								return e
							}
							var u = e.slice(l);
							var c = u.reduce(function(e, t) {
								e.byteLength += t.byteLength;
								e.duration += t.duration;
								e.nalCount += t.nalCount;
								return e
							}, {
								byteLength: 0,
								duration: 0,
								nalCount: 0
							});
							u.byteLength = c.byteLength;
							u.duration = c.duration;
							u.nalCount = c.nalCount;
							u.pts = u[0].pts;
							u.dts = u[0].dts;
							return u
						};
						this.alignGopsWith = function(e) {
							a = e
						}
					};
					Dt.prototype = new t;
					Mt = function e(t, n) {
						this.numberOfTracks = 0;
						this.metadataStream = n;
						t = t || {};
						if(typeof t.remux !== "undefined") {
							this.remuxTracks = !!t.remux
						} else {
							this.remuxTracks = true
						}
						if(typeof t.keepOriginalTimestamps === "boolean") {
							this.keepOriginalTimestamps = t.keepOriginalTimestamps
						} else {
							this.keepOriginalTimestamps = false
						}
						this.pendingTracks = [];
						this.videoTrack = null;
						this.pendingBoxes = [];
						this.pendingCaptions = [];
						this.pendingMetadata = [];
						this.pendingBytes = 0;
						this.emittedTracks = 0;
						Mt.prototype.init.call(this);
						this.push = function(e) {
							if(e.text) {
								return this.pendingCaptions.push(e)
							}
							if(e.frames) {
								return this.pendingMetadata.push(e)
							}
							this.pendingTracks.push(e.track);
							this.pendingBytes += e.boxes.byteLength;
							if(e.track.type === "video") {
								this.videoTrack = e.track;
								this.pendingBoxes.push(e.boxes)
							}
							if(e.track.type === "audio") {
								this.audioTrack = e.track;
								this.pendingBoxes.unshift(e.boxes)
							}
						}
					};
					Mt.prototype = new t;
					Mt.prototype.flush = function(e) {
						var t = 0,
							n = {
								captions: [],
								captionStreams: {},
								metadata: [],
								info: {}
							},
							i, r, a, s = 0,
							o;
						if(this.pendingTracks.length < this.numberOfTracks) {
							if(e !== "VideoSegmentStream" && e !== "AudioSegmentStream") {
								return
							} else if(this.remuxTracks) {
								return
							} else if(this.pendingTracks.length === 0) {
								this.emittedTracks++;
								if(this.emittedTracks >= this.numberOfTracks) {
									this.trigger("done");
									this.emittedTracks = 0
								}
								return
							}
						}
						if(this.videoTrack) {
							s = this.videoTrack.timelineStartInfo.pts;
							xt.forEach(function(e) {
								n.info[e] = this.videoTrack[e]
							}, this)
						} else if(this.audioTrack) {
							s = this.audioTrack.timelineStartInfo.pts;
							Nt.forEach(function(e) {
								n.info[e] = this.audioTrack[e]
							}, this)
						}
						if(this.videoTrack || this.audioTrack) {
							if(this.pendingTracks.length === 1) {
								n.type = this.pendingTracks[0].type
							} else {
								n.type = "combined"
							}
							this.emittedTracks += this.pendingTracks.length;
							a = F.initSegment(this.pendingTracks);
							n.initSegment = new Uint8Array(a.byteLength);
							n.initSegment.set(a);
							n.data = new Uint8Array(this.pendingBytes);
							for(o = 0; o < this.pendingBoxes.length; o++) {
								n.data.set(this.pendingBoxes[o], t);
								t += this.pendingBoxes[o].byteLength
							}
							for(o = 0; o < this.pendingCaptions.length; o++) {
								i = this.pendingCaptions[o];
								i.startTime = de.metadataTsToSeconds(i.startPts, s, this.keepOriginalTimestamps);
								i.endTime = de.metadataTsToSeconds(i.endPts, s, this.keepOriginalTimestamps);
								n.captionStreams[i.stream] = true;
								n.captions.push(i)
							}
							for(o = 0; o < this.pendingMetadata.length; o++) {
								r = this.pendingMetadata[o];
								r.cueTime = de.metadataTsToSeconds(r.pts, s, this.keepOriginalTimestamps);
								n.metadata.push(r)
							}
							n.metadata.dispatchType = this.metadataStream.dispatchType;
							this.pendingTracks.length = 0;
							this.videoTrack = null;
							this.pendingBoxes.length = 0;
							this.pendingCaptions.length = 0;
							this.pendingBytes = 0;
							this.pendingMetadata.length = 0;
							this.trigger("data", n);
							for(o = 0; o < n.captions.length; o++) {
								i = n.captions[o];
								this.trigger("caption", i)
							}
							for(o = 0; o < n.metadata.length; o++) {
								r = n.metadata[o];
								this.trigger("id3Frame", r)
							}
						}
						if(this.emittedTracks >= this.numberOfTracks) {
							this.trigger("done");
							this.emittedTracks = 0
						}
					};
					Mt.prototype.setRemux = function(e) {
						this.remuxTracks = e
					};
					Ut = function e(t) {
						var n = this,
							i = true,
							r, a;
						Ut.prototype.init.call(this);
						t = t || {};
						this.baseMediaDecodeTime = t.baseMediaDecodeTime || 0;
						this.transmuxPipeline_ = {};
						this.setupAacPipeline = function() {
							var e = {};
							this.transmuxPipeline_ = e;
							e.type = "aac";
							e.metadataStream = new st.MetadataStream;
							e.aacStream = new jt;
							e.audioTimestampRolloverStream = new st.TimestampRolloverStream("audio");
							e.timedMetadataTimestampRolloverStream = new st.TimestampRolloverStream("timed-metadata");
							e.adtsStream = new ct;
							e.coalesceStream = new Mt(t, e.metadataStream);
							e.headOfPipeline = e.aacStream;
							e.aacStream.pipe(e.audioTimestampRolloverStream).pipe(e.adtsStream);
							e.aacStream.pipe(e.timedMetadataTimestampRolloverStream).pipe(e.metadataStream).pipe(e.coalesceStream);
							e.metadataStream.on("timestamp", function(t) {
								e.aacStream.setTimestamp(t.timeStamp)
							});
							e.aacStream.on("data", function(i) {
								if(i.type === "timed-metadata" && !e.audioSegmentStream) {
									a = a || {
										timelineStartInfo: {
											baseMediaDecodeTime: n.baseMediaDecodeTime
										},
										codec: "adts",
										type: "audio"
									};
									e.coalesceStream.numberOfTracks++;
									e.audioSegmentStream = new Rt(a, t);
									e.audioSegmentStream.on("timingInfo", n.trigger.bind(n, "audioTimingInfo"));
									e.adtsStream.pipe(e.audioSegmentStream).pipe(e.coalesceStream)
								}
								n.trigger("trackinfo", {
									hasAudio: !!a,
									hasVideo: !!r
								})
							});
							e.coalesceStream.on("data", this.trigger.bind(this, "data"));
							e.coalesceStream.on("done", this.trigger.bind(this, "done"))
						};
						this.setupTsPipeline = function() {
							var e = {};
							this.transmuxPipeline_ = e;
							e.type = "ts";
							e.metadataStream = new st.MetadataStream;
							e.packetStream = new st.TransportPacketStream;
							e.parseStream = new st.TransportParseStream;
							e.elementaryStream = new st.ElementaryStream;
							e.timestampRolloverStream = new st.TimestampRolloverStream;
							e.adtsStream = new ct;
							e.h264Stream = new It;
							e.captionStream = new st.CaptionStream;
							e.coalesceStream = new Mt(t, e.metadataStream);
							e.headOfPipeline = e.packetStream;
							e.packetStream.pipe(e.parseStream).pipe(e.elementaryStream).pipe(e.timestampRolloverStream);
							e.timestampRolloverStream.pipe(e.h264Stream);
							e.timestampRolloverStream.pipe(e.adtsStream);
							e.timestampRolloverStream.pipe(e.metadataStream).pipe(e.coalesceStream);
							e.h264Stream.pipe(e.captionStream).pipe(e.coalesceStream);
							e.elementaryStream.on("data", function(i) {
								var s;
								if(i.type === "metadata") {
									s = i.tracks.length;
									while(s--) {
										if(!r && i.tracks[s].type === "video") {
											r = i.tracks[s];
											r.timelineStartInfo.baseMediaDecodeTime = n.baseMediaDecodeTime
										} else if(!a && i.tracks[s].type === "audio") {
											a = i.tracks[s];
											a.timelineStartInfo.baseMediaDecodeTime = n.baseMediaDecodeTime
										}
									}
									if(r && !e.videoSegmentStream) {
										e.coalesceStream.numberOfTracks++;
										e.videoSegmentStream = new Dt(r, t);
										e.videoSegmentStream.on("timelineStartInfo", function(t) {
											if(a) {
												a.timelineStartInfo = t;
												e.audioSegmentStream.setEarliestDts(t.dts)
											}
										});
										e.videoSegmentStream.on("processedGopsInfo", n.trigger.bind(n, "gopInfo"));
										e.videoSegmentStream.on("segmentTimingInfo", n.trigger.bind(n, "videoSegmentTimingInfo"));
										e.videoSegmentStream.on("baseMediaDecodeTime", function(t) {
											if(a) {
												e.audioSegmentStream.setVideoBaseMediaDecodeTime(t)
											}
										});
										e.videoSegmentStream.on("timingInfo", n.trigger.bind(n, "videoTimingInfo"));
										e.h264Stream.pipe(e.videoSegmentStream).pipe(e.coalesceStream)
									}
									if(a && !e.audioSegmentStream) {
										e.coalesceStream.numberOfTracks++;
										e.audioSegmentStream = new Rt(a, t);
										e.audioSegmentStream.on("timingInfo", n.trigger.bind(n, "audioTimingInfo"));
										e.adtsStream.pipe(e.audioSegmentStream).pipe(e.coalesceStream)
									}
									n.trigger("trackinfo", {
										hasAudio: !!a,
										hasVideo: !!r
									})
								}
							});
							e.coalesceStream.on("data", this.trigger.bind(this, "data"));
							e.coalesceStream.on("id3Frame", function(t) {
								t.dispatchType = e.metadataStream.dispatchType;
								n.trigger("id3Frame", t)
							});
							e.coalesceStream.on("caption", this.trigger.bind(this, "caption"));
							e.coalesceStream.on("done", this.trigger.bind(this, "done"))
						};
						this.setBaseMediaDecodeTime = function(e) {
							var n = this.transmuxPipeline_;
							if(!t.keepOriginalTimestamps) {
								this.baseMediaDecodeTime = e
							}
							if(a) {
								a.timelineStartInfo.dts = undefined;
								a.timelineStartInfo.pts = undefined;
								Se.clearDtsInfo(a);
								if(!t.keepOriginalTimestamps) {
									a.timelineStartInfo.baseMediaDecodeTime = e
								}
								if(n.audioTimestampRolloverStream) {
									n.audioTimestampRolloverStream.discontinuity()
								}
							}
							if(r) {
								if(n.videoSegmentStream) {
									n.videoSegmentStream.gopCache_ = []
								}
								r.timelineStartInfo.dts = undefined;
								r.timelineStartInfo.pts = undefined;
								Se.clearDtsInfo(r);
								n.captionStream.reset();
								if(!t.keepOriginalTimestamps) {
									r.timelineStartInfo.baseMediaDecodeTime = e
								}
							}
							if(n.timestampRolloverStream) {
								n.timestampRolloverStream.discontinuity()
							}
						};
						this.setAudioAppendStart = function(e) {
							if(a) {
								this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(e)
							}
						};
						this.setRemux = function(e) {
							var n = this.transmuxPipeline_;
							t.remux = e;
							if(n && n.coalesceStream) {
								n.coalesceStream.setRemux(e)
							}
						};
						this.alignGopsWith = function(e) {
							if(r && this.transmuxPipeline_.videoSegmentStream) {
								this.transmuxPipeline_.videoSegmentStream.alignGopsWith(e)
							}
						};
						this.push = function(e) {
							if(i) {
								var t = Lt(e);
								if(t && this.transmuxPipeline_.type !== "aac") {
									this.setupAacPipeline()
								} else if(!t && this.transmuxPipeline_.type !== "ts") {
									this.setupTsPipeline()
								}
								i = false
							}
							this.transmuxPipeline_.headOfPipeline.push(e)
						};
						this.flush = function() {
							i = true;
							this.transmuxPipeline_.headOfPipeline.flush()
						};
						this.endTimeline = function() {
							this.transmuxPipeline_.headOfPipeline.endTimeline()
						};
						this.reset = function() {
							if(this.transmuxPipeline_.headOfPipeline) {
								this.transmuxPipeline_.headOfPipeline.reset()
							}
						};
						this.resetCaptions = function() {
							if(this.transmuxPipeline_.captionStream) {
								this.transmuxPipeline_.captionStream.reset()
							}
						}
					};
					Ut.prototype = new t;
					var Vt = {
						Transmuxer: Ut,
						VideoSegmentStream: Dt,
						AudioSegmentStream: Rt,
						AUDIO_PROPERTIES: Nt,
						VIDEO_PROPERTIES: xt,
						generateVideoSegmentTimingInfo: Ft
					};
					var qt = function e(t, n) {
						if(!(t instanceof n)) {
							throw new TypeError("Cannot call a class as a function")
						}
					};
					var Ht = function() {
						function e(e, t) {
							for(var n = 0; n < t.length; n++) {
								var i = t[n];
								i.enumerable = i.enumerable || false;
								i.configurable = true;
								if("value" in i) i.writable = true;
								Object.defineProperty(e, i.key, i)
							}
						}
						return function(t, n, i) {
							if(n) e(t.prototype, n);
							if(i) e(t, i);
							return t
						}
					}();
					var Gt = function e(t, n) {
						n.on("data", function(e) {
							var n = e.initSegment;
							e.initSegment = {
								data: n.buffer,
								byteOffset: n.byteOffset,
								byteLength: n.byteLength
							};
							var i = e.data;
							e.data = i.buffer;
							t.postMessage({
								action: "data",
								segment: e,
								byteOffset: i.byteOffset,
								byteLength: i.byteLength
							}, [e.data])
						});
						if(n.captionStream) {
							n.captionStream.on("data", function(e) {
								t.postMessage({
									action: "caption",
									data: e
								})
							})
						}
						n.on("done", function(e) {
							t.postMessage({
								action: "done"
							})
						});
						n.on("gopInfo", function(e) {
							t.postMessage({
								action: "gopInfo",
								gopInfo: e
							})
						});
						n.on("videoSegmentTimingInfo", function(e) {
							t.postMessage({
								action: "videoSegmentTimingInfo",
								videoSegmentTimingInfo: e
							})
						})
					};
					var Yt = function() {
						function e(t, n) {
							qt(this, e);
							this.options = n || {};
							this.self = t;
							this.init()
						}
						Ht(e, [{
							key: "init",
							value: function e() {
								if(this.transmuxer) {
									this.transmuxer.dispose()
								}
								this.transmuxer = new Vt.Transmuxer(this.options);
								Gt(this.self, this.transmuxer)
							}
						}, {
							key: "push",
							value: function e(t) {
								var n = new Uint8Array(t.data, t.byteOffset, t.byteLength);
								this.transmuxer.push(n)
							}
						}, {
							key: "reset",
							value: function e() {
								this.init()
							}
						}, {
							key: "setTimestampOffset",
							value: function e(t) {
								var n = t.timestampOffset || 0;
								this.transmuxer.setBaseMediaDecodeTime(Math.round(n * 9e4))
							}
						}, {
							key: "setAudioAppendStart",
							value: function e(t) {
								this.transmuxer.setAudioAppendStart(Math.ceil(t.appendStart * 9e4))
							}
						}, {
							key: "flush",
							value: function e(t) {
								this.transmuxer.flush()
							}
						}, {
							key: "resetCaptions",
							value: function e() {
								this.transmuxer.resetCaptions()
							}
						}, {
							key: "alignGopsWith",
							value: function e(t) {
								this.transmuxer.alignGopsWith(t.gopsToAlignWith.slice())
							}
						}]);
						return e
					}();
					var zt = function e(t) {
						t.onmessage = function(e) {
							if(e.data.action === "init" && e.data.options) {
								this.messageHandlers = new Yt(t, e.data.options);
								return
							}
							if(!this.messageHandlers) {
								this.messageHandlers = new Yt(t)
							}
							if(e.data && e.data.action && e.data.action !== "init") {
								if(this.messageHandlers[e.data.action]) {
									this.messageHandlers[e.data.action](e.data)
								}
							}
						}
					};
					var Kt = new zt(n);
					return Kt
				}()
			});
			var At = {
				videoCodec: "avc1",
				videoObjectTypeIndicator: ".4d400d",
				audioProfile: "2"
			};
			var St = function e(t) {
				return t.map(function(e) {
					return e.replace(/avc1\.(\d+)\.(\d+)/i, function(e, t, n) {
						var i = ("00" + Number(t).toString(16)).slice(-2);
						var r = ("00" + Number(n).toString(16)).slice(-2);
						return "avc1." + i + "00" + r
					})
				})
			};
			var Tt = function e() {
				var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
				var n = {
					codecCount: 0
				};
				var i = void 0;
				n.codecCount = t.split(",").length;
				n.codecCount = n.codecCount || 2;
				i = /(^|\s|,)+(avc[13])([^ ,]*)/i.exec(t);
				if(i) {
					n.videoCodec = i[2];
					n.videoObjectTypeIndicator = i[3]
				}
				n.audioProfile = /(^|\s|,)+mp4a.[0-9A-Fa-f]+\.([0-9A-Fa-f]+)/i.exec(t);
				n.audioProfile = n.audioProfile && n.audioProfile[2];
				return n
			};
			var kt = function e(t) {
				return t.replace(/avc1\.(\d+)\.(\d+)/i, function(e) {
					return St([e])[0]
				})
			};
			var Et = function e(t, n, i) {
				return t + "/" + n + '; codecs="' + i.filter(function(e) {
					return !!e
				}).join(", ") + '"'
			};
			var Pt = function e(t) {
				if(t.segments && t.segments.length && t.segments[0].map) {
					return "mp4"
				}
				return "mp2t"
			};
			var Ct = function e(t) {
				var n = t.attributes || {};
				if(n.CODECS) {
					return Tt(n.CODECS)
				}
				return At
			};
			var wt = function e(t, n) {
				if(!t.mediaGroups.AUDIO || !n) {
					return null
				}
				var i = t.mediaGroups.AUDIO[n];
				if(!i) {
					return null
				}
				for(var r in i) {
					var a = i[r];
					if(a.default && a.playlists) {
						return Tt(a.playlists[0].attributes.CODECS).audioProfile
					}
				}
				return null
			};
			var jt = function e(n, i) {
				var r = Pt(i);
				var a = Ct(i);
				var s = i.attributes || {};
				var o = true;
				var l = false;
				if(!i) {
					return []
				}
				if(n.mediaGroups.AUDIO && s.AUDIO) {
					var u = n.mediaGroups.AUDIO[s.AUDIO];
					if(u) {
						l = true;
						o = false;
						for(var c in u) {
							if(!u[c].uri && !u[c].playlists) {
								o = true;
								break
							}
						}
					}
				}
				if(l && !a.audioProfile) {
					if(!o) {
						a.audioProfile = wt(n, s.AUDIO)
					}
					if(!a.audioProfile) {
						t.log.warn("Multiple audio tracks present but no audio codec string is specified. " + "Attempting to use the default audio codec (mp4a.40.2)");
						a.audioProfile = At.audioProfile
					}
				}
				var d = {};
				if(a.videoCodec) {
					d.video = "" + a.videoCodec + a.videoObjectTypeIndicator
				}
				if(a.audioProfile) {
					d.audio = "mp4a.40." + a.audioProfile
				}
				var f = Et("audio", r, [d.audio]);
				var p = Et("video", r, [d.video]);
				var h = Et("video", r, [d.video, d.audio]);
				if(l) {
					if(!o && d.video) {
						return [p, f]
					}
					if(!o && !d.video) {
						return [f, f]
					}
					return [h, f]
				}
				if(!d.video) {
					return [f]
				}
				return [h]
			};
			var It = function e(t) {
				var n = {
					type: "",
					parameters: {}
				};
				var i = t.trim().split(";");
				n.type = i.shift().trim();
				i.forEach(function(e) {
					var t = e.trim().split("=");
					if(t.length > 1) {
						var i = t[0].replace(/"/g, "").trim();
						var r = t[1].replace(/"/g, "").trim();
						n.parameters[i] = r
					}
				});
				return n
			};
			var Lt = function e(t) {
				return /mp4a\.\d+.\d+/i.test(t)
			};
			var Ot = function e(t) {
				return /avc1\.[\da-f]+/i.test(t)
			};
			var Nt = function e(t, n, i) {
				if(typeof n === "undefined" || n === null || !t.length) {
					return []
				}
				var r = Math.ceil((n - i + 3) * 9e4);
				var a = void 0;
				for(a = 0; a < t.length; a++) {
					if(t[a].pts > r) {
						break
					}
				}
				return t.slice(a)
			};
			var xt = function e(t, n, i) {
				if(!n.length) {
					return t
				}
				if(i) {
					return n.slice()
				}
				var r = n[0].pts;
				var a = 0;
				for(a; a < t.length; a++) {
					if(t[a].pts >= r) {
						break
					}
				}
				return t.slice(0, a).concat(n)
			};
			var Dt = function e(t, n, i, r) {
				var a = Math.ceil((n - r) * 9e4);
				var s = Math.ceil((i - r) * 9e4);
				var o = t.slice();
				var l = t.length;
				while(l--) {
					if(t[l].pts <= s) {
						break
					}
				}
				if(l === -1) {
					return o
				}
				var u = l + 1;
				while(u--) {
					if(t[u].pts <= a) {
						break
					}
				}
				u = Math.max(u, 0);
				o.splice(u, l - u + 1);
				return o
			};
			var Rt = function e(n, i, r) {
				var a = null;
				var s = null;
				var o = 0;
				var l = [];
				var u = [];
				if(!n && !i) {
					return t.createTimeRange()
				}
				if(!n) {
					return i.buffered
				}
				if(!i) {
					return n.buffered
				}
				if(r) {
					return n.buffered
				}
				if(n.buffered.length === 0 && i.buffered.length === 0) {
					return t.createTimeRange()
				}
				var c = n.buffered;
				var d = i.buffered;
				var f = c.length;
				while(f--) {
					l.push({
						time: c.start(f),
						type: "start"
					});
					l.push({
						time: c.end(f),
						type: "end"
					})
				}
				f = d.length;
				while(f--) {
					l.push({
						time: d.start(f),
						type: "start"
					});
					l.push({
						time: d.end(f),
						type: "end"
					})
				}
				l.sort(function(e, t) {
					return e.time - t.time
				});
				for(f = 0; f < l.length; f++) {
					if(l[f].type === "start") {
						o++;
						if(o === 2) {
							a = l[f].time
						}
					} else if(l[f].type === "end") {
						o--;
						if(o === 1) {
							s = l[f].time
						}
					}
					if(a !== null && s !== null) {
						u.push([a, s]);
						a = null;
						s = null
					}
				}
				return t.createTimeRanges(u)
			};
			var Ut = 9e4;
			var Mt = function e(t, n) {
				var i = t.addSourceBuffer(n);
				var r = Object.create(null);
				r.updating = false;
				r.realBuffer_ = i;
				var a = function e(t) {
					if(typeof i[t] === "function") {
						r[t] = function() {
							return i[t].apply(i, arguments)
						}
					} else if(typeof r[t] === "undefined") {
						Object.defineProperty(r, t, {
							get: function e() {
								return i[t]
							},
							set: function e(n) {
								return i[t] = n
							}
						})
					}
				};
				for(var s in i) {
					a(s)
				}
				return r
			};
			var Bt = function(e) {
				P(n, e);

				function n(e, i) {
					T(this, n);
					var r = C(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this, t.EventTarget));
					r.timestampOffset_ = 0;
					r.pendingBuffers_ = [];
					r.bufferUpdating_ = false;
					r.mediaSource_ = e;
					r.codecs_ = i;
					r.audioCodec_ = null;
					r.videoCodec_ = null;
					r.audioDisabled_ = false;
					r.appendAudioInitSegment_ = true;
					r.gopBuffer_ = [];
					r.timeMapping_ = 0;
					r.safeAppend_ = t.browser.IE_VERSION >= 11;
					var a = {
						remux: false,
						alignGopsAtEnd: r.safeAppend_
					};
					r.codecs_.forEach(function(e) {
						if(Lt(e)) {
							r.audioCodec_ = e
						} else if(Ot(e)) {
							r.videoCodec_ = e
						}
					});
					r.transmuxer_ = new bt;
					r.transmuxer_.postMessage({
						action: "init",
						options: a
					});
					r.transmuxer_.onmessage = function(e) {
						if(e.data.action === "data") {
							return r.data_(e)
						}
						if(e.data.action === "done") {
							return r.done_(e)
						}
						if(e.data.action === "gopInfo") {
							return r.appendGopInfo_(e)
						}
						if(e.data.action === "videoSegmentTimingInfo") {
							return r.videoSegmentTimingInfo_(e.data.videoSegmentTimingInfo)
						}
					};
					Object.defineProperty(r, "timestampOffset", {
						get: function e() {
							return this.timestampOffset_
						},
						set: function e(t) {
							if(typeof t === "number" && t >= 0) {
								this.timestampOffset_ = t;
								this.appendAudioInitSegment_ = true;
								this.gopBuffer_.length = 0;
								this.timeMapping_ = 0;
								this.transmuxer_.postMessage({
									action: "setTimestampOffset",
									timestampOffset: t
								})
							}
						}
					});
					Object.defineProperty(r, "appendWindowStart", {
						get: function e() {
							return(this.videoBuffer_ || this.audioBuffer_).appendWindowStart
						},
						set: function e(t) {
							if(this.videoBuffer_) {
								this.videoBuffer_.appendWindowStart = t
							}
							if(this.audioBuffer_) {
								this.audioBuffer_.appendWindowStart = t
							}
						}
					});
					Object.defineProperty(r, "updating", {
						get: function e() {
							return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating)
						}
					});
					Object.defineProperty(r, "buffered", {
						get: function e() {
							return Rt(this.videoBuffer_, this.audioBuffer_, this.audioDisabled_)
						}
					});
					return r
				}
				k(n, [{
					key: "data_",
					value: function e(t) {
						var n = t.data.segment;
						n.data = new Uint8Array(n.data, t.data.byteOffset, t.data.byteLength);
						n.initSegment = new Uint8Array(n.initSegment.data, n.initSegment.byteOffset, n.initSegment.byteLength);
						it(this, this.mediaSource_, n);
						this.pendingBuffers_.push(n);
						return
					}
				}, {
					key: "done_",
					value: function e(t) {
						if(this.mediaSource_.readyState === "closed") {
							this.pendingBuffers_.length = 0;
							return
						}
						this.processPendingSegments_();
						return
					}
				}, {
					key: "videoSegmentTimingInfo_",
					value: function e(t) {
						var n = {
							start: {
								decode: t.start.dts / Ut,
								presentation: t.start.pts / Ut
							},
							end: {
								decode: t.end.dts / Ut,
								presentation: t.end.pts / Ut
							},
							baseMediaDecodeTime: t.baseMediaDecodeTime / Ut
						};
						if(t.prependedContentDuration) {
							n.prependedContentDuration = t.prependedContentDuration / Ut
						}
						this.trigger({
							type: "videoSegmentTimingInfo",
							videoSegmentTimingInfo: n
						})
					}
				}, {
					key: "createRealSourceBuffers_",
					value: function e() {
						var t = this;
						var n = ["audio", "video"];
						n.forEach(function(e) {
							if(!t[e + "Codec_"]) {
								return
							}
							if(t[e + "Buffer_"]) {
								return
							}
							var i = null;
							if(t.mediaSource_[e + "Buffer_"]) {
								i = t.mediaSource_[e + "Buffer_"];
								i.updating = false
							} else {
								var r = e + "Codec_";
								var a = e + '/mp4;codecs="' + t[r] + '"';
								i = Mt(t.mediaSource_.nativeMediaSource_, a);
								t.mediaSource_[e + "Buffer_"] = i
							}
							t[e + "Buffer_"] = i;
							["update", "updatestart", "updateend"].forEach(function(r) {
								i.addEventListener(r, function() {
									if(e === "audio" && t.audioDisabled_) {
										return
									}
									if(r === "updateend") {
										t[e + "Buffer_"].updating = false
									}
									var i = n.every(function(n) {
										if(n === "audio" && t.audioDisabled_) {
											return true
										}
										if(e !== n && t[n + "Buffer_"] && t[n + "Buffer_"].updating) {
											return false
										}
										return true
									});
									if(i) {
										return t.trigger(r)
									}
								})
							})
						})
					}
				}, {
					key: "appendBuffer",
					value: function e(t) {
						this.bufferUpdating_ = true;
						if(this.audioBuffer_ && this.audioBuffer_.buffered.length) {
							var n = this.audioBuffer_.buffered;
							this.transmuxer_.postMessage({
								action: "setAudioAppendStart",
								appendStart: n.end(n.length - 1)
							})
						}
						if(this.videoBuffer_) {
							this.transmuxer_.postMessage({
								action: "alignGopsWith",
								gopsToAlignWith: Nt(this.gopBuffer_, this.mediaSource_.player_ ? this.mediaSource_.player_.currentTime() : null, this.timeMapping_)
							})
						}
						this.transmuxer_.postMessage({
							action: "push",
							data: t.buffer,
							byteOffset: t.byteOffset,
							byteLength: t.byteLength
						}, [t.buffer]);
						this.transmuxer_.postMessage({
							action: "flush"
						})
					}
				}, {
					key: "appendGopInfo_",
					value: function e(t) {
						this.gopBuffer_ = xt(this.gopBuffer_, t.data.gopInfo, this.safeAppend_)
					}
				}, {
					key: "remove",
					value: function e(t, n) {
						if(this.videoBuffer_) {
							this.videoBuffer_.updating = true;
							this.videoBuffer_.remove(t, n);
							this.gopBuffer_ = Dt(this.gopBuffer_, t, n, this.timeMapping_)
						}
						if(!this.audioDisabled_ && this.audioBuffer_) {
							this.audioBuffer_.updating = true;
							this.audioBuffer_.remove(t, n)
						}
						rt(t, n, this.metadataTrack_);
						if(this.inbandTextTracks_) {
							for(var i in this.inbandTextTracks_) {
								rt(t, n, this.inbandTextTracks_[i])
							}
						}
					}
				}, {
					key: "processPendingSegments_",
					value: function e() {
						var t = {
							video: {
								segments: [],
								bytes: 0
							},
							audio: {
								segments: [],
								bytes: 0
							},
							captions: [],
							metadata: []
						};
						if(!this.pendingBuffers_.length) {
							this.trigger("updateend");
							this.bufferUpdating_ = false;
							return
						}
						t = this.pendingBuffers_.reduce(function(e, t) {
							var n = t.type;
							var i = t.data;
							var r = t.initSegment;
							e[n].segments.push(i);
							e[n].bytes += i.byteLength;
							e[n].initSegment = r;
							if(t.captions) {
								e.captions = e.captions.concat(t.captions)
							}
							if(t.info) {
								e[n].info = t.info
							}
							if(t.metadata) {
								e.metadata = e.metadata.concat(t.metadata)
							}
							return e
						}, t);
						if(!this.videoBuffer_ && !this.audioBuffer_) {
							if(t.video.bytes === 0) {
								this.videoCodec_ = null
							}
							if(t.audio.bytes === 0) {
								this.audioCodec_ = null
							}
							this.createRealSourceBuffers_()
						}
						if(t.audio.info) {
							this.mediaSource_.trigger({
								type: "audioinfo",
								info: t.audio.info
							})
						}
						if(t.video.info) {
							this.mediaSource_.trigger({
								type: "videoinfo",
								info: t.video.info
							})
						}
						if(this.appendAudioInitSegment_) {
							if(!this.audioDisabled_ && this.audioBuffer_) {
								t.audio.segments.unshift(t.audio.initSegment);
								t.audio.bytes += t.audio.initSegment.byteLength
							}
							this.appendAudioInitSegment_ = false
						}
						var n = false;
						if(this.videoBuffer_ && t.video.bytes) {
							t.video.segments.unshift(t.video.initSegment);
							t.video.bytes += t.video.initSegment.byteLength;
							this.concatAndAppendSegments_(t.video, this.videoBuffer_)
						} else if(this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {
							n = true
						}
						ot(this, t.captions, t.metadata);
						if(!this.audioDisabled_ && this.audioBuffer_) {
							this.concatAndAppendSegments_(t.audio, this.audioBuffer_)
						}
						this.pendingBuffers_.length = 0;
						if(n) {
							this.trigger("updateend")
						}
						this.bufferUpdating_ = false
					}
				}, {
					key: "concatAndAppendSegments_",
					value: function e(t, n) {
						var i = 0;
						var r = void 0;
						if(t.bytes) {
							r = new Uint8Array(t.bytes);
							t.segments.forEach(function(e) {
								r.set(e, i);
								i += e.byteLength
							});
							try {
								n.updating = true;
								n.appendBuffer(r)
							} catch(e) {
								if(this.mediaSource_.player_) {
									this.mediaSource_.player_.error({
										code: -3,
										type: "APPEND_BUFFER_ERR",
										message: e.message,
										originalError: e
									})
								}
							}
						}
					}
				}, {
					key: "abort",
					value: function e() {
						if(this.videoBuffer_) {
							this.videoBuffer_.abort()
						}
						if(!this.audioDisabled_ && this.audioBuffer_) {
							this.audioBuffer_.abort()
						}
						if(this.transmuxer_) {
							this.transmuxer_.postMessage({
								action: "reset"
							})
						}
						this.pendingBuffers_.length = 0;
						this.bufferUpdating_ = false
					}
				}, {
					key: "dispose",
					value: function e() {
						this.trigger("dispose");
						this.off()
					}
				}]);
				return n
			}(t.EventTarget);
			var Ft = function(e) {
				P(n, e);

				function n() {
					T(this, n);
					var e = C(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this));
					var i = void 0;
					e.nativeMediaSource_ = new c.MediaSource;
					for(i in e.nativeMediaSource_) {
						if(!(i in n.prototype) && typeof e.nativeMediaSource_[i] === "function") {
							e[i] = e.nativeMediaSource_[i].bind(e.nativeMediaSource_)
						}
					}
					e.duration_ = NaN;
					Object.defineProperty(e, "duration", {
						get: function e() {
							if(this.duration_ === Infinity) {
								return this.duration_
							}
							return this.nativeMediaSource_.duration
						},
						set: function e(t) {
							this.duration_ = t;
							if(t !== Infinity) {
								this.nativeMediaSource_.duration = t;
								return
							}
						}
					});
					Object.defineProperty(e, "seekable", {
						get: function e() {
							if(this.duration_ === Infinity) {
								return t.createTimeRanges([
									[0, this.nativeMediaSource_.duration]
								])
							}
							return this.nativeMediaSource_.seekable
						}
					});
					Object.defineProperty(e, "readyState", {
						get: function e() {
							return this.nativeMediaSource_.readyState
						}
					});
					Object.defineProperty(e, "activeSourceBuffers", {
						get: function e() {
							return this.activeSourceBuffers_
						}
					});
					e.sourceBuffers = [];
					e.activeSourceBuffers_ = [];
					e.updateActiveSourceBuffers_ = function() {
						e.activeSourceBuffers_.length = 0;
						if(e.sourceBuffers.length === 1) {
							var t = e.sourceBuffers[0];
							t.appendAudioInitSegment_ = true;
							t.audioDisabled_ = !t.audioCodec_;
							e.activeSourceBuffers_.push(t);
							return
						}
						var n = false;
						var i = true;
						for(var r = 0; r < e.player_.audioTracks().length; r++) {
							var a = e.player_.audioTracks()[r];
							if(a.enabled && a.kind !== "main") {
								n = true;
								i = false;
								break
							}
						}
						e.sourceBuffers.forEach(function(t, r) {
							t.appendAudioInitSegment_ = true;
							if(t.videoCodec_ && t.audioCodec_) {
								t.audioDisabled_ = n
							} else if(t.videoCodec_ && !t.audioCodec_) {
								t.audioDisabled_ = true;
								i = false
							} else if(!t.videoCodec_ && t.audioCodec_) {
								t.audioDisabled_ = r ? i : !i;
								if(t.audioDisabled_) {
									return
								}
							}
							e.activeSourceBuffers_.push(t)
						})
					};
					e.onPlayerMediachange_ = function() {
						e.sourceBuffers.forEach(function(e) {
							e.appendAudioInitSegment_ = true
						})
					};
					e.onHlsReset_ = function() {
						e.sourceBuffers.forEach(function(e) {
							if(e.transmuxer_) {
								e.transmuxer_.postMessage({
									action: "resetCaptions"
								})
							}
						})
					};
					e.onHlsSegmentTimeMapping_ = function(t) {
						e.sourceBuffers.forEach(function(e) {
							return e.timeMapping_ = t.mapping
						})
					};
					["sourceopen", "sourceclose", "sourceended"].forEach(function(e) {
						this.nativeMediaSource_.addEventListener(e, this.trigger.bind(this))
					}, e);
					e.on("sourceopen", function(n) {
						var i = o.querySelector('[src="' + e.url_ + '"]');
						if(!i) {
							return
						}
						e.player_ = t(i.parentNode);
						if(!e.player_) {
							return
						}
						e.player_.tech_.on("hls-reset", e.onHlsReset_);
						e.player_.tech_.on("hls-segment-time-mapping", e.onHlsSegmentTimeMapping_);
						if(e.player_.audioTracks && e.player_.audioTracks()) {
							e.player_.audioTracks().on("change", e.updateActiveSourceBuffers_);
							e.player_.audioTracks().on("addtrack", e.updateActiveSourceBuffers_);
							e.player_.audioTracks().on("removetrack", e.updateActiveSourceBuffers_)
						}
						e.player_.on("mediachange", e.onPlayerMediachange_)
					});
					e.on("sourceended", function(t) {
						var n = st(e.duration);
						for(var i = 0; i < e.sourceBuffers.length; i++) {
							var r = e.sourceBuffers[i];
							var a = r.metadataTrack_ && r.metadataTrack_.cues;
							if(a && a.length) {
								a[a.length - 1].endTime = n
							}
						}
					});
					e.on("sourceclose", function(e) {
						this.sourceBuffers.forEach(function(e) {
							if(e.transmuxer_) {
								e.transmuxer_.terminate()
							}
						});
						this.sourceBuffers.length = 0;
						if(!this.player_) {
							return
						}
						if(this.player_.audioTracks && this.player_.audioTracks()) {
							this.player_.audioTracks().off("change", this.updateActiveSourceBuffers_);
							this.player_.audioTracks().off("addtrack", this.updateActiveSourceBuffers_);
							this.player_.audioTracks().off("removetrack", this.updateActiveSourceBuffers_)
						}
						if(this.player_.el_) {
							this.player_.off("mediachange", this.onPlayerMediachange_)
						}
						if(this.player_.tech_ && this.player_.tech_.el_) {
							this.player_.tech_.off("hls-reset", this.onHlsReset_);
							this.player_.tech_.off("hls-segment-time-mapping", this.onHlsSegmentTimeMapping_)
						}
					});
					return e
				}
				k(n, [{
					key: "addSeekableRange_",
					value: function e(t, n) {
						var i = void 0;
						if(this.duration !== Infinity) {
							i = new Error("MediaSource.addSeekableRange() can only be invoked " + "when the duration is Infinity");
							i.name = "InvalidStateError";
							i.code = 11;
							throw i
						}
						if(n > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {
							this.nativeMediaSource_.duration = n
						}
					}
				}, {
					key: "addSourceBuffer",
					value: function e(t) {
						var n = void 0;
						var i = It(t);
						if(/^(video|audio)\/mp2t$/i.test(i.type)) {
							var r = [];
							if(i.parameters && i.parameters.codecs) {
								r = i.parameters.codecs.split(",");
								r = St(r);
								r = r.filter(function(e) {
									return Lt(e) || Ot(e)
								})
							}
							if(r.length === 0) {
								r = ["avc1.4d400d", "mp4a.40.2"]
							}
							n = new Bt(this, r);
							if(this.sourceBuffers.length !== 0) {
								this.sourceBuffers[0].createRealSourceBuffers_();
								n.createRealSourceBuffers_();
								this.sourceBuffers[0].audioDisabled_ = true
							}
						} else {
							n = this.nativeMediaSource_.addSourceBuffer(t)
						}
						this.sourceBuffers.push(n);
						return n
					}
				}, {
					key: "dispose",
					value: function e() {
						this.trigger("dispose");
						this.off();
						this.sourceBuffers.forEach(function(e) {
							if(e.dispose) {
								e.dispose()
							}
						});
						this.sourceBuffers.length = 0
					}
				}]);
				return n
			}(t.EventTarget);
			var Vt = 0;
			t.mediaSources = {};
			var qt = function e(n, i) {
				var r = t.mediaSources[n];
				if(r) {
					r.trigger({
						type: "sourceopen",
						swfId: i
					})
				} else {
					throw new Error("Media Source not found (Video.js)")
				}
			};
			var Ht = function e() {
				return !!c.MediaSource && !!c.MediaSource.isTypeSupported && c.MediaSource.isTypeSupported('video/mp4;codecs="avc1.4d400d,mp4a.40.2"')
			};
			var Gt = function e() {
				this.MediaSource = {
					open: qt,
					supportsNativeMediaSources: Ht
				};
				if(Ht()) {
					return new Ft
				}
				throw new Error("Cannot use create a virtual MediaSource for this video")
			};
			Gt.open = qt;
			Gt.supportsNativeMediaSources = Ht;
			var Yt = {
				createObjectURL: function e(n) {
					var i = "blob:vjs-media-source/";
					var r = void 0;
					if(n instanceof Ft) {
						r = c.URL.createObjectURL(n.nativeMediaSource_);
						n.url_ = r;
						return r
					}
					if(!(n instanceof Ft)) {
						r = c.URL.createObjectURL(n);
						n.url_ = r;
						return r
					}
					r = i + Vt;
					Vt++;
					t.mediaSources[r] = n;
					return r
				}
			};
			t.MediaSource = Gt;
			t.URL = Yt;

			function zt(e) {
				return e && typeof e === "object" && "default" in e ? e["default"] : e
			}
			var Kt = zt(l);
			var Wt = zt(c);
			var Xt = function e(t, n) {
				if(/^[a-z]+:/i.test(n)) {
					return n
				}
				if(!/\/\//i.test(t)) {
					t = Kt.buildAbsoluteURL(Wt.location && Wt.location.href || "", t)
				}
				return Kt.buildAbsoluteURL(t, n)
			};
			var Jt = Xt;

			function Qt(e) {
				return e && typeof e === "object" && "default" in e ? e["default"] : e
			}
			var Zt = Qt(c);
			var $t = function e(t) {
				return Zt.atob ? Zt.atob(t) : Buffer.from(t, "base64").toString("binary")
			};

			function en(e) {
				var t = $t(e);
				var n = new Uint8Array(t.length);
				for(var i = 0; i < t.length; i++) {
					n[i] = t.charCodeAt(i)
				}
				return n
			}
			var tn = en;
			var nn = /[A-Z_a-z\xC0-\xD6\xD8-\xF6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/;
			var rn = new RegExp("[\\-\\.0-9" + nn.source.slice(1, -1) + "\\u00B7\\u0300-\\u036F\\u203F-\\u2040]");
			var an = new RegExp("^" + nn.source + rn.source + "*(?::" + nn.source + rn.source + "*)?$");
			var sn = 0;
			var on = 1;
			var ln = 2;
			var un = 3;
			var cn = 4;
			var dn = 5;
			var fn = 6;
			var pn = 7;

			function hn() {}
			hn.prototype = {
				parse: function e(t, n, i) {
					var r = this.domBuilder;
					r.startDocument();
					An(n, n = {});
					vn(t, n, i, r, this.errorHandler);
					r.endDocument()
				}
			};

			function vn(e, t, n, i, r) {
				function a(e) {
					if(e > 65535) {
						e -= 65536;
						var t = 55296 + (e >> 10),
							n = 56320 + (e & 1023);
						return String.fromCharCode(t, n)
					} else {
						return String.fromCharCode(e)
					}
				}

				function s(e) {
					var t = e.slice(1, -1);
					if(t in n) {
						return n[t]
					} else if(t.charAt(0) === "#") {
						return a(parseInt(t.substr(1).replace("x", "0x")))
					} else {
						r.error("entity not found:" + e);
						return e
					}
				}

				function o(t) {
					if(t > v) {
						var n = e.substring(v, t).replace(/&#?\w+;/g, s);
						f && l(v);
						i.characters(n, 0, t - v);
						v = t
					}
				}

				function l(t, n) {
					while(t >= c && (n = d.exec(e))) {
						u = n.index;
						c = u + n[0].length;
						f.lineNumber++
					}
					f.columnNumber = t - u + 1
				}
				var u = 0;
				var c = 0;
				var d = /.*(?:\r\n?|\n)|.*$/g;
				var f = i.locator;
				var p = [{
					currentNSMap: t
				}];
				var h = {};
				var v = 0;
				while(true) {
					try {
						var g = e.indexOf("<", v);
						if(g < 0) {
							if(!e.substr(v).match(/^\s*$/)) {
								var m = i.doc;
								var y = m.createTextNode(e.substr(v));
								m.appendChild(y);
								i.currentElement = y
							}
							return
						}
						if(g > v) {
							o(g)
						}
						switch(e.charAt(g + 1)) {
							case "/":
								var _ = e.indexOf(">", g + 3);
								var b = e.substring(g + 2, _);
								var A = p.pop();
								if(_ < 0) {
									b = e.substring(g + 2).replace(/[\s<].*/, "");
									r.error("end tag name: " + b + " is not complete:" + A.tagName);
									_ = g + 1 + b.length
								} else if(b.match(/\s</)) {
									b = b.replace(/[\s<].*/, "");
									r.error("end tag name: " + b + " maybe not complete");
									_ = g + 1 + b.length
								}
								var S = A.localNSMap;
								var T = A.tagName == b;
								var k = T || A.tagName && A.tagName.toLowerCase() == b.toLowerCase();
								if(k) {
									i.endElement(A.uri, A.localName, b);
									if(S) {
										for(var E in S) {
											i.endPrefixMapping(E)
										}
									}
									if(!T) {
										r.fatalError("end tag name: " + b + " is not match the current start tagName:" + A.tagName)
									}
								} else {
									p.push(A)
								}
								_++;
								break;
							case "?":
								f && l(g);
								_ = Tn(e, g, i);
								break;
							case "!":
								f && l(g);
								_ = Sn(e, g, i, r);
								break;
							default:
								f && l(g);
								var P = new kn;
								var C = p[p.length - 1].currentNSMap;
								var _ = mn(e, g, P, C, s, r);
								var w = P.length;
								if(!P.closed && bn(e, _, P.tagName, h)) {
									P.closed = true;
									if(!n.nbsp) {
										r.warning("unclosed xml attribute")
									}
								}
								if(f && w) {
									var j = gn(f, {});
									for(var I = 0; I < w; I++) {
										var L = P[I];
										l(L.offset);
										L.locator = gn(f, {})
									}
									i.locator = j;
									if(yn(P, i, C)) {
										p.push(P)
									}
									i.locator = f
								} else {
									if(yn(P, i, C)) {
										p.push(P)
									}
								}
								if(P.uri === "http://www.w3.org/1999/xhtml" && !P.closed) {
									_ = _n(e, _, P.tagName, s, i)
								} else {
									_++
								}
						}
					} catch(e) {
						r.error("element parse error: " + e);
						_ = -1
					}
					if(_ > v) {
						v = _
					} else {
						o(Math.max(g, v) + 1)
					}
				}
			}

			function gn(e, t) {
				t.lineNumber = e.lineNumber;
				t.columnNumber = e.columnNumber;
				return t
			}

			function mn(e, t, n, i, r, a) {
				var s;
				var o;
				var l = ++t;
				var u = sn;
				while(true) {
					var c = e.charAt(l);
					switch(c) {
						case "=":
							if(u === on) {
								s = e.slice(t, l);
								u = un
							} else if(u === ln) {
								u = un
							} else {
								throw new Error("attribute equal must after attrName")
							}
							break;
						case "'":
						case '"':
							if(u === un || u === on) {
								if(u === on) {
									a.warning('attribute value must after "="');
									s = e.slice(t, l)
								}
								t = l + 1;
								l = e.indexOf(c, t);
								if(l > 0) {
									o = e.slice(t, l).replace(/&#?\w+;/g, r);
									n.add(s, o, t - 1);
									u = dn
								} else {
									throw new Error("attribute value no end '" + c + "' match")
								}
							} else if(u == cn) {
								o = e.slice(t, l).replace(/&#?\w+;/g, r);
								n.add(s, o, t);
								a.warning('attribute "' + s + '" missed start quot(' + c + ")!!");
								t = l + 1;
								u = dn
							} else {
								throw new Error('attribute value must after "="')
							}
							break;
						case "/":
							switch(u) {
								case sn:
									n.setTagName(e.slice(t, l));
								case dn:
								case fn:
								case pn:
									u = pn;
									n.closed = true;
								case cn:
								case on:
								case ln:
									break;
								default:
									throw new Error("attribute invalid close char('/')")
							}
							break;
						case "":
							a.error("unexpected end of input");
							if(u == sn) {
								n.setTagName(e.slice(t, l))
							}
							return l;
						case ">":
							switch(u) {
								case sn:
									n.setTagName(e.slice(t, l));
								case dn:
								case fn:
								case pn:
									break;
								case cn:
								case on:
									o = e.slice(t, l);
									if(o.slice(-1) === "/") {
										n.closed = true;
										o = o.slice(0, -1)
									}
								case ln:
									if(u === ln) {
										o = s
									}
									if(u == cn) {
										a.warning('attribute "' + o + '" missed quot(")!!');
										n.add(s, o.replace(/&#?\w+;/g, r), t)
									} else {
										if(i[""] !== "http://www.w3.org/1999/xhtml" || !o.match(/^(?:disabled|checked|selected)$/i)) {
											a.warning('attribute "' + o + '" missed value!! "' + o + '" instead!!')
										}
										n.add(o, o, t)
									}
									break;
								case un:
									throw new Error("attribute value missed!!")
							}
							return l;
						case "\x80":
							c = " ";
						default:
							if(c <= " ") {
								switch(u) {
									case sn:
										n.setTagName(e.slice(t, l));
										u = fn;
										break;
									case on:
										s = e.slice(t, l);
										u = ln;
										break;
									case cn:
										var o = e.slice(t, l).replace(/&#?\w+;/g, r);
										a.warning('attribute "' + o + '" missed quot(")!!');
										n.add(s, o, t);
									case dn:
										u = fn;
										break
								}
							} else {
								switch(u) {
									case ln:
										var d = n.tagName;
										if(i[""] !== "http://www.w3.org/1999/xhtml" || !s.match(/^(?:disabled|checked|selected)$/i)) {
											a.warning('attribute "' + s + '" missed value!! "' + s + '" instead2!!')
										}
										n.add(s, s, t);
										t = l;
										u = on;
										break;
									case dn:
										a.warning('attribute space is required"' + s + '"!!');
									case fn:
										u = on;
										t = l;
										break;
									case un:
										u = cn;
										t = l;
										break;
									case pn:
										throw new Error("elements closed character '/' and '>' must be connected to")
								}
							}
					}
					l++
				}
			}

			function yn(e, t, n) {
				var i = e.tagName;
				var r = null;
				var a = e.length;
				while(a--) {
					var s = e[a];
					var o = s.qName;
					var l = s.value;
					var u = o.indexOf(":");
					if(u > 0) {
						var c = s.prefix = o.slice(0, u);
						var d = o.slice(u + 1);
						var f = c === "xmlns" && d
					} else {
						d = o;
						c = null;
						f = o === "xmlns" && ""
					}
					s.localName = d;
					if(f !== false) {
						if(r == null) {
							r = {};
							An(n, n = {})
						}
						n[f] = r[f] = l;
						s.uri = "http://www.w3.org/2000/xmlns/";
						t.startPrefixMapping(f, l)
					}
				}
				var a = e.length;
				while(a--) {
					s = e[a];
					var c = s.prefix;
					if(c) {
						if(c === "xml") {
							s.uri = "http://www.w3.org/XML/1998/namespace"
						}
						if(c !== "xmlns") {
							s.uri = n[c || ""]
						}
					}
				}
				var u = i.indexOf(":");
				if(u > 0) {
					c = e.prefix = i.slice(0, u);
					d = e.localName = i.slice(u + 1)
				} else {
					c = null;
					d = e.localName = i
				}
				var p = e.uri = n[c || ""];
				t.startElement(p, d, i, e);
				if(e.closed) {
					t.endElement(p, d, i);
					if(r) {
						for(c in r) {
							t.endPrefixMapping(c)
						}
					}
				} else {
					e.currentNSMap = n;
					e.localNSMap = r;
					return true
				}
			}

			function _n(e, t, n, i, r) {
				if(/^(?:script|textarea)$/i.test(n)) {
					var a = e.indexOf("</" + n + ">", t);
					var s = e.substring(t + 1, a);
					if(/[&<]/.test(s)) {
						if(/^script$/i.test(n)) {
							r.characters(s, 0, s.length);
							return a
						}
						s = s.replace(/&#?\w+;/g, i);
						r.characters(s, 0, s.length);
						return a
					}
				}
				return t + 1
			}

			function bn(e, t, n, i) {
				var r = i[n];
				if(r == null) {
					r = e.lastIndexOf("</" + n + ">");
					if(r < t) {
						r = e.lastIndexOf("</" + n)
					}
					i[n] = r
				}
				return r < t
			}

			function An(e, t) {
				for(var n in e) {
					t[n] = e[n]
				}
			}

			function Sn(e, t, n, i) {
				var r = e.charAt(t + 2);
				switch(r) {
					case "-":
						if(e.charAt(t + 3) === "-") {
							var a = e.indexOf("--\x3e", t + 4);
							if(a > t) {
								n.comment(e, t + 4, a - t - 4);
								return a + 3
							} else {
								i.error("Unclosed comment");
								return -1
							}
						} else {
							return -1
						}
					default:
						if(e.substr(t + 3, 6) == "CDATA[") {
							var a = e.indexOf("]]>", t + 9);
							n.startCDATA();
							n.characters(e, t + 9, a - t - 9);
							n.endCDATA();
							return a + 3
						}
						var s = Pn(e, t);
						var o = s.length;
						if(o > 1 && /!doctype/i.test(s[0][0])) {
							var l = s[1][0];
							var u = o > 3 && /^public$/i.test(s[2][0]) && s[3][0];
							var c = o > 4 && s[4][0];
							var d = s[o - 1];
							n.startDTD(l, u && u.replace(/^(['"])(.*?)\1$/, "$2"), c && c.replace(/^(['"])(.*?)\1$/, "$2"));
							n.endDTD();
							return d.index + d[0].length
						}
				}
				return -1
			}

			function Tn(e, t, n) {
				var i = e.indexOf("?>", t);
				if(i) {
					var r = e.substring(t, i).match(/^<\?(\S*)\s*([\s\S]*?)\s*$/);
					if(r) {
						var a = r[0].length;
						n.processingInstruction(r[1], r[2]);
						return i + 2
					} else {
						return -1
					}
				}
				return -1
			}

			function kn(e) {}
			kn.prototype = {
				setTagName: function e(t) {
					if(!an.test(t)) {
						throw new Error("invalid tagName:" + t)
					}
					this.tagName = t
				},
				add: function e(t, n, i) {
					if(!an.test(t)) {
						throw new Error("invalid attribute:" + t)
					}
					this[this.length++] = {
						qName: t,
						value: n,
						offset: i
					}
				},
				length: 0,
				getLocalName: function e(t) {
					return this[t].localName
				},
				getLocator: function e(t) {
					return this[t].locator
				},
				getQName: function e(t) {
					return this[t].qName
				},
				getURI: function e(t) {
					return this[t].uri
				},
				getValue: function e(t) {
					return this[t].value
				}
			};

			function En(e, t) {
				e.__proto__ = t;
				return e
			}
			if(!(En({}, En.prototype) instanceof En)) {
				En = function e(t, n) {
					function i() {}
					i.prototype = n;
					i = new i;
					for(n in t) {
						i[n] = t[n]
					}
					return i
				}
			}

			function Pn(e, t) {
				var n;
				var i = [];
				var r = /'[^']+'|"[^"]+"|[^\s<>\/=]+=?|(\/?\s*>|<)/g;
				r.lastIndex = t;
				r.exec(e);
				while(n = r.exec(e)) {
					i.push(n);
					if(n[1]) return i
				}
			}
			var Cn = hn;
			var wn = {
				XMLReader: Cn
			};

			function jn(e, t) {
				for(var n in e) {
					t[n] = e[n]
				}
			}

			function In(e, t) {
				var n = e.prototype;
				if(Object.create) {
					var i = Object.create(t.prototype);
					n.__proto__ = i
				}
				if(!(n instanceof t)) {
					var r = function e() {};
					r.prototype = t.prototype;
					r = new r;
					jn(n, r);
					e.prototype = n = r
				}
				if(n.constructor != e) {
					if(typeof e != "function") {
						console.error("unknow Class:" + e)
					}
					n.constructor = e
				}
			}
			var Ln = "http://www.w3.org/1999/xhtml";
			var On = {};
			var Nn = On.ELEMENT_NODE = 1;
			var xn = On.ATTRIBUTE_NODE = 2;
			var Dn = On.TEXT_NODE = 3;
			var Rn = On.CDATA_SECTION_NODE = 4;
			var Un = On.ENTITY_REFERENCE_NODE = 5;
			var Mn = On.ENTITY_NODE = 6;
			var Bn = On.PROCESSING_INSTRUCTION_NODE = 7;
			var Fn = On.COMMENT_NODE = 8;
			var Vn = On.DOCUMENT_NODE = 9;
			var qn = On.DOCUMENT_TYPE_NODE = 10;
			var Hn = On.DOCUMENT_FRAGMENT_NODE = 11;
			var Gn = On.NOTATION_NODE = 12;
			var Yn = {};
			var zn = {};
			var Kn = Yn.INDEX_SIZE_ERR = (zn[1] = "Index size error", 1);
			var Wn = Yn.DOMSTRING_SIZE_ERR = (zn[2] = "DOMString size error", 2);
			var Xn = Yn.HIERARCHY_REQUEST_ERR = (zn[3] = "Hierarchy request error", 3);
			var Jn = Yn.WRONG_DOCUMENT_ERR = (zn[4] = "Wrong document", 4);
			var Qn = Yn.INVALID_CHARACTER_ERR = (zn[5] = "Invalid character", 5);
			var Zn = Yn.NO_DATA_ALLOWED_ERR = (zn[6] = "No data allowed", 6);
			var $n = Yn.NO_MODIFICATION_ALLOWED_ERR = (zn[7] = "No modification allowed", 7);
			var ei = Yn.NOT_FOUND_ERR = (zn[8] = "Not found", 8);
			var ti = Yn.NOT_SUPPORTED_ERR = (zn[9] = "Not supported", 9);
			var ni = Yn.INUSE_ATTRIBUTE_ERR = (zn[10] = "Attribute in use", 10);
			var ii = Yn.INVALID_STATE_ERR = (zn[11] = "Invalid state", 11);
			var ri = Yn.SYNTAX_ERR = (zn[12] = "Syntax error", 12);
			var ai = Yn.INVALID_MODIFICATION_ERR = (zn[13] = "Invalid modification", 13);
			var si = Yn.NAMESPACE_ERR = (zn[14] = "Invalid namespace", 14);
			var oi = Yn.INVALID_ACCESS_ERR = (zn[15] = "Invalid access", 15);

			function li(e, t) {
				if(t instanceof Error) {
					var n = t
				} else {
					n = this;
					Error.call(this, zn[e]);
					this.message = zn[e];
					if(Error.captureStackTrace) Error.captureStackTrace(this, li)
				}
				n.code = e;
				if(t) this.message = this.message + ": " + t;
				return n
			}
			li.prototype = Error.prototype;
			jn(Yn, li);

			function ui() {}
			ui.prototype = {
				length: 0,
				item: function e(t) {
					return this[t] || null
				},
				toString: function e(t, n) {
					for(var i = [], r = 0; r < this.length; r++) {
						qi(this[r], i, t, n)
					}
					return i.join("")
				}
			};

			function ci(e, t) {
				this._node = e;
				this._refresh = t;
				di(this)
			}

			function di(e) {
				var t = e._node._inc || e._node.ownerDocument._inc;
				if(e._inc != t) {
					var n = e._refresh(e._node);
					Yi(e, "length", n.length);
					jn(n, e);
					e._inc = t
				}
			}
			ci.prototype.item = function(e) {
				di(this);
				return this[e]
			};
			In(ci, ui);

			function fi() {}

			function pi(e, t) {
				var n = e.length;
				while(n--) {
					if(e[n] === t) {
						return n
					}
				}
			}

			function hi(e, t, n, i) {
				if(i) {
					t[pi(t, i)] = n
				} else {
					t[t.length++] = n
				}
				if(e) {
					n.ownerElement = e;
					var r = e.ownerDocument;
					if(r) {
						i && Si(r, e, i);
						Ai(r, e, n)
					}
				}
			}

			function vi(e, t, n) {
				var i = pi(t, n);
				if(i >= 0) {
					var r = t.length - 1;
					while(i < r) {
						t[i] = t[++i]
					}
					t.length = r;
					if(e) {
						var a = e.ownerDocument;
						if(a) {
							Si(a, e, n);
							n.ownerElement = null
						}
					}
				} else {
					throw li(ei, new Error(e.tagName + "@" + n))
				}
			}
			fi.prototype = {
				length: 0,
				item: ui.prototype.item,
				getNamedItem: function e(t) {
					var n = this.length;
					while(n--) {
						var i = this[n];
						if(i.nodeName == t) {
							return i
						}
					}
				},
				setNamedItem: function e(t) {
					var n = t.ownerElement;
					if(n && n != this._ownerElement) {
						throw new li(ni)
					}
					var i = this.getNamedItem(t.nodeName);
					hi(this._ownerElement, this, t, i);
					return i
				},
				setNamedItemNS: function e(t) {
					var n = t.ownerElement,
						i;
					if(n && n != this._ownerElement) {
						throw new li(ni)
					}
					i = this.getNamedItemNS(t.namespaceURI, t.localName);
					hi(this._ownerElement, this, t, i);
					return i
				},
				removeNamedItem: function e(t) {
					var n = this.getNamedItem(t);
					vi(this._ownerElement, this, n);
					return n
				},
				removeNamedItemNS: function e(t, n) {
					var i = this.getNamedItemNS(t, n);
					vi(this._ownerElement, this, i);
					return i
				},
				getNamedItemNS: function e(t, n) {
					var i = this.length;
					while(i--) {
						var r = this[i];
						if(r.localName == n && r.namespaceURI == t) {
							return r
						}
					}
					return null
				}
			};

			function gi(e) {
				this._features = {};
				if(e) {
					for(var t in e) {
						this._features = e[t]
					}
				}
			}
			gi.prototype = {
				hasFeature: function e(t, n) {
					var i = this._features[t.toLowerCase()];
					if(i && (!n || n in i)) {
						return true
					} else {
						return false
					}
				},
				createDocument: function e(t, n, i) {
					var r = new bi;
					r.implementation = this;
					r.childNodes = new ui;
					r.doctype = i;
					if(i) {
						r.appendChild(i)
					}
					if(n) {
						var a = r.createElementNS(t, n);
						r.appendChild(a)
					}
					return r
				},
				createDocumentType: function e(t, n, i) {
					var r = new Ni;
					r.name = t;
					r.nodeName = t;
					r.publicId = n;
					r.systemId = i;
					return r
				}
			};

			function mi() {}
			mi.prototype = {
				firstChild: null,
				lastChild: null,
				previousSibling: null,
				nextSibling: null,
				attributes: null,
				parentNode: null,
				childNodes: null,
				ownerDocument: null,
				nodeValue: null,
				namespaceURI: null,
				prefix: null,
				localName: null,
				insertBefore: function e(t, n) {
					return Ei(this, t, n)
				},
				replaceChild: function e(t, n) {
					this.insertBefore(t, n);
					if(n) {
						this.removeChild(n)
					}
				},
				removeChild: function e(t) {
					return ki(this, t)
				},
				appendChild: function e(t) {
					return this.insertBefore(t, null)
				},
				hasChildNodes: function e() {
					return this.firstChild != null
				},
				cloneNode: function e(t) {
					return Gi(this.ownerDocument || this, this, t)
				},
				normalize: function e() {
					var t = this.firstChild;
					while(t) {
						var n = t.nextSibling;
						if(n && n.nodeType == Dn && t.nodeType == Dn) {
							this.removeChild(n);
							t.appendData(n.data)
						} else {
							t.normalize();
							t = n
						}
					}
				},
				isSupported: function e(t, n) {
					return this.ownerDocument.implementation.hasFeature(t, n)
				},
				hasAttributes: function e() {
					return this.attributes.length > 0
				},
				lookupPrefix: function e(t) {
					var n = this;
					while(n) {
						var i = n._nsMap;
						if(i) {
							for(var r in i) {
								if(i[r] == t) {
									return r
								}
							}
						}
						n = n.nodeType == xn ? n.ownerDocument : n.parentNode
					}
					return null
				},
				lookupNamespaceURI: function e(t) {
					var n = this;
					while(n) {
						var i = n._nsMap;
						if(i) {
							if(t in i) {
								return i[t]
							}
						}
						n = n.nodeType == xn ? n.ownerDocument : n.parentNode
					}
					return null
				},
				isDefaultNamespace: function e(t) {
					var n = this.lookupPrefix(t);
					return n == null
				}
			};

			function yi(e) {
				return e == "<" && "&lt;" || e == ">" && "&gt;" || e == "&" && "&amp;" || e == '"' && "&quot;" || "&#" + e.charCodeAt() + ";"
			}
			jn(On, mi);
			jn(On, mi.prototype);

			function _i(e, t) {
				if(t(e)) {
					return true
				}
				if(e = e.firstChild) {
					do {
						if(_i(e, t)) {
							return true
						}
					} while (e = e.nextSibling)
				}
			}

			function bi() {}

			function Ai(e, t, n) {
				e && e._inc++;
				var i = n.namespaceURI;
				if(i == "http://www.w3.org/2000/xmlns/") {
					t._nsMap[n.prefix ? n.localName : ""] = n.value
				}
			}

			function Si(e, t, n, i) {
				e && e._inc++;
				var r = n.namespaceURI;
				if(r == "http://www.w3.org/2000/xmlns/") {
					delete t._nsMap[n.prefix ? n.localName : ""]
				}
			}

			function Ti(e, t, n) {
				if(e && e._inc) {
					e._inc++;
					var i = t.childNodes;
					if(n) {
						i[i.length++] = n
					} else {
						var r = t.firstChild;
						var a = 0;
						while(r) {
							i[a++] = r;
							r = r.nextSibling
						}
						i.length = a
					}
				}
			}

			function ki(e, t) {
				var n = t.previousSibling;
				var i = t.nextSibling;
				if(n) {
					n.nextSibling = i
				} else {
					e.firstChild = i
				}
				if(i) {
					i.previousSibling = n
				} else {
					e.lastChild = n
				}
				Ti(e.ownerDocument, e);
				return t
			}

			function Ei(e, t, n) {
				var i = t.parentNode;
				if(i) {
					i.removeChild(t)
				}
				if(t.nodeType === Hn) {
					var r = t.firstChild;
					if(r == null) {
						return t
					}
					var a = t.lastChild
				} else {
					r = a = t
				}
				var s = n ? n.previousSibling : e.lastChild;
				r.previousSibling = s;
				a.nextSibling = n;
				if(s) {
					s.nextSibling = r
				} else {
					e.firstChild = r
				}
				if(n == null) {
					e.lastChild = a
				} else {
					n.previousSibling = a
				}
				do {
					r.parentNode = e
				} while (r !== a && (r = r.nextSibling));
				Ti(e.ownerDocument || e, e);
				if(t.nodeType == Hn) {
					t.firstChild = t.lastChild = null
				}
				return t
			}

			function Pi(e, t) {
				var n = t.parentNode;
				if(n) {
					var i = e.lastChild;
					n.removeChild(t);
					var i = e.lastChild
				}
				var i = e.lastChild;
				t.parentNode = e;
				t.previousSibling = i;
				t.nextSibling = null;
				if(i) {
					i.nextSibling = t
				} else {
					e.firstChild = t
				}
				e.lastChild = t;
				Ti(e.ownerDocument, e, t);
				return t
			}
			bi.prototype = {
				nodeName: "#document",
				nodeType: Vn,
				doctype: null,
				documentElement: null,
				_inc: 1,
				insertBefore: function e(t, n) {
					if(t.nodeType == Hn) {
						var i = t.firstChild;
						while(i) {
							var r = i.nextSibling;
							this.insertBefore(i, n);
							i = r
						}
						return t
					}
					if(this.documentElement == null && t.nodeType == Nn) {
						this.documentElement = t
					}
					return Ei(this, t, n), t.ownerDocument = this, t
				},
				removeChild: function e(t) {
					if(this.documentElement == t) {
						this.documentElement = null
					}
					return ki(this, t)
				},
				importNode: function e(t, n) {
					return Hi(this, t, n)
				},
				getElementById: function e(t) {
					var n = null;
					_i(this.documentElement, function(e) {
						if(e.nodeType == Nn) {
							if(e.getAttribute("id") == t) {
								n = e;
								return true
							}
						}
					});
					return n
				},
				createElement: function e(t) {
					var n = new Ci;
					n.ownerDocument = this;
					n.nodeName = t;
					n.tagName = t;
					n.childNodes = new ui;
					var i = n.attributes = new fi;
					i._ownerElement = n;
					return n
				},
				createDocumentFragment: function e() {
					var t = new Ui;
					t.ownerDocument = this;
					t.childNodes = new ui;
					return t
				},
				createTextNode: function e(t) {
					var n = new Ii;
					n.ownerDocument = this;
					n.appendData(t);
					return n
				},
				createComment: function e(t) {
					var n = new Li;
					n.ownerDocument = this;
					n.appendData(t);
					return n
				},
				createCDATASection: function e(t) {
					var n = new Oi;
					n.ownerDocument = this;
					n.appendData(t);
					return n
				},
				createProcessingInstruction: function e(t, n) {
					var i = new Mi;
					i.ownerDocument = this;
					i.tagName = i.target = t;
					i.nodeValue = i.data = n;
					return i
				},
				createAttribute: function e(t) {
					var n = new wi;
					n.ownerDocument = this;
					n.name = t;
					n.nodeName = t;
					n.localName = t;
					n.specified = true;
					return n
				},
				createEntityReference: function e(t) {
					var n = new Ri;
					n.ownerDocument = this;
					n.nodeName = t;
					return n
				},
				createElementNS: function e(t, n) {
					var i = new Ci;
					var r = n.split(":");
					var a = i.attributes = new fi;
					i.childNodes = new ui;
					i.ownerDocument = this;
					i.nodeName = n;
					i.tagName = n;
					i.namespaceURI = t;
					if(r.length == 2) {
						i.prefix = r[0];
						i.localName = r[1]
					} else {
						i.localName = n
					}
					a._ownerElement = i;
					return i
				},
				createAttributeNS: function e(t, n) {
					var i = new wi;
					var r = n.split(":");
					i.ownerDocument = this;
					i.nodeName = n;
					i.name = n;
					i.namespaceURI = t;
					i.specified = true;
					if(r.length == 2) {
						i.prefix = r[0];
						i.localName = r[1]
					} else {
						i.localName = n
					}
					return i
				}
			};
			In(bi, mi);

			function Ci() {
				this._nsMap = {}
			}
			Ci.prototype = {
				nodeType: Nn,
				hasAttribute: function e(t) {
					return this.getAttributeNode(t) != null
				},
				getAttribute: function e(t) {
					var n = this.getAttributeNode(t);
					return n && n.value || ""
				},
				getAttributeNode: function e(t) {
					return this.attributes.getNamedItem(t)
				},
				setAttribute: function e(t, n) {
					var i = this.ownerDocument.createAttribute(t);
					i.value = i.nodeValue = "" + n;
					this.setAttributeNode(i)
				},
				removeAttribute: function e(t) {
					var n = this.getAttributeNode(t);
					n && this.removeAttributeNode(n)
				},
				appendChild: function e(t) {
					if(t.nodeType === Hn) {
						return this.insertBefore(t, null)
					} else {
						return Pi(this, t)
					}
				},
				setAttributeNode: function e(t) {
					return this.attributes.setNamedItem(t)
				},
				setAttributeNodeNS: function e(t) {
					return this.attributes.setNamedItemNS(t)
				},
				removeAttributeNode: function e(t) {
					return this.attributes.removeNamedItem(t.nodeName)
				},
				removeAttributeNS: function e(t, n) {
					var i = this.getAttributeNodeNS(t, n);
					i && this.removeAttributeNode(i)
				},
				hasAttributeNS: function e(t, n) {
					return this.getAttributeNodeNS(t, n) != null
				},
				getAttributeNS: function e(t, n) {
					var i = this.getAttributeNodeNS(t, n);
					return i && i.value || ""
				},
				setAttributeNS: function e(t, n, i) {
					var r = this.ownerDocument.createAttributeNS(t, n);
					r.value = r.nodeValue = "" + i;
					this.setAttributeNode(r)
				},
				getAttributeNodeNS: function e(t, n) {
					return this.attributes.getNamedItemNS(t, n)
				},
				getElementsByTagName: function e(t) {
					return new ci(this, function(e) {
						var n = [];
						_i(e, function(i) {
							if(i !== e && i.nodeType == Nn && (t === "*" || i.tagName == t)) {
								n.push(i)
							}
						});
						return n
					})
				},
				getElementsByTagNameNS: function e(t, n) {
					return new ci(this, function(e) {
						var i = [];
						_i(e, function(r) {
							if(r !== e && r.nodeType === Nn && (t === "*" || r.namespaceURI === t) && (n === "*" || r.localName == n)) {
								i.push(r)
							}
						});
						return i
					})
				}
			};
			bi.prototype.getElementsByTagName = Ci.prototype.getElementsByTagName;
			bi.prototype.getElementsByTagNameNS = Ci.prototype.getElementsByTagNameNS;
			In(Ci, mi);

			function wi() {}
			wi.prototype.nodeType = xn;
			In(wi, mi);

			function ji() {}
			ji.prototype = {
				data: "",
				substringData: function e(t, n) {
					return this.data.substring(t, t + n)
				},
				appendData: function e(t) {
					t = this.data + t;
					this.nodeValue = this.data = t;
					this.length = t.length
				},
				insertData: function e(t, n) {
					this.replaceData(t, 0, n)
				},
				appendChild: function e(t) {
					throw new Error(zn[Xn])
				},
				deleteData: function e(t, n) {
					this.replaceData(t, n, "")
				},
				replaceData: function e(t, n, i) {
					var r = this.data.substring(0, t);
					var a = this.data.substring(t + n);
					i = r + i + a;
					this.nodeValue = this.data = i;
					this.length = i.length
				}
			};
			In(ji, mi);

			function Ii() {}
			Ii.prototype = {
				nodeName: "#text",
				nodeType: Dn,
				splitText: function e(t) {
					var n = this.data;
					var i = n.substring(t);
					n = n.substring(0, t);
					this.data = this.nodeValue = n;
					this.length = n.length;
					var r = this.ownerDocument.createTextNode(i);
					if(this.parentNode) {
						this.parentNode.insertBefore(r, this.nextSibling)
					}
					return r
				}
			};
			In(Ii, ji);

			function Li() {}
			Li.prototype = {
				nodeName: "#comment",
				nodeType: Fn
			};
			In(Li, ji);

			function Oi() {}
			Oi.prototype = {
				nodeName: "#cdata-section",
				nodeType: Rn
			};
			In(Oi, ji);

			function Ni() {}
			Ni.prototype.nodeType = qn;
			In(Ni, mi);

			function xi() {}
			xi.prototype.nodeType = Gn;
			In(xi, mi);

			function Di() {}
			Di.prototype.nodeType = Mn;
			In(Di, mi);

			function Ri() {}
			Ri.prototype.nodeType = Un;
			In(Ri, mi);

			function Ui() {}
			Ui.prototype.nodeName = "#document-fragment";
			Ui.prototype.nodeType = Hn;
			In(Ui, mi);

			function Mi() {}
			Mi.prototype.nodeType = Bn;
			In(Mi, mi);

			function Bi() {}
			Bi.prototype.serializeToString = function(e, t, n) {
				return Fi.call(e, t, n)
			};
			mi.prototype.toString = Fi;

			function Fi(e, t) {
				var n = [];
				var i = this.nodeType == 9 ? this.documentElement : this;
				var r = i.prefix;
				var a = i.namespaceURI;
				if(a && r == null) {
					var r = i.lookupPrefix(a);
					if(r == null) {
						var s = [{
							namespace: a,
							prefix: null
						}]
					}
				}
				qi(this, n, e, t, s);
				return n.join("")
			}

			function Vi(e, t, n) {
				var i = e.prefix || "";
				var r = e.namespaceURI;
				if(!i && !r) {
					return false
				}
				if(i === "xml" && r === "http://www.w3.org/XML/1998/namespace" || r == "http://www.w3.org/2000/xmlns/") {
					return false
				}
				var a = n.length;
				while(a--) {
					var s = n[a];
					if(s.prefix == i) {
						return s.namespace != r
					}
				}
				return true
			}

			function qi(e, t, n, i, r) {
				if(i) {
					e = i(e);
					if(e) {
						if(typeof e == "string") {
							t.push(e);
							return
						}
					} else {
						return
					}
				}
				switch(e.nodeType) {
					case Nn:
						if(!r) r = [];
						var a = r.length;
						var s = e.attributes;
						var o = s.length;
						var l = e.firstChild;
						var u = e.tagName;
						n = Ln === e.namespaceURI || n;
						t.push("<", u);
						for(var c = 0; c < o; c++) {
							var d = s.item(c);
							if(d.prefix == "xmlns") {
								r.push({
									prefix: d.localName,
									namespace: d.value
								})
							} else if(d.nodeName == "xmlns") {
								r.push({
									prefix: "",
									namespace: d.value
								})
							}
						}
						for(var c = 0; c < o; c++) {
							var d = s.item(c);
							if(Vi(d, n, r)) {
								var f = d.prefix || "";
								var p = d.namespaceURI;
								var h = f ? " xmlns:" + f : " xmlns";
								t.push(h, '="', p, '"');
								r.push({
									prefix: f,
									namespace: p
								})
							}
							qi(d, t, n, i, r)
						}
						if(Vi(e, n, r)) {
							var f = e.prefix || "";
							var p = e.namespaceURI;
							var h = f ? " xmlns:" + f : " xmlns";
							t.push(h, '="', p, '"');
							r.push({
								prefix: f,
								namespace: p
							})
						}
						if(l || n && !/^(?:meta|link|img|br|hr|input)$/i.test(u)) {
							t.push(">");
							if(n && /^script$/i.test(u)) {
								while(l) {
									if(l.data) {
										t.push(l.data)
									} else {
										qi(l, t, n, i, r)
									}
									l = l.nextSibling
								}
							} else {
								while(l) {
									qi(l, t, n, i, r);
									l = l.nextSibling
								}
							}
							t.push("</", u, ">")
						} else {
							t.push("/>")
						}
						return;
					case Vn:
					case Hn:
						var l = e.firstChild;
						while(l) {
							qi(l, t, n, i, r);
							l = l.nextSibling
						}
						return;
					case xn:
						return t.push(" ", e.name, '="', e.value.replace(/[<&"]/g, yi), '"');
					case Dn:
						return t.push(e.data.replace(/[<&]/g, yi));
					case Rn:
						return t.push("<![CDATA[", e.data, "]]>");
					case Fn:
						return t.push("\x3c!--", e.data, "--\x3e");
					case qn:
						var v = e.publicId;
						var g = e.systemId;
						t.push("<!DOCTYPE ", e.name);
						if(v) {
							t.push(' PUBLIC "', v);
							if(g && g != ".") {
								t.push('" "', g)
							}
							t.push('">')
						} else if(g && g != ".") {
							t.push(' SYSTEM "', g, '">')
						} else {
							var m = e.internalSubset;
							if(m) {
								t.push(" [", m, "]")
							}
							t.push(">")
						}
						return;
					case Bn:
						return t.push("<?", e.target, " ", e.data, "?>");
					case Un:
						return t.push("&", e.nodeName, ";");
					default:
						t.push("??", e.nodeName)
				}
			}

			function Hi(e, t, n) {
				var i;
				switch(t.nodeType) {
					case Nn:
						i = t.cloneNode(false);
						i.ownerDocument = e;
					case Hn:
						break;
					case xn:
						n = true;
						break
				}
				if(!i) {
					i = t.cloneNode(false)
				}
				i.ownerDocument = e;
				i.parentNode = null;
				if(n) {
					var r = t.firstChild;
					while(r) {
						i.appendChild(Hi(e, r, n));
						r = r.nextSibling
					}
				}
				return i
			}

			function Gi(e, t, n) {
				var i = new t.constructor;
				for(var r in t) {
					var a = t[r];
					if(typeof a != "object") {
						if(a != i[r]) {
							i[r] = a
						}
					}
				}
				if(t.childNodes) {
					i.childNodes = new ui
				}
				i.ownerDocument = e;
				switch(i.nodeType) {
					case Nn:
						var s = t.attributes;
						var o = i.attributes = new fi;
						var l = s.length;
						o._ownerElement = i;
						for(var u = 0; u < l; u++) {
							i.setAttributeNode(Gi(e, s.item(u), true))
						}
						break;
					case xn:
						n = true
				}
				if(n) {
					var c = t.firstChild;
					while(c) {
						i.appendChild(Gi(e, c, n));
						c = c.nextSibling
					}
				}
				return i
			}

			function Yi(e, t, n) {
				e[t] = n
			}
			try {
				if(Object.defineProperty) {
					var zi = function e(t) {
						switch(t.nodeType) {
							case Nn:
							case Hn:
								var n = [];
								t = t.firstChild;
								while(t) {
									if(t.nodeType !== 7 && t.nodeType !== 8) {
										n.push(e(t))
									}
									t = t.nextSibling
								}
								return n.join("");
							default:
								return t.nodeValue
						}
					};
					Object.defineProperty(ci.prototype, "length", {
						get: function e() {
							di(this);
							return this.$$length
						}
					});
					Object.defineProperty(mi.prototype, "textContent", {
						get: function e() {
							return zi(this)
						},
						set: function e(t) {
							switch(this.nodeType) {
								case Nn:
								case Hn:
									while(this.firstChild) {
										this.removeChild(this.firstChild)
									}
									if(t || String(t)) {
										this.appendChild(this.ownerDocument.createTextNode(t))
									}
									break;
								default:
									this.data = t;
									this.value = t;
									this.nodeValue = t
							}
						}
					});
					Yi = function e(t, n, i) {
						t["$$" + n] = i
					}
				}
			} catch(e) {}
			var Ki = gi;
			var Wi = Bi;
			var Xi = {
				DOMImplementation: Ki,
				XMLSerializer: Wi
			};
			var Ji = i(function(e, t) {
				function n(e) {
					this.options = e || {
						locator: {}
					}
				}
				n.prototype.parseFromString = function(e, t) {
					var n = this.options;
					var a = new u;
					var s = n.domBuilder || new r;
					var o = n.errorHandler;
					var l = n.locator;
					var c = n.xmlns || {};
					var d = {
						lt: "<",
						gt: ">",
						amp: "&",
						quot: '"',
						apos: "'"
					};
					if(l) {
						s.setDocumentLocator(l)
					}
					a.errorHandler = i(o, s, l);
					a.domBuilder = n.domBuilder || s;
					if(/\/x?html?$/.test(t)) {
						d.nbsp = "\xa0";
						d.copy = "\xa9";
						c[""] = "http://www.w3.org/1999/xhtml"
					}
					c.xml = c.xml || "http://www.w3.org/XML/1998/namespace";
					if(e) {
						a.parse(e, c, d)
					} else {
						a.errorHandler.error("invalid doc source")
					}
					return s.doc
				};

				function i(e, t, n) {
					if(!e) {
						if(t instanceof r) {
							return t
						}
						e = t
					}
					var i = {};
					var a = e instanceof Function;
					n = n || {};

					function o(t) {
						var r = e[t];
						if(!r && a) {
							r = e.length == 2 ? function(n) {
								e(t, n)
							} : e
						}
						i[t] = r && function(e) {
							r("[xmldom " + t + "]\t" + e + s(n))
						} || function() {}
					}
					o("warning");
					o("error");
					o("fatalError");
					return i
				}

				function r() {
					this.cdata = false
				}

				function a(e, t) {
					t.lineNumber = e.lineNumber;
					t.columnNumber = e.columnNumber
				}
				r.prototype = {
					startDocument: function e() {
						this.doc = (new c).createDocument(null, null, null);
						if(this.locator) {
							this.doc.documentURI = this.locator.systemId
						}
					},
					startElement: function e(t, n, i, r) {
						var s = this.doc;
						var o = s.createElementNS(t, i || n);
						var u = r.length;
						l(this, o);
						this.currentElement = o;
						this.locator && a(this.locator, o);
						for(var c = 0; c < u; c++) {
							var t = r.getURI(c);
							var d = r.getValue(c);
							var i = r.getQName(c);
							var f = s.createAttributeNS(t, i);
							this.locator && a(r.getLocator(c), f);
							f.value = f.nodeValue = d;
							o.setAttributeNode(f)
						}
					},
					endElement: function e(t, n, i) {
						var r = this.currentElement;
						var a = r.tagName;
						this.currentElement = r.parentNode
					},
					startPrefixMapping: function e(t, n) {},
					endPrefixMapping: function e(t) {},
					processingInstruction: function e(t, n) {
						var i = this.doc.createProcessingInstruction(t, n);
						this.locator && a(this.locator, i);
						l(this, i)
					},
					ignorableWhitespace: function e(t, n, i) {},
					characters: function e(t, n, i) {
						t = o.apply(this, arguments);
						if(t) {
							if(this.cdata) {
								var r = this.doc.createCDATASection(t)
							} else {
								var r = this.doc.createTextNode(t)
							}
							if(this.currentElement) {
								this.currentElement.appendChild(r)
							} else if(/^\s*$/.test(t)) {
								this.doc.appendChild(r)
							}
							this.locator && a(this.locator, r)
						}
					},
					skippedEntity: function e(t) {},
					endDocument: function e() {
						this.doc.normalize()
					},
					setDocumentLocator: function e(t) {
						if(this.locator = t) {
							t.lineNumber = 0
						}
					},
					comment: function e(t, n, i) {
						t = o.apply(this, arguments);
						var r = this.doc.createComment(t);
						this.locator && a(this.locator, r);
						l(this, r)
					},
					startCDATA: function e() {
						this.cdata = true
					},
					endCDATA: function e() {
						this.cdata = false
					},
					startDTD: function e(t, n, i) {
						var r = this.doc.implementation;
						if(r && r.createDocumentType) {
							var s = r.createDocumentType(t, n, i);
							this.locator && a(this.locator, s);
							l(this, s)
						}
					},
					warning: function e(t) {
						console.warn("[xmldom warning]\t" + t, s(this.locator))
					},
					error: function e(t) {
						console.error("[xmldom error]\t" + t, s(this.locator))
					},
					fatalError: function e(t) {
						console.error("[xmldom fatalError]\t" + t, s(this.locator));
						throw t
					}
				};

				function s(e) {
					if(e) {
						return "\n@" + (e.systemId || "") + "#[line:" + e.lineNumber + ",col:" + e.columnNumber + "]"
					}
				}

				function o(e, t, n) {
					if(typeof e == "string") {
						return e.substr(t, n)
					} else {
						if(e.length >= t + n || t) {
							return new java.lang.String(e, t, n) + ""
						}
						return e
					}
				}
				"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl".replace(/\w+/g, function(e) {
					r.prototype[e] = function() {
						return null
					}
				});

				function l(e, t) {
					if(!e.currentElement) {
						e.doc.appendChild(t)
					} else {
						e.currentElement.appendChild(t)
					}
				}
				var u = wn.XMLReader;
				var c = t.DOMImplementation = Xi.DOMImplementation;
				t.XMLSerializer = Xi.XMLSerializer;
				t.DOMParser = n
			});
			var Qi = Ji.DOMImplementation;
			var Zi = Ji.XMLSerializer;
			var $i = Ji.DOMParser;
			var er = function e(t) {
				return !!t && typeof t === "object"
			};
			var tr = function e() {
				for(var t = arguments.length, n = new Array(t), i = 0; i < t; i++) {
					n[i] = arguments[i]
				}
				return n.reduce(function(t, n) {
					Object.keys(n).forEach(function(i) {
						if(Array.isArray(t[i]) && Array.isArray(n[i])) {
							t[i] = t[i].concat(n[i])
						} else if(er(t[i]) && er(n[i])) {
							t[i] = e(t[i], n[i])
						} else {
							t[i] = n[i]
						}
					});
					return t
				}, {})
			};
			var nr = function e(t) {
				return Object.keys(t).map(function(e) {
					return t[e]
				})
			};
			var ir = function e(t, n) {
				var i = [];
				for(var r = t; r < n; r++) {
					i.push(r)
				}
				return i
			};
			var rr = function e(t) {
				return t.reduce(function(e, t) {
					return e.concat(t)
				}, [])
			};
			var ar = function e(t) {
				if(!t.length) {
					return []
				}
				var n = [];
				for(var i = 0; i < t.length; i++) {
					n.push(t[i])
				}
				return n
			};
			var sr = function e(t, n) {
				return t.reduce(function(e, t, i) {
					if(t[n]) {
						e.push(i)
					}
					return e
				}, [])
			};
			var or = {
				INVALID_NUMBER_OF_PERIOD: "INVALID_NUMBER_OF_PERIOD",
				DASH_EMPTY_MANIFEST: "DASH_EMPTY_MANIFEST",
				DASH_INVALID_XML: "DASH_INVALID_XML",
				NO_BASE_URL: "NO_BASE_URL",
				MISSING_SEGMENT_INFORMATION: "MISSING_SEGMENT_INFORMATION",
				SEGMENT_TIME_UNSPECIFIED: "SEGMENT_TIME_UNSPECIFIED",
				UNSUPPORTED_UTC_TIMING_SCHEME: "UNSUPPORTED_UTC_TIMING_SCHEME"
			};
			var lr = function e(t) {
				var n = t.baseUrl,
					i = n === void 0 ? "" : n,
					r = t.source,
					a = r === void 0 ? "" : r,
					s = t.range,
					o = s === void 0 ? "" : s,
					l = t.indexRange,
					u = l === void 0 ? "" : l;
				var c = {
					uri: a,
					resolvedUri: Jt(i || "", a)
				};
				if(o || u) {
					var d = o ? o : u;
					var f = d.split("-");
					var p = parseInt(f[0], 10);
					var h = parseInt(f[1], 10);
					c.byterange = {
						length: h - p + 1,
						offset: p
					}
				}
				return c
			};
			var ur = function e(t) {
				var n = t.offset + t.length - 1;
				return t.offset + "-" + n
			};
			var cr = {
				static: function e(t) {
					var n = t.duration,
						i = t.timescale,
						r = i === void 0 ? 1 : i,
						a = t.sourceDuration;
					return {
						start: 0,
						end: Math.ceil(a / (n / r))
					}
				},
				dynamic: function e(t) {
					var n = t.NOW,
						i = t.clientOffset,
						r = t.availabilityStartTime,
						a = t.timescale,
						s = a === void 0 ? 1 : a,
						o = t.duration,
						l = t.start,
						u = l === void 0 ? 0 : l,
						c = t.minimumUpdatePeriod,
						d = c === void 0 ? 0 : c,
						f = t.timeShiftBufferDepth,
						p = f === void 0 ? Infinity : f;
					var h = (n + i) / 1e3;
					var v = r + u;
					var g = h + d;
					var m = g - v;
					var y = Math.ceil(m * s / o);
					var _ = Math.floor((h - v - p) * s / o);
					var b = Math.floor((h - v) * s / o);
					return {
						start: Math.max(0, _),
						end: Math.min(y, b)
					}
				}
			};
			var dr = function e(t) {
				return function(e, n) {
					var i = t.duration,
						r = t.timescale,
						a = r === void 0 ? 1 : r,
						s = t.periodIndex,
						o = t.startNumber,
						l = o === void 0 ? 1 : o;
					return {
						number: l + e,
						duration: i / a,
						timeline: s,
						time: n * i
					}
				}
			};
			var fr = function e(t) {
				var n = t.type,
					i = n === void 0 ? "static" : n,
					r = t.duration,
					a = t.timescale,
					s = a === void 0 ? 1 : a,
					o = t.sourceDuration;
				var l = cr[i](t),
					u = l.start,
					c = l.end;
				var d = ir(u, c).map(dr(t));
				if(i === "static") {
					var f = d.length - 1;
					d[f].duration = o - r / s * f
				}
				return d
			};
			var pr = function e(t) {
				var n = t.baseUrl,
					i = t.initialization,
					r = i === void 0 ? {} : i,
					a = t.sourceDuration,
					s = t.timescale,
					o = s === void 0 ? 1 : s,
					l = t.indexRange,
					u = l === void 0 ? "" : l,
					c = t.duration;
				if(!n) {
					throw new Error(or.NO_BASE_URL)
				}
				var d = lr({
					baseUrl: n,
					source: r.sourceURL,
					range: r.range
				});
				var f = lr({
					baseUrl: n,
					source: n,
					indexRange: u
				});
				f.map = d;
				if(c) {
					var p = fr(t);
					if(p.length) {
						f.duration = p[0].duration;
						f.timeline = p[0].timeline
					}
				} else if(a) {
					f.duration = a / o;
					f.timeline = 0
				}
				f.number = 0;
				return [f]
			};
			var hr = function e(t, n, i) {
				var r = t.sidx.map ? t.sidx.map : null;
				var a = t.sidx.duration;
				var s = t.timeline || 0;
				var o = t.sidx.byterange;
				var l = o.offset + o.length;
				var u = n.timescale;
				var c = n.references.filter(function(e) {
					return e.referenceType !== 1
				});
				var d = [];
				var f = l + n.firstOffset;
				for(var p = 0; p < c.length; p++) {
					var h = n.references[p];
					var v = h.referencedSize;
					var g = h.subsegmentDuration;
					var m = f + v - 1;
					var y = f + "-" + m;
					var _ = {
						baseUrl: i,
						timescale: u,
						timeline: s,
						periodIndex: s,
						duration: g,
						sourceDuration: a,
						indexRange: y
					};
					var b = pr(_)[0];
					if(r) {
						b.map = r
					}
					d.push(b);
					f += v
				}
				t.segments = d;
				return t
			};
			var vr = function e(t) {
				var n = nr(t.reduce(function(e, t) {
					var n = t.attributes.id + (t.attributes.lang || "");
					if(e[n]) {
						var i;
						if(t.segments[0]) {
							t.segments[0].discontinuity = true
						}(i = e[n].segments).push.apply(i, t.segments);
						if(t.attributes.contentProtection) {
							e[n].attributes.contentProtection = t.attributes.contentProtection
						}
					} else {
						e[n] = t
					}
					return e
				}, {}));
				return n.map(function(e) {
					e.discontinuityStarts = sr(e.segments, "discontinuity");
					return e
				})
			};
			var gr = function e(t, n) {
				if(n === void 0) {
					n = {}
				}
				if(!Object.keys(n).length) {
					return t
				}
				for(var i in t) {
					var r = t[i];
					if(!r.sidx) {
						continue
					}
					var a = r.sidx.uri + "-" + ur(r.sidx.byterange);
					var s = n[a] && n[a].sidx;
					if(r.sidx && s) {
						hr(r, s, r.sidx.resolvedUri)
					}
				}
				return t
			};
			var mr = function e(t) {
				var n;
				var i = t.attributes,
					r = t.segments,
					a = t.sidx;
				var s = {
					attributes: (n = {
						NAME: i.id,
						BANDWIDTH: i.bandwidth,
						CODECS: i.codecs
					}, n["PROGRAM-ID"] = 1, n),
					uri: "",
					endList: (i.type || "static") === "static",
					timeline: i.periodIndex,
					resolvedUri: "",
					targetDuration: i.duration,
					segments: r,
					mediaSequence: r.length ? r[0].number : 1
				};
				if(i.contentProtection) {
					s.contentProtection = i.contentProtection
				}
				if(a) {
					s.sidx = a
				}
				return s
			};
			var yr = function e(t) {
				var n;
				var i = t.attributes,
					r = t.segments;
				if(typeof r === "undefined") {
					r = [{
						uri: i.baseUrl,
						timeline: i.periodIndex,
						resolvedUri: i.baseUrl || "",
						duration: i.sourceDuration,
						number: 0
					}];
					i.duration = i.sourceDuration
				}
				return {
					attributes: (n = {
						NAME: i.id,
						BANDWIDTH: i.bandwidth
					}, n["PROGRAM-ID"] = 1, n),
					uri: "",
					endList: (i.type || "static") === "static",
					timeline: i.periodIndex,
					resolvedUri: i.baseUrl || "",
					targetDuration: i.duration,
					segments: r,
					mediaSequence: r.length ? r[0].number : 1
				}
			};
			var _r = function e(t, n) {
				if(n === void 0) {
					n = {}
				}
				var i;
				var r = t.reduce(function(e, t) {
					var r = t.attributes.role && t.attributes.role.value || "";
					var a = t.attributes.lang || "";
					var s = "main";
					if(a) {
						var o = r ? " (" + r + ")" : "";
						s = "" + t.attributes.lang + o
					}
					if(e[s] && e[s].playlists[0].attributes.BANDWIDTH > t.attributes.bandwidth) {
						return e
					}
					e[s] = {
						language: a,
						autoselect: true,
						default: r === "main",
						playlists: gr([mr(t)], n),
						uri: ""
					};
					if(typeof i === "undefined" && r === "main") {
						i = t;
						i.default = true
					}
					return e
				}, {});
				if(!i) {
					var a = Object.keys(r)[0];
					r[a].default = true
				}
				return r
			};
			var br = function e(t, n) {
				if(n === void 0) {
					n = {}
				}
				return t.reduce(function(e, t) {
					var i = t.attributes.lang || "text";
					if(e[i]) {
						return e
					}
					e[i] = {
						language: i,
						default: false,
						autoselect: false,
						playlists: gr([yr(t)], n),
						uri: ""
					};
					return e
				}, {})
			};
			var Ar = function e(t) {
				var n;
				var i = t.attributes,
					r = t.segments,
					a = t.sidx;
				var s = {
					attributes: (n = {
						NAME: i.id,
						AUDIO: "audio",
						SUBTITLES: "subs",
						RESOLUTION: {
							width: i.width,
							height: i.height
						},
						CODECS: i.codecs,
						BANDWIDTH: i.bandwidth
					}, n["PROGRAM-ID"] = 1, n),
					uri: "",
					endList: (i.type || "static") === "static",
					timeline: i.periodIndex,
					resolvedUri: "",
					targetDuration: i.duration,
					segments: r,
					mediaSequence: r.length ? r[0].number : 1
				};
				if(i.contentProtection) {
					s.contentProtection = i.contentProtection
				}
				if(a) {
					s.sidx = a
				}
				return s
			};
			var Sr = function e(t, n) {
				var i;
				if(n === void 0) {
					n = {}
				}
				if(!t.length) {
					return {}
				}
				var r = t[0].attributes,
					a = r.sourceDuration,
					s = r.type,
					o = s === void 0 ? "static" : s,
					l = r.suggestedPresentationDelay,
					u = r.minimumUpdatePeriod,
					c = u === void 0 ? 0 : u;
				var d = function e(t) {
					var n = t.attributes;
					return n.mimeType === "video/mp4" || n.contentType === "video"
				};
				var f = function e(t) {
					var n = t.attributes;
					return n.mimeType === "audio/mp4" || n.contentType === "audio"
				};
				var p = function e(t) {
					var n = t.attributes;
					return n.mimeType === "text/vtt" || n.contentType === "text"
				};
				var h = vr(t.filter(d)).map(Ar);
				var v = vr(t.filter(f));
				var g = t.filter(p);
				var m = {
					allowCache: true,
					discontinuityStarts: [],
					segments: [],
					endList: true,
					mediaGroups: (i = {
						AUDIO: {},
						VIDEO: {}
					}, i["CLOSED-CAPTIONS"] = {}, i.SUBTITLES = {}, i),
					uri: "",
					duration: a,
					playlists: gr(h, n),
					minimumUpdatePeriod: c * 1e3
				};
				if(o === "dynamic") {
					m.suggestedPresentationDelay = l
				}
				if(v.length) {
					m.mediaGroups.AUDIO.audio = _r(v, n)
				}
				if(g.length) {
					m.mediaGroups.SUBTITLES.subs = br(g, n)
				}
				return m
			};
			var Tr = function e(t, n, i) {
				var r = t.NOW,
					a = t.clientOffset,
					s = t.availabilityStartTime,
					o = t.timescale,
					l = o === void 0 ? 1 : o,
					u = t.start,
					c = u === void 0 ? 0 : u,
					d = t.minimumUpdatePeriod,
					f = d === void 0 ? 0 : d;
				var p = (r + a) / 1e3;
				var h = s + c;
				var v = p + f;
				var g = v - h;
				return Math.ceil((g * l - n) / i)
			};
			var kr = function e(t, n) {
				var i = t.type,
					r = i === void 0 ? "static" : i,
					a = t.minimumUpdatePeriod,
					s = a === void 0 ? 0 : a,
					o = t.media,
					l = o === void 0 ? "" : o,
					u = t.sourceDuration,
					c = t.timescale,
					d = c === void 0 ? 1 : c,
					f = t.startNumber,
					p = f === void 0 ? 1 : f,
					h = t.periodIndex;
				var v = [];
				var g = -1;
				for(var m = 0; m < n.length; m++) {
					var y = n[m];
					var _ = y.d;
					var b = y.r || 0;
					var A = y.t || 0;
					if(g < 0) {
						g = A
					}
					if(A && A > g) {
						g = A
					}
					var S = void 0;
					if(b < 0) {
						var T = m + 1;
						if(T === n.length) {
							if(r === "dynamic" && s > 0 && l.indexOf("$Number$") > 0) {
								S = Tr(t, g, _)
							} else {
								S = (u * d - g) / _
							}
						} else {
							S = (n[T].t - g) / _
						}
					} else {
						S = b + 1
					}
					var k = p + v.length + S;
					var E = p + v.length;
					while(E < k) {
						v.push({
							number: E,
							duration: _ / d,
							time: g,
							timeline: h
						});
						g += _;
						E++
					}
				}
				return v
			};
			var Er = /\$([A-z]*)(?:(%0)([0-9]+)d)?\$/g;
			var Pr = function e(t) {
				return function(e, n, i, r) {
					if(e === "$$") {
						return "$"
					}
					if(typeof t[n] === "undefined") {
						return e
					}
					var a = "" + t[n];
					if(n === "RepresentationID") {
						return a
					}
					if(!i) {
						r = 1
					} else {
						r = parseInt(r, 10)
					}
					if(a.length >= r) {
						return a
					}
					return "" + new Array(r - a.length + 1).join("0") + a
				}
			};
			var Cr = function e(t, n) {
				return t.replace(Er, Pr(n))
			};
			var wr = function e(t, n) {
				if(!t.duration && !n) {
					return [{
						number: t.startNumber || 1,
						duration: t.sourceDuration,
						time: 0,
						timeline: t.periodIndex
					}]
				}
				if(t.duration) {
					return fr(t)
				}
				return kr(t, n)
			};
			var jr = function e(t, n) {
				var i = {
					RepresentationID: t.id,
					Bandwidth: t.bandwidth || 0
				};
				var r = t.initialization,
					a = r === void 0 ? {
						sourceURL: "",
						range: ""
					} : r;
				var s = lr({
					baseUrl: t.baseUrl,
					source: Cr(a.sourceURL, i),
					range: a.range
				});
				var o = wr(t, n);
				return o.map(function(e) {
					i.Number = e.number;
					i.Time = e.time;
					var n = Cr(t.media || "", i);
					return {
						uri: n,
						timeline: e.timeline,
						duration: e.duration,
						resolvedUri: Jt(t.baseUrl || "", n),
						map: s,
						number: e.number
					}
				})
			};
			var Ir = function e(t, n) {
				var i = t.baseUrl,
					r = t.initialization,
					a = r === void 0 ? {} : r;
				var s = lr({
					baseUrl: i,
					source: a.sourceURL,
					range: a.range
				});
				var o = lr({
					baseUrl: i,
					source: n.media,
					range: n.mediaRange
				});
				o.map = s;
				return o
			};
			var Lr = function e(t, n) {
				var i = t.duration,
					r = t.segmentUrls,
					a = r === void 0 ? [] : r;
				if(!i && !n || i && n) {
					throw new Error(or.SEGMENT_TIME_UNSPECIFIED)
				}
				var s = a.map(function(e) {
					return Ir(t, e)
				});
				var o;
				if(i) {
					o = fr(t)
				}
				if(n) {
					o = kr(t, n)
				}
				var l = o.map(function(e, t) {
					if(s[t]) {
						var n = s[t];
						n.timeline = e.timeline;
						n.duration = e.duration;
						n.number = e.number;
						return n
					}
				}).filter(function(e) {
					return e
				});
				return l
			};
			var Or = function e(t) {
				var n = t.attributes,
					i = t.segmentInfo;
				var r;
				var a;
				if(i.template) {
					a = jr;
					r = tr(n, i.template)
				} else if(i.base) {
					a = pr;
					r = tr(n, i.base)
				} else if(i.list) {
					a = Lr;
					r = tr(n, i.list)
				}
				var s = {
					attributes: n
				};
				if(!a) {
					return s
				}
				var o = a(r, i.timeline);
				if(r.duration) {
					var l = r,
						u = l.duration,
						c = l.timescale,
						d = c === void 0 ? 1 : c;
					r.duration = u / d
				} else if(o.length) {
					r.duration = o.reduce(function(e, t) {
						return Math.max(e, Math.ceil(t.duration))
					}, 0)
				} else {
					r.duration = 0
				}
				s.attributes = r;
				s.segments = o;
				if(i.base && r.indexRange) {
					s.sidx = o[0];
					s.segments = []
				}
				return s
			};
			var Nr = function e(t) {
				return t.map(Or)
			};
			var xr = function e(t, n) {
				return ar(t.childNodes).filter(function(e) {
					var t = e.tagName;
					return t === n
				})
			};
			var Dr = function e(t) {
				return t.textContent.trim()
			};
			var Rr = function e(t) {
				var n = 365 * 24 * 60 * 60;
				var i = 30 * 24 * 60 * 60;
				var r = 24 * 60 * 60;
				var a = 60 * 60;
				var s = 60;
				var o = /P(?:(\d*)Y)?(?:(\d*)M)?(?:(\d*)D)?(?:T(?:(\d*)H)?(?:(\d*)M)?(?:([\d.]*)S)?)?/;
				var l = o.exec(t);
				if(!l) {
					return 0
				}
				var u = l.slice(1),
					c = u[0],
					d = u[1],
					f = u[2],
					p = u[3],
					h = u[4],
					v = u[5];
				return parseFloat(c || 0) * n + parseFloat(d || 0) * i + parseFloat(f || 0) * r + parseFloat(p || 0) * a + parseFloat(h || 0) * s + parseFloat(v || 0)
			};
			var Ur = function e(t) {
				var n = /^\d+-\d+-\d+T\d+:\d+:\d+(\.\d+)?$/;
				if(n.test(t)) {
					t += "Z"
				}
				return Date.parse(t)
			};
			var Mr = {
				mediaPresentationDuration: function e(t) {
					return Rr(t)
				},
				availabilityStartTime: function e(t) {
					return Ur(t) / 1e3
				},
				minimumUpdatePeriod: function e(t) {
					return Rr(t)
				},
				suggestedPresentationDelay: function e(t) {
					return Rr(t)
				},
				type: function e(t) {
					return t
				},
				timeShiftBufferDepth: function e(t) {
					return Rr(t)
				},
				start: function e(t) {
					return Rr(t)
				},
				width: function e(t) {
					return parseInt(t, 10)
				},
				height: function e(t) {
					return parseInt(t, 10)
				},
				bandwidth: function e(t) {
					return parseInt(t, 10)
				},
				startNumber: function e(t) {
					return parseInt(t, 10)
				},
				timescale: function e(t) {
					return parseInt(t, 10)
				},
				duration: function e(t) {
					var n = parseInt(t, 10);
					if(isNaN(n)) {
						return Rr(t)
					}
					return n
				},
				d: function e(t) {
					return parseInt(t, 10)
				},
				t: function e(t) {
					return parseInt(t, 10)
				},
				r: function e(t) {
					return parseInt(t, 10)
				},
				DEFAULT: function e(t) {
					return t
				}
			};
			var Br = function e(t) {
				if(!(t && t.attributes)) {
					return {}
				}
				return ar(t.attributes).reduce(function(e, t) {
					var n = Mr[t.name] || Mr.DEFAULT;
					e[t.name] = n(t.value);
					return e
				}, {})
			};
			var Fr = {
				"urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b": "org.w3.clearkey",
				"urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed": "com.widevine.alpha",
				"urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95": "com.microsoft.playready",
				"urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb": "com.adobe.primetime"
			};
			var Vr = function e(t, n) {
				if(!n.length) {
					return t
				}
				return rr(t.map(function(e) {
					return n.map(function(t) {
						return Jt(e, Dr(t))
					})
				}))
			};
			var qr = function e(t) {
				var n = xr(t, "SegmentTemplate")[0];
				var i = xr(t, "SegmentList")[0];
				var r = i && xr(i, "SegmentURL").map(function(e) {
					return tr({
						tag: "SegmentURL"
					}, Br(e))
				});
				var a = xr(t, "SegmentBase")[0];
				var s = i || n;
				var o = s && xr(s, "SegmentTimeline")[0];
				var l = i || a || n;
				var u = l && xr(l, "Initialization")[0];
				var c = n && Br(n);
				if(c && u) {
					c.initialization = u && Br(u)
				} else if(c && c.initialization) {
					c.initialization = {
						sourceURL: c.initialization
					}
				}
				var d = {
					template: c,
					timeline: o && xr(o, "S").map(function(e) {
						return Br(e)
					}),
					list: i && tr(Br(i), {
						segmentUrls: r,
						initialization: Br(u)
					}),
					base: a && tr(Br(a), {
						initialization: Br(u)
					})
				};
				Object.keys(d).forEach(function(e) {
					if(!d[e]) {
						delete d[e]
					}
				});
				return d
			};
			var Hr = function e(t, n, i) {
				return function(e) {
					var r = xr(e, "BaseURL");
					var a = Vr(n, r);
					var s = tr(t, Br(e));
					var o = qr(e);
					return a.map(function(e) {
						return {
							segmentInfo: tr(i, o),
							attributes: tr(s, {
								baseUrl: e
							})
						}
					})
				}
			};
			var Gr = function e(t) {
				return t.reduce(function(e, t) {
					var n = Br(t);
					var i = Fr[n.schemeIdUri];
					if(i) {
						e[i] = {
							attributes: n
						};
						var r = xr(t, "cenc:pssh")[0];
						if(r) {
							var a = Dr(r);
							var s = a && tn(a);
							e[i].pssh = s
						}
					}
					return e
				}, {})
			};
			var Yr = function e(t, n, i) {
				return function(e) {
					var r = Br(e);
					var a = Vr(n, xr(e, "BaseURL"));
					var s = xr(e, "Role")[0];
					var o = {
						role: Br(s)
					};
					var l = tr(t, r, o);
					var u = Gr(xr(e, "ContentProtection"));
					if(Object.keys(u).length) {
						l = tr(l, {
							contentProtection: u
						})
					}
					var c = qr(e);
					var d = xr(e, "Representation");
					var f = tr(i, c);
					return rr(d.map(Hr(l, a, f)))
				}
			};
			var zr = function e(t, n) {
				return function(e, i) {
					var r = Vr(n, xr(e, "BaseURL"));
					var a = Br(e);
					var s = parseInt(a.id, 10);
					var o = c.isNaN(s) ? i : s;
					var l = tr(t, {
						periodIndex: o
					});
					var u = xr(e, "AdaptationSet");
					var d = qr(e);
					return rr(u.map(Yr(l, r, d)))
				}
			};
			var Kr = function e(t, n) {
				if(n === void 0) {
					n = {}
				}
				var i = n,
					r = i.manifestUri,
					a = r === void 0 ? "" : r,
					s = i.NOW,
					o = s === void 0 ? Date.now() : s,
					l = i.clientOffset,
					u = l === void 0 ? 0 : l;
				var c = xr(t, "Period");
				if(!c.length) {
					throw new Error(or.INVALID_NUMBER_OF_PERIOD)
				}
				var d = Br(t);
				var f = Vr([a], xr(t, "BaseURL"));
				d.sourceDuration = d.mediaPresentationDuration || 0;
				d.NOW = o;
				d.clientOffset = u;
				return rr(c.map(zr(d, f)))
			};
			var Wr = function e(t) {
				if(t === "") {
					throw new Error(or.DASH_EMPTY_MANIFEST)
				}
				var n = new $i;
				var i = n.parseFromString(t, "application/xml");
				var r = i && i.documentElement.tagName === "MPD" ? i.documentElement : null;
				if(!r || r && r.getElementsByTagName("parsererror").length > 0) {
					throw new Error(or.DASH_INVALID_XML)
				}
				return r
			};
			var Xr = function e(t) {
				var n = xr(t, "UTCTiming")[0];
				if(!n) {
					return null
				}
				var i = Br(n);
				switch(i.schemeIdUri) {
					case "urn:mpeg:dash:utc:http-head:2014":
					case "urn:mpeg:dash:utc:http-head:2012":
						i.method = "HEAD";
						break;
					case "urn:mpeg:dash:utc:http-xsdate:2014":
					case "urn:mpeg:dash:utc:http-iso:2014":
					case "urn:mpeg:dash:utc:http-xsdate:2012":
					case "urn:mpeg:dash:utc:http-iso:2012":
						i.method = "GET";
						break;
					case "urn:mpeg:dash:utc:direct:2014":
					case "urn:mpeg:dash:utc:direct:2012":
						i.method = "DIRECT";
						i.value = Date.parse(i.value);
						break;
					case "urn:mpeg:dash:utc:http-ntp:2014":
					case "urn:mpeg:dash:utc:ntp:2014":
					case "urn:mpeg:dash:utc:sntp:2014":
					default:
						throw new Error(or.UNSUPPORTED_UTC_TIMING_SCHEME)
				}
				return i
			};
			var Jr = function e(t, n) {
				if(n === void 0) {
					n = {}
				}
				return Sr(Nr(Kr(Wr(t), n)), n.sidxMapping)
			};
			var Qr = function e(t) {
				return Xr(Wr(t))
			};
			var Zr = function e(t) {
				return t >>> 0
			};
			var $r = function e(t) {
				return("00" + t.toString(16)).slice(-2)
			};
			var ea = {
				toUnsigned: Zr,
				toHexString: $r
			};
			var ta, na, ia = ea.toUnsigned,
				ra = function e(t) {
					return new Date(t * 1e3 - 20828448e5)
				},
				aa = function e(t) {
					return {
						isLeading: (t[0] & 12) >>> 2,
						dependsOn: t[0] & 3,
						isDependedOn: (t[1] & 192) >>> 6,
						hasRedundancy: (t[1] & 48) >>> 4,
						paddingValue: (t[1] & 14) >>> 1,
						isNonSyncSample: t[1] & 1,
						degradationPriority: t[2] << 8 | t[3]
					}
				},
				sa = function e(t) {
					var n = "";
					n += String.fromCharCode(t[0]);
					n += String.fromCharCode(t[1]);
					n += String.fromCharCode(t[2]);
					n += String.fromCharCode(t[3]);
					return n
				},
				oa = function e(t, n) {
					var i = [],
						r, a, s, o, l;
					if(!n.length) {
						return null
					}
					for(r = 0; r < t.byteLength;) {
						a = ia(t[r] << 24 | t[r + 1] << 16 | t[r + 2] << 8 | t[r + 3]);
						s = sa(t.subarray(r + 4, r + 8));
						o = a > 1 ? r + a : t.byteLength;
						if(s === n[0]) {
							if(n.length === 1) {
								i.push(t.subarray(r + 8, o))
							} else {
								l = e(t.subarray(r + 8, o), n.slice(1));
								if(l.length) {
									i = i.concat(l)
								}
							}
						}
						r = o
					}
					return i
				},
				la = function e(t) {
					var n = new DataView(t.buffer, t.byteOffset, t.byteLength),
						i = [],
						r, a;
					for(r = 0; r + 4 < t.length; r += a) {
						a = n.getUint32(r);
						r += 4;
						if(a <= 0) {
							i.push("<span style='color:red;'>MALFORMED DATA</span>");
							continue
						}
						switch(t[r] & 31) {
							case 1:
								i.push("slice_layer_without_partitioning_rbsp");
								break;
							case 5:
								i.push("slice_layer_without_partitioning_rbsp_idr");
								break;
							case 6:
								i.push("sei_rbsp");
								break;
							case 7:
								i.push("seq_parameter_set_rbsp");
								break;
							case 8:
								i.push("pic_parameter_set_rbsp");
								break;
							case 9:
								i.push("access_unit_delimiter_rbsp");
								break;
							default:
								i.push("UNKNOWN NAL - " + t[r] & 31);
								break
						}
					}
					return i
				},
				ua = {
					avc1: function e(t) {
						var n = new DataView(t.buffer, t.byteOffset, t.byteLength);
						return {
							dataReferenceIndex: n.getUint16(6),
							width: n.getUint16(24),
							height: n.getUint16(26),
							horizresolution: n.getUint16(28) + n.getUint16(30) / 16,
							vertresolution: n.getUint16(32) + n.getUint16(34) / 16,
							frameCount: n.getUint16(40),
							depth: n.getUint16(74),
							config: ta(t.subarray(78, t.byteLength))
						}
					},
					avcC: function e(t) {
						var n = new DataView(t.buffer, t.byteOffset, t.byteLength),
							i = {
								configurationVersion: t[0],
								avcProfileIndication: t[1],
								profileCompatibility: t[2],
								avcLevelIndication: t[3],
								lengthSizeMinusOne: t[4] & 3,
								sps: [],
								pps: []
							},
							r = t[5] & 31,
							a, s, o, l;
						o = 6;
						for(l = 0; l < r; l++) {
							s = n.getUint16(o);
							o += 2;
							i.sps.push(new Uint8Array(t.subarray(o, o + s)));
							o += s
						}
						a = t[o];
						o++;
						for(l = 0; l < a; l++) {
							s = n.getUint16(o);
							o += 2;
							i.pps.push(new Uint8Array(t.subarray(o, o + s)));
							o += s
						}
						return i
					},
					btrt: function e(t) {
						var n = new DataView(t.buffer, t.byteOffset, t.byteLength);
						return {
							bufferSizeDB: n.getUint32(0),
							maxBitrate: n.getUint32(4),
							avgBitrate: n.getUint32(8)
						}
					},
					esds: function e(t) {
						return {
							version: t[0],
							flags: new Uint8Array(t.subarray(1, 4)),
							esId: t[6] << 8 | t[7],
							streamPriority: t[8] & 31,
							decoderConfig: {
								objectProfileIndication: t[11],
								streamType: t[12] >>> 2 & 63,
								bufferSize: t[13] << 16 | t[14] << 8 | t[15],
								maxBitrate: t[16] << 24 | t[17] << 16 | t[18] << 8 | t[19],
								avgBitrate: t[20] << 24 | t[21] << 16 | t[22] << 8 | t[23],
								decoderConfigDescriptor: {
									tag: t[24],
									length: t[25],
									audioObjectType: t[26] >>> 3 & 31,
									samplingFrequencyIndex: (t[26] & 7) << 1 | t[27] >>> 7 & 1,
									channelConfiguration: t[27] >>> 3 & 15
								}
							}
						}
					},
					ftyp: function e(t) {
						var n = new DataView(t.buffer, t.byteOffset, t.byteLength),
							i = {
								majorBrand: sa(t.subarray(0, 4)),
								minorVersion: n.getUint32(4),
								compatibleBrands: []
							},
							r = 8;
						while(r < t.byteLength) {
							i.compatibleBrands.push(sa(t.subarray(r, r + 4)));
							r += 4
						}
						return i
					},
					dinf: function e(t) {
						return {
							boxes: ta(t)
						}
					},
					dref: function e(t) {
						return {
							version: t[0],
							flags: new Uint8Array(t.subarray(1, 4)),
							dataReferences: ta(t.subarray(8))
						}
					},
					hdlr: function e(t) {
						var n = new DataView(t.buffer, t.byteOffset, t.byteLength),
							i = {
								version: n.getUint8(0),
								flags: new Uint8Array(t.subarray(1, 4)),
								handlerType: sa(t.subarray(8, 12)),
								name: ""
							},
							r = 8;
						for(r = 24; r < t.byteLength; r++) {
							if(t[r] === 0) {
								r++;
								break
							}
							i.name += String.fromCharCode(t[r])
						}
						i.name = decodeURIComponent(escape(i.name));
						return i
					},
					mdat: function e(t) {
						return {
							byteLength: t.byteLength,
							nals: la(t)
						}
					},
					mdhd: function e(t) {
						var n = new DataView(t.buffer, t.byteOffset, t.byteLength),
							i = 4,
							r, a = {
								version: n.getUint8(0),
								flags: new Uint8Array(t.subarray(1, 4)),
								language: ""
							};
						if(a.version === 1) {
							i += 4;
							a.creationTime = ra(n.getUint32(i));
							i += 8;
							a.modificationTime = ra(n.getUint32(i));
							i += 4;
							a.timescale = n.getUint32(i);
							i += 8;
							a.duration = n.getUint32(i)
						} else {
							a.creationTime = ra(n.getUint32(i));
							i += 4;
							a.modificationTime = ra(n.getUint32(i));
							i += 4;
							a.timescale = n.getUint32(i);
							i += 4;
							a.duration = n.getUint32(i)
						}
						i += 4;
						r = n.getUint16(i);
						a.language += String.fromCharCode((r >> 10) + 96);
						a.language += String.fromCharCode(((r & 992) >> 5) + 96);
						a.language += String.fromCharCode((r & 31) + 96);
						return a
					},
					mdia: function e(t) {
						return {
							boxes: ta(t)
						}
					},
					mfhd: function e(t) {
						return {
							version: t[0],
							flags: new Uint8Array(t.subarray(1, 4)),
							sequenceNumber: t[4] << 24 | t[5] << 16 | t[6] << 8 | t[7]
						}
					},
					minf: function e(t) {
						return {
							boxes: ta(t)
						}
					},
					mp4a: function e(t) {
						var n = new DataView(t.buffer, t.byteOffset, t.byteLength),
							i = {
								dataReferenceIndex: n.getUint16(6),
								channelcount: n.getUint16(16),
								samplesize: n.getUint16(18),
								samplerate: n.getUint16(24) + n.getUint16(26) / 65536
							};
						if(t.byteLength > 28) {
							i.streamDescriptor = ta(t.subarray(28))[0]
						}
						return i
					},
					moof: function e(t) {
						return {
							boxes: ta(t)
						}
					},
					moov: function e(t) {
						return {
							boxes: ta(t)
						}
					},
					mvex: function e(t) {
						return {
							boxes: ta(t)
						}
					},
					mvhd: function e(t) {
						var n = new DataView(t.buffer, t.byteOffset, t.byteLength),
							i = 4,
							r = {
								version: n.getUint8(0),
								flags: new Uint8Array(t.subarray(1, 4))
							};
						if(r.version === 1) {
							i += 4;
							r.creationTime = ra(n.getUint32(i));
							i += 8;
							r.modificationTime = ra(n.getUint32(i));
							i += 4;
							r.timescale = n.getUint32(i);
							i += 8;
							r.duration = n.getUint32(i)
						} else {
							r.creationTime = ra(n.getUint32(i));
							i += 4;
							r.modificationTime = ra(n.getUint32(i));
							i += 4;
							r.timescale = n.getUint32(i);
							i += 4;
							r.duration = n.getUint32(i)
						}
						i += 4;
						r.rate = n.getUint16(i) + n.getUint16(i + 2) / 16;
						i += 4;
						r.volume = n.getUint8(i) + n.getUint8(i + 1) / 8;
						i += 2;
						i += 2;
						i += 2 * 4;
						r.matrix = new Uint32Array(t.subarray(i, i + 9 * 4));
						i += 9 * 4;
						i += 6 * 4;
						r.nextTrackId = n.getUint32(i);
						return r
					},
					pdin: function e(t) {
						var n = new DataView(t.buffer, t.byteOffset, t.byteLength);
						return {
							version: n.getUint8(0),
							flags: new Uint8Array(t.subarray(1, 4)),
							rate: n.getUint32(4),
							initialDelay: n.getUint32(8)
						}
					},
					sdtp: function e(t) {
						var n = {
								version: t[0],
								flags: new Uint8Array(t.subarray(1, 4)),
								samples: []
							},
							i;
						for(i = 4; i < t.byteLength; i++) {
							n.samples.push({
								dependsOn: (t[i] & 48) >> 4,
								isDependedOn: (t[i] & 12) >> 2,
								hasRedundancy: t[i] & 3
							})
						}
						return n
					},
					sidx: function e(t) {
						var n = new DataView(t.buffer, t.byteOffset, t.byteLength),
							i = {
								version: t[0],
								flags: new Uint8Array(t.subarray(1, 4)),
								references: [],
								referenceId: n.getUint32(4),
								timescale: n.getUint32(8),
								earliestPresentationTime: n.getUint32(12),
								firstOffset: n.getUint32(16)
							},
							r = n.getUint16(22),
							a;
						for(a = 24; r; a += 12, r--) {
							i.references.push({
								referenceType: (t[a] & 128) >>> 7,
								referencedSize: n.getUint32(a) & 2147483647,
								subsegmentDuration: n.getUint32(a + 4),
								startsWithSap: !!(t[a + 8] & 128),
								sapType: (t[a + 8] & 112) >>> 4,
								sapDeltaTime: n.getUint32(a + 8) & 268435455
							})
						}
						return i
					},
					smhd: function e(t) {
						return {
							version: t[0],
							flags: new Uint8Array(t.subarray(1, 4)),
							balance: t[4] + t[5] / 256
						}
					},
					stbl: function e(t) {
						return {
							boxes: ta(t)
						}
					},
					stco: function e(t) {
						var n = new DataView(t.buffer, t.byteOffset, t.byteLength),
							i = {
								version: t[0],
								flags: new Uint8Array(t.subarray(1, 4)),
								chunkOffsets: []
							},
							r = n.getUint32(4),
							a;
						for(a = 8; r; a += 4, r--) {
							i.chunkOffsets.push(n.getUint32(a))
						}
						return i
					},
					stsc: function e(t) {
						var n = new DataView(t.buffer, t.byteOffset, t.byteLength),
							i = n.getUint32(4),
							r = {
								version: t[0],
								flags: new Uint8Array(t.subarray(1, 4)),
								sampleToChunks: []
							},
							a;
						for(a = 8; i; a += 12, i--) {
							r.sampleToChunks.push({
								firstChunk: n.getUint32(a),
								samplesPerChunk: n.getUint32(a + 4),
								sampleDescriptionIndex: n.getUint32(a + 8)
							})
						}
						return r
					},
					stsd: function e(t) {
						return {
							version: t[0],
							flags: new Uint8Array(t.subarray(1, 4)),
							sampleDescriptions: ta(t.subarray(8))
						}
					},
					stsz: function e(t) {
						var n = new DataView(t.buffer, t.byteOffset, t.byteLength),
							i = {
								version: t[0],
								flags: new Uint8Array(t.subarray(1, 4)),
								sampleSize: n.getUint32(4),
								entries: []
							},
							r;
						for(r = 12; r < t.byteLength; r += 4) {
							i.entries.push(n.getUint32(r))
						}
						return i
					},
					stts: function e(t) {
						var n = new DataView(t.buffer, t.byteOffset, t.byteLength),
							i = {
								version: t[0],
								flags: new Uint8Array(t.subarray(1, 4)),
								timeToSamples: []
							},
							r = n.getUint32(4),
							a;
						for(a = 8; r; a += 8, r--) {
							i.timeToSamples.push({
								sampleCount: n.getUint32(a),
								sampleDelta: n.getUint32(a + 4)
							})
						}
						return i
					},
					styp: function e(t) {
						return ua.ftyp(t)
					},
					tfdt: function e(t) {
						var n = {
							version: t[0],
							flags: new Uint8Array(t.subarray(1, 4)),
							baseMediaDecodeTime: ia(t[4] << 24 | t[5] << 16 | t[6] << 8 | t[7])
						};
						if(n.version === 1) {
							n.baseMediaDecodeTime *= Math.pow(2, 32);
							n.baseMediaDecodeTime += ia(t[8] << 24 | t[9] << 16 | t[10] << 8 | t[11])
						}
						return n
					},
					tfhd: function e(t) {
						var n = new DataView(t.buffer, t.byteOffset, t.byteLength),
							i = {
								version: t[0],
								flags: new Uint8Array(t.subarray(1, 4)),
								trackId: n.getUint32(4)
							},
							r = i.flags[2] & 1,
							a = i.flags[2] & 2,
							s = i.flags[2] & 8,
							o = i.flags[2] & 16,
							l = i.flags[2] & 32,
							u = i.flags[0] & 65536,
							c = i.flags[0] & 131072,
							d;
						d = 8;
						if(r) {
							d += 4;
							i.baseDataOffset = n.getUint32(12);
							d += 4
						}
						if(a) {
							i.sampleDescriptionIndex = n.getUint32(d);
							d += 4
						}
						if(s) {
							i.defaultSampleDuration = n.getUint32(d);
							d += 4
						}
						if(o) {
							i.defaultSampleSize = n.getUint32(d);
							d += 4
						}
						if(l) {
							i.defaultSampleFlags = n.getUint32(d)
						}
						if(u) {
							i.durationIsEmpty = true
						}
						if(!r && c) {
							i.baseDataOffsetIsMoof = true
						}
						return i
					},
					tkhd: function e(t) {
						var n = new DataView(t.buffer, t.byteOffset, t.byteLength),
							i = 4,
							r = {
								version: n.getUint8(0),
								flags: new Uint8Array(t.subarray(1, 4))
							};
						if(r.version === 1) {
							i += 4;
							r.creationTime = ra(n.getUint32(i));
							i += 8;
							r.modificationTime = ra(n.getUint32(i));
							i += 4;
							r.trackId = n.getUint32(i);
							i += 4;
							i += 8;
							r.duration = n.getUint32(i)
						} else {
							r.creationTime = ra(n.getUint32(i));
							i += 4;
							r.modificationTime = ra(n.getUint32(i));
							i += 4;
							r.trackId = n.getUint32(i);
							i += 4;
							i += 4;
							r.duration = n.getUint32(i)
						}
						i += 4;
						i += 2 * 4;
						r.layer = n.getUint16(i);
						i += 2;
						r.alternateGroup = n.getUint16(i);
						i += 2;
						r.volume = n.getUint8(i) + n.getUint8(i + 1) / 8;
						i += 2;
						i += 2;
						r.matrix = new Uint32Array(t.subarray(i, i + 9 * 4));
						i += 9 * 4;
						r.width = n.getUint16(i) + n.getUint16(i + 2) / 16;
						i += 4;
						r.height = n.getUint16(i) + n.getUint16(i + 2) / 16;
						return r
					},
					traf: function e(t) {
						return {
							boxes: ta(t)
						}
					},
					trak: function e(t) {
						return {
							boxes: ta(t)
						}
					},
					trex: function e(t) {
						var n = new DataView(t.buffer, t.byteOffset, t.byteLength);
						return {
							version: t[0],
							flags: new Uint8Array(t.subarray(1, 4)),
							trackId: n.getUint32(4),
							defaultSampleDescriptionIndex: n.getUint32(8),
							defaultSampleDuration: n.getUint32(12),
							defaultSampleSize: n.getUint32(16),
							sampleDependsOn: t[20] & 3,
							sampleIsDependedOn: (t[21] & 192) >> 6,
							sampleHasRedundancy: (t[21] & 48) >> 4,
							samplePaddingValue: (t[21] & 14) >> 1,
							sampleIsDifferenceSample: !!(t[21] & 1),
							sampleDegradationPriority: n.getUint16(22)
						}
					},
					trun: function e(t) {
						var n = {
								version: t[0],
								flags: new Uint8Array(t.subarray(1, 4)),
								samples: []
							},
							i = new DataView(t.buffer, t.byteOffset, t.byteLength),
							r = n.flags[2] & 1,
							a = n.flags[2] & 4,
							s = n.flags[1] & 1,
							o = n.flags[1] & 2,
							l = n.flags[1] & 4,
							u = n.flags[1] & 8,
							c = i.getUint32(4),
							d = 8,
							f;
						if(r) {
							n.dataOffset = i.getInt32(d);
							d += 4
						}
						if(a && c) {
							f = {
								flags: aa(t.subarray(d, d + 4))
							};
							d += 4;
							if(s) {
								f.duration = i.getUint32(d);
								d += 4
							}
							if(o) {
								f.size = i.getUint32(d);
								d += 4
							}
							if(u) {
								f.compositionTimeOffset = i.getUint32(d);
								d += 4
							}
							n.samples.push(f);
							c--
						}
						while(c--) {
							f = {};
							if(s) {
								f.duration = i.getUint32(d);
								d += 4
							}
							if(o) {
								f.size = i.getUint32(d);
								d += 4
							}
							if(l) {
								f.flags = aa(t.subarray(d, d + 4));
								d += 4
							}
							if(u) {
								f.compositionTimeOffset = i.getUint32(d);
								d += 4
							}
							n.samples.push(f)
						}
						return n
					},
					"url ": function e(t) {
						return {
							version: t[0],
							flags: new Uint8Array(t.subarray(1, 4))
						}
					},
					vmhd: function e(t) {
						var n = new DataView(t.buffer, t.byteOffset, t.byteLength);
						return {
							version: t[0],
							flags: new Uint8Array(t.subarray(1, 4)),
							graphicsmode: n.getUint16(4),
							opcolor: new Uint16Array([n.getUint16(6), n.getUint16(8), n.getUint16(10)])
						}
					}
				};
			ta = function e(t) {
				var n = 0,
					i = [],
					r, a, s, o, l;
				var u = new ArrayBuffer(t.length);
				var c = new Uint8Array(u);
				for(var d = 0; d < t.length; ++d) {
					c[d] = t[d]
				}
				r = new DataView(u);
				while(n < t.byteLength) {
					a = r.getUint32(n);
					s = sa(t.subarray(n + 4, n + 8));
					o = a > 1 ? n + a : t.byteLength;
					l = (ua[s] || function(e) {
						return {
							data: e
						}
					})(t.subarray(n + 8, o));
					l.size = a;
					l.type = s;
					i.push(l);
					n = o
				}
				return i
			};
			na = function e(t, n) {
				var i;
				n = n || 0;
				i = new Array(n * 2 + 1).join(" ");
				return t.map(function(e, t) {
					return i + e.type + "\n" + Object.keys(e).filter(function(e) {
						return e !== "type" && e !== "boxes"
					}).map(function(t) {
						var n = i + "  " + t + ": ",
							r = e[t];
						if(r instanceof Uint8Array || r instanceof Uint32Array) {
							var a = Array.prototype.slice.call(new Uint8Array(r.buffer, r.byteOffset, r.byteLength)).map(function(e) {
								return " " + ("00" + e.toString(16)).slice(-2)
							}).join("").match(/.{1,24}/g);
							if(!a) {
								return n + "<>"
							}
							if(a.length === 1) {
								return n + "<" + a.join("").slice(1) + ">"
							}
							return n + "<\n" + a.map(function(e) {
								return i + "  " + e
							}).join("\n") + "\n" + i + "  >"
						}
						return n + JSON.stringify(r, null, 2).split("\n").map(function(e, t) {
							if(t === 0) {
								return e
							}
							return i + "  " + e
						}).join("\n")
					}).join("\n") + (e.boxes ? "\n" + na(e.boxes, n + 1) : "")
				}).join("\n")
			};
			var ca = {
				inspect: ta,
				textify: na,
				parseType: sa,
				findBox: oa,
				parseTraf: ua.traf,
				parseTfdt: ua.tfdt,
				parseHdlr: ua.hdlr,
				parseTfhd: ua.tfhd,
				parseTrun: ua.trun,
				parseSidx: ua.sidx
			};
			var da = t.EventTarget,
				fa = t.mergeOptions;
			var pa = function e(t, n) {
				var i = void 0;
				var r = fa(t, {
					duration: n.duration,
					minimumUpdatePeriod: n.minimumUpdatePeriod
				});
				for(var a = 0; a < n.playlists.length; a++) {
					var s = D(r, n.playlists[a]);
					if(s) {
						r = s
					} else {
						i = true
					}
				}
				O(n, function(e, t, n, a) {
					if(e.playlists && e.playlists.length) {
						var s = e.playlists[0].id;
						var o = D(r, e.playlists[0]);
						if(o) {
							r = o;
							r.mediaGroups[t][n][a].playlists[0] = r.playlists[s];
							i = false
						}
					}
				});
				if(i) {
					return null
				}
				return r
			};
			var ha = function e(t) {
				var n = t.byterange.offset + t.byterange.length - 1;
				return t.uri + "-" + t.byterange.offset + "-" + n
			};
			var va = function e(t, n) {
				var i = Boolean(!t.map && !n.map);
				var r = i || Boolean(t.map && n.map && t.map.byterange.offset === n.map.byterange.offset && t.map.byterange.length === n.map.byterange.length);
				return r && t.uri === n.uri && t.byterange.offset === n.byterange.offset && t.byterange.length === n.byterange.length
			};
			var ga = function e(t, n) {
				var i = {};
				for(var r in t) {
					var a = t[r];
					var s = a.sidx;
					if(s) {
						var o = ha(s);
						if(!n[o]) {
							break
						}
						var l = n[o].sidxInfo;
						if(va(l, s)) {
							i[o] = n[o]
						}
					}
				}
				return i
			};
			var ma = function e(t, n, i, r) {
				var a = Jr(t, {
					manifestUri: n,
					clientOffset: i
				});
				var s = ga(a.playlists, r);
				var o = s;
				O(a, function(e, t, n, i) {
					if(e.playlists && e.playlists.length) {
						var a = e.playlists;
						o = fa(o, ga(a, r))
					}
				});
				return o
			};
			var ya = function e(n, i, r, a, s) {
				var o = {
					uri: f(a.handleManifestRedirects, n.resolvedUri),
					byterange: n.byterange,
					playlist: i
				};
				var l = t.mergeOptions(o, {
					responseType: "arraybuffer",
					headers: ve(o)
				});
				return r(l, s)
			};
			var _a = function(e) {
				P(t, e);

				function t(e, n) {
					var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
					var r = arguments[3];
					T(this, t);
					var a = C(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this));
					var s = i.withCredentials,
						o = s === undefined ? false : s,
						l = i.handleManifestRedirects,
						u = l === undefined ? false : l;
					a.hls_ = n;
					a.withCredentials = o;
					a.handleManifestRedirects = u;
					if(!e) {
						throw new Error("A non-empty playlist URL or playlist is required")
					}
					a.on("minimumUpdatePeriod", function() {
						a.refreshXml_()
					});
					a.on("mediaupdatetimeout", function() {
						a.refreshMedia_(a.media().id)
					});
					a.state = "HAVE_NOTHING";
					a.loadedPlaylists_ = {};
					if(typeof e === "string") {
						a.srcUrl = e;
						a.sidxMapping_ = {};
						return C(a)
					}
					a.setupChildLoader(r, e);
					return a
				}
				k(t, [{
					key: "setupChildLoader",
					value: function e(t, n) {
						this.masterPlaylistLoader_ = t;
						this.childPlaylist_ = n
					}
				}, {
					key: "dispose",
					value: function e() {
						this.trigger("dispose");
						this.stopRequest();
						this.loadedPlaylists_ = {};
						c.clearTimeout(this.minimumUpdatePeriodTimeout_);
						c.clearTimeout(this.mediaRequest_);
						c.clearTimeout(this.mediaUpdateTimeout);
						this.off()
					}
				}, {
					key: "hasPendingRequest",
					value: function e() {
						return this.request || this.mediaRequest_
					}
				}, {
					key: "stopRequest",
					value: function e() {
						if(this.request) {
							var t = this.request;
							this.request = null;
							t.onreadystatechange = null;
							t.abort()
						}
					}
				}, {
					key: "sidxRequestFinished_",
					value: function e(t, n, i, r) {
						var a = this;
						return function(e, s) {
							if(!a.request) {
								return
							}
							a.request = null;
							if(e) {
								a.error = {
									status: s.status,
									message: "DASH playlist request error at URL: " + t.uri,
									response: s.response,
									code: 2
								};
								if(i) {
									a.state = i
								}
								a.trigger("error");
								return r(n, null)
							}
							var o = new Uint8Array(s.response);
							var l = ca.parseSidx(o.subarray(8));
							return r(n, l)
						}
					}
				}, {
					key: "media",
					value: function e(t) {
						var n = this;
						if(!t) {
							return this.media_
						}
						if(this.state === "HAVE_NOTHING") {
							throw new Error("Cannot switch media playlist from " + this.state)
						}
						var i = this.state;
						if(typeof t === "string") {
							if(!this.master.playlists[t]) {
								throw new Error("Unknown playlist URI: " + t)
							}
							t = this.master.playlists[t]
						}
						var r = !this.media_ || t.id !== this.media_.id;
						if(r && this.loadedPlaylists_[t.id] && this.loadedPlaylists_[t.id].endList) {
							this.state = "HAVE_METADATA";
							this.media_ = t;
							if(r) {
								this.trigger("mediachanging");
								this.trigger("mediachange")
							}
							return
						}
						if(!r) {
							return
						}
						if(this.media_) {
							this.trigger("mediachanging")
						}
						if(!t.sidx) {
							this.mediaRequest_ = c.setTimeout(this.haveMetadata.bind(this, {
								startingState: i,
								playlist: t
							}), 0);
							return
						}
						var a = void 0;
						var s = void 0;
						if(this.masterPlaylistLoader_) {
							a = this.masterPlaylistLoader_.master;
							s = this.masterPlaylistLoader_.sidxMapping_
						} else {
							a = this.master;
							s = this.sidxMapping_
						}
						var o = ha(t.sidx);
						s[o] = {
							sidxInfo: t.sidx
						};
						this.request = ya(t.sidx, t, this.hls_.xhr, {
							handleManifestRedirects: this.handleManifestRedirects
						}, this.sidxRequestFinished_(t, a, i, function(e, r) {
							if(!e || !r) {
								throw new Error("failed to request sidx")
							}
							s[o].sidx = r;
							n.haveMetadata({
								startingState: i,
								playlist: e.playlists[t.id]
							})
						}))
					}
				}, {
					key: "haveMetadata",
					value: function e(t) {
						var n = t.startingState,
							i = t.playlist;
						this.state = "HAVE_METADATA";
						this.loadedPlaylists_[i.id] = i;
						this.mediaRequest_ = null;
						this.refreshMedia_(i.id);
						if(n === "HAVE_MASTER") {
							this.trigger("loadedmetadata")
						} else {
							this.trigger("mediachange")
						}
					}
				}, {
					key: "pause",
					value: function e() {
						this.stopRequest();
						c.clearTimeout(this.mediaUpdateTimeout);
						c.clearTimeout(this.minimumUpdatePeriodTimeout_);
						if(this.state === "HAVE_NOTHING") {
							this.started = false
						}
					}
				}, {
					key: "load",
					value: function e(t) {
						var n = this;
						c.clearTimeout(this.mediaUpdateTimeout);
						c.clearTimeout(this.minimumUpdatePeriodTimeout_);
						var i = this.media();
						if(t) {
							var r = i ? i.targetDuration / 2 * 1e3 : 5 * 1e3;
							this.mediaUpdateTimeout = c.setTimeout(function() {
								return n.load()
							}, r);
							return
						}
						if(!this.started) {
							this.start();
							return
						}
						if(i && !i.endList) {
							this.trigger("mediaupdatetimeout")
						} else {
							this.trigger("loadedplaylist")
						}
					}
				}, {
					key: "parseMasterXml",
					value: function e() {
						var t = Jr(this.masterXml_, {
							manifestUri: this.srcUrl,
							clientOffset: this.clientOffset_,
							sidxMapping: this.sidxMapping_
						});
						t.uri = this.srcUrl;
						for(var n = 0; n < t.playlists.length; n++) {
							var i = "placeholder-uri-" + n;
							t.playlists[n].uri = i
						}
						O(t, function(e, n, i, r) {
							if(e.playlists && e.playlists.length) {
								var a = "placeholder-uri-" + n + "-" + i + "-" + r;
								var s = R(0, a);
								e.playlists[0].uri = a;
								e.playlists[0].id = s;
								t.playlists[s] = e.playlists[0];
								t.playlists[a] = e.playlists[0]
							}
						});
						U(t);
						M(t);
						return t
					}
				}, {
					key: "start",
					value: function e() {
						var t = this;
						this.started = true;
						if(this.masterPlaylistLoader_) {
							this.mediaRequest_ = c.setTimeout(this.haveMaster_.bind(this), 0);
							return
						}
						this.request = this.hls_.xhr({
							uri: this.srcUrl,
							withCredentials: this.withCredentials
						}, function(e, n) {
							if(!t.request) {
								return
							}
							t.request = null;
							if(e) {
								t.error = {
									status: n.status,
									message: "DASH playlist request error at URL: " + t.srcUrl,
									responseText: n.responseText,
									code: 2
								};
								if(t.state === "HAVE_NOTHING") {
									t.started = false
								}
								return t.trigger("error")
							}
							t.masterXml_ = n.responseText;
							if(n.responseHeaders && n.responseHeaders.date) {
								t.masterLoaded_ = Date.parse(n.responseHeaders.date)
							} else {
								t.masterLoaded_ = Date.now()
							}
							t.srcUrl = f(t.handleManifestRedirects, t.srcUrl, n);
							t.syncClientServerClock_(t.onClientServerClockSync_.bind(t))
						})
					}
				}, {
					key: "syncClientServerClock_",
					value: function e(t) {
						var n = this;
						var i = Qr(this.masterXml_);
						if(i === null) {
							this.clientOffset_ = this.masterLoaded_ - Date.now();
							return t()
						}
						if(i.method === "DIRECT") {
							this.clientOffset_ = i.value - Date.now();
							return t()
						}
						this.request = this.hls_.xhr({
							uri: d(this.srcUrl, i.value),
							method: i.method,
							withCredentials: this.withCredentials
						}, function(e, r) {
							if(!n.request) {
								return
							}
							if(e) {
								n.clientOffset_ = n.masterLoaded_ - Date.now();
								return t()
							}
							var a = void 0;
							if(i.method === "HEAD") {
								if(!r.responseHeaders || !r.responseHeaders.date) {
									a = n.masterLoaded_
								} else {
									a = Date.parse(r.responseHeaders.date)
								}
							} else {
								a = Date.parse(r.responseText)
							}
							n.clientOffset_ = a - Date.now();
							t()
						})
					}
				}, {
					key: "haveMaster_",
					value: function e() {
						this.state = "HAVE_MASTER";
						this.mediaRequest_ = null;
						if(!this.masterPlaylistLoader_) {
							this.master = this.parseMasterXml();
							this.trigger("loadedplaylist")
						} else if(!this.media_) {
							this.media(this.childPlaylist_)
						}
					}
				}, {
					key: "onClientServerClockSync_",
					value: function e() {
						var t = this;
						this.haveMaster_();
						if(!this.hasPendingRequest() && !this.media_) {
							this.media(this.master.playlists[0])
						}
						if(this.master && this.master.minimumUpdatePeriod) {
							this.minimumUpdatePeriodTimeout_ = c.setTimeout(function() {
								t.trigger("minimumUpdatePeriod")
							}, this.master.minimumUpdatePeriod)
						}
					}
				}, {
					key: "refreshXml_",
					value: function e() {
						var t = this;
						this.request = this.hls_.xhr({
							uri: this.srcUrl,
							withCredentials: this.withCredentials
						}, function(e, n) {
							if(!t.request) {
								return
							}
							t.request = null;
							if(e) {
								t.error = {
									status: n.status,
									message: "DASH playlist request error at URL: " + t.srcUrl,
									responseText: n.responseText,
									code: 2
								};
								if(t.state === "HAVE_NOTHING") {
									t.started = false
								}
								return t.trigger("error")
							}
							t.masterXml_ = n.responseText;
							t.sidxMapping_ = ma(t.masterXml_, t.srcUrl, t.clientOffset_, t.sidxMapping_);
							var i = t.parseMasterXml();
							var r = pa(t.master, i);
							var a = t.media().sidx;
							if(r) {
								if(a) {
									var s = ha(a);
									if(!t.sidxMapping_[s]) {
										var o = t.media();
										t.request = ya(o.sidx, o, t.hls_.xhr, {
											handleManifestRedirects: t.handleManifestRedirects
										}, t.sidxRequestFinished_(o, i, t.state, function(e, n) {
											if(!e || !n) {
												throw new Error("failed to request sidx on minimumUpdatePeriod")
											}
											t.sidxMapping_[s].sidx = n;
											t.minimumUpdatePeriodTimeout_ = c.setTimeout(function() {
												t.trigger("minimumUpdatePeriod")
											}, t.master.minimumUpdatePeriod);
											t.refreshMedia_(t.media().id);
											return
										}))
									}
								} else {
									t.master = r
								}
							}
							t.minimumUpdatePeriodTimeout_ = c.setTimeout(function() {
								t.trigger("minimumUpdatePeriod")
							}, t.master.minimumUpdatePeriod)
						})
					}
				}, {
					key: "refreshMedia_",
					value: function e(t) {
						var n = this;
						if(!t) {
							throw new Error("refreshMedia_ must take a media id")
						}
						var i = void 0;
						var r = void 0;
						if(this.masterPlaylistLoader_) {
							i = this.masterPlaylistLoader_.master;
							r = this.masterPlaylistLoader_.parseMasterXml()
						} else {
							i = this.master;
							r = this.parseMasterXml()
						}
						var a = pa(i, r);
						if(a) {
							if(this.masterPlaylistLoader_) {
								this.masterPlaylistLoader_.master = a
							} else {
								this.master = a
							}
							this.media_ = a.playlists[t]
						} else {
							this.media_ = r.playlists[t];
							this.trigger("playlistunchanged")
						}
						if(!this.media().endList) {
							this.mediaUpdateTimeout = c.setTimeout(function() {
								n.trigger("mediaupdatetimeout")
							}, B(this.media(), !!a))
						}
						this.trigger("loadedplaylist")
					}
				}]);
				return t
			}(da);
			var ba = function e(n) {
				if(t.log.debug) {
					return t.log.debug.bind(t, "VHS:", n + " >")
				}
				return function() {}
			};

			function Aa() {}
			var Sa = function() {
				function e(t, n, i, r) {
					T(this, e);
					this.callbacks_ = [];
					this.pendingCallback_ = null;
					this.timestampOffset_ = 0;
					this.mediaSource = t;
					this.processedAppend_ = false;
					this.type_ = i;
					this.mimeType_ = n;
					this.logger_ = ba("SourceUpdater[" + i + "][" + n + "]");
					if(t.readyState === "closed") {
						t.addEventListener("sourceopen", this.createSourceBuffer_.bind(this, n, r))
					} else {
						this.createSourceBuffer_(n, r)
					}
				}
				k(e, [{
					key: "createSourceBuffer_",
					value: function e(t, n) {
						var i = this;
						this.sourceBuffer_ = this.mediaSource.addSourceBuffer(t);
						this.logger_("created SourceBuffer");
						if(n) {
							n.trigger("sourcebufferadded");
							if(this.mediaSource.sourceBuffers.length < 2) {
								n.on("sourcebufferadded", function() {
									i.start_()
								});
								return
							}
						}
						this.start_()
					}
				}, {
					key: "start_",
					value: function e() {
						var t = this;
						this.started_ = true;
						this.onUpdateendCallback_ = function() {
							var e = t.pendingCallback_;
							t.pendingCallback_ = null;
							t.sourceBuffer_.removing = false;
							t.logger_("buffered [" + et(t.buffered()) + "]");
							if(e) {
								e()
							}
							t.runCallback_()
						};
						this.sourceBuffer_.addEventListener("updateend", this.onUpdateendCallback_);
						this.runCallback_()
					}
				}, {
					key: "abort",
					value: function e(t) {
						var n = this;
						if(this.processedAppend_) {
							this.queueCallback_(function() {
								n.sourceBuffer_.abort()
							}, t)
						}
					}
				}, {
					key: "appendBuffer",
					value: function e(t, n) {
						var i = this;
						this.processedAppend_ = true;
						this.queueCallback_(function() {
							if(t.videoSegmentTimingInfoCallback) {
								i.sourceBuffer_.addEventListener("videoSegmentTimingInfo", t.videoSegmentTimingInfoCallback)
							}
							i.sourceBuffer_.appendBuffer(t.bytes)
						}, function() {
							if(t.videoSegmentTimingInfoCallback) {
								i.sourceBuffer_.removeEventListener("videoSegmentTimingInfo", t.videoSegmentTimingInfoCallback)
							}
							n()
						})
					}
				}, {
					key: "buffered",
					value: function e() {
						if(!this.sourceBuffer_) {
							return t.createTimeRanges()
						}
						return this.sourceBuffer_.buffered
					}
				}, {
					key: "remove",
					value: function e(t, n) {
						var i = this;
						var r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Aa;
						if(this.processedAppend_) {
							this.queueCallback_(function() {
								i.logger_("remove [" + t + " => " + n + "]");
								i.sourceBuffer_.removing = true;
								i.sourceBuffer_.remove(t, n)
							}, r)
						}
					}
				}, {
					key: "updating",
					value: function e() {
						return !this.sourceBuffer_ || this.sourceBuffer_.updating || !!this.pendingCallback_ && this.pendingCallback_ !== Aa
					}
				}, {
					key: "timestampOffset",
					value: function e(t) {
						var n = this;
						if(typeof t !== "undefined") {
							this.queueCallback_(function() {
								n.sourceBuffer_.timestampOffset = t;
								n.runCallback_()
							});
							this.timestampOffset_ = t
						}
						return this.timestampOffset_
					}
				}, {
					key: "queueCallback_",
					value: function e(t, n) {
						this.callbacks_.push([t.bind(this), n]);
						this.runCallback_()
					}
				}, {
					key: "runCallback_",
					value: function e() {
						var t = void 0;
						if(!this.updating() && this.callbacks_.length && this.started_) {
							t = this.callbacks_.shift();
							this.pendingCallback_ = t[1];
							t[0]()
						}
					}
				}, {
					key: "dispose",
					value: function e() {
						var t = this;
						var n = function e() {
							if(t.sourceBuffer_ && t.mediaSource.readyState === "open") {
								t.sourceBuffer_.abort()
							}
							t.sourceBuffer_.removeEventListener("updateend", e)
						};
						this.sourceBuffer_.removeEventListener("updateend", this.onUpdateendCallback_);
						if(this.sourceBuffer_.removing) {
							this.sourceBuffer_.addEventListener("updateend", n)
						} else {
							n()
						}
					}
				}]);
				return e
			}();
			var Ta = {
				GOAL_BUFFER_LENGTH: 30,
				MAX_GOAL_BUFFER_LENGTH: 60,
				GOAL_BUFFER_LENGTH_RATE: 1,
				INITIAL_BANDWIDTH: 4194304,
				BANDWIDTH_VARIANCE: 1.2,
				BUFFER_LOW_WATER_LINE: 0,
				MAX_BUFFER_LOW_WATER_LINE: 30,
				BUFFER_LOW_WATER_LINE_RATE: 1
			};
			var ka = ea.toUnsigned;
			var Ea = ea.toHexString;
			var Pa, Ca, wa, ja, Ia;
			Pa = function e(t) {
				var n = {},
					i = ca.findBox(t, ["moov", "trak"]);
				return i.reduce(function(e, t) {
					var n, i, r, a, s;
					n = ca.findBox(t, ["tkhd"])[0];
					if(!n) {
						return null
					}
					i = n[0];
					r = i === 0 ? 12 : 20;
					a = ka(n[r] << 24 | n[r + 1] << 16 | n[r + 2] << 8 | n[r + 3]);
					s = ca.findBox(t, ["mdia", "mdhd"])[0];
					if(!s) {
						return null
					}
					i = s[0];
					r = i === 0 ? 12 : 20;
					e[a] = ka(s[r] << 24 | s[r + 1] << 16 | s[r + 2] << 8 | s[r + 3]);
					return e
				}, n)
			};
			Ca = function e(t, n) {
				var i, r, a;
				i = ca.findBox(n, ["moof", "traf"]);
				r = [].concat.apply([], i.map(function(e) {
					return ca.findBox(e, ["tfhd"]).map(function(n) {
						var i, r, a;
						i = ka(n[4] << 24 | n[5] << 16 | n[6] << 8 | n[7]);
						r = t[i] || 9e4;
						a = ca.findBox(e, ["tfdt"]).map(function(e) {
							var t, n;
							t = e[0];
							n = ka(e[4] << 24 | e[5] << 16 | e[6] << 8 | e[7]);
							if(t === 1) {
								n *= Math.pow(2, 32);
								n += ka(e[8] << 24 | e[9] << 16 | e[10] << 8 | e[11])
							}
							return n
						})[0];
						a = a || Infinity;
						return a / r
					})
				}));
				a = Math.min.apply(null, r);
				return isFinite(a) ? a : 0
			};
			wa = function e(t, n) {
				var i = ca.findBox(n, ["moof", "traf"]);
				var r = 0;
				var a = 0;
				var s;
				if(i && i.length) {
					var o = ca.parseTraf(i[0]);
					for(var l = 0; l < o.boxes.length; l++) {
						if(o.boxes[l].type === "tfhd") {
							s = o.boxes[l].trackId
						} else if(o.boxes[l].type === "tfdt") {
							r = o.boxes[l].baseMediaDecodeTime
						} else if(o.boxes[l].type === "trun" && o.boxes[l].samples.length) {
							a = o.boxes[l].samples[0].compositionTimeOffset || 0
						}
					}
				}
				var u = t[s] || 9e4;
				return(r + a) / u
			};
			ja = function e(t) {
				var n = ca.findBox(t, ["moov", "trak"]);
				var i = [];
				n.forEach(function(e) {
					var t = ca.findBox(e, ["mdia", "hdlr"]);
					var n = ca.findBox(e, ["tkhd"]);
					t.forEach(function(e, t) {
						var r = ca.parseType(e.subarray(8, 12));
						var a = n[t];
						var s;
						var o;
						var l;
						if(r === "vide") {
							s = new DataView(a.buffer, a.byteOffset, a.byteLength);
							o = s.getUint8(0);
							l = o === 0 ? s.getUint32(12) : s.getUint32(20);
							i.push(l)
						}
					})
				});
				return i
			};
			Ia = function e(t) {
				var n = ca.findBox(t, ["moov", "trak"]);
				var i = [];
				n.forEach(function(e) {
					var t = {};
					var n = ca.findBox(e, ["tkhd"])[0];
					var r, a;
					if(n) {
						r = new DataView(n.buffer, n.byteOffset, n.byteLength);
						a = r.getUint8(0);
						t.id = a === 0 ? r.getUint32(12) : r.getUint32(20)
					}
					var s = ca.findBox(e, ["mdia", "hdlr"])[0];
					if(s) {
						var o = ca.parseType(s.subarray(8, 12));
						if(o === "vide") {
							t.type = "video"
						} else if(o === "soun") {
							t.type = "audio"
						} else {
							t.type = o
						}
					}
					var l = ca.findBox(e, ["mdia", "minf", "stbl", "stsd"])[0];
					if(l) {
						var u = l.subarray(8);
						t.codec = ca.parseType(u.subarray(4, 8));
						var c = ca.findBox(u, [t.codec])[0];
						var d, f;
						if(c) {
							if(/^[a-z]vc[1-9]$/i.test(t.codec)) {
								d = c.subarray(78);
								f = ca.parseType(d.subarray(4, 8));
								if(f === "avcC" && d.length > 11) {
									t.codec += ".";
									t.codec += Ea(d[9]);
									t.codec += Ea(d[10]);
									t.codec += Ea(d[11])
								} else {
									t.codec = "avc1.4d400d"
								}
							} else if(/^mp4[a,v]$/i.test(t.codec)) {
								d = c.subarray(28);
								f = ca.parseType(d.subarray(4, 8));
								if(f === "esds" && d.length > 20 && d[19] !== 0) {
									t.codec += "." + Ea(d[19]);
									t.codec += "." + Ea(d[20] >>> 2 & 63).replace(/^0/, "")
								} else {
									t.codec = "mp4a.40.2"
								}
							} else {}
						}
					}
					var p = ca.findBox(e, ["mdia", "mdhd"])[0];
					if(p && n) {
						var h = a === 0 ? 12 : 20;
						t.timescale = ka(p[h] << 24 | p[h + 1] << 16 | p[h + 2] << 8 | p[h + 3])
					}
					i.push(t)
				});
				return i
			};
			var La = {
				findBox: ca.findBox,
				parseType: ca.parseType,
				timescale: Pa,
				startTime: Ca,
				compositionStartTime: wa,
				videoTrackIds: ja,
				tracks: Ia
			};
			var Oa = {
				FAILURE: 2,
				TIMEOUT: -101,
				ABORTED: -102
			};
			var Na = function e(t) {
				t.forEach(function(e) {
					e.abort()
				})
			};
			var xa = function e(t) {
				return {
					bandwidth: t.bandwidth,
					bytesReceived: t.bytesReceived || 0,
					roundTripTime: t.roundTripTime || 0
				}
			};
			var Da = function e(t) {
				var n = t.target;
				var i = Date.now() - n.requestTime;
				var r = {
					bandwidth: Infinity,
					bytesReceived: 0,
					roundTripTime: i || 0
				};
				r.bytesReceived = t.loaded;
				r.bandwidth = Math.floor(r.bytesReceived / r.roundTripTime * 8 * 1e3);
				return r
			};
			var Ra = function e(t, n) {
				if(n.timedout) {
					return {
						status: n.status,
						message: "HLS request timed-out at URL: " + n.uri,
						code: Oa.TIMEOUT,
						xhr: n
					}
				}
				if(n.aborted) {
					return {
						status: n.status,
						message: "HLS request aborted at URL: " + n.uri,
						code: Oa.ABORTED,
						xhr: n
					}
				}
				if(t) {
					return {
						status: n.status,
						message: "HLS request errored at URL: " + n.uri,
						code: Oa.FAILURE,
						xhr: n
					}
				}
				return null
			};
			var Ua = function e(t, n) {
				return function(e, i) {
					var r = i.response;
					var a = Ra(e, i);
					if(a) {
						return n(a, t)
					}
					if(r.byteLength !== 16) {
						return n({
							status: i.status,
							message: "Invalid HLS key at URL: " + i.uri,
							code: Oa.FAILURE,
							xhr: i
						}, t)
					}
					var s = new DataView(r);
					t.key.bytes = new Uint32Array([s.getUint32(0), s.getUint32(4), s.getUint32(8), s.getUint32(12)]);
					return n(null, t)
				}
			};
			var Ma = function e(t, n, i) {
				return function(e, r) {
					var a = r.response;
					var s = Ra(e, r);
					if(s) {
						return i(s, t)
					}
					if(a.byteLength === 0) {
						return i({
							status: r.status,
							message: "Empty HLS segment content at URL: " + r.uri,
							code: Oa.FAILURE,
							xhr: r
						}, t)
					}
					t.map.bytes = new Uint8Array(r.response);
					if(n && !n.isInitialized()) {
						n.init()
					}
					t.map.timescales = La.timescale(t.map.bytes);
					t.map.videoTrackIds = La.videoTrackIds(t.map.bytes);
					return i(null, t)
				}
			};
			var Ba = function e(t, n, i) {
				return function(e, r) {
					var a = r.response;
					var s = Ra(e, r);
					var o = void 0;
					if(s) {
						return i(s, t)
					}
					if(a.byteLength === 0) {
						return i({
							status: r.status,
							message: "Empty HLS segment content at URL: " + r.uri,
							code: Oa.FAILURE,
							xhr: r
						}, t)
					}
					t.stats = xa(r);
					if(t.key) {
						t.encryptedBytes = new Uint8Array(r.response)
					} else {
						t.bytes = new Uint8Array(r.response)
					}
					if(n && t.map && t.map.bytes) {
						if(!n.isInitialized()) {
							n.init()
						}
						o = n.parse(t.bytes, t.map.videoTrackIds, t.map.timescales);
						if(o && o.captions) {
							t.captionStreams = o.captionStreams;
							t.fmp4Captions = o.captions
						}
					}
					return i(null, t)
				}
			};
			var Fa = function e(t, n, i) {
				var r = function e(r) {
					if(r.data.source === n.requestId) {
						t.removeEventListener("message", e);
						var a = r.data.decrypted;
						n.bytes = new Uint8Array(a.bytes, a.byteOffset, a.byteLength);
						return i(null, n)
					}
				};
				t.addEventListener("message", r);
				var a = void 0;
				if(n.key.bytes.slice) {
					a = n.key.bytes.slice()
				} else {
					a = new Uint32Array(Array.prototype.slice.call(n.key.bytes))
				}
				t.postMessage(Oe({
					source: n.requestId,
					encrypted: n.encryptedBytes,
					key: a,
					iv: n.key.iv
				}), [n.encryptedBytes.buffer, a.buffer])
			};
			var Va = function e(t, n, i) {
				var r = 0;
				var a = false;
				return function(e, s) {
					if(a) {
						return
					}
					if(e) {
						a = true;
						Na(t);
						return i(e, s)
					}
					r += 1;
					if(r === t.length) {
						s.endOfAllRequests = Date.now();
						if(s.encryptedBytes) {
							return Fa(n, s, i)
						}
						return i(null, s)
					}
				}
			};
			var qa = function e(n, i) {
				return function(e) {
					n.stats = t.mergeOptions(n.stats, Da(e));
					if(!n.stats.firstBytesReceivedAt && n.stats.bytesReceived) {
						n.stats.firstBytesReceivedAt = Date.now()
					}
					return i(e, n)
				}
			};
			var Ha = function e(n, i, r, a, s, o, l) {
				var u = [];
				var c = Va(u, r, l);
				if(s.key && !s.key.bytes) {
					var d = t.mergeOptions(i, {
						uri: s.key.resolvedUri,
						responseType: "arraybuffer"
					});
					var f = Ua(s, c);
					var p = n(d, f);
					u.push(p)
				}
				if(s.map && !s.map.bytes) {
					var h = t.mergeOptions(i, {
						uri: s.map.resolvedUri,
						responseType: "arraybuffer",
						headers: ve(s.map)
					});
					var v = Ma(s, a, c);
					var g = n(h, v);
					u.push(g)
				}
				var m = t.mergeOptions(i, {
					uri: s.resolvedUri,
					responseType: "arraybuffer",
					headers: ve(s)
				});
				var y = Ba(s, a, c);
				var _ = n(m, y);
				_.addEventListener("progress", qa(s, o));
				u.push(_);
				return function() {
					return Na(u)
				}
			};
			var Ga = function e(t, n) {
				var i = void 0;
				if(!t) {
					return ""
				}
				i = c.getComputedStyle(t);
				if(!i) {
					return ""
				}
				return i[n]
			};
			var Ya = function e(t, n) {
				var i = t.slice();
				t.sort(function(e, t) {
					var r = n(e, t);
					if(r === 0) {
						return i.indexOf(e) - i.indexOf(t)
					}
					return r
				})
			};
			var za = function e(t, n) {
				var i = void 0;
				var r = void 0;
				if(t.attributes.BANDWIDTH) {
					i = t.attributes.BANDWIDTH
				}
				i = i || c.Number.MAX_VALUE;
				if(n.attributes.BANDWIDTH) {
					r = n.attributes.BANDWIDTH
				}
				r = r || c.Number.MAX_VALUE;
				return i - r
			};
			var Ka = function e(t, n) {
				var i = void 0;
				var r = void 0;
				if(t.attributes.RESOLUTION && t.attributes.RESOLUTION.width) {
					i = t.attributes.RESOLUTION.width
				}
				i = i || c.Number.MAX_VALUE;
				if(n.attributes.RESOLUTION && n.attributes.RESOLUTION.width) {
					r = n.attributes.RESOLUTION.width
				}
				r = r || c.Number.MAX_VALUE;
				if(i === r && t.attributes.BANDWIDTH && n.attributes.BANDWIDTH) {
					return t.attributes.BANDWIDTH - n.attributes.BANDWIDTH
				}
				return i - r
			};
			var Wa = function e(t, n, i, r, a) {
				var s = t.playlists.map(function(e) {
					var t = void 0;
					var n = void 0;
					var i = void 0;
					t = e.attributes.RESOLUTION && e.attributes.RESOLUTION.width;
					n = e.attributes.RESOLUTION && e.attributes.RESOLUTION.height;
					i = e.attributes.BANDWIDTH;
					i = i || c.Number.MAX_VALUE;
					return {
						bandwidth: i,
						width: t,
						height: n,
						playlist: e
					}
				});
				Ya(s, function(e, t) {
					return e.bandwidth - t.bandwidth
				});
				s = s.filter(function(e) {
					return !ce.isIncompatible(e.playlist)
				});
				var o = s.filter(function(e) {
					return ce.isEnabled(e.playlist)
				});
				if(!o.length) {
					o = s.filter(function(e) {
						return !ce.isDisabled(e.playlist)
					})
				}
				var l = o.filter(function(e) {
					return e.bandwidth * Ta.BANDWIDTH_VARIANCE < n
				});
				var u = l[l.length - 1];
				var d = l.filter(function(e) {
					return e.bandwidth === u.bandwidth
				})[0];
				if(a === false) {
					var f = d || o[0] || s[0];
					return f ? f.playlist : null
				}
				var p = l.filter(function(e) {
					return e.width && e.height
				});
				Ya(p, function(e, t) {
					return e.width - t.width
				});
				var h = p.filter(function(e) {
					return e.width === i && e.height === r
				});
				u = h[h.length - 1];
				var v = h.filter(function(e) {
					return e.bandwidth === u.bandwidth
				})[0];
				var g = void 0;
				var m = void 0;
				var y = void 0;
				if(!v) {
					g = p.filter(function(e) {
						return e.width > i || e.height > r
					});
					m = g.filter(function(e) {
						return e.width === g[0].width && e.height === g[0].height
					});
					u = m[m.length - 1];
					y = m.filter(function(e) {
						return e.bandwidth === u.bandwidth
					})[0]
				}
				var _ = y || v || d || o[0] || s[0];
				return _ ? _.playlist : null
			};
			var Xa = function e() {
				return Wa(this.playlists.master, this.systemBandwidth, parseInt(Ga(this.tech_.el(), "width"), 10), parseInt(Ga(this.tech_.el(), "height"), 10), this.limitRenditionByPlayerDimensions)
			};
			var Ja = function e(t) {
				var n = t.master,
					i = t.currentTime,
					r = t.bandwidth,
					a = t.duration,
					s = t.segmentDuration,
					o = t.timeUntilRebuffer,
					l = t.currentTimeline,
					u = t.syncController;
				var c = n.playlists.filter(function(e) {
					return !ce.isIncompatible(e)
				});
				var d = c.filter(ce.isEnabled);
				if(!d.length) {
					d = c.filter(function(e) {
						return !ce.isDisabled(e)
					})
				}
				var f = d.filter(ce.hasAttribute.bind(null, "BANDWIDTH"));
				var p = f.map(function(e) {
					var t = u.getSyncPoint(e, a, l, i);
					var n = t ? 1 : 2;
					var c = ce.estimateSegmentRequestTime(s, r, e);
					var d = c * n - o;
					return {
						playlist: e,
						rebufferingImpact: d
					}
				});
				var h = p.filter(function(e) {
					return e.rebufferingImpact <= 0
				});
				Ya(h, function(e, t) {
					return za(t.playlist, e.playlist)
				});
				if(h.length) {
					return h[0]
				}
				Ya(p, function(e, t) {
					return e.rebufferingImpact - t.rebufferingImpact
				});
				return p[0] || null
			};
			var Qa = function e() {
				var t = this.playlists.master.playlists.filter(ce.isEnabled);
				Ya(t, function(e, t) {
					return za(e, t)
				});
				var n = t.filter(function(e) {
					return Tt(e.attributes.CODECS).videoCodec
				});
				return n[0] || null
			};
			var Za = function e(t, n, i) {
				for(var r in i) {
					if(!t[r]) {
						n.trigger({
							type: "usage",
							name: "hls-608"
						});
						var a = n.textTracks().getTrackById(r);
						if(a) {
							t[r] = a
						} else {
							t[r] = n.addRemoteTextTrack({
								kind: "captions",
								id: r,
								label: r
							}, false).track
						}
					}
				}
			};
			var $a = function e(t) {
				var n = t.inbandTextTracks,
					i = t.captionArray,
					r = t.timestampOffset;
				if(!i) {
					return
				}
				var a = window.WebKitDataCue || window.VTTCue;
				i.forEach(function(e) {
					var t = e.stream;
					var i = e.startTime;
					var s = e.endTime;
					if(!n[t]) {
						return
					}
					i += r;
					s += r;
					n[t].addCue(new a(i, s, e.text))
				})
			};
			var es = 4,
				ts = 128;
			var ns = function e(t) {
				var n = 0,
					i = {
						payloadType: -1,
						payloadSize: 0
					},
					r = 0,
					a = 0;
				while(n < t.byteLength) {
					if(t[n] === ts) {
						break
					}
					while(t[n] === 255) {
						r += 255;
						n++
					}
					r += t[n++];
					while(t[n] === 255) {
						a += 255;
						n++
					}
					a += t[n++];
					if(!i.payload && r === es) {
						i.payloadType = r;
						i.payloadSize = a;
						i.payload = t.subarray(n, n + a);
						break
					}
					n += a;
					r = 0;
					a = 0
				}
				return i
			};
			var is = function e(t) {
				if(t.payload[0] !== 181) {
					return null
				}
				if((t.payload[1] << 8 | t.payload[2]) !== 49) {
					return null
				}
				if(String.fromCharCode(t.payload[3], t.payload[4], t.payload[5], t.payload[6]) !== "GA94") {
					return null
				}
				if(t.payload[7] !== 3) {
					return null
				}
				return t.payload.subarray(8, t.payload.length - 1)
			};
			var rs = function e(t, n) {
				var i = [],
					r, a, s, o;
				if(!(n[0] & 64)) {
					return i
				}
				a = n[0] & 31;
				for(r = 0; r < a; r++) {
					s = r * 3;
					o = {
						type: n[s + 2] & 3,
						pts: t
					};
					if(n[s + 2] & 4) {
						o.ccData = n[s + 3] << 8 | n[s + 4];
						i.push(o)
					}
				}
				return i
			};
			var as = function e(t) {
				var n = t.byteLength,
					i = [],
					r = 1,
					a, s;
				while(r < n - 2) {
					if(t[r] === 0 && t[r + 1] === 0 && t[r + 2] === 3) {
						i.push(r + 2);
						r += 2
					} else {
						r++
					}
				}
				if(i.length === 0) {
					return t
				}
				a = n - i.length;
				s = new Uint8Array(a);
				var o = 0;
				for(r = 0; r < a; o++, r++) {
					if(o === i[0]) {
						o++;
						i.shift()
					}
					s[r] = t[o]
				}
				return s
			};
			var ss = {
				parseSei: ns,
				parseUserData: is,
				parseCaptionPackets: rs,
				discardEmulationPreventionBytes: as,
				USER_DATA_REGISTERED_ITU_T_T35: es
			};
			var os = function e() {
				this.init = function() {
					var e = {};
					this.on = function(t, n) {
						if(!e[t]) {
							e[t] = []
						}
						e[t] = e[t].concat(n)
					};
					this.off = function(t, n) {
						var i;
						if(!e[t]) {
							return false
						}
						i = e[t].indexOf(n);
						e[t] = e[t].slice();
						e[t].splice(i, 1);
						return i > -1
					};
					this.trigger = function(t) {
						var n, i, r, a;
						n = e[t];
						if(!n) {
							return
						}
						if(arguments.length === 2) {
							r = n.length;
							for(i = 0; i < r; ++i) {
								n[i].call(this, arguments[1])
							}
						} else {
							a = [];
							i = arguments.length;
							for(i = 1; i < arguments.length; ++i) {
								a.push(arguments[i])
							}
							r = n.length;
							for(i = 0; i < r; ++i) {
								n[i].apply(this, a)
							}
						}
					};
					this.dispose = function() {
						e = {}
					}
				}
			};
			os.prototype.pipe = function(e) {
				this.on("data", function(t) {
					e.push(t)
				});
				this.on("done", function(t) {
					e.flush(t)
				});
				this.on("partialdone", function(t) {
					e.partialFlush(t)
				});
				this.on("endedtimeline", function(t) {
					e.endTimeline(t)
				});
				this.on("reset", function(t) {
					e.reset(t)
				});
				return e
			};
			os.prototype.push = function(e) {
				this.trigger("data", e)
			};
			os.prototype.flush = function(e) {
				this.trigger("done", e)
			};
			os.prototype.partialFlush = function(e) {
				this.trigger("partialdone", e)
			};
			os.prototype.endTimeline = function(e) {
				this.trigger("endedtimeline", e)
			};
			os.prototype.reset = function(e) {
				this.trigger("reset", e)
			};
			var ls = os;
			var us = function e() {
				e.prototype.init.call(this);
				this.captionPackets_ = [];
				this.ccStreams_ = [new vs(0, 0), new vs(0, 1), new vs(1, 0), new vs(1, 1)];
				this.reset();
				this.ccStreams_.forEach(function(e) {
					e.on("data", this.trigger.bind(this, "data"));
					e.on("partialdone", this.trigger.bind(this, "partialdone"));
					e.on("done", this.trigger.bind(this, "done"))
				}, this)
			};
			us.prototype = new ls;
			us.prototype.push = function(e) {
				var t, n, i;
				if(e.nalUnitType !== "sei_rbsp") {
					return
				}
				t = ss.parseSei(e.escapedRBSP);
				if(t.payloadType !== ss.USER_DATA_REGISTERED_ITU_T_T35) {
					return
				}
				n = ss.parseUserData(t);
				if(!n) {
					return
				}
				if(e.dts < this.latestDts_) {
					this.ignoreNextEqualDts_ = true;
					return
				} else if(e.dts === this.latestDts_ && this.ignoreNextEqualDts_) {
					this.numSameDts_--;
					if(!this.numSameDts_) {
						this.ignoreNextEqualDts_ = false
					}
					return
				}
				i = ss.parseCaptionPackets(e.pts, n);
				this.captionPackets_ = this.captionPackets_.concat(i);
				if(this.latestDts_ !== e.dts) {
					this.numSameDts_ = 0
				}
				this.numSameDts_++;
				this.latestDts_ = e.dts
			};
			us.prototype.flushCCStreams = function(e) {
				this.ccStreams_.forEach(function(t) {
					return e === "flush" ? t.flush() : t.partialFlush()
				}, this)
			};
			us.prototype.flushStream = function(e) {
				if(!this.captionPackets_.length) {
					this.flushCCStreams(e);
					return
				}
				this.captionPackets_.forEach(function(e, t) {
					e.presortIndex = t
				});
				this.captionPackets_.sort(function(e, t) {
					if(e.pts === t.pts) {
						return e.presortIndex - t.presortIndex
					}
					return e.pts - t.pts
				});
				this.captionPackets_.forEach(function(e) {
					if(e.type < 2) {
						this.dispatchCea608Packet(e)
					}
				}, this);
				this.captionPackets_.length = 0;
				this.flushCCStreams(e)
			};
			us.prototype.flush = function() {
				return this.flushStream("flush")
			};
			us.prototype.partialFlush = function() {
				return this.flushStream("partialFlush")
			};
			us.prototype.reset = function() {
				this.latestDts_ = null;
				this.ignoreNextEqualDts_ = false;
				this.numSameDts_ = 0;
				this.activeCea608Channel_ = [null, null];
				this.ccStreams_.forEach(function(e) {
					e.reset()
				})
			};
			us.prototype.dispatchCea608Packet = function(e) {
				if(this.setsTextOrXDSActive(e)) {
					this.activeCea608Channel_[e.type] = null
				} else if(this.setsChannel1Active(e)) {
					this.activeCea608Channel_[e.type] = 0
				} else if(this.setsChannel2Active(e)) {
					this.activeCea608Channel_[e.type] = 1
				}
				if(this.activeCea608Channel_[e.type] === null) {
					return
				}
				this.ccStreams_[(e.type << 1) + this.activeCea608Channel_[e.type]].push(e)
			};
			us.prototype.setsChannel1Active = function(e) {
				return(e.ccData & 30720) === 4096
			};
			us.prototype.setsChannel2Active = function(e) {
				return(e.ccData & 30720) === 6144
			};
			us.prototype.setsTextOrXDSActive = function(e) {
				return(e.ccData & 28928) === 256 || (e.ccData & 30974) === 4138 || (e.ccData & 30974) === 6186
			};
			var cs = {
				42: 225,
				92: 233,
				94: 237,
				95: 243,
				96: 250,
				123: 231,
				124: 247,
				125: 209,
				126: 241,
				127: 9608,
				304: 174,
				305: 176,
				306: 189,
				307: 191,
				308: 8482,
				309: 162,
				310: 163,
				311: 9834,
				312: 224,
				313: 160,
				314: 232,
				315: 226,
				316: 234,
				317: 238,
				318: 244,
				319: 251,
				544: 193,
				545: 201,
				546: 211,
				547: 218,
				548: 220,
				549: 252,
				550: 8216,
				551: 161,
				552: 42,
				553: 39,
				554: 8212,
				555: 169,
				556: 8480,
				557: 8226,
				558: 8220,
				559: 8221,
				560: 192,
				561: 194,
				562: 199,
				563: 200,
				564: 202,
				565: 203,
				566: 235,
				567: 206,
				568: 207,
				569: 239,
				570: 212,
				571: 217,
				572: 249,
				573: 219,
				574: 171,
				575: 187,
				800: 195,
				801: 227,
				802: 205,
				803: 204,
				804: 236,
				805: 210,
				806: 242,
				807: 213,
				808: 245,
				809: 123,
				810: 125,
				811: 92,
				812: 94,
				813: 95,
				814: 124,
				815: 126,
				816: 196,
				817: 228,
				818: 214,
				819: 246,
				820: 223,
				821: 165,
				822: 164,
				823: 9474,
				824: 197,
				825: 229,
				826: 216,
				827: 248,
				828: 9484,
				829: 9488,
				830: 9492,
				831: 9496
			};
			var ds = function e(t) {
				if(t === null) {
					return ""
				}
				t = cs[t] || t;
				return String.fromCharCode(t)
			};
			var fs = 14;
			var ps = [4352, 4384, 4608, 4640, 5376, 5408, 5632, 5664, 5888, 5920, 4096, 4864, 4896, 5120, 5152];
			var hs = function e() {
				var t = [],
					n = fs + 1;
				while(n--) {
					t.push("")
				}
				return t
			};
			var vs = function e(t, n) {
				e.prototype.init.call(this);
				this.field_ = t || 0;
				this.dataChannel_ = n || 0;
				this.name_ = "CC" + ((this.field_ << 1 | this.dataChannel_) + 1);
				this.setConstants();
				this.reset();
				this.push = function(e) {
					var t, n, i, r, a;
					t = e.ccData & 32639;
					if(t === this.lastControlCode_) {
						this.lastControlCode_ = null;
						return
					}
					if((t & 61440) === 4096) {
						this.lastControlCode_ = t
					} else if(t !== this.PADDING_) {
						this.lastControlCode_ = null
					}
					i = t >>> 8;
					r = t & 255;
					if(t === this.PADDING_) {
						return
					} else if(t === this.RESUME_CAPTION_LOADING_) {
						this.mode_ = "popOn"
					} else if(t === this.END_OF_CAPTION_) {
						this.mode_ = "popOn";
						this.clearFormatting(e.pts);
						this.flushDisplayed(e.pts);
						n = this.displayed_;
						this.displayed_ = this.nonDisplayed_;
						this.nonDisplayed_ = n;
						this.startPts_ = e.pts
					} else if(t === this.ROLL_UP_2_ROWS_) {
						this.rollUpRows_ = 2;
						this.setRollUp(e.pts)
					} else if(t === this.ROLL_UP_3_ROWS_) {
						this.rollUpRows_ = 3;
						this.setRollUp(e.pts)
					} else if(t === this.ROLL_UP_4_ROWS_) {
						this.rollUpRows_ = 4;
						this.setRollUp(e.pts)
					} else if(t === this.CARRIAGE_RETURN_) {
						this.clearFormatting(e.pts);
						this.flushDisplayed(e.pts);
						this.shiftRowsUp_();
						this.startPts_ = e.pts
					} else if(t === this.BACKSPACE_) {
						if(this.mode_ === "popOn") {
							this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1)
						} else {
							this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1)
						}
					} else if(t === this.ERASE_DISPLAYED_MEMORY_) {
						this.flushDisplayed(e.pts);
						this.displayed_ = hs()
					} else if(t === this.ERASE_NON_DISPLAYED_MEMORY_) {
						this.nonDisplayed_ = hs()
					} else if(t === this.RESUME_DIRECT_CAPTIONING_) {
						if(this.mode_ !== "paintOn") {
							this.flushDisplayed(e.pts);
							this.displayed_ = hs()
						}
						this.mode_ = "paintOn";
						this.startPts_ = e.pts
					} else if(this.isSpecialCharacter(i, r)) {
						i = (i & 3) << 8;
						a = ds(i | r);
						this[this.mode_](e.pts, a);
						this.column_++
					} else if(this.isExtCharacter(i, r)) {
						if(this.mode_ === "popOn") {
							this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1)
						} else {
							this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1)
						}
						i = (i & 3) << 8;
						a = ds(i | r);
						this[this.mode_](e.pts, a);
						this.column_++
					} else if(this.isMidRowCode(i, r)) {
						this.clearFormatting(e.pts);
						this[this.mode_](e.pts, " ");
						this.column_++;
						if((r & 14) === 14) {
							this.addFormatting(e.pts, ["i"])
						}
						if((r & 1) === 1) {
							this.addFormatting(e.pts, ["u"])
						}
					} else if(this.isOffsetControlCode(i, r)) {
						this.column_ += r & 3
					} else if(this.isPAC(i, r)) {
						var s = ps.indexOf(t & 7968);
						if(this.mode_ === "rollUp") {
							if(s - this.rollUpRows_ + 1 < 0) {
								s = this.rollUpRows_ - 1
							}
							this.setRollUp(e.pts, s)
						}
						if(s !== this.row_) {
							this.clearFormatting(e.pts);
							this.row_ = s
						}
						if(r & 1 && this.formatting_.indexOf("u") === -1) {
							this.addFormatting(e.pts, ["u"])
						}
						if((t & 16) === 16) {
							this.column_ = ((t & 14) >> 1) * 4
						}
						if(this.isColorPAC(r)) {
							if((r & 14) === 14) {
								this.addFormatting(e.pts, ["i"])
							}
						}
					} else if(this.isNormalChar(i)) {
						if(r === 0) {
							r = null
						}
						a = ds(i);
						a += ds(r);
						this[this.mode_](e.pts, a);
						this.column_ += a.length
					}
				}
			};
			vs.prototype = new ls;
			vs.prototype.flushDisplayed = function(e) {
				var t = this.displayed_.map(function(e) {
					try {
						return e.trim()
					} catch(e) {
						console.error("Skipping malformed caption.");
						return ""
					}
				}).join("\n").replace(/^\n+|\n+$/g, "");
				if(t.length) {
					this.trigger("data", {
						startPts: this.startPts_,
						endPts: e,
						text: t,
						stream: this.name_
					})
				}
			};
			vs.prototype.reset = function() {
				this.mode_ = "popOn";
				this.topRow_ = 0;
				this.startPts_ = 0;
				this.displayed_ = hs();
				this.nonDisplayed_ = hs();
				this.lastControlCode_ = null;
				this.column_ = 0;
				this.row_ = fs;
				this.rollUpRows_ = 2;
				this.formatting_ = []
			};
			vs.prototype.setConstants = function() {
				if(this.dataChannel_ === 0) {
					this.BASE_ = 16;
					this.EXT_ = 17;
					this.CONTROL_ = (20 | this.field_) << 8;
					this.OFFSET_ = 23
				} else if(this.dataChannel_ === 1) {
					this.BASE_ = 24;
					this.EXT_ = 25;
					this.CONTROL_ = (28 | this.field_) << 8;
					this.OFFSET_ = 31
				}
				this.PADDING_ = 0;
				this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 32;
				this.END_OF_CAPTION_ = this.CONTROL_ | 47;
				this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 37;
				this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 38;
				this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 39;
				this.CARRIAGE_RETURN_ = this.CONTROL_ | 45;
				this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 41;
				this.BACKSPACE_ = this.CONTROL_ | 33;
				this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 44;
				this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 46
			};
			vs.prototype.isSpecialCharacter = function(e, t) {
				return e === this.EXT_ && t >= 48 && t <= 63
			};
			vs.prototype.isExtCharacter = function(e, t) {
				return(e === this.EXT_ + 1 || e === this.EXT_ + 2) && t >= 32 && t <= 63
			};
			vs.prototype.isMidRowCode = function(e, t) {
				return e === this.EXT_ && t >= 32 && t <= 47
			};
			vs.prototype.isOffsetControlCode = function(e, t) {
				return e === this.OFFSET_ && t >= 33 && t <= 35
			};
			vs.prototype.isPAC = function(e, t) {
				return e >= this.BASE_ && e < this.BASE_ + 8 && t >= 64 && t <= 127
			};
			vs.prototype.isColorPAC = function(e) {
				return e >= 64 && e <= 79 || e >= 96 && e <= 127
			};
			vs.prototype.isNormalChar = function(e) {
				return e >= 32 && e <= 127
			};
			vs.prototype.setRollUp = function(e, t) {
				if(this.mode_ !== "rollUp") {
					this.row_ = fs;
					this.mode_ = "rollUp";
					this.flushDisplayed(e);
					this.nonDisplayed_ = hs();
					this.displayed_ = hs()
				}
				if(t !== undefined && t !== this.row_) {
					for(var n = 0; n < this.rollUpRows_; n++) {
						this.displayed_[t - n] = this.displayed_[this.row_ - n];
						this.displayed_[this.row_ - n] = ""
					}
				}
				if(t === undefined) {
					t = this.row_
				}
				this.topRow_ = t - this.rollUpRows_ + 1
			};
			vs.prototype.addFormatting = function(e, t) {
				this.formatting_ = this.formatting_.concat(t);
				var n = t.reduce(function(e, t) {
					return e + "<" + t + ">"
				}, "");
				this[this.mode_](e, n)
			};
			vs.prototype.clearFormatting = function(e) {
				if(!this.formatting_.length) {
					return
				}
				var t = this.formatting_.reverse().reduce(function(e, t) {
					return e + "</" + t + ">"
				}, "");
				this.formatting_ = [];
				this[this.mode_](e, t)
			};
			vs.prototype.popOn = function(e, t) {
				var n = this.nonDisplayed_[this.row_];
				n += t;
				this.nonDisplayed_[this.row_] = n
			};
			vs.prototype.rollUp = function(e, t) {
				var n = this.displayed_[this.row_];
				n += t;
				this.displayed_[this.row_] = n
			};
			vs.prototype.shiftRowsUp_ = function() {
				var e;
				for(e = 0; e < this.topRow_; e++) {
					this.displayed_[e] = ""
				}
				for(e = this.row_ + 1; e < fs + 1; e++) {
					this.displayed_[e] = ""
				}
				for(e = this.topRow_; e < this.row_; e++) {
					this.displayed_[e] = this.displayed_[e + 1]
				}
				this.displayed_[this.row_] = ""
			};
			vs.prototype.paintOn = function(e, t) {
				var n = this.displayed_[this.row_];
				n += t;
				this.displayed_[this.row_] = n
			};
			var gs = {
				CaptionStream: us,
				Cea608Stream: vs
			};
			var ms = ss.discardEmulationPreventionBytes;
			var ys = gs.CaptionStream;
			var _s = function e(t, n) {
				var i = t;
				for(var r = 0; r < n.length; r++) {
					var a = n[r];
					if(i < a.size) {
						return a
					}
					i -= a.size
				}
				return null
			};
			var bs = function e(t, n, i) {
				var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
					a = [],
					s, o, l, u;
				for(o = 0; o + 4 < t.length; o += l) {
					l = r.getUint32(o);
					o += 4;
					if(l <= 0) {
						continue
					}
					switch(t[o] & 31) {
						case 6:
							var c = t.subarray(o + 1, o + 1 + l);
							var d = _s(o, n);
							s = {
								nalUnitType: "sei_rbsp",
								size: l,
								data: c,
								escapedRBSP: ms(c),
								trackId: i
							};
							if(d) {
								s.pts = d.pts;
								s.dts = d.dts;
								u = d
							} else {
								s.pts = u.pts;
								s.dts = u.dts
							}
							a.push(s);
							break;
						default:
							break
					}
				}
				return a
			};
			var As = function e(t, n, i) {
				var r = n;
				var a = i.defaultSampleDuration || 0;
				var s = i.defaultSampleSize || 0;
				var o = i.trackId;
				var l = [];
				t.forEach(function(e) {
					var t = ca.parseTrun(e);
					var n = t.samples;
					n.forEach(function(e) {
						if(e.duration === undefined) {
							e.duration = a
						}
						if(e.size === undefined) {
							e.size = s
						}
						e.trackId = o;
						e.dts = r;
						if(e.compositionTimeOffset === undefined) {
							e.compositionTimeOffset = 0
						}
						e.pts = r + e.compositionTimeOffset;
						r += e.duration
					});
					l = l.concat(n)
				});
				return l
			};
			var Ss = function e(t, n) {
				var i = La.findBox(t, ["moof", "traf"]);
				var r = La.findBox(t, ["mdat"]);
				var a = {};
				var s = [];
				r.forEach(function(e, t) {
					var n = i[t];
					s.push({
						mdat: e,
						traf: n
					})
				});
				s.forEach(function(e) {
					var t = e.mdat;
					var i = e.traf;
					var r = La.findBox(i, ["tfhd"]);
					var s = ca.parseTfhd(r[0]);
					var o = s.trackId;
					var l = La.findBox(i, ["tfdt"]);
					var u = l.length > 0 ? ca.parseTfdt(l[0]).baseMediaDecodeTime : 0;
					var c = La.findBox(i, ["trun"]);
					var d;
					var f;
					if(n === o && c.length > 0) {
						d = As(c, u, s);
						f = bs(t, d, o);
						if(!a[o]) {
							a[o] = []
						}
						a[o] = a[o].concat(f)
					}
				});
				return a
			};
			var Ts = function e(t, n, i) {
				var r;
				if(n === null) {
					return null
				}
				r = Ss(t, n);
				return {
					seiNals: r[n],
					timescale: i
				}
			};
			var ks = function e() {
				var t = false;
				var n;
				var i;
				var r;
				var a;
				var s;
				var o;
				this.isInitialized = function() {
					return t
				};
				this.init = function(e) {
					n = new ys;
					t = true;
					o = e ? e.isPartial : false;
					n.on("data", function(e) {
						e.startTime = e.startPts / a;
						e.endTime = e.endPts / a;
						s.captions.push(e);
						s.captionStreams[e.stream] = true
					})
				};
				this.isNewInit = function(e, t) {
					if(e && e.length === 0 || t && typeof t === "object" && Object.keys(t).length === 0) {
						return false
					}
					return r !== e[0] || a !== t[r]
				};
				this.parse = function(e, t, n) {
					var o;
					if(!this.isInitialized()) {
						return null
					} else if(!t || !n) {
						return null
					} else if(this.isNewInit(t, n)) {
						r = t[0];
						a = n[r]
					} else if(r === null || !a) {
						i.push(e);
						return null
					}
					while(i.length > 0) {
						var l = i.shift();
						this.parse(l, t, n)
					}
					o = Ts(e, r, a);
					if(o === null || !o.seiNals) {
						return null
					}
					this.pushNals(o.seiNals);
					this.flushStream();
					return s
				};
				this.pushNals = function(e) {
					if(!this.isInitialized() || !e || e.length === 0) {
						return null
					}
					e.forEach(function(e) {
						n.push(e)
					})
				};
				this.flushStream = function() {
					if(!this.isInitialized()) {
						return null
					}
					if(!o) {
						n.flush()
					} else {
						n.partialFlush()
					}
				};
				this.clearParsedCaptions = function() {
					s.captions = [];
					s.captionStreams = {}
				};
				this.resetCaptionStream = function() {
					if(!this.isInitialized()) {
						return null
					}
					n.reset()
				};
				this.clearAllCaptions = function() {
					this.clearParsedCaptions();
					this.resetCaptionStream()
				};
				this.reset = function() {
					i = [];
					r = null;
					a = null;
					if(!s) {
						s = {
							captions: [],
							captionStreams: {}
						}
					} else {
						this.clearParsedCaptions()
					}
					this.resetCaptionStream()
				};
				this.reset()
			};
			var Es = ks;
			var Ps = 500;
			var Cs = function e(t, n, i) {
				if(!t || !n) {
					return false
				}
				var r = t.segments;
				var a = i === r.length;
				return t.endList && n.readyState === "open" && a
			};
			var ws = function e(t) {
				return typeof t === "number" && isFinite(t)
			};
			var js = function e(t, n, i) {
				if(t !== "main" || !n || !i) {
					return null
				}
				if(!i.containsAudio && !i.containsVideo) {
					return "Neither audio nor video found in segment."
				}
				if(n.containsVideo && !i.containsVideo) {
					return "Only audio found in segment when we expected video." + " We can't switch to audio only from a stream that had video." + " To get rid of this message, please add codec information to the manifest."
				}
				if(!n.containsVideo && i.containsVideo) {
					return "Video found in segment when we expected only audio." + " We can't switch to a stream with video from an audio only stream." + " To get rid of this message, please add codec information to the manifest."
				}
				return null
			};
			var Is = function e(t, n, i) {
				var r = n - 30;
				if(t.length) {
					r = Math.max(r, t.start(0))
				}
				var a = n - i;
				return Math.min(a, r)
			};
			var Ls = function e(t) {
				var n = t.segment,
					i = n.start,
					r = n.end,
					a = t.playlist,
					s = a.mediaSequence,
					o = a.id,
					l = a.segments,
					u = l === undefined ? [] : l,
					c = t.mediaIndex,
					d = t.timeline;
				return ["appending [" + c + "] of [" + s + ", " + (s + u.length) + "] from playlist [" + o + "]", "[" + i + " => " + r + "] in timeline [" + d + "]"].join(" ")
			};
			var Os = function(e) {
				P(n, e);

				function n(e) {
					T(this, n);
					var t = C(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this));
					if(!e) {
						throw new TypeError("Initialization settings are required")
					}
					if(typeof e.currentTime !== "function") {
						throw new TypeError("No currentTime getter specified")
					}
					if(!e.mediaSource) {
						throw new TypeError("No MediaSource specified")
					}
					t.bandwidth = e.bandwidth;
					t.throughput = {
						rate: 0,
						count: 0
					};
					t.roundTrip = NaN;
					t.resetStats_();
					t.mediaIndex = null;
					t.hasPlayed_ = e.hasPlayed;
					t.currentTime_ = e.currentTime;
					t.seekable_ = e.seekable;
					t.seeking_ = e.seeking;
					t.duration_ = e.duration;
					t.mediaSource_ = e.mediaSource;
					t.hls_ = e.hls;
					t.loaderType_ = e.loaderType;
					t.startingMedia_ = void 0;
					t.segmentMetadataTrack_ = e.segmentMetadataTrack;
					t.goalBufferLength_ = e.goalBufferLength;
					t.sourceType_ = e.sourceType;
					t.inbandTextTracks_ = e.inbandTextTracks;
					t.state_ = "INIT";
					t.checkBufferTimeout_ = null;
					t.error_ = void 0;
					t.currentTimeline_ = -1;
					t.pendingSegment_ = null;
					t.mimeType_ = null;
					t.sourceUpdater_ = null;
					t.xhrOptions_ = null;
					t.activeInitSegmentId_ = null;
					t.initSegments_ = {};
					t.cacheEncryptionKeys_ = e.cacheEncryptionKeys;
					t.keyCache_ = {};
					if(t.loaderType_ === "main") {
						t.captionParser_ = new Es
					} else {
						t.captionParser_ = null
					}
					t.decrypter_ = e.decrypter;
					t.syncController_ = e.syncController;
					t.syncPoint_ = {
						segmentIndex: 0,
						time: 0
					};
					t.triggerSyncInfoUpdate_ = function() {
						return t.trigger("syncinfoupdate")
					};
					t.syncController_.on("syncinfoupdate", t.triggerSyncInfoUpdate_);
					t.mediaSource_.addEventListener("sourceopen", function() {
						return t.ended_ = false
					});
					t.fetchAtBuffer_ = false;
					t.logger_ = ba("SegmentLoader[" + t.loaderType_ + "]");
					Object.defineProperty(t, "state", {
						get: function e() {
							return this.state_
						},
						set: function e(t) {
							if(t !== this.state_) {
								this.logger_(this.state_ + " -> " + t);
								this.state_ = t
							}
						}
					});
					return t
				}
				k(n, [{
					key: "resetStats_",
					value: function e() {
						this.mediaBytesTransferred = 0;
						this.mediaRequests = 0;
						this.mediaRequestsAborted = 0;
						this.mediaRequestsTimedout = 0;
						this.mediaRequestsErrored = 0;
						this.mediaTransferDuration = 0;
						this.mediaSecondsLoaded = 0
					}
				}, {
					key: "dispose",
					value: function e() {
						this.trigger("dispose");
						this.state = "DISPOSED";
						this.pause();
						this.abort_();
						if(this.sourceUpdater_) {
							this.sourceUpdater_.dispose()
						}
						this.resetStats_();
						if(this.captionParser_) {
							this.captionParser_.reset()
						}
						if(this.checkBufferTimeout_) {
							c.clearTimeout(this.checkBufferTimeout_)
						}
						if(this.syncController_ && this.triggerSyncInfoUpdate_) {
							this.syncController_.off("syncinfoupdate", this.triggerSyncInfoUpdate_)
						}
						this.off()
					}
				}, {
					key: "abort",
					value: function e() {
						if(this.state !== "WAITING") {
							if(this.pendingSegment_) {
								this.pendingSegment_ = null
							}
							return
						}
						this.abort_();
						this.state = "READY";
						if(!this.paused()) {
							this.monitorBuffer_()
						}
					}
				}, {
					key: "abort_",
					value: function e() {
						if(this.pendingSegment_) {
							this.pendingSegment_.abortRequests()
						}
						this.pendingSegment_ = null
					}
				}, {
					key: "error",
					value: function e(t) {
						if(typeof t !== "undefined") {
							this.error_ = t
						}
						this.pendingSegment_ = null;
						return this.error_
					}
				}, {
					key: "endOfStream",
					value: function e() {
						this.ended_ = true;
						this.pause();
						this.trigger("ended")
					}
				}, {
					key: "buffered_",
					value: function e() {
						if(!this.sourceUpdater_) {
							return t.createTimeRanges()
						}
						return this.sourceUpdater_.buffered()
					}
				}, {
					key: "initSegment",
					value: function e(t) {
						var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
						if(!t) {
							return null
						}
						var i = Ne(t);
						var r = this.initSegments_[i];
						if(n && !r && t.bytes) {
							this.initSegments_[i] = r = {
								resolvedUri: t.resolvedUri,
								byterange: t.byterange,
								bytes: t.bytes,
								timescales: t.timescales,
								videoTrackIds: t.videoTrackIds
							}
						}
						return r || t
					}
				}, {
					key: "segmentKey",
					value: function e(t) {
						var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
						if(!t) {
							return null
						}
						var i = xe(t);
						var r = this.keyCache_[i];
						if(this.cacheEncryptionKeys_ && n && !r && t.bytes) {
							this.keyCache_[i] = r = {
								resolvedUri: t.resolvedUri,
								bytes: t.bytes
							}
						}
						var a = {
							resolvedUri: (r || t).resolvedUri
						};
						if(r) {
							a.bytes = r.bytes
						}
						return a
					}
				}, {
					key: "couldBeginLoading_",
					value: function e() {
						return this.playlist_ && (this.sourceUpdater_ || this.mimeType_ && this.state === "INIT") && !this.paused()
					}
				}, {
					key: "load",
					value: function e() {
						this.monitorBuffer_();
						if(!this.playlist_) {
							return
						}
						this.syncController_.setDateTimeMapping(this.playlist_);
						if(this.state === "INIT" && this.couldBeginLoading_()) {
							return this.init_()
						}
						if(!this.couldBeginLoading_() || this.state !== "READY" && this.state !== "INIT") {
							return
						}
						this.state = "READY"
					}
				}, {
					key: "init_",
					value: function e() {
						this.state = "READY";
						this.sourceUpdater_ = new Sa(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);
						this.resetEverything();
						return this.monitorBuffer_()
					}
				}, {
					key: "playlist",
					value: function e(t) {
						var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
						if(!t) {
							return
						}
						var i = this.playlist_;
						var r = this.pendingSegment_;
						this.playlist_ = t;
						this.xhrOptions_ = n;
						if(this.state === "INIT") {
							t.syncInfo = {
								mediaSequence: t.mediaSequence,
								time: 0
							}
						}
						var a = null;
						if(i) {
							if(i.id) {
								a = i.id
							} else if(i.uri) {
								a = i.uri
							}
						}
						this.logger_("playlist update [" + a + " => " + (t.id || t.uri) + "]");
						this.trigger("syncinfoupdate");
						if(this.state === "INIT" && this.couldBeginLoading_()) {
							return this.init_()
						}
						if(!i || i.uri !== t.uri) {
							if(this.mediaIndex !== null) {
								this.resyncLoader()
							}
							return
						}
						var s = t.mediaSequence - i.mediaSequence;
						this.logger_("live window shift [" + s + "]");
						if(this.mediaIndex !== null) {
							this.mediaIndex -= s
						}
						if(r) {
							r.mediaIndex -= s;
							if(r.mediaIndex >= 0) {
								r.segment = t.segments[r.mediaIndex]
							}
						}
						this.syncController_.saveExpiredSegmentInfo(i, t)
					}
				}, {
					key: "pause",
					value: function e() {
						if(this.checkBufferTimeout_) {
							c.clearTimeout(this.checkBufferTimeout_);
							this.checkBufferTimeout_ = null
						}
					}
				}, {
					key: "paused",
					value: function e() {
						return this.checkBufferTimeout_ === null
					}
				}, {
					key: "mimeType",
					value: function e(t, n) {
						if(this.mimeType_) {
							return
						}
						this.mimeType_ = t;
						this.sourceBufferEmitter_ = n;
						if(this.state === "INIT" && this.couldBeginLoading_()) {
							this.init_()
						}
					}
				}, {
					key: "resetEverything",
					value: function e(t) {
						this.ended_ = false;
						this.resetLoader();
						this.remove(0, Infinity, t);
						if(this.captionParser_) {
							this.captionParser_.clearAllCaptions()
						}
						this.trigger("reseteverything")
					}
				}, {
					key: "resetLoader",
					value: function e() {
						this.fetchAtBuffer_ = false;
						this.resyncLoader()
					}
				}, {
					key: "resyncLoader",
					value: function e() {
						this.mediaIndex = null;
						this.syncPoint_ = null;
						this.abort()
					}
				}, {
					key: "remove",
					value: function e(t, n, i) {
						if(n === Infinity) {
							n = this.duration_()
						}
						if(this.sourceUpdater_) {
							this.sourceUpdater_.remove(t, n, i)
						}
						rt(t, n, this.segmentMetadataTrack_);
						if(this.inbandTextTracks_) {
							for(var r in this.inbandTextTracks_) {
								rt(t, n, this.inbandTextTracks_[r])
							}
						}
					}
				}, {
					key: "monitorBuffer_",
					value: function e() {
						if(this.checkBufferTimeout_) {
							c.clearTimeout(this.checkBufferTimeout_)
						}
						this.checkBufferTimeout_ = c.setTimeout(this.monitorBufferTick_.bind(this), 1)
					}
				}, {
					key: "monitorBufferTick_",
					value: function e() {
						if(this.state === "READY") {
							this.fillBuffer_()
						}
						if(this.checkBufferTimeout_) {
							c.clearTimeout(this.checkBufferTimeout_)
						}
						this.checkBufferTimeout_ = c.setTimeout(this.monitorBufferTick_.bind(this), Ps)
					}
				}, {
					key: "fillBuffer_",
					value: function e() {
						if(this.sourceUpdater_.updating()) {
							return
						}
						if(!this.syncPoint_) {
							this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_())
						}
						var t = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);
						if(!t) {
							return
						}
						if(this.isEndOfStream_(t.mediaIndex)) {
							this.endOfStream();
							return
						}
						if(t.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === "ended" && !this.seeking_()) {
							return
						}
						if(t.timeline !== this.currentTimeline_) {
							this.syncController_.reset();
							t.timestampOffset = t.startOfSegment;
							if(this.captionParser_) {
								this.captionParser_.clearAllCaptions()
							}
						}
						this.loadSegment_(t)
					}
				}, {
					key: "isEndOfStream_",
					value: function e(t) {
						var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.playlist_;
						return Cs(n, this.mediaSource_, t) && !this.sourceUpdater_.updating()
					}
				}, {
					key: "checkBuffer_",
					value: function e(t, n, i, r, a, s) {
						var o = 0;
						var l = void 0;
						if(t.length) {
							o = t.end(t.length - 1)
						}
						var u = Math.max(0, o - a);
						if(!n.segments.length) {
							return null
						}
						if(u >= this.goalBufferLength_()) {
							return null
						}
						if(!r && u >= 1) {
							return null
						}
						if(s === null) {
							i = this.getSyncSegmentCandidate_(n);
							return this.generateSegmentInfo_(n, i, null, true)
						}
						if(i !== null) {
							var c = n.segments[i];
							l = o;
							return this.generateSegmentInfo_(n, i + 1, l, false)
						}
						if(this.fetchAtBuffer_) {
							var d = ce.getMediaInfoForTime(n, o, s.segmentIndex, s.time);
							i = d.mediaIndex;
							l = d.startTime
						} else {
							var f = ce.getMediaInfoForTime(n, a, s.segmentIndex, s.time);
							i = f.mediaIndex;
							l = f.startTime
						}
						return this.generateSegmentInfo_(n, i, l, false)
					}
				}, {
					key: "getSyncSegmentCandidate_",
					value: function e(t) {
						var n = this;
						if(this.currentTimeline_ === -1) {
							return 0
						}
						var i = t.segments.map(function(e, t) {
							return {
								timeline: e.timeline,
								segmentIndex: t
							}
						}).filter(function(e) {
							return e.timeline === n.currentTimeline_
						});
						if(i.length) {
							return i[Math.min(i.length - 1, 1)].segmentIndex
						}
						return Math.max(t.segments.length - 1, 0)
					}
				}, {
					key: "generateSegmentInfo_",
					value: function e(t, n, i, r) {
						if(n < 0 || n >= t.segments.length) {
							return null
						}
						var a = t.segments[n];
						return {
							requestId: "segment-loader-" + Math.random(),
							uri: a.resolvedUri,
							mediaIndex: n,
							isSyncRequest: r,
							startOfSegment: i,
							playlist: t,
							bytes: null,
							encryptedBytes: null,
							timestampOffset: null,
							timeline: a.timeline,
							duration: a.duration,
							segment: a
						}
					}
				}, {
					key: "abortRequestEarly_",
					value: function e(t) {
						if(this.hls_.tech_.paused() || !this.xhrOptions_.timeout || !this.playlist_.attributes.BANDWIDTH) {
							return false
						}
						if(Date.now() - (t.firstBytesReceivedAt || Date.now()) < 1e3) {
							return false
						}
						var n = this.currentTime_();
						var i = t.bandwidth;
						var r = this.pendingSegment_.duration;
						var a = ce.estimateSegmentRequestTime(r, i, this.playlist_, t.bytesReceived);
						var s = tt(this.buffered_(), n, this.hls_.tech_.playbackRate()) - 1;
						if(a <= s) {
							return false
						}
						var o = Ja({
							master: this.hls_.playlists.master,
							currentTime: n,
							bandwidth: i,
							duration: this.duration_(),
							segmentDuration: r,
							timeUntilRebuffer: s,
							currentTimeline: this.currentTimeline_,
							syncController: this.syncController_
						});
						if(!o) {
							return
						}
						var l = a - s;
						var u = l - o.rebufferingImpact;
						var c = .5;
						if(s <= We) {
							c = 1
						}
						if(!o.playlist || o.playlist.uri === this.playlist_.uri || u < c) {
							return false
						}
						this.bandwidth = o.playlist.attributes.BANDWIDTH * Ta.BANDWIDTH_VARIANCE + 1;
						this.abort();
						this.trigger("earlyabort");
						return true
					}
				}, {
					key: "handleProgress_",
					value: function e(t, n) {
						if(!this.pendingSegment_ || n.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(n.stats)) {
							return
						}
						this.trigger("progress")
					}
				}, {
					key: "loadSegment_",
					value: function e(t) {
						this.state = "WAITING";
						this.pendingSegment_ = t;
						this.trimBackBuffer_(t);
						t.abortRequests = Ha(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.captionParser_, this.createSimplifiedSegmentObj_(t), this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this))
					}
				}, {
					key: "trimBackBuffer_",
					value: function e(t) {
						var n = Is(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10);
						if(n > 0) {
							this.remove(0, n)
						}
					}
				}, {
					key: "createSimplifiedSegmentObj_",
					value: function e(t) {
						var n = t.segment;
						var i = {
							resolvedUri: n.resolvedUri,
							byterange: n.byterange,
							requestId: t.requestId
						};
						if(n.key) {
							var r = n.key.iv || new Uint32Array([0, 0, 0, t.mediaIndex + t.playlist.mediaSequence]);
							i.key = this.segmentKey(n.key);
							i.key.iv = r
						}
						if(n.map) {
							i.map = this.initSegment(n.map)
						}
						return i
					}
				}, {
					key: "segmentRequestFinished_",
					value: function e(t, n) {
						this.mediaRequests += 1;
						if(n.stats) {
							this.mediaBytesTransferred += n.stats.bytesReceived;
							this.mediaTransferDuration += n.stats.roundTripTime
						}
						if(!this.pendingSegment_) {
							this.mediaRequestsAborted += 1;
							return
						}
						if(n.requestId !== this.pendingSegment_.requestId) {
							return
						}
						if(t) {
							this.pendingSegment_ = null;
							this.state = "READY";
							if(t.code === Oa.ABORTED) {
								this.mediaRequestsAborted += 1;
								return
							}
							this.pause();
							if(t.code === Oa.TIMEOUT) {
								this.mediaRequestsTimedout += 1;
								this.bandwidth = 1;
								this.roundTrip = NaN;
								this.trigger("bandwidthupdate");
								return
							}
							this.mediaRequestsErrored += 1;
							this.error(t);
							this.trigger("error");
							return
						}
						this.bandwidth = n.stats.bandwidth;
						this.roundTrip = n.stats.roundTripTime;
						if(n.map) {
							n.map = this.initSegment(n.map, true)
						}
						if(n.key) {
							this.segmentKey(n.key, true)
						}
						this.processSegmentResponse_(n)
					}
				}, {
					key: "processSegmentResponse_",
					value: function e(t) {
						var n = this.pendingSegment_;
						n.bytes = t.bytes;
						if(t.map) {
							n.segment.map.bytes = t.map.bytes
						}
						n.endOfAllRequests = t.endOfAllRequests;
						if(t.fmp4Captions) {
							Za(this.inbandTextTracks_, this.hls_.tech_, t.captionStreams);
							$a({
								inbandTextTracks: this.inbandTextTracks_,
								captionArray: t.fmp4Captions,
								timestampOffset: 0
							});
							if(this.captionParser_) {
								this.captionParser_.clearParsedCaptions()
							}
						}
						this.handleSegment_()
					}
				}, {
					key: "handleSegment_",
					value: function e() {
						var t = this;
						if(!this.pendingSegment_) {
							this.state = "READY";
							return
						}
						var n = this.pendingSegment_;
						var i = n.segment;
						var r = this.syncController_.probeSegmentInfo(n);
						if(typeof this.startingMedia_ === "undefined" && r && (r.containsAudio || r.containsVideo)) {
							this.startingMedia_ = {
								containsAudio: r.containsAudio,
								containsVideo: r.containsVideo
							}
						}
						var a = js(this.loaderType_, this.startingMedia_, r);
						if(a) {
							this.error({
								message: a,
								blacklistDuration: Infinity
							});
							this.trigger("error");
							return
						}
						if(n.isSyncRequest) {
							this.trigger("syncinfoupdate");
							this.pendingSegment_ = null;
							this.state = "READY";
							return
						}
						if(n.timestampOffset !== null && n.timestampOffset !== this.sourceUpdater_.timestampOffset()) {
							if(r && r.segmentTimestampInfo) {
								var s = r.segmentTimestampInfo[0].ptsTime;
								var o = r.segmentTimestampInfo[0].dtsTime;
								n.timestampOffset -= s - o
							}
							this.sourceUpdater_.timestampOffset(n.timestampOffset);
							this.trigger("timestampoffset")
						}
						var l = this.syncController_.mappingForTimeline(n.timeline);
						if(l !== null) {
							this.trigger({
								type: "segmenttimemapping",
								mapping: l
							})
						}
						this.state = "APPENDING";
						if(i.map) {
							var u = Ne(i.map);
							if(!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== u) {
								var c = this.initSegment(i.map);
								this.sourceUpdater_.appendBuffer({
									bytes: c.bytes
								}, function() {
									t.activeInitSegmentId_ = u
								})
							}
						}
						n.byteLength = n.bytes.byteLength;
						if(typeof i.start === "number" && typeof i.end === "number") {
							this.mediaSecondsLoaded += i.end - i.start
						} else {
							this.mediaSecondsLoaded += i.duration
						}
						this.logger_(Ls(n));
						this.sourceUpdater_.appendBuffer({
							bytes: n.bytes,
							videoSegmentTimingInfoCallback: this.handleVideoSegmentTimingInfo_.bind(this, n.requestId)
						}, this.handleUpdateEnd_.bind(this))
					}
				}, {
					key: "handleVideoSegmentTimingInfo_",
					value: function e(t, n) {
						if(!this.pendingSegment_ || t !== this.pendingSegment_.requestId) {
							return
						}
						var i = this.pendingSegment_.segment;
						if(!i.videoTimingInfo) {
							i.videoTimingInfo = {}
						}
						i.videoTimingInfo.transmuxerPrependedSeconds = n.videoSegmentTimingInfo.prependedContentDuration || 0;
						i.videoTimingInfo.transmuxedPresentationStart = n.videoSegmentTimingInfo.start.presentation;
						i.videoTimingInfo.transmuxedPresentationEnd = n.videoSegmentTimingInfo.end.presentation;
						i.videoTimingInfo.baseMediaDecodeTime = n.videoSegmentTimingInfo.baseMediaDecodeTime
					}
				}, {
					key: "handleUpdateEnd_",
					value: function e() {
						if(!this.pendingSegment_) {
							this.state = "READY";
							if(!this.paused()) {
								this.monitorBuffer_()
							}
							return
						}
						var t = this.pendingSegment_;
						var n = t.segment;
						var i = this.mediaIndex !== null;
						this.pendingSegment_ = null;
						this.recordThroughput_(t);
						this.addSegmentMetadataCue_(t);
						this.state = "READY";
						this.mediaIndex = t.mediaIndex;
						this.fetchAtBuffer_ = true;
						this.currentTimeline_ = t.timeline;
						this.trigger("syncinfoupdate");
						if(n.end && this.currentTime_() - n.end > t.playlist.targetDuration * 3) {
							this.resetEverything();
							return
						}
						if(i) {
							this.trigger("bandwidthupdate")
						}
						this.trigger("progress");
						if(this.isEndOfStream_(t.mediaIndex + 1, t.playlist)) {
							this.endOfStream()
						}
						if(!this.paused()) {
							this.monitorBuffer_()
						}
					}
				}, {
					key: "recordThroughput_",
					value: function e(t) {
						var n = this.throughput.rate;
						var i = Date.now() - t.endOfAllRequests + 1;
						var r = Math.floor(t.byteLength / i * 8 * 1e3);
						this.throughput.rate += (r - n) / ++this.throughput.count
					}
				}, {
					key: "addSegmentMetadataCue_",
					value: function e(t) {
						if(!this.segmentMetadataTrack_) {
							return
						}
						var n = t.segment;
						var i = n.start;
						var r = n.end;
						if(!ws(i) || !ws(r)) {
							return
						}
						rt(i, r, this.segmentMetadataTrack_);
						var a = c.WebKitDataCue || c.VTTCue;
						var s = {
							custom: n.custom,
							dateTimeObject: n.dateTimeObject,
							dateTimeString: n.dateTimeString,
							bandwidth: t.playlist.attributes.BANDWIDTH,
							resolution: t.playlist.attributes.RESOLUTION,
							codecs: t.playlist.attributes.CODECS,
							byteLength: t.byteLength,
							uri: t.uri,
							timeline: t.timeline,
							playlist: t.playlist.id,
							start: i,
							end: r
						};
						var o = JSON.stringify(s);
						var l = new a(i, r, o);
						l.value = s;
						this.segmentMetadataTrack_.addCue(l)
					}
				}]);
				return n
			}(t.EventTarget);
			var Ns = function e(t) {
				return decodeURIComponent(escape(String.fromCharCode.apply(null, t)))
			};
			var xs = new Uint8Array("\n\n".split("").map(function(e) {
				return e.charCodeAt(0)
			}));
			var Ds = function(e) {
				P(n, e);

				function n(e) {
					var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
					T(this, n);
					var i = C(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this, e, t));
					i.mediaSource_ = null;
					i.subtitlesTrack_ = null;
					i.featuresNativeTextTracks_ = e.featuresNativeTextTracks;
					return i
				}
				k(n, [{
					key: "buffered_",
					value: function e() {
						if(!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {
							return t.createTimeRanges()
						}
						var n = this.subtitlesTrack_.cues;
						var i = n[0].startTime;
						var r = n[n.length - 1].startTime;
						return t.createTimeRanges([
							[i, r]
						])
					}
				}, {
					key: "initSegment",
					value: function e(t) {
						var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
						if(!t) {
							return null
						}
						var i = Ne(t);
						var r = this.initSegments_[i];
						if(n && !r && t.bytes) {
							var a = xs.byteLength + t.bytes.byteLength;
							var s = new Uint8Array(a);
							s.set(t.bytes);
							s.set(xs, t.bytes.byteLength);
							this.initSegments_[i] = r = {
								resolvedUri: t.resolvedUri,
								byterange: t.byterange,
								bytes: s
							}
						}
						return r || t
					}
				}, {
					key: "couldBeginLoading_",
					value: function e() {
						return this.playlist_ && this.subtitlesTrack_ && !this.paused()
					}
				}, {
					key: "init_",
					value: function e() {
						this.state = "READY";
						this.resetEverything();
						return this.monitorBuffer_()
					}
				}, {
					key: "track",
					value: function e(t) {
						if(typeof t === "undefined") {
							return this.subtitlesTrack_
						}
						this.subtitlesTrack_ = t;
						if(this.state === "INIT" && this.couldBeginLoading_()) {
							this.init_()
						}
						return this.subtitlesTrack_
					}
				}, {
					key: "remove",
					value: function e(t, n) {
						rt(t, n, this.subtitlesTrack_)
					}
				}, {
					key: "fillBuffer_",
					value: function e() {
						var t = this;
						if(!this.syncPoint_) {
							this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_())
						}
						var n = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);
						n = this.skipEmptySegments_(n);
						if(!n) {
							return
						}
						if(this.syncController_.timestampOffsetForTimeline(n.timeline) === null) {
							var i = function e() {
								t.state = "READY";
								if(!t.paused()) {
									t.monitorBuffer_()
								}
							};
							this.syncController_.one("timestampoffset", i);
							this.state = "WAITING_ON_TIMELINE";
							return
						}
						this.loadSegment_(n)
					}
				}, {
					key: "skipEmptySegments_",
					value: function e(t) {
						while(t && t.segment.empty) {
							t = this.generateSegmentInfo_(t.playlist, t.mediaIndex + 1, t.startOfSegment + t.duration, t.isSyncRequest)
						}
						return t
					}
				}, {
					key: "handleSegment_",
					value: function e() {
						var t = this;
						if(!this.pendingSegment_ || !this.subtitlesTrack_) {
							this.state = "READY";
							return
						}
						this.state = "APPENDING";
						var n = this.pendingSegment_;
						var i = n.segment;
						if(typeof c.WebVTT !== "function" && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {
							var r = void 0;
							var a = function e() {
								t.subtitlesTrack_.tech_.off("vttjsloaded", r);
								t.error({
									message: "Error loading vtt.js"
								});
								t.state = "READY";
								t.pause();
								t.trigger("error")
							};
							r = function e() {
								t.subtitlesTrack_.tech_.off("vttjserror", a);
								t.handleSegment_()
							};
							this.state = "WAITING_ON_VTTJS";
							this.subtitlesTrack_.tech_.one("vttjsloaded", r);
							this.subtitlesTrack_.tech_.one("vttjserror", a);
							return
						}
						i.requested = true;
						try {
							this.parseVTTCues_(n)
						} catch(e) {
							this.error({
								message: e.message
							});
							this.state = "READY";
							this.pause();
							return this.trigger("error")
						}
						this.updateTimeMapping_(n, this.syncController_.timelines[n.timeline], this.playlist_);
						if(n.isSyncRequest) {
							this.trigger("syncinfoupdate");
							this.pendingSegment_ = null;
							this.state = "READY";
							return
						}
						n.byteLength = n.bytes.byteLength;
						this.mediaSecondsLoaded += i.duration;
						if(n.cues.length) {
							this.remove(n.cues[0].endTime, n.cues[n.cues.length - 1].endTime)
						}
						n.cues.forEach(function(e) {
							t.subtitlesTrack_.addCue(t.featuresNativeTextTracks_ ? new c.VTTCue(e.startTime, e.endTime, e.text) : e)
						});
						this.handleUpdateEnd_()
					}
				}, {
					key: "parseVTTCues_",
					value: function e(n) {
						var i = void 0;
						var r = false;
						if(typeof c.TextDecoder === "function") {
							i = new c.TextDecoder("utf8")
						} else {
							i = c.WebVTT.StringDecoder();
							r = true
						}
						var a = new c.WebVTT.Parser(c, c.vttjs, i);
						n.cues = [];
						n.timestampmap = {
							MPEGTS: 0,
							LOCAL: 0
						};
						a.oncue = n.cues.push.bind(n.cues);
						a.ontimestampmap = function(e) {
							return n.timestampmap = e
						};
						a.onparsingerror = function(e) {
							t.log.warn("Error encountered when parsing cues: " + e.message)
						};
						if(n.segment.map) {
							var s = n.segment.map.bytes;
							if(r) {
								s = Ns(s)
							}
							a.parse(s)
						}
						var o = n.bytes;
						if(r) {
							o = Ns(o)
						}
						a.parse(o);
						a.flush()
					}
				}, {
					key: "updateTimeMapping_",
					value: function e(t, n, i) {
						var r = t.segment;
						if(!n) {
							return
						}
						if(!t.cues.length) {
							r.empty = true;
							return
						}
						var a = t.timestampmap;
						var s = a.MPEGTS / 9e4 - a.LOCAL + n.mapping;
						t.cues.forEach(function(e) {
							e.startTime += s;
							e.endTime += s
						});
						if(!i.syncInfo) {
							var o = t.cues[0].startTime;
							var l = t.cues[t.cues.length - 1].startTime;
							i.syncInfo = {
								mediaSequence: i.mediaSequence + t.mediaIndex,
								time: Math.min(o, l - r.duration)
							}
						}
					}
				}]);
				return n
			}(Os);
			var Rs = function e(t, n) {
				var i = t.cues;
				for(var r = 0; r < i.length; r++) {
					var a = i[r];
					if(n >= a.adStartTime && n <= a.adEndTime) {
						return a
					}
				}
				return null
			};
			var Us = function e(t, n) {
				var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
				if(!t.segments) {
					return
				}
				var r = i;
				var a = void 0;
				for(var s = 0; s < t.segments.length; s++) {
					var o = t.segments[s];
					if(!a) {
						a = Rs(n, r + o.duration / 2)
					}
					if(a) {
						if("cueIn" in o) {
							a.endTime = r;
							a.adEndTime = r;
							r += o.duration;
							a = null;
							continue
						}
						if(r < a.endTime) {
							r += o.duration;
							continue
						}
						a.endTime += o.duration
					} else {
						if("cueOut" in o) {
							a = new c.VTTCue(r, r + o.duration, o.cueOut);
							a.adStartTime = r;
							a.adEndTime = r + parseFloat(o.cueOut);
							n.addCue(a)
						}
						if("cueOutCont" in o) {
							var l = void 0;
							var u = void 0;
							var d = o.cueOutCont.split("/").map(parseFloat);
							var f = w(d, 2);
							l = f[0];
							u = f[1];
							a = new c.VTTCue(r, r + o.duration, "");
							a.adStartTime = r - l;
							a.adEndTime = a.adStartTime + u;
							n.addCue(a)
						}
					}
					r += o.duration
				}
			};
			var Ms = {
				H264_STREAM_TYPE: 27,
				ADTS_STREAM_TYPE: 15,
				METADATA_STREAM_TYPE: 21
			};
			var Bs = 8589934592;
			var Fs = 4294967296;
			var Vs = "shared";
			var qs = function e(t, n) {
				var i = 1;
				if(t > n) {
					i = -1
				}
				while(Math.abs(n - t) > Fs) {
					t += i * Bs
				}
				return t
			};
			var Hs = function e(t) {
				var n, i;
				e.prototype.init.call(this);
				this.type_ = t || Vs;
				this.push = function(e) {
					if(this.type_ !== Vs && e.type !== this.type_) {
						return
					}
					if(i === undefined) {
						i = e.dts
					}
					e.dts = qs(e.dts, i);
					e.pts = qs(e.pts, i);
					n = e.dts;
					this.trigger("data", e)
				};
				this.flush = function() {
					i = n;
					this.trigger("done")
				};
				this.endTimeline = function() {
					this.flush();
					this.trigger("endedtimeline")
				};
				this.discontinuity = function() {
					i = void 0;
					n = void 0
				};
				this.reset = function() {
					this.discontinuity();
					this.trigger("reset")
				}
			};
			Hs.prototype = new ls;
			var Gs = {
				TimestampRolloverStream: Hs,
				handleRollover: qs
			};
			var Ys = function e(t) {
				var n = t[1] & 31;
				n <<= 8;
				n |= t[2];
				return n
			};
			var zs = function e(t) {
				return !!(t[1] & 64)
			};
			var Ks = function e(t) {
				var n = 0;
				if((t[3] & 48) >>> 4 > 1) {
					n += t[4] + 1
				}
				return n
			};
			var Ws = function e(t, n) {
				var i = Ys(t);
				if(i === 0) {
					return "pat"
				} else if(i === n) {
					return "pmt"
				} else if(n) {
					return "pes"
				}
				return null
			};
			var Xs = function e(t) {
				var n = zs(t);
				var i = 4 + Ks(t);
				if(n) {
					i += t[i] + 1
				}
				return(t[i + 10] & 31) << 8 | t[i + 11]
			};
			var Js = function e(t) {
				var n = {};
				var i = zs(t);
				var r = 4 + Ks(t);
				if(i) {
					r += t[r] + 1
				}
				if(!(t[r + 5] & 1)) {
					return
				}
				var a, s, o;
				a = (t[r + 1] & 15) << 8 | t[r + 2];
				s = 3 + a - 4;
				o = (t[r + 10] & 15) << 8 | t[r + 11];
				var l = 12 + o;
				while(l < s) {
					var u = r + l;
					n[(t[u + 1] & 31) << 8 | t[u + 2]] = t[u];
					l += ((t[u + 3] & 15) << 8 | t[u + 4]) + 5
				}
				return n
			};
			var Qs = function e(t, n) {
				var i = Ys(t);
				var r = n[i];
				switch(r) {
					case Ms.H264_STREAM_TYPE:
						return "video";
					case Ms.ADTS_STREAM_TYPE:
						return "audio";
					case Ms.METADATA_STREAM_TYPE:
						return "timed-metadata";
					default:
						return null
				}
			};
			var Zs = function e(t) {
				var n = zs(t);
				if(!n) {
					return null
				}
				var i = 4 + Ks(t);
				if(i >= t.byteLength) {
					return null
				}
				var r = null;
				var a;
				a = t[i + 7];
				if(a & 192) {
					r = {};
					r.pts = (t[i + 9] & 14) << 27 | (t[i + 10] & 255) << 20 | (t[i + 11] & 254) << 12 | (t[i + 12] & 255) << 5 | (t[i + 13] & 254) >>> 3;
					r.pts *= 4;
					r.pts += (t[i + 13] & 6) >>> 1;
					r.dts = r.pts;
					if(a & 64) {
						r.dts = (t[i + 14] & 14) << 27 | (t[i + 15] & 255) << 20 | (t[i + 16] & 254) << 12 | (t[i + 17] & 255) << 5 | (t[i + 18] & 254) >>> 3;
						r.dts *= 4;
						r.dts += (t[i + 18] & 6) >>> 1
					}
				}
				return r
			};
			var $s = function e(t) {
				switch(t) {
					case 5:
						return "slice_layer_without_partitioning_rbsp_idr";
					case 6:
						return "sei_rbsp";
					case 7:
						return "seq_parameter_set_rbsp";
					case 8:
						return "pic_parameter_set_rbsp";
					case 9:
						return "access_unit_delimiter_rbsp";
					default:
						return null
				}
			};
			var eo = function e(t) {
				var n = 4 + Ks(t);
				var i = t.subarray(n);
				var r = 0;
				var a = 0;
				var s = false;
				var o;
				for(; a < i.byteLength - 3; a++) {
					if(i[a + 2] === 1) {
						r = a + 5;
						break
					}
				}
				while(r < i.byteLength) {
					switch(i[r]) {
						case 0:
							if(i[r - 1] !== 0) {
								r += 2;
								break
							} else if(i[r - 2] !== 0) {
								r++;
								break
							}
							if(a + 3 !== r - 2) {
								o = $s(i[a + 3] & 31);
								if(o === "slice_layer_without_partitioning_rbsp_idr") {
									s = true
								}
							}
							do {
								r++
							} while (i[r] !== 1 && r < i.length);
							a = r - 2;
							r += 3;
							break;
						case 1:
							if(i[r - 1] !== 0 || i[r - 2] !== 0) {
								r += 3;
								break
							}
							o = $s(i[a + 3] & 31);
							if(o === "slice_layer_without_partitioning_rbsp_idr") {
								s = true
							}
							a = r - 2;
							r += 3;
							break;
						default:
							r += 3;
							break
					}
				}
				i = i.subarray(a);
				r -= a;
				a = 0;
				if(i && i.byteLength > 3) {
					o = $s(i[a + 3] & 31);
					if(o === "slice_layer_without_partitioning_rbsp_idr") {
						s = true
					}
				}
				return s
			};
			var to = {
				parseType: Ws,
				parsePat: Xs,
				parsePmt: Js,
				parsePayloadUnitStartIndicator: zs,
				parsePesType: Qs,
				parsePesTime: Zs,
				videoPacketContainsKeyFrame: eo
			};
			var no = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350];
			var io = function e(t) {
				if(t[0] === "I".charCodeAt(0) && t[1] === "D".charCodeAt(0) && t[2] === "3".charCodeAt(0)) {
					return true
				}
				return false
			};
			var ro = function e(t) {
				return t[0] << 21 | t[1] << 14 | t[2] << 7 | t[3]
			};
			var ao = function e(t, n, i) {
				var r, a = "";
				for(r = n; r < i; r++) {
					a += "%" + ("00" + t[r].toString(16)).slice(-2)
				}
				return a
			};
			var so = function e(t, n, i) {
				return unescape(ao(t, n, i))
			};
			var oo = function e(t, n) {
				var i = t[n + 6] << 21 | t[n + 7] << 14 | t[n + 8] << 7 | t[n + 9],
					r = t[n + 5],
					a = (r & 16) >> 4;
				if(a) {
					return i + 20
				}
				return i + 10
			};
			var lo = function e(t, n) {
				var i = (t[n + 5] & 224) >> 5,
					r = t[n + 4] << 3,
					a = t[n + 3] & 3 << 11;
				return a | r | i
			};
			var uo = function e(t, n) {
				if(t[n] === "I".charCodeAt(0) && t[n + 1] === "D".charCodeAt(0) && t[n + 2] === "3".charCodeAt(0)) {
					return "timed-metadata"
				} else if(t[n] & 255 === 255 && (t[n + 1] & 240) === 240) {
					return "audio"
				}
				return null
			};
			var co = function e(t) {
				var n = 0;
				while(n + 5 < t.length) {
					if(t[n] !== 255 || (t[n + 1] & 246) !== 240) {
						n++;
						continue
					}
					return no[(t[n + 2] & 60) >>> 2]
				}
				return null
			};
			var fo = function e(t) {
				var n, i, r, a;
				n = 10;
				if(t[5] & 64) {
					n += 4;
					n += ro(t.subarray(10, 14))
				}
				do {
					i = ro(t.subarray(n + 4, n + 8));
					if(i < 1) {
						return null
					}
					a = String.fromCharCode(t[n], t[n + 1], t[n + 2], t[n + 3]);
					if(a === "PRIV") {
						r = t.subarray(n + 10, n + i + 10);
						for(var s = 0; s < r.byteLength; s++) {
							if(r[s] === 0) {
								var o = so(r, 0, s);
								if(o === "com.apple.streaming.transportStreamTimestamp") {
									var l = r.subarray(s + 1);
									var u = (l[3] & 1) << 30 | l[4] << 22 | l[5] << 14 | l[6] << 6 | l[7] >>> 2;
									u *= 4;
									u += l[7] & 3;
									return u
								}
								break
							}
						}
					}
					n += 10;
					n += i
				} while (n < t.byteLength);
				return null
			};
			var po = {
				isLikelyAacData: io,
				parseId3TagSize: oo,
				parseAdtsSize: lo,
				parseType: uo,
				parseSampleRate: co,
				parseAacTimestamp: fo
			};
			var ho = 9e4,
				vo, go, mo, yo, _o, bo, Ao;
			vo = function e(t) {
				return t * ho
			};
			go = function e(t, n) {
				return t * n
			};
			mo = function e(t) {
				return t / ho
			};
			yo = function e(t, n) {
				return t / n
			};
			_o = function e(t, n) {
				return vo(yo(t, n))
			};
			bo = function e(t, n) {
				return go(mo(t), n)
			};
			Ao = function e(t, n, i) {
				return mo(i ? t : t - n)
			};
			var So = {
				ONE_SECOND_IN_TS: ho,
				secondsToVideoTs: vo,
				secondsToAudioTs: go,
				videoTsToSeconds: mo,
				audioTsToSeconds: yo,
				audioTsToVideoTs: _o,
				videoTsToAudioTs: bo,
				metadataTsToSeconds: Ao
			};
			var To = Gs.handleRollover;
			var ko = {};
			ko.ts = to;
			ko.aac = po;
			var Eo = So.ONE_SECOND_IN_TS;
			var Po = 188,
				Co = 71;
			var wo = function e(t, n) {
				var i = 0,
					r = Po,
					a, s;
				while(r < t.byteLength) {
					if(t[i] === Co && t[r] === Co) {
						a = t.subarray(i, r);
						s = ko.ts.parseType(a, n.pid);
						switch(s) {
							case "pat":
								if(!n.pid) {
									n.pid = ko.ts.parsePat(a)
								}
								break;
							case "pmt":
								if(!n.table) {
									n.table = ko.ts.parsePmt(a)
								}
								break;
							default:
								break
						}
						if(n.pid && n.table) {
							return
						}
						i += Po;
						r += Po;
						continue
					}
					i++;
					r++
				}
			};
			var jo = function e(t, n, i) {
				var r = 0,
					a = Po,
					s, o, l, u, c;
				var d = false;
				while(a <= t.byteLength) {
					if(t[r] === Co && (t[a] === Co || a === t.byteLength)) {
						s = t.subarray(r, a);
						o = ko.ts.parseType(s, n.pid);
						switch(o) {
							case "pes":
								l = ko.ts.parsePesType(s, n.table);
								u = ko.ts.parsePayloadUnitStartIndicator(s);
								if(l === "audio" && u) {
									c = ko.ts.parsePesTime(s);
									if(c) {
										c.type = "audio";
										i.audio.push(c);
										d = true
									}
								}
								break;
							default:
								break
						}
						if(d) {
							break
						}
						r += Po;
						a += Po;
						continue
					}
					r++;
					a++
				}
				a = t.byteLength;
				r = a - Po;
				d = false;
				while(r >= 0) {
					if(t[r] === Co && (t[a] === Co || a === t.byteLength)) {
						s = t.subarray(r, a);
						o = ko.ts.parseType(s, n.pid);
						switch(o) {
							case "pes":
								l = ko.ts.parsePesType(s, n.table);
								u = ko.ts.parsePayloadUnitStartIndicator(s);
								if(l === "audio" && u) {
									c = ko.ts.parsePesTime(s);
									if(c) {
										c.type = "audio";
										i.audio.push(c);
										d = true
									}
								}
								break;
							default:
								break
						}
						if(d) {
							break
						}
						r -= Po;
						a -= Po;
						continue
					}
					r--;
					a--
				}
			};
			var Io = function e(t, n, i) {
				var r = 0,
					a = Po,
					s, o, l, u, c, d, f, p;
				var h = false;
				var v = {
					data: [],
					size: 0
				};
				while(a < t.byteLength) {
					if(t[r] === Co && t[a] === Co) {
						s = t.subarray(r, a);
						o = ko.ts.parseType(s, n.pid);
						switch(o) {
							case "pes":
								l = ko.ts.parsePesType(s, n.table);
								u = ko.ts.parsePayloadUnitStartIndicator(s);
								if(l === "video") {
									if(u && !h) {
										c = ko.ts.parsePesTime(s);
										if(c) {
											c.type = "video";
											i.video.push(c);
											h = true
										}
									}
									if(!i.firstKeyFrame) {
										if(u) {
											if(v.size !== 0) {
												d = new Uint8Array(v.size);
												f = 0;
												while(v.data.length) {
													p = v.data.shift();
													d.set(p, f);
													f += p.byteLength
												}
												if(ko.ts.videoPacketContainsKeyFrame(d)) {
													var g = ko.ts.parsePesTime(d);
													if(g) {
														i.firstKeyFrame = g;
														i.firstKeyFrame.type = "video"
													} else {
														console.warn("Failed to extract PTS/DTS from PES at first keyframe. " + "This could be an unusual TS segment, or else mux.js did not " + "parse your TS segment correctly. If you know your TS " + "segments do contain PTS/DTS on keyframes please file a bug " + "report! You can try ffprobe to double check for yourself.")
													}
												}
												v.size = 0
											}
										}
										v.data.push(s);
										v.size += s.byteLength
									}
								}
								break;
							default:
								break
						}
						if(h && i.firstKeyFrame) {
							break
						}
						r += Po;
						a += Po;
						continue
					}
					r++;
					a++
				}
				a = t.byteLength;
				r = a - Po;
				h = false;
				while(r >= 0) {
					if(t[r] === Co && t[a] === Co) {
						s = t.subarray(r, a);
						o = ko.ts.parseType(s, n.pid);
						switch(o) {
							case "pes":
								l = ko.ts.parsePesType(s, n.table);
								u = ko.ts.parsePayloadUnitStartIndicator(s);
								if(l === "video" && u) {
									c = ko.ts.parsePesTime(s);
									if(c) {
										c.type = "video";
										i.video.push(c);
										h = true
									}
								}
								break;
							default:
								break
						}
						if(h) {
							break
						}
						r -= Po;
						a -= Po;
						continue
					}
					r--;
					a--
				}
			};
			var Lo = function e(t, n) {
				if(t.audio && t.audio.length) {
					var i = n;
					if(typeof i === "undefined") {
						i = t.audio[0].dts
					}
					t.audio.forEach(function(e) {
						e.dts = To(e.dts, i);
						e.pts = To(e.pts, i);
						e.dtsTime = e.dts / Eo;
						e.ptsTime = e.pts / Eo
					})
				}
				if(t.video && t.video.length) {
					var r = n;
					if(typeof r === "undefined") {
						r = t.video[0].dts
					}
					t.video.forEach(function(e) {
						e.dts = To(e.dts, r);
						e.pts = To(e.pts, r);
						e.dtsTime = e.dts / Eo;
						e.ptsTime = e.pts / Eo
					});
					if(t.firstKeyFrame) {
						var a = t.firstKeyFrame;
						a.dts = To(a.dts, r);
						a.pts = To(a.pts, r);
						a.dtsTime = a.dts / Eo;
						a.ptsTime = a.dts / Eo
					}
				}
			};
			var Oo = function e(t) {
				var n = false,
					i = 0,
					r = null,
					a = null,
					s = 0,
					o = 0,
					l;
				while(t.length - o >= 3) {
					var u = ko.aac.parseType(t, o);
					switch(u) {
						case "timed-metadata":
							if(t.length - o < 10) {
								n = true;
								break
							}
							s = ko.aac.parseId3TagSize(t, o);
							if(s > t.length) {
								n = true;
								break
							}
							if(a === null) {
								l = t.subarray(o, o + s);
								a = ko.aac.parseAacTimestamp(l)
							}
							o += s;
							break;
						case "audio":
							if(t.length - o < 7) {
								n = true;
								break
							}
							s = ko.aac.parseAdtsSize(t, o);
							if(s > t.length) {
								n = true;
								break
							}
							if(r === null) {
								l = t.subarray(o, o + s);
								r = ko.aac.parseSampleRate(l)
							}
							i++;
							o += s;
							break;
						default:
							o++;
							break
					}
					if(n) {
						return null
					}
				}
				if(r === null || a === null) {
					return null
				}
				var c = Eo / r;
				var d = {
					audio: [{
						type: "audio",
						dts: a,
						pts: a
					}, {
						type: "audio",
						dts: a + i * 1024 * c,
						pts: a + i * 1024 * c
					}]
				};
				return d
			};
			var No = function e(t) {
				var n = {
					pid: null,
					table: null
				};
				var i = {};
				wo(t, n);
				for(var r in n.table) {
					if(n.table.hasOwnProperty(r)) {
						var a = n.table[r];
						switch(a) {
							case Ms.H264_STREAM_TYPE:
								i.video = [];
								Io(t, n, i);
								if(i.video.length === 0) {
									delete i.video
								}
								break;
							case Ms.ADTS_STREAM_TYPE:
								i.audio = [];
								jo(t, n, i);
								if(i.audio.length === 0) {
									delete i.audio
								}
								break;
							default:
								break
						}
					}
				}
				return i
			};
			var xo = function e(t, n) {
				var i = ko.aac.isLikelyAacData(t);
				var r;
				if(i) {
					r = Oo(t)
				} else {
					r = No(t)
				}
				if(!r || !r.audio && !r.video) {
					return null
				}
				Lo(r, n);
				return r
			};
			var Do = {
				inspect: xo,
				parseAudioPes_: jo
			};
			var Ro = Do.inspect;
			var Uo = [{
				name: "VOD",
				run: function e(t, n, i, r, a) {
					if(i !== Infinity) {
						var s = {
							time: 0,
							segmentIndex: 0
						};
						return s
					}
					return null
				}
			}, {
				name: "ProgramDateTime",
				run: function e(t, n, i, r, a) {
					if(!t.datetimeToDisplayTime) {
						return null
					}
					var s = n.segments || [];
					var o = null;
					var l = null;
					a = a || 0;
					for(var u = 0; u < s.length; u++) {
						var c = s[u];
						if(c.dateTimeObject) {
							var d = c.dateTimeObject.getTime() / 1e3;
							var f = d + t.datetimeToDisplayTime;
							var p = Math.abs(a - f);
							if(l !== null && (p === 0 || l < p)) {
								break
							}
							l = p;
							o = {
								time: f,
								segmentIndex: u
							}
						}
					}
					return o
				}
			}, {
				name: "Segment",
				run: function e(t, n, i, r, a) {
					var s = n.segments || [];
					var o = null;
					var l = null;
					a = a || 0;
					for(var u = 0; u < s.length; u++) {
						var c = s[u];
						if(c.timeline === r && typeof c.start !== "undefined") {
							var d = Math.abs(a - c.start);
							if(l !== null && l < d) {
								break
							}
							if(!o || l === null || l >= d) {
								l = d;
								o = {
									time: c.start,
									segmentIndex: u
								}
							}
						}
					}
					return o
				}
			}, {
				name: "Discontinuity",
				run: function e(t, n, i, r, a) {
					var s = null;
					a = a || 0;
					if(n.discontinuityStarts && n.discontinuityStarts.length) {
						var o = null;
						for(var l = 0; l < n.discontinuityStarts.length; l++) {
							var u = n.discontinuityStarts[l];
							var c = n.discontinuitySequence + l + 1;
							var d = t.discontinuities[c];
							if(d) {
								var f = Math.abs(a - d.time);
								if(o !== null && o < f) {
									break
								}
								if(!s || o === null || o >= f) {
									o = f;
									s = {
										time: d.time,
										segmentIndex: u
									}
								}
							}
						}
					}
					return s
				}
			}, {
				name: "Playlist",
				run: function e(t, n, i, r, a) {
					if(n.syncInfo) {
						var s = {
							time: n.syncInfo.time,
							segmentIndex: n.syncInfo.mediaSequence - n.mediaSequence
						};
						return s
					}
					return null
				}
			}];
			var Mo = function(e) {
				P(t, e);

				function t() {
					T(this, t);
					var e = C(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this));
					e.inspectCache_ = undefined;
					e.timelines = [];
					e.discontinuities = [];
					e.datetimeToDisplayTime = null;
					e.logger_ = ba("SyncController");
					return e
				}
				k(t, [{
					key: "getSyncPoint",
					value: function e(t, n, i, r) {
						var a = this.runStrategies_(t, n, i, r);
						if(!a.length) {
							return null
						}
						return this.selectSyncPoint_(a, {
							key: "time",
							value: r
						})
					}
				}, {
					key: "getExpiredTime",
					value: function e(t, n) {
						if(!t || !t.segments) {
							return null
						}
						var i = this.runStrategies_(t, n, t.discontinuitySequence, 0);
						if(!i.length) {
							return null
						}
						var r = this.selectSyncPoint_(i, {
							key: "segmentIndex",
							value: 0
						});
						if(r.segmentIndex > 0) {
							r.time *= -1
						}
						return Math.abs(r.time + z(t, r.segmentIndex, 0))
					}
				}, {
					key: "runStrategies_",
					value: function e(t, n, i, r) {
						var a = [];
						for(var s = 0; s < Uo.length; s++) {
							var o = Uo[s];
							var l = o.run(this, t, n, i, r);
							if(l) {
								l.strategy = o.name;
								a.push({
									strategy: o.name,
									syncPoint: l
								})
							}
						}
						return a
					}
				}, {
					key: "selectSyncPoint_",
					value: function e(t, n) {
						var i = t[0].syncPoint;
						var r = Math.abs(t[0].syncPoint[n.key] - n.value);
						var a = t[0].strategy;
						for(var s = 1; s < t.length; s++) {
							var o = Math.abs(t[s].syncPoint[n.key] - n.value);
							if(o < r) {
								r = o;
								i = t[s].syncPoint;
								a = t[s].strategy
							}
						}
						this.logger_("syncPoint for [" + n.key + ": " + n.value + "] chosen with strategy" + (" [" + a + "]: [time:" + i.time + ",") + (" segmentIndex:" + i.segmentIndex + "]"));
						return i
					}
				}, {
					key: "saveExpiredSegmentInfo",
					value: function e(t, n) {
						var i = n.mediaSequence - t.mediaSequence;
						for(var r = i - 1; r >= 0; r--) {
							var a = t.segments[r];
							if(a && typeof a.start !== "undefined") {
								n.syncInfo = {
									mediaSequence: t.mediaSequence + r,
									time: a.start
								};
								this.logger_("playlist refresh sync: [time:" + n.syncInfo.time + "," + (" mediaSequence: " + n.syncInfo.mediaSequence + "]"));
								this.trigger("syncinfoupdate");
								break
							}
						}
					}
				}, {
					key: "setDateTimeMapping",
					value: function e(t) {
						if(!this.datetimeToDisplayTime && t.segments && t.segments.length && t.segments[0].dateTimeObject) {
							var n = t.segments[0].dateTimeObject.getTime() / 1e3;
							this.datetimeToDisplayTime = -n
						}
					}
				}, {
					key: "reset",
					value: function e() {
						this.inspectCache_ = undefined
					}
				}, {
					key: "probeSegmentInfo",
					value: function e(t) {
						var n = t.segment;
						var i = t.playlist;
						var r = void 0;
						if(n.map) {
							r = this.probeMp4Segment_(t)
						} else {
							r = this.probeTsSegment_(t)
						}
						if(r) {
							if(this.calculateSegmentTimeMapping_(t, r)) {
								this.saveDiscontinuitySyncInfo_(t);
								if(!i.syncInfo) {
									i.syncInfo = {
										mediaSequence: i.mediaSequence + t.mediaIndex,
										time: n.start
									}
								}
							}
						}
						return r
					}
				}, {
					key: "probeMp4Segment_",
					value: function e(t) {
						var n = t.segment;
						var i = La.timescale(n.map.bytes);
						var r = La.compositionStartTime(i, t.bytes);
						if(t.timestampOffset !== null) {
							t.timestampOffset -= r
						}
						return {
							start: r,
							end: r + n.duration
						}
					}
				}, {
					key: "probeTsSegment_",
					value: function e(t) {
						var n = Ro(t.bytes, this.inspectCache_);
						var i = void 0;
						var r = void 0;
						var a = void 0;
						if(!n) {
							return null
						}
						if(n.video && n.video.length === 2) {
							this.inspectCache_ = n.video[1].dts;
							i = n.video[0].dtsTime;
							r = n.video[1].dtsTime;
							a = n.video
						} else if(n.audio && n.audio.length === 2) {
							this.inspectCache_ = n.audio[1].dts;
							i = n.audio[0].dtsTime;
							r = n.audio[1].dtsTime;
							a = n.audio
						}
						var s = {
							segmentTimestampInfo: a,
							start: i,
							end: r,
							containsVideo: n.video && n.video.length === 2,
							containsAudio: n.audio && n.audio.length === 2
						};
						return s
					}
				}, {
					key: "timestampOffsetForTimeline",
					value: function e(t) {
						if(typeof this.timelines[t] === "undefined") {
							return null
						}
						return this.timelines[t].time
					}
				}, {
					key: "mappingForTimeline",
					value: function e(t) {
						if(typeof this.timelines[t] === "undefined") {
							return null
						}
						return this.timelines[t].mapping
					}
				}, {
					key: "calculateSegmentTimeMapping_",
					value: function e(t, n) {
						var i = t.segment;
						var r = this.timelines[t.timeline];
						if(t.timestampOffset !== null) {
							r = {
								time: t.startOfSegment,
								mapping: t.startOfSegment - n.start
							};
							this.timelines[t.timeline] = r;
							this.trigger("timestampoffset");
							this.logger_("time mapping for timeline " + t.timeline + ": " + ("[time: " + r.time + "] [mapping: " + r.mapping + "]"));
							i.start = t.startOfSegment;
							i.end = n.end + r.mapping
						} else if(r) {
							i.start = n.start + r.mapping;
							i.end = n.end + r.mapping
						} else {
							return false
						}
						return true
					}
				}, {
					key: "saveDiscontinuitySyncInfo_",
					value: function e(t) {
						var n = t.playlist;
						var i = t.segment;
						if(i.discontinuity) {
							this.discontinuities[i.timeline] = {
								time: i.start,
								accuracy: 0
							}
						} else if(n.discontinuityStarts && n.discontinuityStarts.length) {
							for(var r = 0; r < n.discontinuityStarts.length; r++) {
								var a = n.discontinuityStarts[r];
								var s = n.discontinuitySequence + r + 1;
								var o = a - t.mediaIndex;
								var l = Math.abs(o);
								if(!this.discontinuities[s] || this.discontinuities[s].accuracy > l) {
									var u = void 0;
									if(o < 0) {
										u = i.start - z(n, t.mediaIndex, a)
									} else {
										u = i.end + z(n, t.mediaIndex + 1, a)
									}
									this.discontinuities[s] = {
										time: u,
										accuracy: l
									}
								}
							}
						}
					}
				}, {
					key: "dispose",
					value: function e() {
						this.trigger("dispose");
						this.off()
					}
				}]);
				return t
			}(t.EventTarget);
			var Bo = new ht("./decrypter-worker.worker.js", function(e, t) {
				var n = this;
				var i = function() {
					function e(e) {
						return e.subarray(0, e.byteLength - e[e.byteLength - 1])
					}
					var t = function e(t, n) {
						if(!(t instanceof n)) {
							throw new TypeError("Cannot call a class as a function")
						}
					};
					var i = function() {
						function e(e, t) {
							for(var n = 0; n < t.length; n++) {
								var i = t[n];
								i.enumerable = i.enumerable || false;
								i.configurable = true;
								if("value" in i) i.writable = true;
								Object.defineProperty(e, i.key, i)
							}
						}
						return function(t, n, i) {
							if(n) e(t.prototype, n);
							if(i) e(t, i);
							return t
						}
					}();
					var r = function e(t, n) {
						if(typeof n !== "function" && n !== null) {
							throw new TypeError("Super expression must either be null or a function, not " + typeof n)
						}
						t.prototype = Object.create(n && n.prototype, {
							constructor: {
								value: t,
								enumerable: false,
								writable: true,
								configurable: true
							}
						});
						if(n) Object.setPrototypeOf ? Object.setPrototypeOf(t, n) : t.__proto__ = n
					};
					var a = function e(t, n) {
						if(!t) {
							throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
						}
						return n && (typeof n === "object" || typeof n === "function") ? n : t
					};
					var s = function e() {
						var t = [
							[
								[],
								[],
								[],
								[],
								[]
							],
							[
								[],
								[],
								[],
								[],
								[]
							]
						];
						var n = t[0];
						var i = t[1];
						var r = n[4];
						var a = i[4];
						var s = void 0;
						var o = void 0;
						var l = void 0;
						var u = [];
						var c = [];
						var d = void 0;
						var f = void 0;
						var p = void 0;
						var h = void 0;
						var v = void 0;
						var g = void 0;
						for(s = 0; s < 256; s++) {
							c[(u[s] = s << 1 ^ (s >> 7) * 283) ^ s] = s
						}
						for(o = l = 0; !r[o]; o ^= d || 1, l = c[l] || 1) {
							h = l ^ l << 1 ^ l << 2 ^ l << 3 ^ l << 4;
							h = h >> 8 ^ h & 255 ^ 99;
							r[o] = h;
							a[h] = o;
							p = u[f = u[d = u[o]]];
							g = p * 16843009 ^ f * 65537 ^ d * 257 ^ o * 16843008;
							v = u[h] * 257 ^ h * 16843008;
							for(s = 0; s < 4; s++) {
								n[s][o] = v = v << 24 ^ v >>> 8;
								i[s][h] = g = g << 24 ^ g >>> 8
							}
						}
						for(s = 0; s < 5; s++) {
							n[s] = n[s].slice(0);
							i[s] = i[s].slice(0)
						}
						return t
					};
					var o = null;
					var l = function() {
						function e(n) {
							t(this, e);
							if(!o) {
								o = s()
							}
							this._tables = [
								[o[0][0].slice(), o[0][1].slice(), o[0][2].slice(), o[0][3].slice(), o[0][4].slice()],
								[o[1][0].slice(), o[1][1].slice(), o[1][2].slice(), o[1][3].slice(), o[1][4].slice()]
							];
							var i = void 0;
							var r = void 0;
							var a = void 0;
							var l = void 0;
							var u = void 0;
							var c = this._tables[0][4];
							var d = this._tables[1];
							var f = n.length;
							var p = 1;
							if(f !== 4 && f !== 6 && f !== 8) {
								throw new Error("Invalid aes key size")
							}
							l = n.slice(0);
							u = [];
							this._key = [l, u];
							for(i = f; i < 4 * f + 28; i++) {
								a = l[i - 1];
								if(i % f === 0 || f === 8 && i % f === 4) {
									a = c[a >>> 24] << 24 ^ c[a >> 16 & 255] << 16 ^ c[a >> 8 & 255] << 8 ^ c[a & 255];
									if(i % f === 0) {
										a = a << 8 ^ a >>> 24 ^ p << 24;
										p = p << 1 ^ (p >> 7) * 283
									}
								}
								l[i] = l[i - f] ^ a
							}
							for(r = 0; i; r++, i--) {
								a = l[r & 3 ? i : i - 4];
								if(i <= 4 || r < 4) {
									u[r] = a
								} else {
									u[r] = d[0][c[a >>> 24]] ^ d[1][c[a >> 16 & 255]] ^ d[2][c[a >> 8 & 255]] ^ d[3][c[a & 255]]
								}
							}
						}
						e.prototype.decrypt = function e(t, n, i, r, a, s) {
							var o = this._key[1];
							var l = t ^ o[0];
							var u = r ^ o[1];
							var c = i ^ o[2];
							var d = n ^ o[3];
							var f = void 0;
							var p = void 0;
							var h = void 0;
							var v = o.length / 4 - 2;
							var g = void 0;
							var m = 4;
							var y = this._tables[1];
							var _ = y[0];
							var b = y[1];
							var A = y[2];
							var S = y[3];
							var T = y[4];
							for(g = 0; g < v; g++) {
								f = _[l >>> 24] ^ b[u >> 16 & 255] ^ A[c >> 8 & 255] ^ S[d & 255] ^ o[m];
								p = _[u >>> 24] ^ b[c >> 16 & 255] ^ A[d >> 8 & 255] ^ S[l & 255] ^ o[m + 1];
								h = _[c >>> 24] ^ b[d >> 16 & 255] ^ A[l >> 8 & 255] ^ S[u & 255] ^ o[m + 2];
								d = _[d >>> 24] ^ b[l >> 16 & 255] ^ A[u >> 8 & 255] ^ S[c & 255] ^ o[m + 3];
								m += 4;
								l = f;
								u = p;
								c = h
							}
							for(g = 0; g < 4; g++) {
								a[(3 & -g) + s] = T[l >>> 24] << 24 ^ T[u >> 16 & 255] << 16 ^ T[c >> 8 & 255] << 8 ^ T[d & 255] ^ o[m++];
								f = l;
								l = u;
								u = c;
								c = d;
								d = f
							}
						};
						return e
					}();
					var u = function() {
						function e() {
							t(this, e);
							this.listeners = {}
						}
						e.prototype.on = function e(t, n) {
							if(!this.listeners[t]) {
								this.listeners[t] = []
							}
							this.listeners[t].push(n)
						};
						e.prototype.off = function e(t, n) {
							if(!this.listeners[t]) {
								return false
							}
							var i = this.listeners[t].indexOf(n);
							this.listeners[t].splice(i, 1);
							return i > -1
						};
						e.prototype.trigger = function e(t) {
							var n = this.listeners[t];
							if(!n) {
								return
							}
							if(arguments.length === 2) {
								var i = n.length;
								for(var r = 0; r < i; ++r) {
									n[r].call(this, arguments[1])
								}
							} else {
								var a = Array.prototype.slice.call(arguments, 1);
								var s = n.length;
								for(var o = 0; o < s; ++o) {
									n[o].apply(this, a)
								}
							}
						};
						e.prototype.dispose = function e() {
							this.listeners = {}
						};
						e.prototype.pipe = function e(t) {
							this.on("data", function(e) {
								t.push(e)
							})
						};
						return e
					}();
					var c = function(e) {
						r(n, e);

						function n() {
							t(this, n);
							var i = a(this, e.call(this, u));
							i.jobs = [];
							i.delay = 1;
							i.timeout_ = null;
							return i
						}
						n.prototype.processJob_ = function e() {
							this.jobs.shift()();
							if(this.jobs.length) {
								this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay)
							} else {
								this.timeout_ = null
							}
						};
						n.prototype.push = function e(t) {
							this.jobs.push(t);
							if(!this.timeout_) {
								this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay)
							}
						};
						return n
					}(u);
					var d = function e(t) {
						return t << 24 | (t & 65280) << 8 | (t & 16711680) >> 8 | t >>> 24
					};
					var f = function e(t, n, i) {
						var r = new Int32Array(t.buffer, t.byteOffset, t.byteLength >> 2);
						var a = new l(Array.prototype.slice.call(n));
						var s = new Uint8Array(t.byteLength);
						var o = new Int32Array(s.buffer);
						var u = void 0;
						var c = void 0;
						var f = void 0;
						var p = void 0;
						var h = void 0;
						var v = void 0;
						var g = void 0;
						var m = void 0;
						var y = void 0;
						u = i[0];
						c = i[1];
						f = i[2];
						p = i[3];
						for(y = 0; y < r.length; y += 4) {
							h = d(r[y]);
							v = d(r[y + 1]);
							g = d(r[y + 2]);
							m = d(r[y + 3]);
							a.decrypt(h, v, g, m, o, y);
							o[y] = d(o[y] ^ u);
							o[y + 1] = d(o[y + 1] ^ c);
							o[y + 2] = d(o[y + 2] ^ f);
							o[y + 3] = d(o[y + 3] ^ p);
							u = h;
							c = v;
							f = g;
							p = m
						}
						return s
					};
					var p = function() {
						function n(i, r, a, s) {
							t(this, n);
							var o = n.STEP;
							var l = new Int32Array(i.buffer);
							var u = new Uint8Array(i.byteLength);
							var f = 0;
							this.asyncStream_ = new c;
							this.asyncStream_.push(this.decryptChunk_(l.subarray(f, f + o), r, a, u));
							for(f = o; f < l.length; f += o) {
								a = new Uint32Array([d(l[f - 4]), d(l[f - 3]), d(l[f - 2]), d(l[f - 1])]);
								this.asyncStream_.push(this.decryptChunk_(l.subarray(f, f + o), r, a, u))
							}
							this.asyncStream_.push(function() {
								s(null, e(u))
							})
						}
						n.prototype.decryptChunk_ = function e(t, n, i, r) {
							return function() {
								var e = f(t, n, i);
								r.set(e, t.byteOffset)
							}
						};
						i(n, null, [{
							key: "STEP",
							get: function e() {
								return 32e3
							}
						}]);
						return n
					}();
					var h = function e(t) {
						var n = {};
						Object.keys(t).forEach(function(e) {
							var i = t[e];
							if(ArrayBuffer.isView(i)) {
								n[e] = {
									bytes: i.buffer,
									byteOffset: i.byteOffset,
									byteLength: i.byteLength
								}
							} else {
								n[e] = i
							}
						});
						return n
					};
					var v = function e(t) {
						t.onmessage = function(e) {
							var n = e.data;
							var i = new Uint8Array(n.encrypted.bytes, n.encrypted.byteOffset, n.encrypted.byteLength);
							var r = new Uint32Array(n.key.bytes, n.key.byteOffset, n.key.byteLength / 4);
							var a = new Uint32Array(n.iv.bytes, n.iv.byteOffset, n.iv.byteLength / 4);
							new p(i, r, a, function(e, i) {
								t.postMessage(h({
									source: n.source,
									decrypted: i
								}), [i.buffer])
							})
						}
					};
					var g = new v(n);
					return g
				}()
			});
			var Fo = function e(t) {
				var n = t.default ? "main" : "alternative";
				if(t.characteristics && t.characteristics.indexOf("public.accessibility.describes-video") >= 0) {
					n = "main-desc"
				}
				return n
			};
			var Vo = function e(t, n) {
				t.abort();
				t.pause();
				if(n && n.activePlaylistLoader) {
					n.activePlaylistLoader.pause();
					n.activePlaylistLoader = null
				}
			};
			var qo = function e(t, n) {
				n.activePlaylistLoader = t;
				t.load()
			};
			var Ho = function e(t, n) {
				return function() {
					var e = n.segmentLoaders,
						i = e[t],
						r = e.main,
						a = n.mediaTypes[t];
					var s = a.activeTrack();
					var o = a.activeGroup(s);
					var l = a.activePlaylistLoader;
					Vo(i, a);
					if(!o) {
						return
					}
					if(!o.playlistLoader) {
						if(l) {
							r.resetEverything()
						}
						return
					}
					i.resyncLoader();
					qo(o.playlistLoader, a)
				}
			};
			var Go = function e(t, n) {
				return function() {
					var e = n.segmentLoaders,
						i = e[t],
						r = e.main,
						a = n.mediaTypes[t];
					var s = a.activeTrack();
					var o = a.activeGroup(s);
					var l = a.activePlaylistLoader;
					Vo(i, a);
					if(!o) {
						return
					}
					if(!o.playlistLoader) {
						r.resetEverything();
						return
					}
					if(l === o.playlistLoader) {
						qo(o.playlistLoader, a);
						return
					}
					if(i.track) {
						i.track(s)
					}
					i.resetEverything();
					qo(o.playlistLoader, a)
				}
			};
			var Yo = {
				AUDIO: function e(n, i) {
					return function() {
						var e = i.segmentLoaders[n],
							r = i.mediaTypes[n],
							a = i.blacklistCurrentPlaylist;
						Vo(e, r);
						var s = r.activeTrack();
						var o = r.activeGroup();
						var l = (o.filter(function(e) {
							return e.default
						})[0] || o[0]).id;
						var u = r.tracks[l];
						if(s === u) {
							a({
								message: "Problem encountered loading the default audio track."
							});
							return
						}
						t.log.warn("Problem encountered loading the alternate audio track." + "Switching back to default.");
						for(var c in r.tracks) {
							r.tracks[c].enabled = r.tracks[c] === u
						}
						r.onTrackChanged()
					}
				},
				SUBTITLES: function e(n, i) {
					return function() {
						var e = i.segmentLoaders[n],
							r = i.mediaTypes[n];
						t.log.warn("Problem encountered loading the subtitle track." + "Disabling subtitle track.");
						Vo(e, r);
						var a = r.activeTrack();
						if(a) {
							a.mode = "disabled"
						}
						r.onTrackChanged()
					}
				}
			};
			var zo = {
				AUDIO: function e(t, n, i) {
					if(!n) {
						return
					}
					var r = i.tech,
						a = i.requestOptions,
						s = i.segmentLoaders[t];
					n.on("loadedmetadata", function() {
						var e = n.media();
						s.playlist(e, a);
						if(!r.paused() || e.endList && r.preload() !== "none") {
							s.load()
						}
					});
					n.on("loadedplaylist", function() {
						s.playlist(n.media(), a);
						if(!r.paused()) {
							s.load()
						}
					});
					n.on("error", Yo[t](t, i))
				},
				SUBTITLES: function e(t, n, i) {
					var r = i.tech,
						a = i.requestOptions,
						s = i.segmentLoaders[t],
						o = i.mediaTypes[t];
					n.on("loadedmetadata", function() {
						var e = n.media();
						s.playlist(e, a);
						s.track(o.activeTrack());
						if(!r.paused() || e.endList && r.preload() !== "none") {
							s.load()
						}
					});
					n.on("loadedplaylist", function() {
						s.playlist(n.media(), a);
						if(!r.paused()) {
							s.load()
						}
					});
					n.on("error", Yo[t](t, i))
				}
			};
			var Ko = {
				AUDIO: function e(n, i) {
					var r = i.hls,
						a = i.sourceType,
						s = i.segmentLoaders[n],
						o = i.requestOptions,
						l = i.master.mediaGroups,
						u = i.mediaTypes[n],
						c = u.groups,
						d = u.tracks,
						f = i.masterPlaylistLoader;
					if(!l[n] || Object.keys(l[n]).length === 0) {
						l[n] = {
							main: {
								default: {
									default: true
								}
							}
						}
					}
					for(var p in l[n]) {
						if(!c[p]) {
							c[p] = []
						}
						for(var h in l[n][p]) {
							var v = l[n][p][h];
							var g = void 0;
							if(v.resolvedUri) {
								g = new F(v.resolvedUri, r, o)
							} else if(v.playlists && a === "dash") {
								g = new _a(v.playlists[0], r, o, f)
							} else {
								g = null
							}
							v = t.mergeOptions({
								id: h,
								playlistLoader: g
							}, v);
							zo[n](n, v.playlistLoader, i);
							c[p].push(v);
							if(typeof d[h] === "undefined") {
								var m = new t.AudioTrack({
									id: h,
									kind: Fo(v),
									enabled: false,
									language: v.language,
									default: v.default,
									label: h
								});
								d[h] = m
							}
						}
					}
					s.on("error", Yo[n](n, i))
				},
				SUBTITLES: function e(n, i) {
					var r = i.tech,
						a = i.hls,
						s = i.sourceType,
						o = i.segmentLoaders[n],
						l = i.requestOptions,
						u = i.master.mediaGroups,
						c = i.mediaTypes[n],
						d = c.groups,
						f = c.tracks,
						p = i.masterPlaylistLoader;
					for(var h in u[n]) {
						if(!d[h]) {
							d[h] = []
						}
						for(var v in u[n][h]) {
							if(u[n][h][v].forced) {
								continue
							}
							var g = u[n][h][v];
							var m = void 0;
							if(s === "hls") {
								m = new F(g.resolvedUri, a, l)
							} else if(s === "dash") {
								m = new _a(g.playlists[0], a, l, p)
							}
							g = t.mergeOptions({
								id: v,
								playlistLoader: m
							}, g);
							zo[n](n, g.playlistLoader, i);
							d[h].push(g);
							if(typeof f[v] === "undefined") {
								var y = r.addRemoteTextTrack({
									id: v,
									kind: "subtitles",
									default: g.default && g.autoselect,
									language: g.language,
									label: v
								}, false).track;
								f[v] = y
							}
						}
					}
					o.on("error", Yo[n](n, i))
				},
				"CLOSED-CAPTIONS": function e(n, i) {
					var r = i.tech,
						a = i.master.mediaGroups,
						s = i.mediaTypes[n],
						o = s.groups,
						l = s.tracks;
					for(var u in a[n]) {
						if(!o[u]) {
							o[u] = []
						}
						for(var c in a[n][u]) {
							var d = a[n][u][c];
							if(!d.instreamId.match(/CC\d/)) {
								continue
							}
							o[u].push(t.mergeOptions({
								id: c
							}, d));
							if(typeof l[c] === "undefined") {
								var f = r.addRemoteTextTrack({
									id: d.instreamId,
									kind: "captions",
									default: d.default && d.autoselect,
									language: d.language,
									label: c
								}, false).track;
								l[c] = f
							}
						}
					}
				}
			};
			var Wo = function e(t, n) {
				return function(e) {
					var i = n.masterPlaylistLoader,
						r = n.mediaTypes[t].groups;
					var a = i.media();
					if(!a) {
						return null
					}
					var s = null;
					if(a.attributes[t]) {
						s = r[a.attributes[t]]
					}
					s = s || r.main;
					if(typeof e === "undefined") {
						return s
					}
					if(e === null) {
						return null
					}
					return s.filter(function(t) {
						return t.id === e.id
					})[0] || null
				}
			};
			var Xo = {
				AUDIO: function e(t, n) {
					return function() {
						var e = n.mediaTypes[t].tracks;
						for(var i in e) {
							if(e[i].enabled) {
								return e[i]
							}
						}
						return null
					}
				},
				SUBTITLES: function e(t, n) {
					return function() {
						var e = n.mediaTypes[t].tracks;
						for(var i in e) {
							if(e[i].mode === "showing" || e[i].mode === "hidden") {
								return e[i]
							}
						}
						return null
					}
				}
			};
			var Jo = function e(t) {
				["AUDIO", "SUBTITLES", "CLOSED-CAPTIONS"].forEach(function(e) {
					Ko[e](e, t)
				});
				var n = t.mediaTypes,
					i = t.masterPlaylistLoader,
					r = t.tech,
					a = t.hls;
				["AUDIO", "SUBTITLES"].forEach(function(e) {
					n[e].activeGroup = Wo(e, t);
					n[e].activeTrack = Xo[e](e, t);
					n[e].onGroupChanged = Ho(e, t);
					n[e].onTrackChanged = Go(e, t)
				});
				var s = n.AUDIO.activeGroup();
				var o = (s.filter(function(e) {
					return e.default
				})[0] || s[0]).id;
				n.AUDIO.tracks[o].enabled = true;
				n.AUDIO.onTrackChanged();
				i.on("mediachange", function() {
					["AUDIO", "SUBTITLES"].forEach(function(e) {
						return n[e].onGroupChanged()
					})
				});
				var l = function e() {
					n.AUDIO.onTrackChanged();
					r.trigger({
						type: "usage",
						name: "hls-audio-change"
					})
				};
				r.audioTracks().addEventListener("change", l);
				r.remoteTextTracks().addEventListener("change", n.SUBTITLES.onTrackChanged);
				a.on("dispose", function() {
					r.audioTracks().removeEventListener("change", l);
					r.remoteTextTracks().removeEventListener("change", n.SUBTITLES.onTrackChanged)
				});
				r.clearTracks("audio");
				for(var u in n.AUDIO.tracks) {
					r.audioTracks().addTrack(n.AUDIO.tracks[u])
				}
			};
			var Qo = function e() {
				var t = {};
				["AUDIO", "SUBTITLES", "CLOSED-CAPTIONS"].forEach(function(e) {
					t[e] = {
						groups: {},
						tracks: {},
						activePlaylistLoader: null,
						activeGroup: Aa,
						activeTrack: Aa,
						onGroupChanged: Aa,
						onTrackChanged: Aa
					}
				});
				return t
			};
			var Zo = 60 * 2;
			var $o = void 0;
			var el = ["mediaRequests", "mediaRequestsAborted", "mediaRequestsTimedout", "mediaRequestsErrored", "mediaTransferDuration", "mediaBytesTransferred"];
			var tl = function e(t) {
				return this.audioSegmentLoader_[t] + this.mainSegmentLoader_[t]
			};
			var nl = function(e) {
				P(n, e);

				function n(e) {
					T(this, n);
					var i = C(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this));
					var r = e.url,
						a = e.handleManifestRedirects,
						s = e.withCredentials,
						o = e.tech,
						l = e.bandwidth,
						u = e.externHls,
						c = e.useCueTags,
						d = e.blacklistDuration,
						f = e.enableLowInitialPlaylist,
						p = e.sourceType,
						h = e.seekTo,
						v = e.cacheEncryptionKeys;
					if(!r) {
						throw new Error("A non-empty playlist URL is required")
					}
					$o = u;
					i.withCredentials = s;
					i.tech_ = o;
					i.hls_ = o.hls;
					i.seekTo_ = h;
					i.sourceType_ = p;
					i.useCueTags_ = c;
					i.blacklistDuration = d;
					i.enableLowInitialPlaylist = f;
					if(i.useCueTags_) {
						i.cueTagsTrack_ = i.tech_.addTextTrack("metadata", "ad-cues");
						i.cueTagsTrack_.inBandMetadataTrackDispatchType = ""
					}
					i.requestOptions_ = {
						withCredentials: s,
						handleManifestRedirects: a,
						timeout: null
					};
					i.mediaTypes_ = Qo();
					i.mediaSource = new t.MediaSource;
					i.mediaSource.addEventListener("sourceopen", i.handleSourceOpen_.bind(i));
					i.seekable_ = t.createTimeRanges();
					i.hasPlayed_ = false;
					i.syncController_ = new Mo(e);
					i.segmentMetadataTrack_ = o.addRemoteTextTrack({
						kind: "metadata",
						label: "segment-metadata"
					}, false).track;
					i.decrypter_ = new Bo;
					i.inbandTextTracks_ = {};
					var g = {
						hls: i.hls_,
						mediaSource: i.mediaSource,
						currentTime: i.tech_.currentTime.bind(i.tech_),
						seekable: function e() {
							return i.seekable()
						},
						seeking: function e() {
							return i.tech_.seeking()
						},
						duration: function e() {
							return i.mediaSource.duration
						},
						hasPlayed: function e() {
							return i.hasPlayed_
						},
						goalBufferLength: function e() {
							return i.goalBufferLength()
						},
						bandwidth: l,
						syncController: i.syncController_,
						decrypter: i.decrypter_,
						sourceType: i.sourceType_,
						inbandTextTracks: i.inbandTextTracks_,
						cacheEncryptionKeys: v
					};
					i.masterPlaylistLoader_ = i.sourceType_ === "dash" ? new _a(r, i.hls_, i.requestOptions_) : new F(r, i.hls_, i.requestOptions_);
					i.setupMasterPlaylistLoaderListeners_();
					i.mainSegmentLoader_ = new Os(t.mergeOptions(g, {
						segmentMetadataTrack: i.segmentMetadataTrack_,
						loaderType: "main"
					}), e);
					i.audioSegmentLoader_ = new Os(t.mergeOptions(g, {
						loaderType: "audio"
					}), e);
					i.subtitleSegmentLoader_ = new Ds(t.mergeOptions(g, {
						loaderType: "vtt",
						featuresNativeTextTracks: i.tech_.featuresNativeTextTracks
					}), e);
					i.setupSegmentLoaderListeners_();
					el.forEach(function(e) {
						i[e + "_"] = tl.bind(i, e)
					});
					i.logger_ = ba("MPC");
					i.masterPlaylistLoader_.load();
					return i
				}
				k(n, [{
					key: "setupMasterPlaylistLoaderListeners_",
					value: function e() {
						var n = this;
						this.masterPlaylistLoader_.on("loadedmetadata", function() {
							var e = n.masterPlaylistLoader_.media();
							var i = e.targetDuration * 1.5 * 1e3;
							if(ue(n.masterPlaylistLoader_.master, n.masterPlaylistLoader_.media())) {
								n.requestOptions_.timeout = 0
							} else {
								n.requestOptions_.timeout = i
							}
							if(e.endList && n.tech_.preload() !== "none") {
								n.mainSegmentLoader_.playlist(e, n.requestOptions_);
								n.mainSegmentLoader_.load()
							}
							Jo({
								sourceType: n.sourceType_,
								segmentLoaders: {
									AUDIO: n.audioSegmentLoader_,
									SUBTITLES: n.subtitleSegmentLoader_,
									main: n.mainSegmentLoader_
								},
								tech: n.tech_,
								requestOptions: n.requestOptions_,
								masterPlaylistLoader: n.masterPlaylistLoader_,
								hls: n.hls_,
								master: n.master(),
								mediaTypes: n.mediaTypes_,
								blacklistCurrentPlaylist: n.blacklistCurrentPlaylist.bind(n)
							});
							n.triggerPresenceUsage_(n.master(), e);
							try {
								n.setupSourceBuffers_()
							} catch(e) {
								t.log.warn("Failed to create SourceBuffers", e);
								return n.mediaSource.endOfStream("decode")
							}
							n.setupFirstPlay();
							if(!n.mediaTypes_.AUDIO.activePlaylistLoader || n.mediaTypes_.AUDIO.activePlaylistLoader.media()) {
								n.trigger("selectedinitialmedia")
							} else {
								n.mediaTypes_.AUDIO.activePlaylistLoader.one("loadedmetadata", function() {
									n.trigger("selectedinitialmedia")
								})
							}
						});
						this.masterPlaylistLoader_.on("loadedplaylist", function() {
							var e = n.masterPlaylistLoader_.media();
							if(!e) {
								n.excludeUnsupportedVariants_();
								var t = void 0;
								if(n.enableLowInitialPlaylist) {
									t = n.selectInitialPlaylist()
								}
								if(!t) {
									t = n.selectPlaylist()
								}
								n.initialMedia_ = t;
								n.masterPlaylistLoader_.media(n.initialMedia_);
								return
							}
							if(n.useCueTags_) {
								n.updateAdCues_(e)
							}
							n.mainSegmentLoader_.playlist(e, n.requestOptions_);
							n.updateDuration();
							if(!n.tech_.paused()) {
								n.mainSegmentLoader_.load();
								if(n.audioSegmentLoader_) {
									n.audioSegmentLoader_.load()
								}
							}
							if(!e.endList) {
								var i = function e() {
									var t = n.seekable();
									if(t.length !== 0) {
										n.mediaSource.addSeekableRange_(t.start(0), t.end(0))
									}
								};
								if(n.duration() !== Infinity) {
									var r = function e() {
										if(n.duration() === Infinity) {
											i()
										} else {
											n.tech_.one("durationchange", e)
										}
									};
									n.tech_.one("durationchange", r)
								} else {
									i()
								}
							}
						});
						this.masterPlaylistLoader_.on("error", function() {
							n.blacklistCurrentPlaylist(n.masterPlaylistLoader_.error)
						});
						this.masterPlaylistLoader_.on("mediachanging", function() {
							n.mainSegmentLoader_.abort();
							n.mainSegmentLoader_.pause()
						});
						this.masterPlaylistLoader_.on("mediachange", function() {
							var e = n.masterPlaylistLoader_.media();
							var t = e.targetDuration * 1.5 * 1e3;
							if(ue(n.masterPlaylistLoader_.master, n.masterPlaylistLoader_.media())) {
								n.requestOptions_.timeout = 0
							} else {
								n.requestOptions_.timeout = t
							}
							n.mainSegmentLoader_.playlist(e, n.requestOptions_);
							n.mainSegmentLoader_.load();
							n.tech_.trigger({
								type: "mediachange",
								bubbles: true
							})
						});
						this.masterPlaylistLoader_.on("playlistunchanged", function() {
							var e = n.masterPlaylistLoader_.media();
							var t = n.stuckAtPlaylistEnd_(e);
							if(t) {
								n.blacklistCurrentPlaylist({
									message: "Playlist no longer updating."
								});
								n.tech_.trigger("playliststuck")
							}
						});
						this.masterPlaylistLoader_.on("renditiondisabled", function() {
							n.tech_.trigger({
								type: "usage",
								name: "hls-rendition-disabled"
							})
						});
						this.masterPlaylistLoader_.on("renditionenabled", function() {
							n.tech_.trigger({
								type: "usage",
								name: "hls-rendition-enabled"
							})
						})
					}
				}, {
					key: "triggerPresenceUsage_",
					value: function e(t, n) {
						var i = t.mediaGroups || {};
						var r = true;
						var a = Object.keys(i.AUDIO);
						for(var s in i.AUDIO) {
							for(var o in i.AUDIO[s]) {
								var l = i.AUDIO[s][o];
								if(!l.uri) {
									r = false
								}
							}
						}
						if(r) {
							this.tech_.trigger({
								type: "usage",
								name: "hls-demuxed"
							})
						}
						if(Object.keys(i.SUBTITLES).length) {
							this.tech_.trigger({
								type: "usage",
								name: "hls-webvtt"
							})
						}
						if($o.Playlist.isAes(n)) {
							this.tech_.trigger({
								type: "usage",
								name: "hls-aes"
							})
						}
						if($o.Playlist.isFmp4(n)) {
							this.tech_.trigger({
								type: "usage",
								name: "hls-fmp4"
							})
						}
						if(a.length && Object.keys(i.AUDIO[a[0]]).length > 1) {
							this.tech_.trigger({
								type: "usage",
								name: "hls-alternate-audio"
							})
						}
						if(this.useCueTags_) {
							this.tech_.trigger({
								type: "usage",
								name: "hls-playlist-cue-tags"
							})
						}
					}
				}, {
					key: "setupSegmentLoaderListeners_",
					value: function e() {
						var t = this;
						this.mainSegmentLoader_.on("bandwidthupdate", function() {
							var e = t.selectPlaylist();
							var n = t.masterPlaylistLoader_.media();
							var i = t.tech_.buffered();
							var r = i.length ? i.end(i.length - 1) - t.tech_.currentTime() : 0;
							var a = t.bufferLowWaterLine();
							if(!n.endList || t.duration() < Ta.MAX_BUFFER_LOW_WATER_LINE || e.attributes.BANDWIDTH < n.attributes.BANDWIDTH || r >= a) {
								t.masterPlaylistLoader_.media(e)
							}
							t.tech_.trigger("bandwidthupdate")
						});
						this.mainSegmentLoader_.on("progress", function() {
							t.trigger("progress")
						});
						this.mainSegmentLoader_.on("error", function() {
							t.blacklistCurrentPlaylist(t.mainSegmentLoader_.error())
						});
						this.mainSegmentLoader_.on("syncinfoupdate", function() {
							t.onSyncInfoUpdate_()
						});
						this.mainSegmentLoader_.on("timestampoffset", function() {
							t.tech_.trigger({
								type: "usage",
								name: "hls-timestamp-offset"
							})
						});
						this.audioSegmentLoader_.on("syncinfoupdate", function() {
							t.onSyncInfoUpdate_()
						});
						this.mainSegmentLoader_.on("ended", function() {
							t.onEndOfStream()
						});
						this.mainSegmentLoader_.on("earlyabort", function() {
							t.blacklistCurrentPlaylist({
								message: "Aborted early because there isn't enough bandwidth to complete the " + "request without rebuffering."
							}, Zo)
						});
						this.mainSegmentLoader_.on("reseteverything", function() {
							t.tech_.trigger("hls-reset")
						});
						this.mainSegmentLoader_.on("segmenttimemapping", function(e) {
							t.tech_.trigger({
								type: "hls-segment-time-mapping",
								mapping: e.mapping
							})
						});
						this.audioSegmentLoader_.on("ended", function() {
							t.onEndOfStream()
						})
					}
				}, {
					key: "mediaSecondsLoaded_",
					value: function e() {
						return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded)
					}
				}, {
					key: "load",
					value: function e() {
						this.mainSegmentLoader_.load();
						if(this.mediaTypes_.AUDIO.activePlaylistLoader) {
							this.audioSegmentLoader_.load()
						}
						if(this.mediaTypes_.SUBTITLES.activePlaylistLoader) {
							this.subtitleSegmentLoader_.load()
						}
					}
				}, {
					key: "smoothQualityChange_",
					value: function e() {
						var t = this.selectPlaylist();
						if(t !== this.masterPlaylistLoader_.media()) {
							this.masterPlaylistLoader_.media(t);
							this.mainSegmentLoader_.resetLoader()
						}
					}
				}, {
					key: "fastQualityChange_",
					value: function e() {
						var n = this;
						var i = this.selectPlaylist();
						if(i === this.masterPlaylistLoader_.media()) {
							return
						}
						this.masterPlaylistLoader_.media(i);
						this.mainSegmentLoader_.resetEverything(function() {
							if(t.browser.IE_VERSION || t.browser.IS_EDGE) {
								n.tech_.setCurrentTime(n.tech_.currentTime() + .04)
							} else {
								n.tech_.setCurrentTime(n.tech_.currentTime())
							}
						})
					}
				}, {
					key: "play",
					value: function e() {
						if(this.setupFirstPlay()) {
							return
						}
						if(this.tech_.ended()) {
							this.seekTo_(0)
						}
						if(this.hasPlayed_) {
							this.load()
						}
						var t = this.tech_.seekable();
						if(this.tech_.duration() === Infinity) {
							if(this.tech_.currentTime() < t.start(0)) {
								return this.seekTo_(t.end(t.length - 1))
							}
						}
					}
				}, {
					key: "setupFirstPlay",
					value: function e() {
						var n = this;
						var i = this.masterPlaylistLoader_.media();
						if(!i || this.tech_.paused() || this.hasPlayed_) {
							return false
						}
						if(!i.endList) {
							var r = this.seekable();
							if(!r.length) {
								return false
							}
							if(t.browser.IE_VERSION && this.tech_.readyState() === 0) {
								this.tech_.one("loadedmetadata", function() {
									n.trigger("firstplay");
									n.seekTo_(r.end(0));
									n.hasPlayed_ = true
								});
								return false
							}
							this.trigger("firstplay");
							this.seekTo_(r.end(0))
						}
						this.hasPlayed_ = true;
						this.load();
						return true
					}
				}, {
					key: "handleSourceOpen_",
					value: function e() {
						try {
							this.setupSourceBuffers_()
						} catch(e) {
							t.log.warn("Failed to create Source Buffers", e);
							return this.mediaSource.endOfStream("decode")
						}
						if(this.tech_.autoplay()) {
							var n = this.tech_.play();
							if(typeof n !== "undefined" && typeof n.then === "function") {
								n.then(null, function(e) {})
							}
						}
						this.trigger("sourceopen")
					}
				}, {
					key: "onEndOfStream",
					value: function e() {
						var n = this.mainSegmentLoader_.ended_;
						if(this.mediaTypes_.AUDIO.activePlaylistLoader) {
							if(!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {
								n = n && this.audioSegmentLoader_.ended_
							} else {
								n = this.audioSegmentLoader_.ended_
							}
						}
						if(!n) {
							return
						}
						this.logger_("calling mediaSource.endOfStream()");
						try {
							this.mediaSource.endOfStream()
						} catch(e) {
							t.log.warn("Failed to call media source endOfStream", e)
						}
					}
				}, {
					key: "stuckAtPlaylistEnd_",
					value: function e(t) {
						var n = this.seekable();
						if(!n.length) {
							return false
						}
						var i = this.syncController_.getExpiredTime(t, this.mediaSource.duration);
						if(i === null) {
							return false
						}
						var r = $o.Playlist.playlistEnd(t, i);
						var a = this.tech_.currentTime();
						var s = this.tech_.buffered();
						if(!s.length) {
							return r - a <= Xe
						}
						var o = s.end(s.length - 1);
						return o - a <= Xe && r - o <= Xe
					}
				}, {
					key: "blacklistCurrentPlaylist",
					value: function e() {
						var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
						var i = arguments[1];
						var r = void 0;
						var a = void 0;
						r = n.playlist || this.masterPlaylistLoader_.media();
						i = i || n.blacklistDuration || this.blacklistDuration;
						if(!r) {
							this.error = n;
							try {
								return this.mediaSource.endOfStream("network")
							} catch(e) {
								return this.trigger("error")
							}
						}
						var s = this.masterPlaylistLoader_.master.playlists.filter(ie).length === 1;
						var o = this.masterPlaylistLoader_.master.playlists;
						if(o.length === 1) {
							t.log.warn("Problem encountered with the current " + "HLS playlist. Trying again since it is the only playlist.");
							this.tech_.trigger("retryplaylist");
							return this.masterPlaylistLoader_.load(s)
						}
						if(s) {
							t.log.warn("Removing all playlists from the blacklist because the last " + "rendition is about to be blacklisted.");
							o.forEach(function(e) {
								if(e.excludeUntil !== Infinity) {
									delete e.excludeUntil
								}
							});
							this.tech_.trigger("retryplaylist")
						}
						r.excludeUntil = Date.now() + i * 1e3;
						this.tech_.trigger("blacklistplaylist");
						this.tech_.trigger({
							type: "usage",
							name: "hls-rendition-blacklisted"
						});
						a = this.selectPlaylist();
						t.log.warn("Problem encountered with the current HLS playlist." + (n.message ? " " + n.message : "") + " Switching to another playlist.");
						return this.masterPlaylistLoader_.media(a, s)
					}
				}, {
					key: "pauseLoading",
					value: function e() {
						this.mainSegmentLoader_.pause();
						if(this.mediaTypes_.AUDIO.activePlaylistLoader) {
							this.audioSegmentLoader_.pause()
						}
						if(this.mediaTypes_.SUBTITLES.activePlaylistLoader) {
							this.subtitleSegmentLoader_.pause()
						}
					}
				}, {
					key: "setCurrentTime",
					value: function e(t) {
						var n = Qe(this.tech_.buffered(), t);
						if(!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {
							return 0
						}
						if(!this.masterPlaylistLoader_.media().segments) {
							return 0
						}
						if(n && n.length) {
							return t
						}
						this.mainSegmentLoader_.resetEverything();
						this.mainSegmentLoader_.abort();
						if(this.mediaTypes_.AUDIO.activePlaylistLoader) {
							this.audioSegmentLoader_.resetEverything();
							this.audioSegmentLoader_.abort()
						}
						if(this.mediaTypes_.SUBTITLES.activePlaylistLoader) {
							this.subtitleSegmentLoader_.resetEverything();
							this.subtitleSegmentLoader_.abort()
						}
						this.load()
					}
				}, {
					key: "duration",
					value: function e() {
						if(!this.masterPlaylistLoader_) {
							return 0
						}
						if(this.mediaSource) {
							return this.mediaSource.duration
						}
						return $o.Playlist.duration(this.masterPlaylistLoader_.media())
					}
				}, {
					key: "seekable",
					value: function e() {
						return this.seekable_
					}
				}, {
					key: "onSyncInfoUpdate_",
					value: function e() {
						var n = void 0;
						if(!this.masterPlaylistLoader_) {
							return
						}
						var i = this.masterPlaylistLoader_.media();
						if(!i) {
							return
						}
						var r = this.syncController_.getExpiredTime(i, this.mediaSource.duration);
						if(r === null) {
							return
						}
						var a = this.masterPlaylistLoader_.master.suggestedPresentationDelay;
						var s = $o.Playlist.seekable(i, r, a);
						if(s.length === 0) {
							return
						}
						if(this.mediaTypes_.AUDIO.activePlaylistLoader) {
							i = this.mediaTypes_.AUDIO.activePlaylistLoader.media();
							r = this.syncController_.getExpiredTime(i, this.mediaSource.duration);
							if(r === null) {
								return
							}
							n = $o.Playlist.seekable(i, r, a);
							if(n.length === 0) {
								return
							}
						}
						var o = void 0;
						var l = void 0;
						if(this.seekable_ && this.seekable_.length) {
							o = this.seekable_.end(0);
							l = this.seekable_.start(0)
						}
						if(!n) {
							this.seekable_ = s
						} else if(n.start(0) > s.end(0) || s.start(0) > n.end(0)) {
							this.seekable_ = s
						} else {
							this.seekable_ = t.createTimeRanges([
								[n.start(0) > s.start(0) ? n.start(0) : s.start(0), n.end(0) < s.end(0) ? n.end(0) : s.end(0)]
							])
						}
						if(this.seekable_ && this.seekable_.length) {
							if(this.seekable_.end(0) === o && this.seekable_.start(0) === l) {
								return
							}
						}
						this.logger_("seekable updated [" + et(this.seekable_) + "]");
						this.tech_.trigger("seekablechanged")
					}
				}, {
					key: "updateDuration",
					value: function e() {
						var n = this;
						var i = this.mediaSource.duration;
						var r = $o.Playlist.duration(this.masterPlaylistLoader_.media());
						var a = this.tech_.buffered();
						var s = function e() {
							n.logger_("Setting duration from " + n.mediaSource.duration + " => " + r);
							try {
								n.mediaSource.duration = r
							} catch(e) {
								t.log.warn("Failed to set media source duration", e)
							}
							n.tech_.trigger("durationchange");
							n.mediaSource.removeEventListener("sourceopen", e)
						};
						if(a.length > 0) {
							r = Math.max(r, a.end(a.length - 1))
						}
						if(i !== r) {
							if(this.mediaSource.readyState !== "open") {
								this.mediaSource.addEventListener("sourceopen", s)
							} else {
								s()
							}
						}
					}
				}, {
					key: "dispose",
					value: function e() {
						var t = this;
						this.trigger("dispose");
						this.decrypter_.terminate();
						this.masterPlaylistLoader_.dispose();
						this.mainSegmentLoader_.dispose();
						["AUDIO", "SUBTITLES"].forEach(function(e) {
							var n = t.mediaTypes_[e].groups;
							for(var i in n) {
								n[i].forEach(function(e) {
									if(e.playlistLoader) {
										e.playlistLoader.dispose()
									}
								})
							}
						});
						this.audioSegmentLoader_.dispose();
						this.subtitleSegmentLoader_.dispose();
						this.off();
						if(this.mediaSource.dispose) {
							this.mediaSource.dispose()
						}
					}
				}, {
					key: "master",
					value: function e() {
						return this.masterPlaylistLoader_.master
					}
				}, {
					key: "media",
					value: function e() {
						return this.masterPlaylistLoader_.media() || this.initialMedia_
					}
				}, {
					key: "setupSourceBuffers_",
					value: function e() {
						var t = this.masterPlaylistLoader_.media();
						var n = void 0;
						if(!t || this.mediaSource.readyState !== "open") {
							return
						}
						n = jt(this.masterPlaylistLoader_.master, t);
						if(n.length < 1) {
							this.error = "No compatible SourceBuffer configuration for the variant stream:" + t.resolvedUri;
							return this.mediaSource.endOfStream("decode")
						}
						this.configureLoaderMimeTypes_(n);
						this.excludeIncompatibleVariants_(t)
					}
				}, {
					key: "configureLoaderMimeTypes_",
					value: function e(n) {
						var i = n.length > 1 && n[0].indexOf(",") === -1 && n[0] !== n[1] ? new t.EventTarget : null;
						this.mainSegmentLoader_.mimeType(n[0], i);
						if(n[1]) {
							this.audioSegmentLoader_.mimeType(n[1], i)
						}
					}
				}, {
					key: "excludeUnsupportedVariants_",
					value: function e() {
						this.master().playlists.forEach(function(e) {
							if(e.attributes.CODECS && c.MediaSource && c.MediaSource.isTypeSupported && !c.MediaSource.isTypeSupported('video/mp4; codecs="' + kt(e.attributes.CODECS) + '"')) {
								e.excludeUntil = Infinity
							}
						})
					}
				}, {
					key: "excludeIncompatibleVariants_",
					value: function e(t) {
						var n = 2;
						var i = null;
						var r = void 0;
						if(t.attributes.CODECS) {
							r = Tt(t.attributes.CODECS);
							i = r.videoCodec;
							n = r.codecCount
						}
						this.master().playlists.forEach(function(e) {
							var t = {
								codecCount: 2,
								videoCodec: null
							};
							if(e.attributes.CODECS) {
								t = Tt(e.attributes.CODECS)
							}
							if(t.codecCount !== n) {
								e.excludeUntil = Infinity
							}
							if(t.videoCodec !== i) {
								e.excludeUntil = Infinity
							}
						})
					}
				}, {
					key: "updateAdCues_",
					value: function e(t) {
						var n = 0;
						var i = this.seekable();
						if(i.length) {
							n = i.start(0)
						}
						Us(t, this.cueTagsTrack_, n)
					}
				}, {
					key: "goalBufferLength",
					value: function e() {
						var t = this.tech_.currentTime();
						var n = Ta.GOAL_BUFFER_LENGTH;
						var i = Ta.GOAL_BUFFER_LENGTH_RATE;
						var r = Math.max(n, Ta.MAX_GOAL_BUFFER_LENGTH);
						return Math.min(n + t * i, r)
					}
				}, {
					key: "bufferLowWaterLine",
					value: function e() {
						var t = this.tech_.currentTime();
						var n = Ta.BUFFER_LOW_WATER_LINE;
						var i = Ta.BUFFER_LOW_WATER_LINE_RATE;
						var r = Math.max(n, Ta.MAX_BUFFER_LOW_WATER_LINE);
						return Math.min(n + t * i, r)
					}
				}]);
				return n
			}(t.EventTarget);
			var il = function e(t, n, i) {
				return function(e) {
					var r = t.master.playlists[n];
					var a = ne(r);
					var s = ie(r);
					if(typeof e === "undefined") {
						return s
					}
					if(e) {
						delete r.disabled
					} else {
						r.disabled = true
					}
					if(e !== s && !a) {
						i();
						if(e) {
							t.trigger("renditionenabled")
						} else {
							t.trigger("renditiondisabled")
						}
					}
					return e
				}
			};
			var rl = function e(t, n, i) {
				T(this, e);
				var r = t.masterPlaylistController_,
					a = t.options_.smoothQualityChange;
				var s = a ? "smooth" : "fast";
				var o = r[s + "QualityChange_"].bind(r);
				if(n.attributes.RESOLUTION) {
					var l = n.attributes.RESOLUTION;
					this.width = l.width;
					this.height = l.height
				}
				this.bandwidth = n.attributes.BANDWIDTH;
				this.id = i;
				this.enabled = il(t.playlists, n.id, o)
			};
			var al = function e(t) {
				var n = t.playlists;
				t.representations = function() {
					if(!n || !n.master || !n.master.playlists) {
						return []
					}
					return n.master.playlists.filter(function(e) {
						return !ne(e)
					}).map(function(e, n) {
						return new rl(t, e, e.id)
					})
				}
			};
			var sl = ["seeking", "seeked", "pause", "playing", "error"];
			var ol = function() {
				function e(t) {
					var n = this;
					T(this, e);
					this.tech_ = t.tech;
					this.seekable = t.seekable;
					this.seekTo = t.seekTo;
					this.allowSeeksWithinUnsafeLiveWindow = t.allowSeeksWithinUnsafeLiveWindow;
					this.media = t.media;
					this.consecutiveUpdates = 0;
					this.lastRecordedTime = null;
					this.timer_ = null;
					this.checkCurrentTimeTimeout_ = null;
					this.logger_ = ba("PlaybackWatcher");
					this.logger_("initialize");
					var i = function e() {
						return n.monitorCurrentTime_()
					};
					var r = function e() {
						return n.techWaiting_()
					};
					var a = function e() {
						return n.cancelTimer_()
					};
					var s = function e() {
						return n.fixesBadSeeks_()
					};
					this.tech_.on("seekablechanged", s);
					this.tech_.on("waiting", r);
					this.tech_.on(sl, a);
					this.tech_.on("canplay", i);
					this.dispose = function() {
						n.logger_("dispose");
						n.tech_.off("seekablechanged", s);
						n.tech_.off("waiting", r);
						n.tech_.off(sl, a);
						n.tech_.off("canplay", i);
						if(n.checkCurrentTimeTimeout_) {
							c.clearTimeout(n.checkCurrentTimeTimeout_)
						}
						n.cancelTimer_()
					}
				}
				k(e, [{
					key: "monitorCurrentTime_",
					value: function e() {
						this.checkCurrentTime_();
						if(this.checkCurrentTimeTimeout_) {
							c.clearTimeout(this.checkCurrentTimeTimeout_)
						}
						this.checkCurrentTimeTimeout_ = c.setTimeout(this.monitorCurrentTime_.bind(this), 250)
					}
				}, {
					key: "checkCurrentTime_",
					value: function e() {
						if(this.tech_.seeking() && this.fixesBadSeeks_()) {
							this.consecutiveUpdates = 0;
							this.lastRecordedTime = this.tech_.currentTime();
							return
						}
						if(this.tech_.paused() || this.tech_.seeking()) {
							return
						}
						var t = this.tech_.currentTime();
						var n = this.tech_.buffered();
						if(this.lastRecordedTime === t && (!n.length || t + Xe >= n.end(n.length - 1))) {
							return this.techWaiting_()
						}
						if(this.consecutiveUpdates >= 5 && t === this.lastRecordedTime) {
							this.consecutiveUpdates++;
							this.waiting_()
						} else if(t === this.lastRecordedTime) {
							this.consecutiveUpdates++
						} else {
							this.consecutiveUpdates = 0;
							this.lastRecordedTime = t
						}
					}
				}, {
					key: "cancelTimer_",
					value: function e() {
						this.consecutiveUpdates = 0;
						if(this.timer_) {
							this.logger_("cancelTimer_");
							clearTimeout(this.timer_)
						}
						this.timer_ = null
					}
				}, {
					key: "fixesBadSeeks_",
					value: function e() {
						var t = this.tech_.seeking();
						if(!t) {
							return false
						}
						var n = this.seekable();
						var i = this.tech_.currentTime();
						var r = this.afterSeekableWindow_(n, i, this.media(), this.allowSeeksWithinUnsafeLiveWindow);
						var a = void 0;
						if(r) {
							var s = n.end(n.length - 1);
							a = s
						}
						if(this.beforeSeekableWindow_(n, i)) {
							var o = n.start(0);
							a = o + Xe
						}
						if(typeof a !== "undefined") {
							this.logger_("Trying to seek outside of seekable at time " + i + " with " + ("seekable range " + et(n) + ". Seeking to ") + (a + "."));
							this.seekTo(a);
							return true
						}
						return false
					}
				}, {
					key: "waiting_",
					value: function e() {
						if(this.techWaiting_()) {
							return
						}
						var t = this.tech_.currentTime();
						var n = this.tech_.buffered();
						var i = Qe(n, t);
						if(i.length && t + 3 <= i.end(0)) {
							this.cancelTimer_();
							this.seekTo(t);
							this.logger_("Stopped at " + t + " while inside a buffered region " + ("[" + i.start(0) + " -> " + i.end(0) + "]. Attempting to resume ") + "playback by seeking to the current time.");
							this.tech_.trigger({
								type: "usage",
								name: "hls-unknown-waiting"
							});
							return
						}
					}
				}, {
					key: "techWaiting_",
					value: function e() {
						var t = this.seekable();
						var n = this.tech_.currentTime();
						if(this.tech_.seeking() && this.fixesBadSeeks_()) {
							return true
						}
						if(this.tech_.seeking() || this.timer_ !== null) {
							return true
						}
						if(this.beforeSeekableWindow_(t, n)) {
							var i = t.end(t.length - 1);
							this.logger_("Fell out of live window at time " + n + ". Seeking to " + ("live point (seekable end) " + i));
							this.cancelTimer_();
							this.seekTo(i);
							this.tech_.trigger({
								type: "usage",
								name: "hls-live-resync"
							});
							return true
						}
						var r = this.tech_.buffered();
						var a = Ze(r, n);
						if(this.videoUnderflow_(a, r, n)) {
							this.cancelTimer_();
							this.seekTo(n);
							this.tech_.trigger({
								type: "usage",
								name: "hls-video-underflow"
							});
							return true
						}
						if(a.length > 0) {
							var s = a.start(0) - n;
							this.logger_("Stopped at " + n + ", setting timer for " + s + ", seeking " + ("to " + a.start(0)));
							this.timer_ = setTimeout(this.skipTheGap_.bind(this), s * 1e3, n);
							return true
						}
						return false
					}
				}, {
					key: "afterSeekableWindow_",
					value: function e(t, n, i) {
						var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
						if(!t.length) {
							return false
						}
						var a = t.end(t.length - 1) + Xe;
						var s = !i.endList;
						if(s && r) {
							a = t.end(t.length - 1) + i.targetDuration * 3
						}
						if(n > a) {
							return true
						}
						return false
					}
				}, {
					key: "beforeSeekableWindow_",
					value: function e(t, n) {
						if(t.length && t.start(0) > 0 && n < t.start(0) - Xe) {
							return true
						}
						return false
					}
				}, {
					key: "videoUnderflow_",
					value: function e(t, n, i) {
						if(t.length === 0) {
							var r = this.gapFromVideoUnderflow_(n, i);
							if(r) {
								this.logger_("Encountered a gap in video from " + r.start + " to " + r.end + ". " + ("Seeking to current time " + i));
								return true
							}
						}
						return false
					}
				}, {
					key: "skipTheGap_",
					value: function e(t) {
						var n = this.tech_.buffered();
						var i = this.tech_.currentTime();
						var r = Ze(n, i);
						this.cancelTimer_();
						if(r.length === 0 || i !== t) {
							return
						}
						this.logger_("skipTheGap_:", "currentTime:", i, "scheduled currentTime:", t, "nextRange start:", r.start(0));
						this.seekTo(r.start(0) + We);
						this.tech_.trigger({
							type: "usage",
							name: "hls-gap-skip"
						})
					}
				}, {
					key: "gapFromVideoUnderflow_",
					value: function e(t, n) {
						var i = $e(t);
						for(var r = 0; r < i.length; r++) {
							var a = i.start(r);
							var s = i.end(r);
							if(n - a < 4 && n - a > 2) {
								return {
									start: a,
									end: s
								}
							}
						}
						return null
					}
				}]);
				return e
			}();
			var ll = {
				errorInterval: 30,
				getSource: function e(t) {
					var n = this.tech({
						IWillNotUseThisInPlugins: true
					});
					var i = n.currentSource_;
					return t(i)
				}
			};
			var ul = function e(n, i) {
				var r = 0;
				var a = 0;
				var s = t.mergeOptions(ll, i);
				n.ready(function() {
					n.trigger({
						type: "usage",
						name: "hls-error-reload-initialized"
					})
				});
				var o = function e() {
					if(a) {
						n.currentTime(a)
					}
				};
				var l = function e(t) {
					if(t === null || t === undefined) {
						return
					}
					a = n.duration() !== Infinity && n.currentTime() || 0;
					n.one("loadedmetadata", o);
					n.src(t);
					n.trigger({
						type: "usage",
						name: "hls-error-reload"
					});
					n.play()
				};
				var u = function e() {
					if(Date.now() - r < s.errorInterval * 1e3) {
						n.trigger({
							type: "usage",
							name: "hls-error-reload-canceled"
						});
						return
					}
					if(!s.getSource || typeof s.getSource !== "function") {
						t.log.error("ERROR: reloadSourceOnError - The option getSource must be a function!");
						return
					}
					r = Date.now();
					return s.getSource.call(n, l)
				};
				var c = function e() {
					n.off("loadedmetadata", o);
					n.off("error", u);
					n.off("dispose", e)
				};
				var d = function t(i) {
					c();
					e(n, i)
				};
				n.on("error", u);
				n.on("dispose", c);
				n.reloadSourceOnError = d
			};
			var cl = function e(t) {
				ul(this, t)
			};
			var dl = "1.12.3";
			t.use("*", function(e) {
				return {
					setSource: function e(t, n) {
						n(null, t)
					},
					setCurrentTime: function t(n) {
						if(e.vhs && e.currentSource().src === e.vhs.source_.src) {
							e.vhs.setCurrentTime(n)
						}
						return n
					},
					play: function t() {
						if(e.vhs && e.currentSource().src === e.vhs.source_.src) {
							e.vhs.setCurrentTime(e.tech_.currentTime())
						}
					}
				}
			});
			var fl = {
				PlaylistLoader: F,
				Playlist: ce,
				Decrypter: we,
				AsyncStream: Ee,
				decrypt: Ce,
				utils: Me,
				STANDARD_PLAYLIST_SELECTOR: Xa,
				INITIAL_PLAYLIST_SELECTOR: Qa,
				comparePlaylistBandwidth: za,
				comparePlaylistResolution: Ka,
				xhr: pe()
			};
			["GOAL_BUFFER_LENGTH", "MAX_GOAL_BUFFER_LENGTH", "GOAL_BUFFER_LENGTH_RATE", "BUFFER_LOW_WATER_LINE", "MAX_BUFFER_LOW_WATER_LINE", "BUFFER_LOW_WATER_LINE_RATE", "BANDWIDTH_VARIANCE"].forEach(function(e) {
				Object.defineProperty(fl, e, {
					get: function n() {
						t.log.warn("using Hls." + e + " is UNSAFE be sure you know what you are doing");
						return Ta[e]
					},
					set: function n(i) {
						t.log.warn("using Hls." + e + " is UNSAFE be sure you know what you are doing");
						if(typeof i !== "number" || i < 0) {
							t.log.warn("value of Hls." + e + " must be greater than or equal to 0");
							return
						}
						Ta[e] = i
					}
				})
			});
			var pl = "videojs-vhs";
			var hl = function e(t) {
				var n = /^(audio|video|application)\/(x-|vnd\.apple\.)?mpegurl/i;
				if(n.test(t)) {
					return "hls"
				}
				var i = /^application\/dash\+xml/i;
				if(i.test(t)) {
					return "dash"
				}
				return null
			};
			var vl = function e(t, n) {
				var i = n.media();
				var r = -1;
				for(var a = 0; a < t.length; a++) {
					if(t[a].id === i.id) {
						r = a;
						break
					}
				}
				t.selectedIndex_ = r;
				t.trigger({
					selectedIndex: r,
					type: "change"
				})
			};
			var gl = function e(t, n) {
				n.representations().forEach(function(e) {
					t.addQualityLevel(e)
				});
				vl(t, n.playlists)
			};
			fl.canPlaySource = function() {
				return t.log.warn("HLS is no longer a tech. Please remove it from " + "your player's techOrder.")
			};
			var ml = function e(n, i, r) {
				if(!n) {
					return n
				}
				var a = void 0;
				var s = void 0;
				if(r.mimeType_) {
					a = i.mimeType_;
					s = r.mimeType_
				} else {
					var o = It(i.mimeType_);
					var l = o.parameters.codecs.split(",");
					var u = void 0;
					var c = void 0;
					l.forEach(function(e) {
						e = e.trim();
						if(Lt(e)) {
							u = e
						} else if(Ot(e)) {
							c = e
						}
					});
					a = o.type + '; codecs="' + c + '"';
					s = o.type.replace("video", "audio") + '; codecs="' + u + '"'
				}
				var d = {};
				var f = i.playlist_;
				for(var p in n) {
					d[p] = {
						audioContentType: s,
						videoContentType: a
					};
					if(f.contentProtection && f.contentProtection[p] && f.contentProtection[p].pssh) {
						d[p].pssh = f.contentProtection[p].pssh
					}
					if(typeof n[p] === "string") {
						d[p].url = n[p]
					}
				}
				return t.mergeOptions(n, d)
			};
			var yl = function e(n) {
				var i = n.masterPlaylistController_.mainSegmentLoader_;
				var r = n.masterPlaylistController_.audioSegmentLoader_;
				var a = t.players[n.tech_.options_.playerId];
				if(a.eme) {
					var s = ml(n.source_.keySystems, i, r);
					if(s) {
						a.currentSource().keySystems = s;
						if(!(t.browser.IE_VERSION === 11) && a.eme.initializeMediaKeys) {
							a.eme.initializeMediaKeys()
						}
					}
				}
			};
			var _l = function e() {
				if(!window.localStorage) {
					return null
				}
				var t = window.localStorage.getItem(pl);
				if(!t) {
					return null
				}
				try {
					return JSON.parse(t)
				} catch(e) {
					return null
				}
			};
			var bl = function e(n) {
				if(!window.localStorage) {
					return false
				}
				var i = _l();
				i = i ? t.mergeOptions(i, n) : n;
				try {
					window.localStorage.setItem(pl, JSON.stringify(i))
				} catch(e) {
					return false
				}
				return i
			};
			fl.supportsNativeHls = function() {
				var e = o.createElement("video");
				if(!t.getTech("Html5").isSupported()) {
					return false
				}
				var n = ["application/vnd.apple.mpegurl", "audio/mpegurl", "audio/x-mpegurl", "application/x-mpegurl", "video/x-mpegurl", "video/mpegurl", "application/mpegurl"];
				return n.some(function(t) {
					return /maybe|probably/i.test(e.canPlayType(t))
				})
			}();
			fl.supportsNativeDash = function() {
				if(!t.getTech("Html5").isSupported()) {
					return false
				}
				return /maybe|probably/i.test(o.createElement("video").canPlayType("application/dash+xml"))
			}();
			fl.supportsTypeNatively = function(e) {
				if(e === "hls") {
					return fl.supportsNativeHls
				}
				if(e === "dash") {
					return fl.supportsNativeDash
				}
				return false
			};
			fl.isSupported = function() {
				return t.log.warn("HLS is no longer a tech. Please remove it from " + "your player's techOrder.")
			};
			var Al = t.getComponent("Component");
			var Sl = function(e) {
				P(n, e);

				function n(e, i, r) {
					T(this, n);
					var a = C(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this, i, r.hls));
					if(i.options_ && i.options_.playerId) {
						var s = t(i.options_.playerId);
						if(!s.hasOwnProperty("hls")) {
							Object.defineProperty(s, "hls", {
								get: function e() {
									t.log.warn("player.hls is deprecated. Use player.tech().hls instead.");
									i.trigger({
										type: "usage",
										name: "hls-player-access"
									});
									return a
								},
								configurable: true
							})
						}
						s.vhs = a;
						s.dash = a;
						a.player_ = s
					}
					a.tech_ = i;
					a.source_ = e;
					a.stats = {};
					a.setOptions_();
					if(a.options_.overrideNative && i.overrideNativeAudioTracks && i.overrideNativeVideoTracks) {
						i.overrideNativeAudioTracks(true);
						i.overrideNativeVideoTracks(true)
					} else if(a.options_.overrideNative && (i.featuresNativeVideoTracks || i.featuresNativeAudioTracks)) {
						throw new Error("Overriding native HLS requires emulated tracks. " + "See https://git.io/vMpjB")
					}
					a.on(o, ["fullscreenchange", "webkitfullscreenchange", "mozfullscreenchange", "MSFullscreenChange"], function(e) {
						var t = o.fullscreenElement || o.webkitFullscreenElement || o.mozFullScreenElement || o.msFullscreenElement;
						if(t && t.contains(a.tech_.el())) {
							a.masterPlaylistController_.smoothQualityChange_()
						}
					});
					a.on(a.tech_, "seeking", function() {
						if(this.tech_.currentTime() === 0 && this.tech_.player_.loop()) {
							this.setCurrentTime(0)
						}
					});
					a.on(a.tech_, "error", function() {
						if(this.masterPlaylistController_) {
							this.masterPlaylistController_.pauseLoading()
						}
					});
					a.on(a.tech_, "play", a.play);
					return a
				}
				k(n, [{
					key: "setOptions_",
					value: function e() {
						var t = this;
						this.options_.withCredentials = this.options_.withCredentials || false;
						this.options_.handleManifestRedirects = this.options_.handleManifestRedirects || false;
						this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;
						this.options_.smoothQualityChange = this.options_.smoothQualityChange || false;
						this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== "undefined" ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;
						this.options_.customTagParsers = this.options_.customTagParsers || [];
						this.options_.customTagMappers = this.options_.customTagMappers || [];
						this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;
						if(typeof this.options_.blacklistDuration !== "number") {
							this.options_.blacklistDuration = 5 * 60
						}
						if(typeof this.options_.bandwidth !== "number") {
							if(this.options_.useBandwidthFromLocalStorage) {
								var n = _l();
								if(n && n.bandwidth) {
									this.options_.bandwidth = n.bandwidth;
									this.tech_.trigger({
										type: "usage",
										name: "hls-bandwidth-from-local-storage"
									})
								}
								if(n && n.throughput) {
									this.options_.throughput = n.throughput;
									this.tech_.trigger({
										type: "usage",
										name: "hls-throughput-from-local-storage"
									})
								}
							}
						}
						if(typeof this.options_.bandwidth !== "number") {
							this.options_.bandwidth = Ta.INITIAL_BANDWIDTH
						}
						this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Ta.INITIAL_BANDWIDTH;
						["withCredentials", "limitRenditionByPlayerDimensions", "bandwidth", "smoothQualityChange", "customTagParsers", "customTagMappers", "handleManifestRedirects", "cacheEncryptionKeys"].forEach(function(e) {
							if(typeof t.source_[e] !== "undefined") {
								t.options_[e] = t.source_[e]
							}
						});
						this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions
					}
				}, {
					key: "src",
					value: function e(n, i) {
						var r = this;
						if(!n) {
							return
						}
						this.setOptions_();
						this.options_.url = this.source_.src;
						this.options_.tech = this.tech_;
						this.options_.externHls = fl;
						this.options_.sourceType = hl(i);
						this.options_.seekTo = function(e) {
							r.tech_.setCurrentTime(e);
							r.setCurrentTime(e)
						};
						this.masterPlaylistController_ = new nl(this.options_);
						this.playbackWatcher_ = new ol(t.mergeOptions(this.options_, {
							seekable: function e() {
								return r.seekable()
							},
							media: function e() {
								return r.masterPlaylistController_.media()
							}
						}));
						this.masterPlaylistController_.on("error", function() {
							var e = t.players[r.tech_.options_.playerId];
							e.error(r.masterPlaylistController_.error)
						});
						this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : fl.STANDARD_PLAYLIST_SELECTOR.bind(this);
						this.masterPlaylistController_.selectInitialPlaylist = fl.INITIAL_PLAYLIST_SELECTOR.bind(this);
						this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;
						this.mediaSource = this.masterPlaylistController_.mediaSource;
						Object.defineProperties(this, {
							selectPlaylist: {
								get: function e() {
									return this.masterPlaylistController_.selectPlaylist
								},
								set: function e(t) {
									this.masterPlaylistController_.selectPlaylist = t.bind(this)
								}
							},
							throughput: {
								get: function e() {
									return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate
								},
								set: function e(t) {
									this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = t;
									this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1
								}
							},
							bandwidth: {
								get: function e() {
									return this.masterPlaylistController_.mainSegmentLoader_.bandwidth
								},
								set: function e(t) {
									this.masterPlaylistController_.mainSegmentLoader_.bandwidth = t;
									this.masterPlaylistController_.mainSegmentLoader_.throughput = {
										rate: 0,
										count: 0
									}
								}
							},
							systemBandwidth: {
								get: function e() {
									var t = 1 / (this.bandwidth || 1);
									var n = void 0;
									if(this.throughput > 0) {
										n = 1 / this.throughput
									} else {
										n = 0
									}
									var i = Math.floor(1 / (t + n));
									return i
								},
								set: function e() {
									t.log.error('The "systemBandwidth" property is read-only')
								}
							}
						});
						if(this.options_.bandwidth) {
							this.bandwidth = this.options_.bandwidth
						}
						if(this.options_.throughput) {
							this.throughput = this.options_.throughput
						}
						Object.defineProperties(this.stats, {
							bandwidth: {
								get: function e() {
									return r.bandwidth || 0
								},
								enumerable: true
							},
							mediaRequests: {
								get: function e() {
									return r.masterPlaylistController_.mediaRequests_() || 0
								},
								enumerable: true
							},
							mediaRequestsAborted: {
								get: function e() {
									return r.masterPlaylistController_.mediaRequestsAborted_() || 0
								},
								enumerable: true
							},
							mediaRequestsTimedout: {
								get: function e() {
									return r.masterPlaylistController_.mediaRequestsTimedout_() || 0
								},
								enumerable: true
							},
							mediaRequestsErrored: {
								get: function e() {
									return r.masterPlaylistController_.mediaRequestsErrored_() || 0
								},
								enumerable: true
							},
							mediaTransferDuration: {
								get: function e() {
									return r.masterPlaylistController_.mediaTransferDuration_() || 0
								},
								enumerable: true
							},
							mediaBytesTransferred: {
								get: function e() {
									return r.masterPlaylistController_.mediaBytesTransferred_() || 0
								},
								enumerable: true
							},
							mediaSecondsLoaded: {
								get: function e() {
									return r.masterPlaylistController_.mediaSecondsLoaded_() || 0
								},
								enumerable: true
							},
							buffered: {
								get: function e() {
									return nt(r.tech_.buffered())
								},
								enumerable: true
							},
							currentTime: {
								get: function e() {
									return r.tech_.currentTime()
								},
								enumerable: true
							},
							currentSource: {
								get: function e() {
									return r.tech_.currentSource_
								},
								enumerable: true
							},
							currentTech: {
								get: function e() {
									return r.tech_.name_
								},
								enumerable: true
							},
							duration: {
								get: function e() {
									return r.tech_.duration()
								},
								enumerable: true
							},
							master: {
								get: function e() {
									return r.playlists.master
								},
								enumerable: true
							},
							playerDimensions: {
								get: function e() {
									return r.tech_.currentDimensions()
								},
								enumerable: true
							},
							seekable: {
								get: function e() {
									return nt(r.tech_.seekable())
								},
								enumerable: true
							},
							timestamp: {
								get: function e() {
									return Date.now()
								},
								enumerable: true
							},
							videoPlaybackQuality: {
								get: function e() {
									return r.tech_.getVideoPlaybackQuality()
								},
								enumerable: true
							}
						});
						this.tech_.one("canplay", this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));
						this.tech_.on("bandwidthupdate", function() {
							if(r.options_.useBandwidthFromLocalStorage) {
								bl({
									bandwidth: r.bandwidth,
									throughput: Math.round(r.throughput)
								})
							}
						});
						this.masterPlaylistController_.on("selectedinitialmedia", function() {
							al(r);
							yl(r)
						});
						this.on(this.masterPlaylistController_, "progress", function() {
							this.tech_.trigger("progress")
						});
						this.setupQualityLevels_();
						if(!this.tech_.el()) {
							return
						}
						this.tech_.src(t.URL.createObjectURL(this.masterPlaylistController_.mediaSource))
					}
				}, {
					key: "setupQualityLevels_",
					value: function e() {
						var n = this;
						var i = t.players[this.tech_.options_.playerId];
						if(!i || !i.qualityLevels || this.qualityLevels_) {
							return
						}
						this.qualityLevels_ = i.qualityLevels();
						this.masterPlaylistController_.on("selectedinitialmedia", function() {
							gl(n.qualityLevels_, n)
						});
						this.playlists.on("mediachange", function() {
							vl(n.qualityLevels_, n.playlists)
						})
					}
				}, {
					key: "play",
					value: function e() {
						this.masterPlaylistController_.play()
					}
				}, {
					key: "setCurrentTime",
					value: function e(t) {
						this.masterPlaylistController_.setCurrentTime(t)
					}
				}, {
					key: "duration",
					value: function e() {
						return this.masterPlaylistController_.duration()
					}
				}, {
					key: "seekable",
					value: function e() {
						return this.masterPlaylistController_.seekable()
					}
				}, {
					key: "dispose",
					value: function e() {
						if(this.playbackWatcher_) {
							this.playbackWatcher_.dispose()
						}
						if(this.masterPlaylistController_) {
							this.masterPlaylistController_.dispose()
						}
						if(this.qualityLevels_) {
							this.qualityLevels_.dispose()
						}
						if(this.player_) {
							delete this.player_.vhs;
							delete this.player_.dash;
							delete this.player_.hls
						}
						if(this.tech_ && this.tech_.hls) {
							delete this.tech_.hls
						}
						E(n.prototype.__proto__ || Object.getPrototypeOf(n.prototype), "dispose", this).call(this)
					}
				}, {
					key: "convertToProgramTime",
					value: function e(t, n) {
						return ze({
							playlist: this.masterPlaylistController_.media(),
							time: t,
							callback: n
						})
					}
				}, {
					key: "seekToProgramTime",
					value: function e(t, n) {
						var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
						var r = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;
						return Ke({
							programTime: t,
							playlist: this.masterPlaylistController_.media(),
							retryCount: r,
							pauseAfterSeek: i,
							seekTo: this.options_.seekTo,
							tech: this.options_.tech,
							callback: n
						})
					}
				}]);
				return n
			}(Al);
			var Tl = {
				name: "videojs-http-streaming",
				VERSION: dl,
				canHandleSource: function e(n) {
					var i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
					var r = t.mergeOptions(t.options, i);
					return Tl.canPlayType(n.type, r)
				},
				handleSource: function e(n, i) {
					var r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
					var a = t.mergeOptions(t.options, r);
					i.hls = new Sl(n, i, a);
					i.hls.xhr = pe();
					i.hls.src(n.src, n.type);
					return i.hls
				},
				canPlayType: function e(n) {
					var i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
					var r = t.mergeOptions(t.options, i),
						a = r.hls.overrideNative;
					var s = hl(n);
					var o = s && (!fl.supportsTypeNatively(s) || a);
					return o ? "maybe" : ""
				}
			};
			if(typeof t.MediaSource === "undefined" || typeof t.URL === "undefined") {
				t.MediaSource = Gt;
				t.URL = Yt
			}
			if(Gt.supportsNativeMediaSources()) {
				t.getTech("Html5").registerSourceHandler(Tl, 0)
			}
			t.HlsHandler = Sl;
			t.HlsSourceHandler = Tl;
			t.Hls = fl;
			if(!t.use) {
				t.registerComponent("Hls", fl)
			}
			t.options.hls = t.options.hls || {};
			if(t.registerPlugin) {
				t.registerPlugin("reloadSourceOnError", cl)
			} else {
				t.plugin("reloadSourceOnError", cl)
			}
			e.LOCAL_STORAGE_KEY = pl;
			e.Hls = fl;
			e.HlsHandler = Sl;
			e.HlsSourceHandler = Tl;
			e.emeKeySystems = ml;
			e.simpleTypeFromSourceType = hl;
			Object.defineProperty(e, "__esModule", {
				value: true
			})
		});
		(function() {
			if(videojs.getPlugin("perSourceBehaviors")) {
				return
			}(function(e, t) {
				typeof exports === "object" && typeof module !== "undefined" ? module.exports = t(require("video.js")) : typeof define === "function" && define.amd ? define(["video.js"], t) : e.videojsPerSourceBehaviors = t(e.videojs)
			})(typeof self !== "undefined" ? self : this, function(e) {
				"use strict";
				e = e && e.hasOwnProperty("default") ? e["default"] : e;
				var t = "2.1.0";
				var n = e.getTech("Html5");
				var i = e.registerPlugin || e.plugin;
				var r = ["abort", "emptied", "loadstart", "play"];
				var a = ["abort", "emptied"];
				var s = ["ad-playback", "ads-ready?", "postroll?", "preroll?"];
				var o = function e(t) {
					return s.indexOf(t) > -1
				};
				var l = function e(t) {
					return t.usingPlugin("ads") && typeof t.ads.inAdBreak === "function"
				};
				var u = function e(t, n) {
					if(!t.usingPlugin("ads")) {
						return false
					}
					if(l(t)) {
						return t.ads.isInAdMode() && n.type !== "loadstart"
					}
					return o(t.ads.state)
				};
				var c = function i() {
					var s = this;
					var o = [];
					var l;
					var c = false;
					var d;
					var f = true;
					var p = function t(n) {
						return function(t, i) {
							var r = this;
							if(this.perSourceBehaviors.disabled()) {
								return
							}
							var a = arguments.length === 2;
							var s = this.currentSrc();
							var l = [t];
							var u = e.bind(a ? this : t, arguments[arguments.length - 1]);
							var c = function e() {
								var t = r.currentSrc() !== s;
								if(r.perSourceBehaviors.disabled()) {
									return
								}
								if(t || n) {
									r.off.apply(r, l)
								}
								if(!t) {
									u.apply(void 0, arguments)
								}
							};
							c.guid = u.guid;
							if(!a) {
								l.push(i)
							}
							l.push(c);
							o.push(l);
							return this.on.apply(this, l)
						}
					};
					this.perSourceBehaviors = {
						disable: e.bind(this, function e() {
							this.clearTimeout(d);
							d = null;
							c = true;
							return c
						}),
						disabled: function e() {
							return c
						},
						enable: function e() {
							c = false;
							return c
						},
						enabled: function e() {
							return !c
						},
						isSrcStable: function e() {
							return f
						},
						VERSION: t
					};
					this.onPerSrc = p();
					this.onePerSrc = p(true);
					this.on("dispose", function() {
						o.length = 0
					});
					this.on(r, function(e) {
						if(s.perSourceBehaviors.disabled() || d || u(s, e)) {
							return
						}
						if(f && a.indexOf(e.type) > -1) {
							f = false;
							s.trigger("sourceunstable")
						}
						var t = [];
						var i = function e(n) {
							return t.push({
								time: Date.now(),
								event: n
							})
						};
						i(e);
						s.on(n.Events, i);
						d = s.setTimeout(function() {
							var e = s.currentSrc();
							f = true;
							d = null;
							s.off(n.Events, i);
							if(e && e !== l) {
								o.forEach(function(e) {
									return s.off.apply(s, e)
								});
								o.length = 0;
								s.trigger("sourcechanged", {
									interimEvents: t,
									from: l,
									to: e
								});
								l = e
							}
						}, 1)
					})
				};
				c.VERSION = t;
				i("perSourceBehaviors", c);
				return c
			})
		})();
		(function() {
			if(videojs.getPlugin("contextmenu")) {
				return
			}(function(e, t) {
				typeof exports === "object" && typeof module !== "undefined" ? module.exports = t(require("video.js")) : typeof define === "function" && define.amd ? define(["video.js"], t) : e.videojsContextmenu = t(e.videojs)
			})(this, function(e) {
				"use strict";
				e = e && e.hasOwnProperty("default") ? e["default"] : e;
				var t = "2.0.2";
				var n = e.registerPlugin || e.plugin;
				var i = {
					cancel: true,
					sensitivity: 10,
					wait: 500,
					disabled: false
				};
				var r = "vjs-contextmenu";

				function a(e, t) {
					if(e.contextmenu.options.disabled) {
						return e
					}
					var n = {
						target: e,
						type: r
					};
					["clientX", "clientY", "pageX", "pageY", "screenX", "screenY"].forEach(function(e) {
						n[e] = t[e]
					});
					return e.trigger(n)
				}

				function s(e) {
					var t = this.contextmenu.current;
					if(!t) {
						return
					}
					var n = this.contextmenu.options.wait;
					if(e.type === "touchend" && Number(new Date) - t.time >= n) {
						a(this, e)
					}
					this.contextmenu.current = null
				}

				function o(e) {
					var t = this.contextmenu.current;
					if(!t) {
						return
					}
					var n = e.touches[0];
					var i = this.contextmenu.options.sensitivity;
					if(n.screenX - t.screenX > i || n.screenY - t.screenY > i) {
						this.contextmenu.current = null
					}
				}

				function l(e) {
					if(this.contextmenu.current) {
						return
					}
					var t = e.touches[0];
					this.contextmenu.current = {
						screenX: t.screenX,
						screenY: t.screenY,
						time: Number(new Date)
					}
				}

				function u(e) {
					if(this.contextmenu.options.cancel && !this.contextmenu.options.disabled) {
						e.preventDefault()
					}
					a(this, e);
					this.off(["touchcancel", "touchend"], s);
					this.off("touchmove", o);
					this.off("touchstart", l)
				}

				function c(t) {
					var n = this;
					this.contextmenu.options = e.mergeOptions(i, t);
					this.contextmenu.VERSION = "__VERSION__";
					this.on("contextmenu", u);
					this.on(["touchcancel", "touchend"], s);
					this.on("touchmove", o);
					this.on("touchstart", l);
					this.ready(function() {
						return n.addClass(r)
					})
				}
				n("contextmenu", c);
				c.VERSION = t;
				return c
			})
		})();
		(function() {
			if(videojs.getPlugin("contextmenuUI")) {
				return
			}(function(e, t) {
				typeof exports === "object" && typeof module !== "undefined" ? module.exports = t(require("video.js"), require("global/document"), require("global/window")) : typeof define === "function" && define.amd ? define(["video.js", "global/document", "global/window"], t) : e.videojsContextmenuUi = t(e.videojs, e.document, e.window)
			})(this, function(e, t, n) {
				"use strict";
				e = e && e.hasOwnProperty("default") ? e["default"] : e;
				t = t && t.hasOwnProperty("default") ? t["default"] : t;
				n = n && n.hasOwnProperty("default") ? n["default"] : n;

				function i(e, t) {
					e.prototype = Object.create(t.prototype);
					e.prototype.constructor = e;
					e.__proto__ = t
				}

				function r(e) {
					if(e === void 0) {
						throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
					}
					return e
				}
				var a = e.getComponent("MenuItem");
				var s = function(e) {
					i(t, e);

					function t() {
						return e.apply(this, arguments) || this
					}
					var r = t.prototype;
					r.handleClick = function t(i) {
						var r = this;
						e.prototype.handleClick.call(this);
						this.options_.listener();
						n.setTimeout(function() {
							r.player().contextmenuUI.menu.dispose()
						}, 1)
					};
					return t
				}(a);
				var o = e.getComponent("Menu");
				var l = e.dom || e;
				var u = function(t) {
					i(a, t);

					function a(i, a) {
						var o;
						o = t.call(this, i, a) || this;
						o.dispose = e.bind(r(o), o.dispose);
						a.content.forEach(function(t) {
							var r = function e() {};
							if(typeof t.listener === "function") {
								r = t.listener
							} else if(typeof t.href === "string") {
								r = function e() {
									return n.open(t.href)
								}
							}
							o.addItem(new s(i, {
								label: t.label,
								listener: e.bind(i, r)
							}))
						});
						return o
					}
					var o = a.prototype;
					o.createEl = function e() {
						var n = t.prototype.createEl.call(this);
						l.addClass(n, "vjs-contextmenu-ui-menu");
						n.style.left = this.options_.position.left + "px";
						n.style.top = this.options_.position.top + "px";
						return n
					};
					return a
				}(o);

				function c(e) {
					var i;
					if(e.getBoundingClientRect && e.parentNode) {
						i = e.getBoundingClientRect()
					}
					if(!i) {
						return {
							left: 0,
							top: 0
						}
					}
					var r = t.documentElement;
					var a = t.body;
					var s = r.clientLeft || a.clientLeft || 0;
					var o = n.pageXOffset || a.scrollLeft;
					var l = i.left + o - s;
					var u = r.clientTop || a.clientTop || 0;
					var c = n.pageYOffset || a.scrollTop;
					var d = i.top + c - u;
					return {
						left: Math.round(l),
						top: Math.round(d)
					}
				}

				function d(e, t) {
					var n = {};
					var i = c(e);
					var r = e.offsetWidth;
					var a = e.offsetHeight;
					var s = i.top;
					var o = i.left;
					var l = t.pageY;
					var u = t.pageX;
					if(t.changedTouches) {
						u = t.changedTouches[0].pageX;
						l = t.changedTouches[0].pageY
					}
					n.y = Math.max(0, Math.min(1, (s - l + a) / a));
					n.x = Math.max(0, Math.min(1, (u - o) / r));
					return n
				}
				var f = "5.2.0";

				function p(e) {
					return e.hasOwnProperty("contextmenuUI") && e.contextmenuUI.hasOwnProperty("menu") && e.contextmenuUI.menu.el()
				}

				function h(e) {
					var t = e.tagName.toLowerCase();
					return t === "input" || t === "textarea"
				}

				function v(e, t) {
					return {
						left: Math.round(t.width * e.x),
						top: Math.round(t.height - t.height * e.y)
					}
				}

				function g(n) {
					var i = this;
					if(p(this)) {
						this.contextmenuUI.menu.dispose();
						return
					}
					if(this.contextmenuUI.options_.excludeElements(n.target)) {
						return
					}
					var r = d(this.el(), n);
					var a = this.el().getBoundingClientRect();
					var s = v(r, a);
					var o = e.browser.IS_FIREFOX ? t.documentElement : t;
					n.preventDefault();
					var l = this.contextmenuUI.menu = new u(this, {
						content: this.contextmenuUI.content,
						position: s
					});
					this.contextmenuUI.closeMenu = function() {
						e.log.warn("player.contextmenuUI.closeMenu() is deprecated, please use player.contextmenuUI.menu.dispose() instead!");
						l.dispose()
					};
					l.on("dispose", function() {
						e.off(o, ["click", "tap"], l.dispose);
						i.removeChild(l);
						delete i.contextmenuUI.menu
					});
					this.addChild(l);
					var c = l.el_.getBoundingClientRect();
					var f = t.body.getBoundingClientRect();
					if(this.contextmenuUI.keepInside || c.right > f.width || c.bottom > f.height) {
						l.el_.style.left = Math.floor(Math.min(s.left, this.player_.currentWidth() - l.currentWidth())) + "px";
						l.el_.style.top = Math.floor(Math.min(s.top, this.player_.currentHeight() - l.currentHeight())) + "px"
					}
					e.on(o, ["click", "tap"], l.dispose)
				}

				function m(t) {
					var n = this;
					var i = {
						keepInside: true,
						excludeElements: h
					};
					t = e.mergeOptions(i, t);
					if(!Array.isArray(t.content)) {
						throw new Error('"content" required')
					}
					if(p(this)) {
						this.contextmenuUI.menu.dispose();
						this.off("contextmenu", this.contextmenuUI.onContextMenu);
						delete this.contextmenuUI
					}
					var r = this.contextmenuUI = function() {
						m.apply(this, arguments)
					};
					r.onContextMenu = e.bind(this, g);
					r.content = t.content;
					r.keepInside = t.keepInside;
					r.options_ = t;
					r.VERSION = f;
					this.on("contextmenu", r.onContextMenu);
					this.ready(function() {
						return n.addClass("vjs-contextmenu-ui")
					})
				}
				e.registerPlugin("contextmenuUI", m);
				m.VERSION = f;
				return m
			})
		})();
		(function() {
			if(videojs.getPlugin("bcAnalytics")) {
				return
			}(function(e, t) {
				typeof exports === "object" && typeof module !== "undefined" ? module.exports = t(require("global/window"), require("global/document"), require("video.js"), require("@brightcove/loscore")) : typeof define === "function" && define.amd ? define(["global/window", "global/document", "video.js", "@brightcove/loscore"], t) : (e = e || self, e.videojsBcAnalytics = t(e.window, e.document, e.videojs, e.videojs.bc_))
			})(this, function(e, t, n, i) {
				"use strict";
				e = e && e.hasOwnProperty("default") ? e["default"] : e;
				t = t && t.hasOwnProperty("default") ? t["default"] : t;
				n = n && n.hasOwnProperty("default") ? n["default"] : n;
				i = i && i.hasOwnProperty("default") ? i["default"] : i;
				var r = function(e, t, n) {
					if(n === void 0) {
						n = {}
					}
					t.forEach(function(t) {
						if(e[t] !== undefined) {
							n[t] = e[t]
						}
					});
					return n
				};
				var a = function e(t, r) {
					if(r === void 0) {
						r = []
					}
					var a = {};
					Object.keys(t).forEach(function(s) {
						var o = t[s];
						r.push(s);
						if(i.isObj(o)) {
							a = n.mergeOptions(a, e(o, r))
						} else {
							a[r.join(".")] = o
						}
						r.pop()
					});
					return a
				};
				var s = function e(t) {
					return t.charAt(0).toUpperCase() + t.slice(1)
				};
				var o = function e(t, n) {
					return t + "x" + n
				};
				var l = {
					memory: ["jsHeapSizeLimit", "usedJSHeapSize", "totalJSHeapSize"],
					navigation: ["redirectCount", "type", "directedMigration"],
					timing: ["loadEventEnd", "loadEventStart", "domComplete", "domContentLoadedEventEnd", "domContentLoadedEventStart", "domInteractive", "domLoading", "responseEnd", "responseStart", "requestStart", "secureConnectionStart", "connectEnd", "connectStart", "domainLookupEnd", "domainLookupStart", "fetchStart", "redirectEnd", "redirectStart", "unloadEventEnd", "unloadEventStart", "navigationStart"]
				};
				var u = {
					bitrate: "bitrates",
					event: "events"
				};
				var c = function() {
					function t() {
						this.data_ = {
							bitrates: {
								bitrates: [],
								playlists: [],
								rendered: [],
								throughput: []
							},
							events: [],
							mr: 0,
							performance: {},
							content: {},
							player: {
								dimensions: [],
								pixelratio: [],
								screendimensions: []
							},
							frames: {}
						}
					}
					var c = t.prototype;
					c.keys = function e() {
						return Object.keys(this.data_)
					};
					c.append = function e(t) {
						t = u.hasOwnProperty(t) ? u[t] : t;
						if(!this.data_.hasOwnProperty(t)) {
							throw new Error('"' + t + '" is not a known QosBuffer key')
						}
						for(var n = arguments.length, i = new Array(n > 1 ? n - 1 : 0), r = 1; r < n; r++) {
							i[r - 1] = arguments[r]
						}
						this["append" + s(t) + "_"].apply(this, i)
					};
					c.flush = function e() {
						var t = this;
						for(var r = arguments.length, a = new Array(r), o = 0; o < r; o++) {
							a[o] = arguments[o]
						}
						if(!a.length) {
							a = this.keys()
						}
						for(var l = 0; l < a.length; l++) {
							if(!this.data_.hasOwnProperty(a[l])) {
								throw new Error('"' + a[l] + '" is not a known QosBuffer key')
							}
						}
						var u = a.map(function(e) {
							return t["flush" + s(e) + "_"]()
						});
						var c = n.mergeOptions.apply(n, u);
						var d = i.qs().stringify(c).length;
						if(d > 3e3 && c["qos.bitrates"]) {
							c["qos.bitrates"] = JSON.stringify({
								bitrates: [],
								playlists: [],
								rendered: [],
								throughput: []
							})
						}
						return c
					};
					c.appendBitrates_ = function e(t) {
						var n = this;
						if(typeof t.playlists !== "undefined") {
							this.data_.bitrates.playlists.push([Date.now(), t.bitrates, t.playlists]);
							delete t.bitrates;
							delete t.playlists
						}
						Object.keys(t).forEach(function(e) {
							n.data_.bitrates[e].push([Date.now(), t[e]])
						})
					};
					c.appendMr_ = function e(t) {
						this.data_.mr = t ? 1 : null
					};
					c.appendPerformance_ = function t(n) {
						var a = this;
						var s = e.performance;
						if(i.isNil(s)) {
							return
						}
						Object.keys(l).forEach(function(e) {
							if(!i.isNil(s[e])) {
								a.data_.performance[e] = r(s[e], l[e])
							}
						});
						if(i.isFn(s.measure)) {
							["bcParse", "bcInit"].forEach(function(e) {
								s.getEntriesByName(e, "measure").forEach(function(t) {
									a.data_.performance[e] = t.duration
								})
							})
						}
						if(this.data_.performance.navigation) {
							this.data_.performance.navigation.directedMigration = n ? i.qs().parse(n).directedMigration === "true" : false
						}
					};
					c.appendFrames_ = function e(t) {
						this.data_.frames = {
							dropped: t.droppedVideoFrames,
							corrupted: t.corruptedVideoFrames,
							total: t.totalVideoFrames
						}
					};
					c.appendPlayer_ = function t(n, i) {
						if(i === void 0) {
							i = Date.now()
						}
						this.data_.player.dimensions.push([i, o(n.width, n.height), o(n.computedWidth, n.computedHeight)]);
						this.data_.player.pixelratio.push([i, e.devicePixelRatio]);
						this.data_.player.screendimensions.push([i, o(e.screen.width, e.screen.height)])
					};
					c.appendEvents_ = function e() {
						for(var t = arguments.length, n = new Array(t), i = 0; i < t; i++) {
							n[i] = arguments[i]
						}
						this.data_.events.push({
							type: n.join("."),
							time: Date.now()
						})
					};
					c.appendContent_ = function e(t) {
						this.data_.content = {
							sourceMimeType: t.sourceMimeType
						}
					};
					c.flushBitrates_ = function e() {
						var t = this.data_.bitrates;
						var n = {};
						if(t.bitrates.length || t.playlists.length || t.rendered.length || t.throughput.length) {
							n["qos.bitrates"] = JSON.stringify(t)
						}
						t.bitrates.length = 0;
						t.playlists.length = 0;
						t.rendered.length = 0;
						t.throughput.length = 0;
						return n
					};
					c.flushEvents_ = function e() {
						var t = this.data_.events;
						var n = {};
						t.forEach(function(e) {
							var t = e.time,
								i = e.type;
							var r = "qos.events." + i;
							if(Array.isArray(n[r])) {
								n[r].push(t)
							} else if(n.hasOwnProperty(r)) {
								n[r] = [n[r], t]
							} else {
								n[r] = t
							}
						});
						Object.keys(n).forEach(function(e) {
							if(Array.isArray(n[e])) {
								n[e] = JSON.stringify(n[e])
							}
						});
						t.length = 0;
						return n
					};
					c.flushMr_ = function e() {
						return {
							"qos.mr": this.data_.mr
						}
					};
					c.flushFrames_ = function e() {
						var t = a(this.data_.frames, ["qos", "frames"]);
						this.data_.frames = {};
						return t
					};
					c.flushPerformance_ = function e() {
						return a(this.data_.performance, ["qos", "performance"])
					};
					c.flushPlayer_ = function e() {
						var t = this.data_.player;
						var n = {};
						Object.keys(t).forEach(function(e) {
							var i = t[e];
							if(i.length) {
								n["qos.player." + e] = JSON.stringify(i);
								i.length = 0
							}
						});
						return n
					};
					c.flushContent_ = function e() {
						return a(this.data_.content, ["qos", "content"])
					};
					return t
				}();
				var d = ["ad-playback", "ads-ready?", "postroll?", "preroll?"];
				var f = function e(t) {
					return t.usingPlugin("ads") ? t.ads.state : undefined
				};
				var p = function e(t) {
					return t.usingPlugin("ads") && !!t.adonly
				};
				var h = function e(t) {
					return d.indexOf(t) > -1
				};
				var v = function e(t) {
					return t.usingPlugin("ads") && i.isFn(t.ads.inAdBreak)
				};
				var g = function e(t) {
					if(t.usingPlugin("ads")) {
						return false
					}
					if(p(t)) {
						return true
					}
					if(v(t)) {
						return t.ads.isInAdMode()
					}
					return h(t.ads.state)
				};
				var m = function e(t, n) {
					if(v(n) && t && t.type === "loadstart") {
						return true
					}
					return !g(n)
				};
				var y = function e(t) {
					var n = {};
					if(t.ima3) {
						var a = t.ima3.currentAdEventInfo;
						n.plugin = "ima3";
						if(i.isFn(t.ima3)) {
							return n
						}
						n.pluginVersion = t.ima3.VERSION || t.ima3.version;
						n.adTech = t.ima3.adTech;
						n.requestMode = t.ima3.settings.requestMode;
						n.timeout = t.ima3.settings.timeout;
						if(a) {
							r(a, ["adType", "adPodLength", "adPodId", "creativeFormat", "creativeLength", "creativeId", "creativeIndex", "creativeUrl", "advertiserName", "wrapperCreativeIds", "dealId", "surveyUrl", "adId", "adTitle", "adSystem", "adIsciId", "creativeAdId"], n);
							var s = a.creativeIndex;
							if(s && s.length) {
								n.firstPlayedAdIndex = s[0]
							}
							n.startedInAdPod = a.started;
							n.completedInAdPod = a.completed
						}
					} else if(t.FreeWheelPlugin) {
						n.plugin = "freewheel";
						if(i.isFn(t.FreeWheelPlugin)) {
							return n
						}
						n.pluginVersion = t.FreeWheelPlugin.VERSION || t.FreeWheelPlugin.getVersion()
					}
					return n
				};
				var _ = function e(t) {
					t.adBreakIndex = null;
					t.hasAdBreakStarted = false;
					t["ads-request"] = null;
					t["ads-response-received"] = null;
					t["ads-loading"] = [];
					t["ads-ad-started"] = [];
					t["ads-ad-ended"] = []
				};
				var b = function e() {
					var t = {};
					_(t);
					return t
				};
				var A = function e(t, n, i) {
					var r = t.currentAdSequence_;
					var a = ["ads-loading", "ads-ad-started", "ads-ad-ended"];
					if(n === "ads-request") {
						//_(r)
					} else if(n === "adstart" || n === "ads-loading") {
						if(!r.hasAdBreakStarted) {
						    if(r.adBreakIndex === null) {
								r.adBreakIndex = 0
							} else {
						 		r.adBreakIndex++
						 	}
						 	r.hasAdBreakStarted = true;
						 	a.forEach(function(e) {
						 		r[e].push([])
						 	})
						}
					} else if(n === "adend") {
					 	r.hasAdBreakStarted = false
					}
					if(a.indexOf(n) > -1) {
				     	r[n][r.adBreakIndex].push(i)
					} else if(n === "ads-request" || n === "ads-response-received") {
					 	r[n] = i
					}
				};
				var S = "sendBeacon" in e.navigator;
				var T = e.Set;
				var k = "lbu";
				var E = 4e3;
				var P = new T;
				["account", "domain", "event", "player"].forEach(function(e) {
					return P.add(e)
				});
				var C = new T;
				["account", "catalog_url", "destination", "domain", "dropped_frames", "error_code", "event", "feature", "file_size_bytes", "forward_buffer_seconds", "load_time_ms", "measured_bps", "platform", "platform_version", "player", "player_height", "player_name", "player_width", "range", "rebuffering_count", "rebuffering_seconds", "rendition_height", "rendition_indicated_bps", "rendition_mime_type", "rendition_url", "rendition_width", "response_time_ms", "session", "start_time_ms", "source", "time", "video", "video_duration", "video_name", "video_seconds_viewed"].forEach(function(e) {
					return C.add(e)
				});
				var w = function e(t, n) {
					return Math.floor(t) + ".." + (Math.floor(n) - 1)
				};
				var j = function e(t) {
					var n = 2166136261;
					var i = n;
					for(var r = 0; r < t.length; ++r) {
						i ^= t.charCodeAt(r);
						i *= 16777619
					}
					return i >>> 0
				};
				var I = function e(t, n) {
					var r = i.qs();
					Object.keys(n).forEach(function(e) {
						if(i.isNil(n[e])) {
							delete n[e]
						}
					});
					var a = t + "?" + r.stringify(n);
					if(a.length <= E) {
						return a
					}
					Object.keys(n).forEach(function(e) {
						if(!C.has(e)) {
							delete n[e]
						}
					});
					n.usage = k;
					return t + "?" + r.stringify(n)
				};
				var L = function e(t, n, i, r, a) {
					var s = n - t;
					if(a !== undefined && a < n) {
						s -= a - t
					} else if(i !== undefined && r !== undefined) {
						if(i < t) {
							i = t
						}
						if(r > n) {
							r = n
						}
						s -= r - i
					}
					return s
				};
				var O = function e(t) {
					for(var i = arguments.length, r = new Array(i > 1 ? i - 1 : 0), a = 1; a < i; a++) {
						r[a - 1] = arguments[a]
					}
					var s = n.mergeOptions.apply(n, [t.params || {}].concat(r));
					delete t.params;
					return s
				};
				var N = function e(t, n) {
					var r = t.mediainfo;
					var a = r && r.duration || t.duration();
					if(r) {
						if(n.video === undefined) {
							n.video = r.id
						}
						if(n.video_name === undefined) {
							n.video_name = r.name
						}
					}
					if(i.isNum(a) && n.video_duration === undefined) {
						n.video_duration = Math.floor(a);
						if(n.video_duration < 1 || n.video_duration === Infinity) {
							n.video_duration = null
						}
					}
					return n
				};
				var x = function e(t, n) {
					var i = t.preload();
					if(typeof i !== "string") {
						i = t.el().getAttribute("preload")
					}
					if(typeof i === "string" && i.length === 0) {
						i = "auto"
					}
					if(i) {
						n.preload = i
					}
				};
				var D = function() {
					function a(e, t, n, i) {
						if(i === void 0) {
							i = {}
						}
						this.baseUrl_ = n;
						this.logger_ = i.logger;
						this.history_ = t;
						this.currentAdSequence_ = b();
						this.player_ = e;
						this.metrics_ = [];
						this.eventCount_ = 0;
						this.streamCount_ = -1;
						this.user(i.user || null);
						this.device(i.device || null);
						this.corpCommsApp(i.corpCommsApp || null);
						this.defaultParams_ = {
							domain: "videocloud",
							platform: "video-js",
							session: ""
						};
						for(var r = 0; r < 3; r++) {
							this.defaultParams_.session += (Math.random() * 4294967295 >>> 0).toString(16)
						}
						this.qos = new c(this);
						this.resetTimesOf()
					}
					var s = a.prototype;
					s.logger = function e() {
						if(this.logger_);
					};
					s.metrics = function e() {
						return this.metrics_.map(n.mergeOptions)
					};
					s.resetTimesOf = function e() {
						this.timeOfImpression = null;
						this.timeOfView = null
					};
					s.defaultParams = function e(t) {
						if(t) {
							t = i.isFn(t) ? t() : t;
							this.defaultParams_ = n.mergeOptions(this.defaultParams_, t)
						}
						return this.defaultParams_
					};
					s.getSession = function e() {
						return this.defaultParams_.session
					};
					s.user = function e(t) {
						if(t === null || i.isNonEmptyStr(t) || i.isNum(t)) {
							this.user_ = t
						}
						return this.user_
					};
					s.corpCommsApp = function e(t) {
						if(t === null || i.isNonEmptyStr(t) || i.isNum(t)) {
							this.corpCommsApp_ = t
						}
						return this.corpCommsApp_
					};
					s.device = function e(t) {
						if(t === null || i.isNonEmptyStr(t) || i.isNum(t)) {
							this.device_ = t
						}
						return this.device_
					};
					s.send = function r(a, s) {
						var o;
						if(a === void 0) {
							a = {}
						}
						if(s === void 0) {
							s = {}
						}
						if(this.user()) {
							a.user = j(this.user())
						}
						if(this.corpCommsApp()) {
							a.application = this.corpCommsApp();
							a.user = this.user() || this.device()
						}
						if(i.isNil(a.time)) {
							a.time = Date.now()
						}
						s.qos = Array.isArray(s.qos) ? s.qos : [];
						s.qos.push("mr");
						a = n.mergeOptions(this.defaultParams_, a, (o = this.qos).flush.apply(o, s.qos));
						a.seq = "" + this.eventCount_;
						this.eventCount_++;
						if("streamCount" in s) {
							a.seq += "_" + s.streamCount
						}
						P.forEach(function(e) {
							if(i.isNil(a[e])) {
								throw new Error('the "' + e + '" param is required')
							}
						});
						var l = I(this.baseUrl_, a);
						if(s.useSendBeaconOnly) {
							if(S) {
								e.navigator.sendBeacon(l)
							} else {
								return null
							}
						} else {
							var u = t.createElement("img");
							u.src = l
						}
						this.metrics_.push(a);
						this.player_.trigger({
							params: a,
							type: "analytics_request"
						});
						this.player_.trigger({
							params: a,
							type: "analytics_request_" + a.event
						});
						return {
							params: a,
							url: l
						}
					};
					s.sendCatalog_ = function e(t, n) {
						if(n === void 0) {
							n = {}
						}
						var i = n,
							r = i.error,
							a = i.xhr;
						if(r && a) {
							r.status = a.status
						}
						if(r) {
							t.error = JSON.stringify(r)
						}
						return this.send(t, n)
					};
					s.sendVideoImpression = function e(t) {
						if(t === void 0) {
							t = {}
						}
						var r = O(t, {
							event: "video_impression"
						});
						var a = y(this.player_);
						if(Object.keys(a).length > 0) {
							r.web_ad_info = JSON.stringify(a)
						}
						var s = i.isNonEmptyStr(this.player_.currentSrc());
						if(!s || this.timeOfImpression) {
							return null
						}
						if(n.bc_.isNonEmptyStr(this.player_.currentType())) {
							this.qos.append("content", {
								sourceMimeType: this.player_.currentType()
							});
							t.qos = t.qos || ["content"]
						}
						this.streamCount_++;
						t.streamCount = this.streamCount_;
						N(this.player_, r);
						r.autoplay = this.player_.autoplay();
						x(this.player_, r);
						var o = this.send(r, t);
						if(o) {
							this.timeOfImpression = Number(o.params.time)
						}
						return o
					};
					s.sendVideoView = function e(t) {
						if(t === void 0) {
							t = {}
						}
						var n = O(t, {
							event: "video_view"
						});
						var r = i.isNonEmptyStr(this.player_.currentSrc());
						if(!r || this.timeOfView || !this.timeOfImpression) {
							return null
						}
						var a = this.history_;
						var s = a.first("canplay");
						var o = a.first("loadstart");
						var l = a.first("play");
						if(s) {
							n.load_time_ms = s - this.timeOfImpression
						}
						n.start_time_ms = L(l || o, n.time, a.first("adstart", true), a.first("adend", true), a.first("adtimeout", true));
						N(this.player_, n);
						if(this.player_.usingPlugin("pluginDev")) {
							n.feature = "iris"
						}
						t.streamCount = this.streamCount_;
						var u = this.send(n, t);
						if(u) {
							this.timeOfView = Number(u.params.time)
						}
						return u
					};
					s.sendVideoEngagement = function e(t, n, r) {
						if(r === void 0) {
							r = {}
						}
						var a = O(r, {
							event: "video_engagement"
						});
						var s = n.buffered,
							o = n.duration,
							l = n.playbackEndTime,
							u = n.height,
							c = n.mediainfo,
							d = n.playbackRate,
							f = n.rebufferingCount,
							p = n.rendition,
							h = n.playbackStartTime,
							v = n.rangeStart,
							g = n.rangeEnd,
							m = n.stats,
							y = n.width;
						var _ = l - h;
						r.qos = r.qos || ["bitrates", "events", "player", "frames"];
						t.length = t.end - t.start;
						a.player_height = u;
						a.player_width = y;
						a.video_duration = o;
						if(c) {
							a.video = c.id;
							a.video_name = c.name
						}
						if(p) {
							a.rendition_url = p.url;
							a.rendition_indicated_bps = p.indicatedBPS;
							a.rendition_mime_type = p.mimeType;
							a.rendition_height = p.height;
							a.rendition_width = p.width
						}
						if(m) {
							if(!i.isNil(m.mediaRequests)) {
								a.media_requests = m.mediaRequests
							}
							if(!i.isNil(m.mediaTransferDuration)) {
								a.media_transfer_duration = m.mediaTransferDuration
							}
							if(!i.isNil(m.mediaBytesTransferred)) {
								a.media_bytes_transferred = m.mediaBytesTransferred
							}
							if(!i.isNil(m.bandwidth)) {
								a.measured_bps = m.bandwidth
							}
							if(!i.isNil(m.mediaSecondsLoaded)) {
								a.media_seconds_loaded = m.mediaSecondsLoaded
							}
						}
						var b = _ / d * 1e3;
						var A = t.end - t.start;
						var S = 100;
						var T = Math.floor((A - b) / S) * S / 1e3;
						if(f > 0) {
							a.rebuffering_count = f
						}
						if(T > 0) {
							a.rebuffering_seconds = T
						}
						if(s) {
							var k = 0;
							for(var E = 0; E < s.length; E++) {
								var P = s.start(E);
								var C = s.end(E);
								if(l >= P && l <= C) {
									k = C - l;
									break
								}
							}
							a.forward_buffer_seconds = k
						}
						if(_ < 1 && !a.rebuffering_seconds) {
							return null
						}
						var j = this.history_.filter(function(e) {
							return e.name === "licenserequestattempted" && e.time >= t.start && e.time < t.end
						});
						if(j.length) {
							a.license_request_attempts = j.length
						}
						N(this.player_, a);
						r.streamCount = this.streamCount_;
						if(a.video_duration === Infinity) {
							a.video_seconds_viewed = Math.round(_);
							delete a.video_duration
						} else if(_ >= 1) {
							a["qos.derived_range"] = w(h, l);
							a.range = v + ".." + g
						}
						return this.send(a, r)
					};
					s.sendVideoComplete = function e(t) {
						if(t === void 0) {
							t = {}
						}
						var n = O(t, {
							event: "video_complete"
						});
						N(this.player_, n);
						t.streamCount = this.streamCount_;
						return this.send(n, t)
					};
					s.sendError = function e(t) {
						if(t === void 0) {
							t = {}
						}
						var n = this.player_.error();
						if(!n) {
							return null
						}
						var r = O(t, {
							event: "error"
						});
						var a = i.isFn(this.player_.errors) && i.isFn(this.player_.errors.getAll) && this.player_.errors.getAll() || {
							unknown: {
								type: "MEDIA_ERR_UNKNOWN"
							}
						};
						if(n && a.hasOwnProperty(String(n.code))) {
							r.error_code = a[String(n.code)].type
						} else if(n.type !== undefined) {
							r.error_code = n.type
						} else {
							r.error_code = a.unknown.type
						}
						N(this.player_, r);
						t.streamCount = this.streamCount_;
						return this.send(r, t)
					};
					s.sendCatalogRequest = function e(t, n) {
						if(n === void 0) {
							n = {}
						}
						var i = O(n, {
							event: "catalog_request",
							url: t
						});
						return this.sendCatalog_(i, n)
					};
					s.sendCatalogRequestError = function e(t, n) {
						if(n === void 0) {
							n = {}
						}
						var i = O(n, {
							event: "catalog_request_error",
							url: t
						});
						if(n.error) {
							n.error = r(n.error, ["code", "message", "type"])
						}
						return this.sendCatalog_(i, n)
					};
					s.sendCatalogResponse = function e(t, n) {
						if(n === void 0) {
							n = {}
						}
						var i = O(n, {
							event: "catalog_response",
							url: t
						});
						i.time = Date.now();
						i.response_time_ms = i.time - this.history_.last("catalog_request");
						return this.sendCatalog_(i, n)
					};
					s.sendAdEnd = function e(t) {
						if(t === void 0) {
							t = {}
						}
						var n = y(this.player_);
						var i = this.currentAdSequence_["ads-ad-started"];
						var r = this.currentAdSequence_.adBreakIndex;
						if(n.plugin !== undefined) {
							if(n.adType === "preroll" && i.length > 0 && i[0].length > 0) {
								var a = this.history_.first("play", true);
								n.prerollDelay = i[0][0] - a;
								n.firstPlayInSession = a
							}
							n.adsRequest = this.currentAdSequence_["ads-request"];
							n.adsResponseReceived = this.currentAdSequence_["ads-response-received"];
							n.adsLoading = this.currentAdSequence_["ads-loading"][r];
							n.adsAdStarted = this.currentAdSequence_["ads-ad-started"][r];
							n.adsAdEnded = this.currentAdSequence_["ads-ad-ended"][r]
						} else {
							n.plugin = "unknown"
						}
						var s = {
							event: "ad_end",
							web_ad_info: JSON.stringify(n)
						};
						t.streamCount = this.streamCount_;
						return this.send(N(this.player_, O(t, s)), t)
					};
					s.sendAdHardTimeout = function e(t) {
						if(t === void 0) {
							t = {}
						}
						t.streamCount = this.streamCount_;
						return this.send(N(this.player_, O(t, {
							event: "ad_hard_timeout"
						})), t)
					};
					s.sendAdStart = function e(t) {
						if(t === void 0) {
							t = {}
						}
						t.streamCount = this.streamCount_;
						return this.send(N(this.player_, O(t, {
							event: "ad_start"
						})), t)
					};
					s.sendAdTimeout = function e(t) {
						if(t === void 0) {
							t = {}
						}
						t.streamCount = this.streamCount_;
						return this.send(N(this.player_, O(t, {
							event: "ad_timeout"
						})), t)
					};
					s.sendPlayRequest = function e(t) {
						if(t === void 0) {
							t = {}
						}
						t.streamCount = this.streamCount_;
						return this.send(N(this.player_, O(t, {
							event: "play_request"
						})), t)
					};
					s.sendPlayerInit = function e(t) {
						if(t === void 0) {
							t = {}
						}
						return this.send(O(t, {
							event: "player_init"
						}), t)
					};
					s.sendPlayerLoad = function e(t) {
						if(t === void 0) {
							t = {}
						}
						return this.send(O(t, {
							event: "player_load"
						}), t)
					};
					return a
				}();
				var R = function(e) {
					var t = e.bcAnalyticsLogger && e.bcAnalyticsLogger();
					var n = function e() {
						return t && t.add.apply(t, arguments)
					};
					return n
				};

				function U(e, t) {
					e.prototype = Object.create(t.prototype);
					e.prototype.constructor = e;
					e.__proto__ = t
				}
				var M = function e(t) {
					return typeof t === "number" && !isNaN(t) && t >= 0 && t < Infinity
				};
				var B = function e(t) {
					return t.map(function(e) {
						return Math.floor(e)
					}).reduce(function(e, t) {
						var n = e[e.length - 1];
						if(t !== n) {
							e.push(t)
						}
						return e
					}, [])
				};
				var F = function e(t) {
					return t.reduce(function(e, t) {
						var n = e[e.length - 1];
						if(n) {
							if(n.end + 1 === t) {
								n.end = t
							} else {
								e.push({
									start: t,
									end: t
								})
							}
						} else {
							e.push({
								start: t,
								end: t
							})
						}
						return e
					}, [])
				};
				var V = function e(t) {
					return t.map(function(e) {
						var t = e.start,
							n = e.end;
						var i = n - t;
						if(i > 0) {
							return {
								start: t,
								end: n - 1,
								remainder: n
							}
						}
						return {
							start: t,
							end: n,
							remainder: n
						}
					})
				};
				var q = function e(t) {
					var n = [];
					var i = t.shift() || {},
						r = i.start,
						a = i.end,
						s = i.remainder;
					while(M(r) && M(a) && M(s) && r === a && r === s) {
						var o = t.shift() || {};
						r = o.start;
						a = o.end;
						s = o.remainder
					}
					if(t.length === 0) {
						n.push(s)
					}
					for(var l = 0; l < t.length; l++) {
						var u = t[l],
							c = u.start,
							d = u.end,
							f = u.remainder;
						for(var p = c; p <= (f || d); p++) {
							n.push(p)
						}
					}
					return {
						start: r,
						end: a,
						remainders: n,
						ranges: t.length
					}
				};
				var H = function e(t) {
					return q(V(F(B(t))))
				};
				var G = 1;

				function Y() {
					return G++
				}
				var z = [];
				var K = function e(t, n, i, r, a) {
					if(a === void 0) {
						a = true
					}
					var s = [].concat(i).sort();
					if(n !== "removeEventListener") {
						t.off(s, r)
					} else {
						s.forEach(function(e) {
							t.removeEventListener(e, r)
						})
					}
					if(!a) {
						return
					}
					var o = z.length;
					var l = function e() {
						var n = z[o];
						if(n.context === t && (n.fn.guid === r.guid || n.fn === r) && s.every(function(e, t) {
								return n.events[t]
							})) {
							z.splice(o, 1);
							return "break"
						}
					};
					while(o--) {
						var u = l();
						if(u === "break") break
					}
				};
				var W = function e() {
					var t = z.length;
					while(t--) {
						var n = z.shift(),
							i = n.context,
							r = n.mode,
							a = n.events,
							s = n.fn;
						var o = "off";
						if(r === "addEventListener") {
							o = "removeEventListener"
						}
						K(i, o, a, s, false)
					}
				};
				var X = function e(t, n, i, r) {
					var a = [].concat(i).sort();
					var s = {
						events: a,
						fn: r,
						mode: n,
						context: t
					};
					if(n === "one" || n === "onePerSrc") {
						s.fn = function() {
							var e = "off";
							if(s.mode === "addEventListener") {
								e = "removeEventListener"
							}
							K(s.context, e, s.events, s.fn);
							for(var t = arguments.length, n = new Array(t), i = 0; i < t; i++) {
								n[i] = arguments[i]
							}
							return r.apply(this, n)
						};
						if(!r.guid) {
							r.guid = Y()
						}
						s.fn.guid = r.guid
					}
					z.push(s);
					if(n === "addEventListener") {
						s.events.forEach(function(e) {
							s.context.addEventListener(e, s.fn)
						})
					} else {
						s.context[s.mode](s.events, s.fn)
					}
				};
				var J = function e() {
					var t = z.slice(0);
					W();
					t.forEach(function(e) {
						var t = e.context,
							n = e.mode,
							i = e.events,
							r = e.fn;
						X(t, n, i, r)
					})
				};
				var Q = 1e4;
				var Z = function e(t) {
					return Boolean(t.onceux && t.onceux.currentTime && t.onceux.timeline)
				};
				var $ = function(e) {
					U(t, e);

					function t(t, n) {
						var i;
						i = e.call(this) || this;
						i.player_ = t;
						i.logger_ = n;
						i.stateBySrc_ = {};
						i.lastStateRecord_ = 0;
						i.disposed_ = false;
						return i
					}
					var i = t.prototype;
					i.logger = function e() {};
					i.stateBySrc = function e(t) {
						if(t === void 0) {
							t = this.player_.currentSrc()
						}
						if(!this.stateBySrc_.hasOwnProperty(t)) {
							this.stateBySrc_[t] = {
								buffered: null,
								duration: 0,
								end: 0,
								height: 0,
								mediainfo: null,
								playbackRate: 1,
								rebufferingCount: 0,
								src: t,
								start: 0,
								width: 0,
								playbackStartTime: 0,
								playbackEndTime: 0,
								stats: null,
								rendition: null,
								videoPlaybackQuality: null,
								times: []
							}
						}
						var n = this.player_.tech_ && this.player_.tech_.hls;
						this.stateBySrc_[t].stats = n && n.stats || null;
						return this.stateBySrc_[t]
					};
					i.clearStateBySrc = function e(t) {
						if(t === void 0) {
							t = this.player_.currentSrc()
						}
						delete this.stateBySrc_[t]
					};
					i.recordState = function e() {
						var t = this.player_;
						var n = this.stateBySrc();
						n.mediainfo = t.mediainfo;
						n.playbackEndTime = t.currentTime();
						n.times.push(n.playbackEndTime);
						if(Z(t)) {
							n.duration = t.onceux.timeline.contentDuration
						} else {
							n.duration = t.duration()
						}
						n.buffered = t.buffered();
						n.playbackRate = t.playbackRate()
					};
					i.isTracking = function e() {
						return !!this.timerId_
					};
					i.start = function e(t) {
						var n = this;
						if(t === void 0) {
							t = {}
						}
						if(this.disposed_) {
							return
						}
						var i = t,
							r = i.reason,
							a = i.src;
						if(!a) {
							a = this.player_.currentSrc()
						}
						var s = this.stateBySrc(a);
						s.playbackStartTime = s.playbackEndTime = this.player_.currentTime();
						if(Z(this.player_)) {
							s.duration = this.player_.onceux.timeline.contentDuration
						} else {
							s.duration = this.player_.duration()
						}
						s.rebufferingCount = 0;
						this.player_.clearTimeout(this.timerId_);
						this.timerCreatedAt_ = Date.now();
						this.timerId_ = this.player_.setTimeout(function() {
							return n.stop({
								src: a,
								reason: "engagement timer fired"
							})
						}, Q);
						return this
					};
					i.prepareState_ = function e(t) {
						var i = this.player_;
						var r = this.stateBySrc(t);
						r.height = Math.round(i.currentHeight());
						r.width = Math.round(i.currentWidth());
						var a = i.tech_ && i.tech_.hls;
						if(a && a.playlists && a.playlists.media()) {
							var s = a.playlists.media();
							var o = r.rendition = {
								url: s.resolvedUri,
								mimeType: i.currentType()
							};
							if(s.attributes) {
								o.indicatedBPS = s.attributes.BANDWIDTH;
								if(s.attributes.RESOLUTION) {
									o.height = s.attributes.RESOLUTION.height;
									o.width = s.attributes.RESOLUTION.width
								}
							}
						}
						r.videoPlaybackQuality = i.getVideoPlaybackQuality();
						if(r.mediainfo) {
							var l = {};
							Object.keys(r.mediainfo).forEach(function(e) {
								if(!/_/.test(e)) {
									l[e] = r.mediainfo[e]
								}
							});
							r.mediainfo = l
						}
						r.times.push(i.currentTime());
						var u = H(r.times),
							c = u.start,
							d = u.end,
							f = u.remainders,
							p = u.ranges;
						r.times = f;
						return n.mergeOptions({
							rangeExtras: p,
							rangeStart: c,
							rangeEnd: d
						}, r)
					};
					i.stop = function e(t) {
						var n = this;
						if(t === void 0) {
							t = {}
						}
						if(!t.src) {
							t.src = this.player_.currentSrc()
						}
						if(this.isTracking()) {
							this.player_.clearTimeout(this.timerId_);
							this.timerId_ = null;
							var i = this.stateBySrc(t.src);
							var r = (i.duration - i.playbackEndTime) * 1e3;
							if(!this.player_.ended() && r < 1500) {
								this.timerId_ = true;
								X(this.player_, "one", "ended", function() {
									n.recordState();
									n.stop({
										reason: "content ended after we delayed the engager"
									})
								});
								return this
							}
							t.state = this.prepareState_(t.src);
							t.period = t.period || {};
							t.period.start = t.period.start || this.timerCreatedAt_;
							t.period.end = t.period.end || Date.now();
							this.trigger({
								type: "engagement",
								engagement: t
							})
						}
						return this
					};
					i.dispose = function e() {
						this.disposed_ = true;
						this.stop({
							ignoreAdState: true,
							reason: "player disposed"
						});
						this.off();
						return this
					};
					return t
				}(n.EventTarget);
				var ee = ["progress", "seeking", "suspend", "timeupdate"];
				var te = ["seek", "stable", "unstable"];
				var ne = ["adend", "adscanceled", "adserror", "adskip", "adsready", "adstart", "adtimeout", "contentplayback", "contentupdate", "nopostroll", "nopreroll", "readyforpreroll"];
				var ie = [].concat(n.getTech("Html5").Events);
				var re = ie.filter(function(e) {
					return ee.indexOf(e) === -1
				});
				var ae = ["ads-request", "ads-response-received", "adstart", "ads-loading", "ads-ad-started", "ads-ad-ended", "adend"];
				var se = ["NETWORK_EMPTY", "NETWORK_IDLE", "NETWORK_LOADING", "NETWORK_NO_SOURCE"];
				var oe = ["HAVE_NOTHING", "HAVE_METADATA", "HAVE_CURRENT_DATA", "HAVE_FUTURE_DATA", "HAVE_ENOUGH_DATA"];
				var le = function() {
					function e(e) {
						this.logger_ = e;
						this.events_ = []
					}
					var t = e.prototype;
					t.add = function e(t, i, r) {
						if(i === void 0) {
							i = Date.now()
						}
						var a = n.mergeOptions(r, {
							name: t,
							time: i
						});
						this.events_.push(a);
						return i
					};
					t.record = function e(t, n) {
						var i = Date.now();
						this.add(t, i, {
							adState: f(n),
							isInAdState: g(n),
							networkState: se[n.networkState()],
							readyState: oe[n.readyState()]
						});
						return i
					};
					t.reset = function e() {
						this.events_.length = 0
					};
					t.filter = function e(t) {
						if(!i.isFn(t)) {
							return this.events_.filter(function(e) {
								return e.name === t
							})
						}
						return this.events_.filter(t)
					};
					t.map = function e(t) {
						return this.events_.map(t)
					};
					t.names = function e() {
						return this.map(function(e) {
							return e.name
						})
					};
					t.first = function e(t, n) {
						for(var i = 0; i < this.events_.length; i++) {
							var r = this.events_[i];
							if(!n && r.isInAdState) {
								continue
							}
							if(r.name === t) {
								return r.time
							}
						}
					};
					t.last = function e(t, n) {
						var i = this.events_.length;
						while(i--) {
							var r = this.events_[i];
							if(!n && r.isInAdState) {
								continue
							}
							if(r.name === t) {
								return r.time
							}
						}
					};
					return e
				}();
				var ue = function() {
					function e() {
						this.log_ = {}
					}
					var t = e.prototype;
					t.put = function e(t) {
						this.log_[t] = true
					};
					t.peek = function e() {
						return Object.keys(this.log_)
					};
					t.flush = function e() {
						var t = Object.keys(this.log_);
						this.log_ = {};
						return t
					};
					return e
				}();
				var ce = "3.9.1";
				var de = {
					production: "https://metrics.brightcove.com/v2/tracker",
					qa: "https://metrics.juju.qa.brightcove.com/v2/tracker",
					staging: "https://metrics.juju.staging.brightcove.com/v2/tracker"
				};
				var fe = function e(t, n, r) {
					Object.keys(r).forEach(function(e) {
						n[e] = String(n[e] || "");
						if(e === "accountId" && !i.isNonEmptyStr(n[e])) {
							n[e] = String(n.account || "")
						}
						if(!i.isNonEmptyStr(n[e])) {
							n[e] = t.getAttribute("data-" + r[e]) || ""
						}
					});
					return n
				};
				var pe = function t(n, r) {
					var a = fe(n.el(), r, {
							accountId: "account",
							applicationId: "application-id",
							embedId: "embed",
							playerId: "player",
							playerName: "name",
							usage: "usage"
						}),
						s = a.accountId,
						o = a.applicationId,
						l = a.embedId,
						u = a.playerId;
					if(!i.isNonEmptyStr(r.player)) {
						if(e.location.hostname === "players.api.brightcove.com") {
							r.player = "players.api.brightcove.com/" + u + "_" + l;
							return
						}
						r.player = "players.brightcove.com/" + s + "/" + u + "_" + l;
						if(o) {
							r.player += "/" + o
						}
					}
					if(o) {
						if(i.isNonEmptyStr(r.playerName)) {
							r.playerName += " - " + o
						} else {
							r.playerName = o
						}
					}
				};
				var he = function e(t) {
					return {
						computedHeight: t.currentHeight(),
						computedWidth: t.currentWidth(),
						height: t.height(),
						width: t.width()
					}
				};
				var ve = function t(i) {
					if(typeof i === "boolean") {
						n.log.warn("The __iframe__ option should only be used in tests!");
						return i
					}
					try {
						return e.parent !== e.self
					} catch(e) {
						return true
					}
				};
				var ge = function r(a) {
					var s = this;
					if(a === void 0) {
						a = {}
					}
					var o = false;
					var l = false;
					var u = {};
					a = n.mergeOptions(a);
					a.env = de.hasOwnProperty(a.env) ? a.env : "production";
					pe(this, a);
					var c = R(this);
					var d = new $(this, c);
					var h = new le(c);
					var y = new ue;
					var _ = i.isNonEmptyStr(a.usage) ? a.usage.split(",") : [];
					_.forEach(function(e) {
						y.put(e)
					});
					var b = new D(this, h, i.isNonEmptyStr(a.analyticsUrl) ? a.analyticsUrl : de[a.env], {
						logger: c,
						user: a.user,
						corpCommsApp: a.corpCommsApp,
						device: a.device
					});
					b.defaultParams(function() {
						var n = {
							account: a.accountId || null,
							destination: e.location.href,
							platform_version: a.platformVersion,
							player: a.player,
							player_name: a.playerName,
							source: t.referrer
						};
						if(ve(a.__iframe__)) {
							n.destination = t.referrer;
							if(i.isNonEmptyStr(a.referrer)) {
								n.source = a.referrer
							} else {
								try {
									n.source = e.parent.document.referrer
								} catch(e) {
									n.source = null
								}
							}
						}
						return n
					});
					X(this, "on", "pluginsetup:ads", J);
					this.bcAnalytics = {
						client: b,
						engager: d,
						history: h,
						settings: a,
						VERSION: ce
					};
					X(this, "on", "usage", function(e) {
						if(!e.name) {
							return n.log.warn("Ignored usage event without a `name` parameter")
						}
						y.put(e.name)
					});
					var S = function e() {
						y.put("unload");
						d.stop({
							fromUnload: true,
							ignoreAdState: true,
							reason: "unload called"
						})
					};
					X(e, "addEventListener", "unload", S);
					var T = function e(t) {
						if(!m(t, s)) {
							return
						}
						var n = h.first("loadstart", v(s));
						var i = h.first("play");
						var r = h.last("playing");
						if((i || r) && !d.isTracking() && !s.paused()) {
							d.start({
								period: {
									start: i || r
								},
								reason: "workflow detected that it is playing"
							})
						}
						if(b.timeOfImpression && b.timeOfView) {
							return
						}
						u.workflow = u.workflow || s.setTimeout(function() {
							u.workflow = null;
							n = h.first("loadstart", v(s));
							i = h.first("play");
							r = h.last("playing");
							if((n || i) && !b.timeOfImpression) {
								b.sendVideoImpression({
									params: {
										time: Math.min(n || Infinity, i || Infinity)
									}
								})
							}
							if(n && r && !b.timeOfView) {
								b.sendVideoView({
									params: {
										time: r
									}
								})
							}
						}, 1)
					};
					d.on("engagement", function(t) {
						var n = t.engagement,
							i = n.fromUnload,
							r = n.ignoreAdState,
							a = n.period,
							o = n.state;
						var l = g(s);
						var u = {
							useSendBeaconOnly: i,
							params: {
								time: a.end
							}
						};
						if(o.rangeExtras >= 2) {
							y.put("disco-engmnt")
						}
						var c = y.peek();
						if(c && c.length) {
							u.params.usage = c.map(e.encodeURIComponent).sort().join(",")
						}
						if(!l || r) {
							b.qos.append("frames", o.videoPlaybackQuality);
							if(b.sendVideoEngagement(a, o, u) && !s.paused()) {
								if(l) {
									return
								}
								y.flush();
								d.start({
									reason: "sent engagement and still playing"
								})
							}
						}
					});
					X(this, "on", "dispose", function() {
						W();
						y.put("disposed");
						d.dispose()
					});
					X(this, "on", re.concat(ne, te).concat("sourceunstable"), function(e) {
						h.record(e.type, s)
					});
					X(this, "on", re.concat("ads-ad-started"), function(e) {
						b.qos.append("event", g(s) ? "ad" : "content", e.type)
					});
					X(this, "on", ["loadedmetadata", "resize"], function() {
						b.qos.append("player", he(s))
					});
					X(this, "on", "fullscreenchange", function() {
						var e = Date.now();
						u.fullscreen = s.setTimeout(function() {
							u.fullscreen = null;
							b.qos.append("player", he(s), e)
						}, 500)
					});
					X(this, "on", "mediachange", function() {
						if(s.tech_.hls) {
							var e = s.tech_.hls.playlists.media();
							b.qos.append("bitrate", {
								bitrates: s.tech_.hls.bandwidth,
								playlists: e && e.attributes && e.attributes.BANDWIDTH
							})
						}
					});
					X(this, "on", "ready", function() {
						X(s.tech_, "on", "usage", function(e) {
							if(!e.name) {
								return n.log.warn("Ignored usage event without a `name` parameter")
							}
							y.put(e.name)
						});
						X(s.tech_, "on", "bandwidthupdate", function() {
							b.qos.append("bitrate", {
								bitrates: s.tech_.hls.bandwidth,
								throughput: Math.round(s.tech_.hls.throughput)
							})
						});
						X(s.tech_, "on", "liveresync", function() {
							s.trigger({
								type: "usage",
								name: "hls-live-resync"
							})
						});
						X(s.tech_, "on", "videounderflow", function() {
							s.trigger({
								type: "usage",
								name: "hls-video-underflow"
							})
						});
						X(s.tech_, "on", "licenserequestattempted", function() {
							h.add("licenserequestattempted")
						});
						X(s, "on", "loadedmetadata", function() {
							var e = s.textTracks();
							for(var t = 0; t < e.length; t++) {
								if(e[t].label === "segment-metadata") {
									(function() {
										var n = e[t];
										var i = void 0;
										X(n, "addEventListener", "cuechange", function() {
											var e = n.activeCues[0];
											if(e) {
												var t = s.tech_.hls.playlists.master.playlists[e.value.playlist];
												if(i !== t.uri) {
													i = t.uri;
													if(t.attributes && t.attributes.BANDWIDTH) {
														b.qos.append("bitrate", {
															rendered: t.attributes.BANDWIDTH
														})
													}
												}
											}
										})
									})()
								}
							}
						})
					});
					X(this, "on", "waiting", function(e) {
						if(!l && !g(s)) {
							d.stateBySrc().rebufferingCount++
						}
					});
					X(this, "on", "sourcechanged", function(e, t) {
						var n = t.interimEvents;
						var i = n[0].event;
						var r = function e() {
							if(!l && !g(s)) {
								d.recordState()
							}
						};
						if(t.from) {
							d.stop({
								reason: "changing sources",
								period: {
									end: n[0].time
								},
								ignoreAdState: true,
								src: t.from
							});
							d.clearStateBySrc(t.from)
						}
						o = false;
						l = false;
						b.resetTimesOf();
						h.reset();
						n.forEach(function(e) {
							return h.add(e.event.type, e.time)
						});
						T();
						X(s, "onPerSrc", "timeupdate", r);
						X(s, "onePerSrc", "sourceunstable", function() {
							if(f(s) === "content-resuming") {
								return
							}
							var e = s.currentSrc();
							d.stop({
								ignoreAdState: true,
								reason: "sourceunstable",
								src: e
							});
							if(!g(s)) {
								K(s, "off", "timeupdate", r)
							}
						});
						X(s, "onPerSrc", ["loadstart", "play", "playing"], T);
						X(s, "onPerSrc", ["pause", "ratechange"], function(e) {
							if(!l && !g(s) && !s.ended()) {
								d.stop({
									reason: 'saw "' + e.type + '"'
								});
								if(s.paused()) {
									X(s, "onePerSrc", "playing", function() {
										d.start({
											reason: "playback began after a pause"
										})
									})
								} else if(e.type === "ratechange") {
									u.ratechange = s.setTimeout(function() {
										u.ratechange = null;
										d.start({
											reason: "the playback rate changed"
										})
									}, 1)
								}
							}
						});
						X(s, "onPerSrc", "unstable", function() {
							if(!l && !g(s)) {
								l = true;
								d.stop({
									reason: "seeking"
								})
							}
						});
						X(s, "onPerSrc", "seek", function() {
							if(l && !g(s)) {
								l = false;
								d.start({
									reason: "stopped seeking"
								})
							}
						});
						X(s, "onePerSrc", "adstart", function() {
							if(!p(s)) {
								b.sendVideoImpression({
									params: {
										time: h.last("adstart", true) - 100
									}
								})
							}
						});
						X(s, "onPerSrc", "adstart", function() {
							o = s.ended();
							d.stop({
								ignoreAdState: true,
								period: {
									end: h.last("adstart", true)
								},
								reason: "saw adstart"
							})
						});
						X(s, "onePerSrc", "adend", function() {
							if(!s.paused() && !s.ended()) {
								T()
							}
						});
						X(s, "onPerSrc", "adend", function() {
							if(!o) {
								d.start({
									reason: 'saw "adend"'
								})
							}
						});
						X(s, "onePerSrc", "ended", function() {
							d.stop({
								reason: "end of content"
							});
							b.sendVideoComplete()
						})
					});
					X(this, "on", "catalog_request", function(e) {
						h.record(e.type, s);
						b.sendCatalogRequest(e.url)
					});
					X(this, "on", "catalog_request_error", function(e) {
						h.record(e.type, s);
						b.sendCatalogRequestError(e.url, {
							error: e.error,
							xhr: e.response
						})
					});
					X(this, "on", "catalog_response", function(e) {
						h.record(e.type, s);
						b.sendCatalogResponse(e.url, {
							xhr: e.response
						})
					});
					X(this, "on", "play", function(e) {
						if(g(s)) {
							return
						}
						var t = {
							params: {
								time: Date.now()
							}
						};
						if(s.perSourceBehaviors.isSrcStable()) {
							b.sendPlayRequest(t)
						} else {
							X(s, "one", "sourcechanged", function() {
								b.sendPlayRequest(t)
							})
						}
					});
					X(this, "on", "error", function() {
						if(!g(s)) {
							b.sendError()
						}
					});
					X(this, "on", "adstart", function(e) {
						b.sendAdStart();
						u.perSrcDisable = s.setTimeout(function() {
							u.perSrcDisable = null;
							s.perSourceBehaviors.disable()
						}, 1)
					});
					X(this, "on", "adend", function(e) {
						b.sendAdEnd();
						if(u.perSrcDisable) {
							s.clearTimeout(u.perSrcDisable)
						} else {
							s.perSourceBehaviors.enable()
						}
					});
					X(this, "on", "adtimeout", function() {
						b.sendAdTimeout()
					});
					X(this, "on", "ad-hard-timeout", function() {
						b.sendAdHardTimeout()
					});
					X(this, "on", ae, function(e) {
						A(b, e.type, Date.now())
					});
					b.qos.append("mr", a.mr);
					b.sendPlayerInit();
					b.sendError();
					X(this, "on", "ready", function() {
						b.defaultParams({
							feature: p(s) ? "adonly" : null
						});
						b.qos.append("performance", (e.location.href || "").split("?")[1]);
						b.qos.append("player", he(s));
						if("hidden" in t && "visibilityState" in t) {
							if(t.hidden) {
								s.trigger({
									type: "usage",
									name: "document-hidden"
								})
							}
							var n = function e() {
								s.trigger({
									type: "usage",
									name: "document-" + t.visibilityState
								})
							};
							X(t, "addEventListener", "visibilitychange", n)
						}
						if(t.querySelector(".bc-iframe")) {
							s.trigger({
								type: "usage",
								name: "iframe-embed"
							})
						} else {
							s.trigger({
								type: "usage",
								name: "inpage-embed"
							})
						}
						b.sendPlayerLoad({
							qos: b.qos.keys(),
							params: {
								usage: y.flush()
							}
						})
					})
				};
				ge.VERSION = ce;
				if(n.registerPlugin) {
					n.registerPlugin("bcAnalytics", ge)
				} else {
					n.plugin("bcAnalytics", ge)
				}
				return ge
			})
		})();
		(function() {
			if(videojs.getPlugin("errors")) {
				return
			}(function(e, t) {
				typeof exports === "object" && typeof module !== "undefined" ? module.exports = t(require("video.js"), require("global/document")) : typeof define === "function" && define.amd ? define(["video.js", "global/document"], t) : (e = e || self, e.videojsErrors = t(e.videojs, e.document))
			})(this, function(e, t) {
				"use strict";
				e = e && e.hasOwnProperty("default") ? e["default"] : e;
				t = t && t.hasOwnProperty("default") ? t["default"] : t;
				var n = "4.3.2";
				var i = e.getComponent("Flash");
				var r = !e.browser.IS_IPHONE;
				var a = e.registerPlugin || e.plugin;
				var s = {
					header: "",
					code: "",
					message: "",
					timeout: 45 * 1e3,
					dismiss: r,
					errors: {
						1: {
							type: "MEDIA_ERR_ABORTED",
							headline: "The video download was cancelled"
						},
						2: {
							type: "MEDIA_ERR_NETWORK",
							headline: "The video connection was lost, please confirm you are " + "connected to the internet"
						},
						3: {
							type: "MEDIA_ERR_DECODE",
							headline: "The video is bad or in a format that cannot be played on your browser"
						},
						4: {
							type: "MEDIA_ERR_SRC_NOT_SUPPORTED",
							headline: "This video is either unavailable or not supported in this browser"
						},
						5: {
							type: "MEDIA_ERR_ENCRYPTED",
							headline: "The video you are trying to watch is encrypted and we do not know how " + "to decrypt it"
						},
						unknown: {
							type: "MEDIA_ERR_UNKNOWN",
							headline: "An unanticipated problem was encountered, check back soon and try again"
						},
						"-1": {
							type: "PLAYER_ERR_NO_SRC",
							headline: "No video has been loaded"
						},
						"-2": {
							type: "PLAYER_ERR_TIMEOUT",
							headline: "Could not download the video"
						},
						PLAYER_ERR_DOMAIN_RESTRICTED: {
							headline: "This video is restricted from playing on your current domain"
						},
						PLAYER_ERR_IP_RESTRICTED: {
							headline: "This video is restricted at your current IP address"
						},
						PLAYER_ERR_GEO_RESTRICTED: {
							headline: "This video is restricted from playing in your current geographic region"
						},
						FLASHLS_ERR_CROSS_DOMAIN: {
							headline: "The video could not be loaded: crossdomain access denied."
						}
					}
				};
				var o = function r(a, o) {
					var l;
					var u;
					var c;
					var d = [];
					var f = function t(n) {
						o.errors = e.mergeOptions(o.errors, n);
						Object.keys(o.errors).forEach(function(e) {
							var t = o.errors[e];
							if(!t.type) {
								t.type = e
							}
						})
					};
					f();
					var p = function e() {
						a.clearTimeout(u);
						if(c) {
							c = false;
							a.removeClass("vjs-waiting")
						}
						u = a.setTimeout(function() {
							if(a.error() || a.paused() || a.ended()) {
								return
							}
							c = true;
							a.addClass("vjs-waiting")
						}, 1e3);
						a.clearTimeout(l);
						l = a.setTimeout(function() {
							if(a.error() || a.paused() || a.ended()) {
								return
							}
							a.error({
								code: -2,
								type: "PLAYER_ERR_TIMEOUT"
							})
						}, o.timeout);
						if(a.error() && a.error().code === -2) {
							a.error(null)
						}
					};
					var h = function e() {
						var t;
						while(d.length) {
							t = d.shift();
							a.off(t[0], t[1])
						}
						a.clearTimeout(l);
						a.clearTimeout(u)
					};
					var v = function e(t, n) {
						var i = function e() {
							if(!a.error()) {
								var t = a.$(".vjs-tech");
								if(t && t.type === "application/x-shockwave-flash" && !t.vjs_getProperty) {
									a.error({
										code: -2,
										type: "PLAYER_ERR_TIMEOUT"
									});
									return
								}
								if(a.paused()) {
									return p()
								}
								if(a.ended()) {
									return p()
								}
							}
							n.call(this)
						};
						a.on(t, i);
						d.push([t, i])
					};
					var g = function e() {
						var t = 0;
						h();
						p();
						v(["timeupdate", "adtimeupdate"], function() {
							var e = a.currentTime();
							if(e !== t) {
								t = e;
								p()
							}
						})
					};
					var m = function e() {
						if(!a.currentSrc()) {
							a.error({
								code: -1,
								type: "PLAYER_ERR_NO_SRC"
							})
						}
					};
					var y = function n() {
						var r = "";
						var s = a.error();
						var l = t.createElement("div");
						var u = "";
						if(!s) {
							return
						}
						s = e.mergeOptions(s, o.errors[s.code || s.type || 0]);
						if(s.message) {
							r = '<div class="vjs-errors-details">' + a.localize("Technical details") + '\n        : <div class="vjs-errors-message">' + a.localize(s.message) + "</div>\n        </div>"
						}
						if(s.code === 4 && i && !i.isSupported()) {
							var c = a.localize("If you are using an older browser please try upgrading or installing Flash.");
							r += '<span class="vjs-errors-flashmessage">' + c + "</span>"
						}
						var d = a.getChild("errorDisplay");
						l.className = "vjs-errors-dialog";
						l.id = "vjs-errors-dialog";
						u = '<div class="vjs-errors-content-container">\n      <h2 class="vjs-errors-headline">' + this.localize(s.headline) + '</h2>\n        <div class="vjs-errors-code"><b>' + this.localize("Error Code") + ":</b> " + (s.type || s.code) + "</div>\n        " + r + "\n      </div>";
						var f = d.closeable(!("dismiss" in s) || s.dismiss);
						if(f) {
							u += '<div class="vjs-errors-ok-button-container">\n          <button class="vjs-errors-ok-button">' + this.localize("OK") + "</button>\n        </div>";
							l.innerHTML = u;
							d.fillWith(l);
							d.contentEl().firstChild.appendChild(d.getChild("closeButton").el());
							var p = d.el().querySelector(".vjs-errors-ok-button");
							a.on(p, "click", function() {
								d.close()
							})
						} else {
							l.innerHTML = u;
							d.fillWith(l)
						}
						if(a.currentWidth() <= 600 || a.currentHeight() <= 250) {
							d.addClass("vjs-xs")
						}
						d.one("modalclose", function() {
							return a.error(null)
						})
					};
					var _ = function e() {
						h();
						a.removeClass("vjs-errors");
						a.off("play", g);
						a.off("play", m);
						a.off("dispose", e);
						a.off(["aderror", "error"], y)
					};
					var b = function t(n) {
						_();
						r(a, e.mergeOptions(s, n))
					};
					b.extend = function(e) {
						return f(e)
					};
					b.getAll = function() {
						return e.mergeOptions(o.errors)
					};
					b.timeout = function(e) {
						if(typeof e === "undefined") {
							return o.timeout
						}
						if(e !== o.timeout) {
							o.timeout = e;
							if(!a.paused()) {
								g()
							}
						}
					};
					b.disableProgress = function() {};
					a.on("play", g);
					a.on("play", m);
					a.on("dispose", _);
					a.on(["aderror", "contenterror", "error"], y);
					a.ready(function() {
						a.addClass("vjs-errors")
					});
					if(!a.paused()) {
						g()
					}
					b.VERSION = n;
					a.errors = b
				};
				var l = function t(n) {
					o(this, e.mergeOptions(s, n))
				};
				["extend", "getAll"].forEach(function(t) {
					l[t] = function() {
						e.log.warn("The errors." + t + "() method is not available until the plugin has been initialized!")
					}
				});
				l.VERSION = n;
				a("errors", l);
				return l
			})
		})();
		(function() {
			if(videojs.getPlugin("catalog")) {
				return
			}(function(e, t) {
				typeof exports === "object" && typeof module !== "undefined" ? module.exports = t(require("video.js"), require("@brightcove/loscore"), require("global/window"), require("global/document")) : typeof define === "function" && define.amd ? define(["video.js", "@brightcove/loscore", "global/window", "global/document"], t) : e.videojsBcCatalog = t(e.videojs, e.videojs.bc_, e.window, e.document)
			})(this, function(e, t, n, i) {
				"use strict";
				e = e && e.hasOwnProperty("default") ? e["default"] : e;
				t = t && t.hasOwnProperty("default") ? t["default"] : t;
				n = n && n.hasOwnProperty("default") ? n["default"] : n;
				i = i && i.hasOwnProperty("default") ? i["default"] : i;
				var r = "3.32.3";
				var a = "video";
				var s = "playlist";
				var o = "search";
				var l = "lazySequence";
				var u = "related";
				var c = [{
					attr: "data-video-id",
					query: "videoId",
					config: "videoId",
					type: a
				}, {
					attr: "data-playlist-id",
					query: "playlistId",
					config: "playlistId",
					type: s
				}, {
					attr: "data-catalog-search",
					query: "catalogSearch",
					config: "search",
					type: o
				}, {
					attr: "data-catalog-sequence",
					query: "catalogSequence",
					config: "sequence",
					type: l
				}];
				var d = function e(t, n, i) {
					for(var r = 0; r < c.length; r++) {
						var a = c[r];
						var o = a[t];
						if(n[o]) {
							var l = {
								id: n[o],
								type: a.type
							};
							if(l.type === s) {
								l.playlistVideoId = i
							}
							return l
						}
					}
				};
				var f = function n(i, r, a) {
					var s = r.options_;
					var u = Boolean(r.el().ownerDocument.querySelector(".bc-iframe"));
					var f = t.qs();
					a = a ? f.parse(a) : f.search;
					c.concat({
						query: "playlistVideoId"
					}).forEach(function(e) {
						var t = e.query;
						if(Array.isArray(a[t])) {
							a[t] = a[t].pop()
						}
					});
					if(c.filter(function(e) {
							return !!i[e.config]
						}).length > 1 || c.filter(function(e) {
							return !!s[e.attr]
						}).length > 1) {
						r.error({
							headline: "Bad Request: Multiple catalog media queries provided. Please only provide one",
							type: "PLAYER_ERR_CONFLICTING_DATA",
							code: -3,
							message: "Too many catalog media parameters were provided in this player. " + "Please use only one of the following: videoId, playlistId, catalogSequence, or catalogSearch."
						});
						return
					}
					var p = u && d("query", a, a.playlistVideoId) || d("attr", s, s["data-playlist-video-id"] || a.playlistVideoId) || d("config", i, a.playlistVideoId || i.playlistVideoId);
					if(!p) {
						return
					}
					if(typeof p.id === "string" && (p.type === o || p.type === l)) {
						var h = p.id;
						try {
							p.id = JSON.parse(h)
						} catch(t) {
							if(p.type === l) {
								e.log.error("sequence must be valid JSON or an object", t);
								return
							}
						}
						if(!t.isObj(p.id) && !Array.isArray(p.id)) {
							p.id = h
						}
					}["adConfigId", "deliveryConfigId"].forEach(function(e) {
						var n = i[e];
						if(!t.isNonEmptyStr(n)) {
							return
						}
						if(t.isObj(p.id)) {
							p.id[e] = n
						} else if(Array.isArray(p.id)) {
							p.id.forEach(function(t) {
								t[e] = n
							})
						} else {
							p[e] = i[e]
						}
					});
					return p
				};
				var p = function e(n) {
					if(!t.isFn(n.errors) || !t.isFn(n.errors.extend)) {
						return
					}
					n.errors.extend({
						VIDEO_CLOUD_ERR_ACCOUNT_NOT_FOUND: {
							headline: "The Video Cloud account was not found."
						},
						VIDEO_CLOUD_ERR_RESOURCE_NOT_FOUND: {
							headline: "The Video Cloud resource was not found."
						},
						VIDEO_CLOUD_ERR_VIDEO_NOT_FOUND: {
							headline: "The Video Cloud video was not found."
						},
						VIDEO_CLOUD_ERR_NOT_PLAYABLE: {
							headline: "The Video Cloud video is not playable."
						},
						VIDEO_CLOUD_ERR_AD_CONFIG_ID_NOT_FOUND: {
							headline: "The Video Cloud SSAI ad config id was not found."
						},
						VIDEO_CLOUD_ERR_TOKEN_REQUIRED: {
							headline: "A JWT is required, but was not provided."
						},
						VIDEO_CLOUD_ERR_TOKEN_INVALID: {
							headline: "The JWT provided did not pass validation."
						},
						VIDEO_CLOUD_ERR_SERVER: {
							headline: "There was a server error that prevented playback."
						}
					})
				};
				var h = {
					400: {
						AD_CONFIG_NOT_FOUND: "VIDEO_CLOUD_ERR_AD_CONFIG_ID_NOT_FOUND"
					},
					401: {
						TOKEN_REQUIRED: "VIDEO_CLOUD_ERR_TOKEN_REQUIRED",
						TOKEN_VALIDATION: "VIDEO_CLOUD_ERR_TOKEN_INVALID"
					},
					403: {
						ACCESS_DENIED: {
							DOMAIN: "PLAYER_ERR_DOMAIN_RESTRICTED",
							CLIENT_IP: "PLAYER_ERR_IP_RESTRICTED",
							CLIENT_GEO: "PLAYER_ERR_GEO_RESTRICTED",
							OFFERS: "PLAYER_ERR_OFFER_RESTRICTED",
							TAGS: "PLAYER_ERR_TAG_RESTRICTED"
						},
						VIDEO_NOT_PLAYABLE: "VIDEO_CLOUD_ERR_NOT_PLAYABLE",
						PLAYLIST_NOT_PLAYABLE: "VIDEO_CLOUD_ERR_NOT_PLAYABLE"
					},
					404: {
						ACCOUNT_NOT_FOUND: "VIDEO_CLOUD_ERR_ACCOUNT_NOT_FOUND",
						RESOURCE_NOT_FOUND: "VIDEO_CLOUD_ERR_RESOURCE_NOT_FOUND",
						VIDEO_NOT_FOUND: "VIDEO_CLOUD_ERR_VIDEO_NOT_FOUND",
						PLAYLIST_NOT_FOUND: "VIDEO_CLOUD_ERR_RESOURCE_NOT_FOUND"
					},
					500: {
						SERVER_ERROR: "VIDEO_CLOUD_ERR_SERVER"
					},
					502: {
						SERVER_ERROR: "VIDEO_CLOUD_ERR_SERVER",
						VIDEO_RETRIEVE_FAILURE: "VIDEO_CLOUD_ERR_SERVER",
						VIDEO_URLS_RETRIEVE_FAILURE: "VIDEO_CLOUD_ERR_SERVER",
						PLAYLIST_RETRIEVE_FAILURE: "VIDEO_CLOUD_ERR_SERVER",
						ACCOUNT_RETRIEVE_FAILURE: "VIDEO_CLOUD_ERR_SERVER",
						PLAYBACK_RIGHT_RETRIEVE_FAILURE: "VIDEO_CLOUD_ERR_SERVER",
						LICENSE_RETRIEVE_FAILURE: "VIDEO_CLOUD_ERR_SERVER",
						OFFERS_RETRIEVE_FAILURE: "VIDEO_CLOUD_ERR_SERVER",
						RIGHTS_RETRIEVE_FAILURE: "VIDEO_CLOUD_ERR_SERVER"
					},
					503: {
						SERVICE_UNAVAILABLE: "VIDEO_CLOUD_ERR_SERVER"
					},
					504: {
						SERVER_TIMEOUT: "VIDEO_CLOUD_ERR_SERVER"
					}
				};
				var v = function e(n, i) {
					var r = i.shift();
					if(t.isNonEmptyStr(n[r])) {
						return n[r]
					}
					if(!r || !n[r]) {
						return "unknown"
					}
					return e(n[r], i)
				};
				var g = function e(t, n) {
					n = Array.isArray(n) ? n[0] : n || {};
					return {
						code: v(h, [t, n.error_code, n.error_subcode])
					}
				};
				var m = function t(n, i, r) {
					if(r.embedHasPoster) {
						n.poster = i.options_.poster
					}
					if(r.embedHasSources) {
						n.sources = i.options_.sources
					}
					if(r.embedHasTracks) {
						n.textTracks = i.options_.tracks
					}
					if(n.textTracks && n.textTracks.length > 0 && e.browser.IS_ANY_SAFARI) {
						i.$(".vjs-tech").setAttribute("crossorigin", "anonymous")
					}
					return n
				};
				var y = function e(t, n) {
					return function(e, i) {
						if(e) {
							e.data = i;
							t.catalog.error = e;
							t.error(g(e.status, i));
							return t.trigger("bc-catalog-error")
						}
						t.ready(function() {
							return t.catalog.load(n(i))
						})
					}
				};
				var _ = function t(n, i, r) {
					if(n === a) {
						return y(i, function(e) {
							return m(e, i, r)
						})
					}
					return y(i, function(t) {
						var a = m({}, i, r);
						if(Array.isArray(t.videos)) {
							var o = t.videos[0] || {};
							t.videos[0] = e.mergeOptions(o, a, {
								rawItem: o
							})
						} else {
							t.videos = [a]
						}
						if(r.playlistVideoId && n === s) {
							for(var l = 0; l < t.length; l++) {
								if(t[l].id === r.playlistVideoId || "ref:" + t[l].referenceId === r.playlistVideoId) {
									t.startingIndex = l;
									break
								}
							}
						}
						return t
					})
				};
				var b = function e() {
					return Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 2
				};
				var A = function e(t, n) {
					var i = t.cuePoints;
					var r = i[n];
					var a;
					for(n++; n < i.length; n++) {
						if(i[n].time > r.time) {
							a = i[n];
							break
						}
					}
					var s = isFinite(t.duration) ? t.duration : b();
					r.startTime = r.time;
					if(a && a.time < s) {
						r.endTime = a.time
					} else {
						r.endTime = s
					}
					return r
				};
				var S = function e(t) {
					var n = t.remoteTextTracks();
					if(n) {
						var i = n.length;
						while(i--) {
							t.removeRemoteTextTrack(n[i])
						}
					}
					var r = t.textTracks();
					if(r) {
						var a = r.length;
						while(a--) {
							var s = r[a];
							if(s.kind === "metadata" && s.cues) {
								var o = s.cues.length;
								while(o--) {
									s.removeCue(s.cues[o])
								}
							}
							s.mode = "disabled"
						}
					}
				};
				var T = function e(t, i) {
					S(t);
					if(!i.cuePoints) {
						return
					}
					var r = t.mediaCuePointsTrack();
					var a = n.VTTCue || n.vttjs && n.vttjs.VTTCue || n.TextTrackCue;
					for(var s = 0; s < i.cuePoints.length; s++) {
						var o = i.cuePoints[s];
						var l = new a(o.startTime, o.endTime, o.type);
						l.originalCuePoint = o;
						r.addCue(l)
					}
					r.mode = "hidden"
				};
				var k = function e(t, n, i) {
					var r = 0;
					for(; r < t.length; r++) {
						if(n(t[r])) {
							return t[r]
						}
					}
					return i
				};

				function E(e) {
					var t = E.windowLocationProtocol();
					var n = function e(n) {
						return n.src && n.src.indexOf(t) === 0
					};
					if(e && e.length && e.length > 0) {
						return k(e, n, e[0]).src
					}
				}
				E.windowLocationProtocol = function() {
					return n.location.protocol
				};
				var P = function e(t, n) {
					return "https://" + t + ".api." + (n ? n + "." : "") + "brightcove.com/playback/v1/"
				};
				var C = {
					production: {
						papi: P("edge"),
						epa: P("edge-auth")
					},
					qa: {
						papi: P("edge", "qa"),
						epa: P("edge-auth", "qa")
					},
					staging: {
						papi: P("edge", "staging"),
						epa: P("edge-auth", "staging")
					}
				};
				var w = function e(t) {
					return n.encodeURIComponent(t)
				};
				var j = function e(t) {
					return typeof t === "string" && /^BCpk/.test(t)
				};
				var I = function e(n) {
					var i = {
						ad_config_id: "adConfigId",
						config_id: "deliveryConfigId"
					};
					var r = ["ad_config_id", "config_id", "tveToken"];
					if(n.type !== a) {
						r.push("limit");
						r.push("offset")
					}
					if(n.type === o) {
						r.push("q");
						r.push("sort")
					}
					var s = {};
					r.forEach(function(e) {
						var t = i[e] || e;
						if(n[t]) {
							s[e] = n[t]
						}
					});
					var l = t.qs().stringify(s);
					return l ? "?" + l : ""
				};
				var L = function e(n) {
					var i = n.accountId,
						r = n.env,
						a = n.type;
					if(!r) {
						r = "production"
					}
					var l;
					if(t.isNonEmptyStr(n.baseUrl)) {
						l = n.baseUrl
					} else if(j(n.policyKey)) {
						l = C[r].papi
					} else {
						l = C[r].epa
					}
					if(l.slice(-1) === "/") {
						l = l.slice(0, -1)
					}
					var c;
					c = l + "/accounts/" + w(i) + "/" + (a === s ? "playlists" : "videos");
					if(a !== o) {
						c += "/" + w(n.id)
					}
					if(a === u) {
						c += "/related"
					}
					c += I(n);
					return c
				};
				var O = function n(i, r, l) {
					if(l === void 0) {
						l = function e() {}
					}
					var c = r.accountId,
						d = r.deliveryConfigId,
						f = r.adConfigId,
						p = r.id,
						h = r.bcovAuthToken,
						v = r.policyKey,
						g = r.q,
						m = r.type;
					if(!c || !m) {
						return l(new Error("accountId and type are required"))
					}
					if(m === o && !g) {
						return l(new Error("q is required when performing a search"))
					} else if(m !== o && !p) {
						return l(new Error("id is required when getting a video or playlist"))
					}
					var y = L(r);
					var _ = function e(n, r) {
						i.trigger(t.assign({
							type: "catalog_" + n,
							accountId: c,
							deliveryConfigId: d,
							adConfigId: f,
							playlistId: m === s ? p : undefined,
							related: m === u ? p : undefined,
							search: m === o ? g : undefined,
							url: y,
							videoId: m === a ? p : undefined
						}, r))
					};
					var b = function e(t, n, i) {
						return _("request_error", {
							error: t,
							response: n,
							body: i
						})
					};
					_("request");
					var A = {};
					if(j(v)) {
						A.Accept = "application/json;pk=" + v
					} else if(h) {
						A.Authorization = "Bearer " + h
					}
					var S = e.xhr({
						headers: A,
						json: true,
						url: y
					}, function(e, t, n) {
						if(e) {
							b(e, S, n);
							return l(e, n)
						}
						if(S.status >= 400) {
							b(new Error("Request Failed"), S, n);
							return l(S, n)
						}
						_("response", {
							response: S
						});
						l(null, n)
					});
					var T = S.onabort.bind(S);
					S.onabort = function() {
						var e = new Error("Request Aborted");
						T();
						b(e, S, null);
						return l(e, null)
					};
					return S
				};
				var N = function e() {
					var t = n.GestureEvent;
					return !!(t && n.WebKitMediaKeys && n.WebKitMediaKeys.isTypeSupported("com.apple.fps.1_0", "video/mp4"))
				};
				var x = function t() {
					return n.navigator.requestMediaKeySystemAccess && !e.browser.IS_IOS && (e.browser.IS_FIREFOX || e.browser.IS_CHROME)
				};
				var D = function e(t) {
					return t === "application/vnd.apple.mpegurl" || t === "application/x-mpegURL"
				};
				var R = function t(n) {
					var i = e.parseUrl(n);
					return i.hostname.indexOf("boltdns.net") !== -1 && i.pathname.indexOf("/aes128/") !== -1
				};
				var U = function e(t) {
					return t.isSecureContext || !/^http:/.test(t.location.href)
				};
				var M = {
					isSafariWithFairplaySupport: N,
					isBrowserWithWidevineSupport: x,
					isHlsType: D,
					isBoltEncryptedHls: R,
					preferHttps: U
				};
				var B = "https://fps.brightcove.com/v1/application_certificate";
				var F = "com.apple.fps.1_0";
				var V = function e(t) {
					return n.btoa(String.fromCharCode.apply(null, t))
				};
				var q = function e(t) {
					return String.fromCharCode.apply(null, new Uint16Array(t.buffer))
				};
				var H = function e(t) {
					var n = t.source,
						i = t.publisherId,
						r = t.applicationId;
					var a = n.key_systems[F].certificate_url;
					if(a) {
						return a
					}
					if(r && i) {
						return B + "/" + i + "/" + r
					}
					return null
				};
				var G = function t(n, i) {
					var r = H({
						source: n.source,
						publisherId: n.publisherId,
						applicationId: n.applicationId
					});
					e.xhr({
						uri: r,
						responseType: "arraybuffer"
					}, function(e, t, n) {
						if(e) {
							i(e);
							return
						}
						i(null, new Uint8Array(n))
					})
				};
				var Y = function e(t, n) {
					return q(n).split("//")[1]
				};
				var z = function t(n) {
					return function(t, i, r, a) {
						var s = {
							"Content-Type": "application/json",
							Accept: "application/octet-stream"
						};
						if(t.emeHeaders && t.emeHeaders["BCOV-Auth"]) {
							s["BCOV-Auth"] = t.emeHeaders["BCOV-Auth"]
						}
						e.xhr({
							uri: n,
							method: "POST",
							responseType: "arraybuffer",
							json: {
								publisher_id: t.publisherId,
								application_id: t.applicationId,
								key_id: i.split("/")[3],
								server_playback_context: V(r)
							},
							headers: s
						}, function(e, t, n) {
							if(e) {
								a(e);
								return
							}
							if(t.statusCode >= 400 && t.statusCode <= 599) {
								a({});
								return
							}
							a(null, n)
						})
					}
				};
				var K = {
					getCertificateUri: H,
					getCertificate: G,
					getContentId: Y,
					createGetLicenseFunc: z,
					base64EncodeUint8Array: V,
					FAIRPLAY_KEY_SYSTEM: F
				};
				var W = function e(t) {
					if(t === void 0) {
						t = []
					}
					return t.filter(function(e) {
						return e.keySystems && e.keySystems[K.FAIRPLAY_KEY_SYSTEM]
					})
				};
				var X = function e(t, n, i) {
					var r = W(n);
					if(!r.length || !t.eme) {
						i();
						return
					}
					var a = t.eme.options || {};
					var s = 0;
					var o = [];
					var l = {};
					var u = function e(t) {
						var n = r[t];
						var u = K.getCertificateUri({
							source: n,
							publisherId: a.publisherId,
							applicationId: a.applicationId
						});
						if(!u) {
							return "continue"
						}
						if(l[u]) {
							l[u].push(n);
							return "continue"
						}
						s++;
						l[u] = [n];
						n.keySystems[K.FAIRPLAY_KEY_SYSTEM].getCertificate({
							source: n,
							publisherId: a.publisherId,
							applicationId: a.applicationId
						}, function(e, t) {
							if(e) {
								o.push({
									message: "Unable to resolve FairPlay certificate",
									error: e
								})
							} else {
								var n = l[u];
								for(var r = 0; r < n.length; r++) {
									var a = n[r];
									a.keySystems[K.FAIRPLAY_KEY_SYSTEM].getCertificate = function(e, n) {
										n(null, t)
									}
								}
							}
							s--;
							if(!s) {
								if(o.length) {
									i(o);
									return
								}
								i()
							}
						})
					};
					for(var c = 0; c < r.length; c++) {
						var d = u(c);
						if(d === "continue") continue
					}
				};
				var J = function e(t) {
					if(!M.isHlsType(t.type) || !t.key_systems || !t.key_systems[K.FAIRPLAY_KEY_SYSTEM]) {
						return null
					}
					var n = t.key_systems[K.FAIRPLAY_KEY_SYSTEM];
					var i = n.key_request_url;
					var r = {};
					r[K.FAIRPLAY_KEY_SYSTEM] = {
						getCertificate: K.getCertificate,
						getLicense: K.createGetLicenseFunc(i),
						getContentId: K.getContentId
					};
					return r
				};
				var Q = function e(t) {
					return J(t)
				};
				var Z = {
					getKeySystemOptions: Q,
					getFairPlaySources: W,
					resolveFairPlayCertificates: X
				};
				var $ = function e(t, n) {
					n = n || t && t.mediainfo || {};
					return t && t.hasPlugin && t.hasPlugin("vr") && n && n.projection
				};
				var ee = 50 * 1024 * 1024;
				var te = 3 * 1024 * 1024;
				var ne = .5 * 1024 * 1024;
				var ie = {
					http: {
						nativeHls: {
							http: {
								"application/vnd.apple.mpegurl": 1,
								"video/mp4": 5,
								"application/dash+xml": 3
							},
							https: {
								"application/vnd.apple.mpegurl": 2,
								"video/mp4": 6,
								"application/dash+xml": 4
							}
						},
						noNativeHls: {
							http: {
								"application/vnd.apple.mpegurl": 1,
								"video/mp4": 5,
								"application/dash+xml": 3
							},
							https: {
								"application/vnd.apple.mpegurl": 2,
								"video/mp4": 6,
								"application/dash+xml": 4
							}
						},
						preferMp4: {
							http: {
								"application/vnd.apple.mpegurl": 3,
								"video/mp4": 1,
								"application/dash+xml": 5
							},
							https: {
								"application/vnd.apple.mpegurl": 4,
								"video/mp4": 2,
								"application/dash+xml": 6
							}
						}
					},
					https: {
						nativeHls: {
							http: {
								"application/vnd.apple.mpegurl": 2,
								"video/mp4": 6,
								"application/dash+xml": 5
							},
							https: {
								"application/vnd.apple.mpegurl": 1,
								"video/mp4": 4,
								"application/dash+xml": 3
							}
						},
						noNativeHls: {
							http: {
								"application/vnd.apple.mpegurl": 5,
								"video/mp4": 4,
								"application/dash+xml": 6
							},
							https: {
								"application/vnd.apple.mpegurl": 1,
								"video/mp4": 3,
								"application/dash+xml": 2
							}
						},
						preferMp4: {
							http: {
								"application/vnd.apple.mpegurl": 5,
								"video/mp4": 4,
								"application/dash+xml": 6
							},
							https: {
								"application/vnd.apple.mpegurl": 2,
								"video/mp4": 1,
								"application/dash+xml": 3
							}
						}
					}
				};
				var re = {
					1: 3,
					2: 3.2,
					3: 4.2,
					4: 5,
					5: 6,
					6: 7,
					7: 8
				};
				var ae = function e(t, n) {
					return n.type === "application/vnd.apple.mpegurl" && n.key_systems && M.isSafariWithFairplaySupport() && t.eme && t.eme.options
				};
				var se = function e(t, n) {
					return n.type === "application/vnd.apple.mpegurl" && n.key_systems && M.isBrowserWithWidevineSupport() && t.eme && t.eme.options
				};
				var oe = function t(n, i, r) {
					if(!i.src) {
						return 9999
					}
					if(i.type === "application/vnd.apple.mpegurl" && i.key_systems && (i.key_systems["com.apple.fps.1_0"] && !ae(r, i) || i.key_systems["com.widevine.alpha"] && !se(r, i))) {
						return 9999
					}
					if(i.profiles && i.profiles.match(/hbbtv/i)) {
						return 9999
					}
					if(e.browser.IS_IOS && i.type === "application/vnd.apple.mpegurl" && re[i.ext_x_version] > parseFloat(e.browser.IOS_VERSION)) {
						return 9999
					}
					n = n[/^[^:]*/.exec(i.src)];
					if(!n) {
						return 9999
					}
					return n[i.type] || 9999
				};
				var le = function t(n, i, r, a) {
					var s = ue.preferHttps() ? ie.https : ie.http;
					var o;
					var l;
					if($(n, i)) {
						o = ee
					} else if(e.browser.IS_IOS || e.browser.IS_ANDROID) {
						o = ne
					} else {
						o = te
					}
					if(ue.preferMp4(n, i)) {
						s = s.preferMp4
					} else if(ue.supportsNativeHls()) {
						s = s.nativeHls
					} else {
						s = s.noNativeHls
					}
					l = oe(s, r, n) - oe(s, a, n);
					if(l) {
						return l
					}
					if(r.type === "video/mp4" && a.type === "video/mp4") {
						if(r.avg_bitrate && a.avg_bitrate) {
							return Math.abs(r.avg_bitrate - o) - Math.abs(a.avg_bitrate - o)
						}
						if(r.avg_bitrate || a.avg_bitrate) {
							l = r.avg_bitrate ? -1 : 1
						}
					}
					if(r.type === "application/vnd.apple.mpegurl" && a.type === "application/vnd.apple.mpegurl") {
						if(r.ext_x_version && a.ext_x_version) {
							return a.ext_x_version - r.ext_x_version
						}
						if(r.ext_x_version || a.ext_x_version) {
							l = r.ext_x_version ? -1 : 1
						}
					}
					return l
				};

				function ue(n, i, r) {
					if(r === void 0) {
						r = {}
					}
					var a = i.sources || [];
					var s = [];
					var o = r,
						l = o.bcovAuthToken;
					if(l && !t.isNonEmptyStr(l)) {
						e.log.error("The bcovAuthToken catalog property must be a string");
						l = null
					}
					for(var u = 0; u < a.length; u++) {
						var c = a[u];
						if(l && c.key_systems) {
							c.emeHeaders = {
								"BCOV-Auth": l
							}
						}
						if(c.src && c.container === "MP4") {
							c.type = "video/mp4"
						} else if(c.src && (c.container === "M2TS" || M.isHlsType(c.type))) {
							c.type = "application/vnd.apple.mpegurl";
							if(ae(n, c)) {
								c.keySystems = Z.getKeySystemOptions(c)
							}
							if(M.isBoltEncryptedHls(c.src) && l) {
								if(c.vmap && n.hasPlugin("ssai")) {
									c.bcovAuthToken = l
								} else {
									var d = e.parseUrl(c.src);
									var f = "bcov_auth=" + l;
									if(!d.search) {
										f = "?" + f
									} else if(!(d.search[d.search.length - 1] === "&")) {
										f = "&" + f
									}
									c.src += f
								}
							}
						}
						s.push(c)
					}
					return s.sort(le.bind(null, n, i))
				}
				ue.supportsNativeHls = function() {
					var t = i.createElement("video");
					var n = e.options.hls && e.options.hls.overrideNative;
					if(t && t.canPlayType) {
						return !n && /probably|maybe/i.test(t.canPlayType("application/vnd.apple.mpegurl"))
					}
					return false
				};
				ue.preferHttps = function() {
					return M.preferHttps(n)
				};
				ue.preferMp4 = function(t, n) {
					return e.browser.IS_ANDROID && e.browser.ANDROID_VERSION < 5 || $(t, n)
				};
				var ce = {};
				var de = function e(n, i, r) {
					var a = t.assign({}, ce);
					if(n && !t.isObj(n)) {
						a.id = n
					} else {
						t.assign(a, n);
						if(t.isObj(n.id)) {
							t.assign(a, n.id);
							if(!n.id.hasOwnProperty("id")) {
								delete a.id
							}
						}
					}
					if(typeof i === "string") {
						a.type = i
					}
					if(a.type === o) {
						if(!a.q) {
							a.q = a.id
						}
						delete a.id
					}
					if(typeof n.deliveryConfigId === "string") {
						a.deliveryConfigId = n.deliveryConfigId
					}
					if(typeof r === "string") {
						a.adConfigId = r
					}
					if((a.type === s || a.type === o) && a.limit === undefined) {
						a.limit = "100"
					}
					return a
				};
				var fe = function e(n) {
					if(n === null) {
						ce = {}
					} else {
						t.assign(ce, n)
					}
				};
				var pe = function e(n) {
					return t.isObj(ce) && ce[n] || undefined
				};
				var he = /([A-Za-z0-9])_([A-Za-z0-9])/g;
				var ve = function e(t) {
					return t.replace(he, function(e, t, n) {
						return t + n.toUpperCase()
					})
				};
				var ge = function t(n) {
					var i = e.mergeOptions(n);
					Object.keys(i).filter(function(e) {
						return e.match(he)
					}).forEach(function(e) {
						i[ve(e)] = i[e]
					});
					return i
				};
				var me = function e(t, n) {
					if(!n) {
						return
					}
					t.mediainfo = ge(n);
					var r = Boolean(t.el().ownerDocument.querySelector(".bc-iframe"));
					var a = t.mediainfo.name;
					if(r && a) {
						i.title = a
					}
				};
				var ye = function e(t, n) {
					if(!n) {
						return
					}
					t.playlistinfo = ge(n);
					delete t.playlistinfo.videos
				};
				var _e = function e(t, n) {
					return(t.type === "application/vnd.apple.mpegurl" || t.type === "application/dash+xml") && n.toLowerCase() === "html5"
				};

				function be(n) {
					var i = this;
					var r = {
						accountId: i.options_["data-account"],
						policyKey: i.options_["data-policy-key"],
						bcovAuthToken: i.options_["data-bcov-auth-token"]
					};
					var u = Object.keys(r).reduce(function(e, t) {
						if(r[t]) {
							e[t] = r[t]
						}
						return e
					}, {});
					["accountId", "baseUrl", "bcovAuthToken", "env", "policyKey"].forEach(function(e) {
						if(n.hasOwnProperty(e)) {
							u[e] = n[e]
						}
					});
					fe(u);
					p(i);
					i.on("loadstart", function() {
						if(!t.isFn(i.playlist) || !i.playlist() || !i.playlist().length) {
							return
						}
						me(i, i.playlist()[i.playlist.indexOf(i.currentSrc())])
					});
					i.on("dispose", function() {
						return S(i)
					});
					var c = function t(n, r) {
						var a = Z.getFairPlaySources(n);
						if(!a.length) {
							r();
							return
						}
						Z.resolveFairPlayCertificates(i, a, function(t) {
							if(t) {
								e.log("Unable to resolve FairPlay certificates", t)
							}
							r()
						})
					};
					var d = function t(n) {
						if(!i.hasPlugin || !i.hasPlugin("ssai") || !n) {
							return n
						}
						return n.map(function(t) {
							if(t.vmap) {
								t.type = e.getPlugin("ssai").MIME_TYPE;
								t.originalHlsSource = t.src;
								t.src = t.vmap
							}
							return t
						})
					};
					var h = function e(t) {
						var n = function e() {
							var n = false;
							me(i, t);
							if($(i)) {
								var r = i.el().querySelector("video");
								r.setAttribute("crossorigin", "anonymous")
							}
							i.el().setAttribute("data-video-id", t.id);
							i.poster(t.poster);
							if(t.sources) {
								for(var a = 0; a < t.sources.length; a++) {
									if(t.sources[a].vmap !== undefined) {
										n = true;
										break
									}
								}
							}
							if(n && i.onceux !== undefined) {
								i.onceux.loadSourcesFromCatalog(t.sources)
							} else {
								if(n) {
									t.sources = d(t.sources)
								}
								i.src(t.sources)
							}
							T(i, t);
							if(t.textTracks) {
								for(var s = 0; s < t.textTracks.length; s++) {
									i.addRemoteTextTrack(t.textTracks[s])
								}
							}
						};
						c(t.sources, n)
					};
					var v = function e(t) {
						var n = function e() {
							i.on("beforeplaylistitem", function(e, t) {
								return T(i, t)
							});
							for(var n = 0; n < t.length; n++) {
								t[n].sources = d(t[n].sources)
							}
							var r = t.startingIndex || 0;
							me(i, t[r]);
							ye(i, i.catalog.data);
							if($(i)) {
								var a = i.el().querySelector("video");
								a.setAttribute("crossorigin", "anonymous")
							}
							i.playlist(t, r)
						};
						var r = t.filter(function(e) {
							return e.sources
						}).reduce(function(e, t) {
							return e.concat(t.sources)
						}, []);
						c(r, n)
					};
					var m = function e(t, r) {
						var a;
						var s = ge(t);
						if(s.sources) {
							s.rawSources_ = s.sources;
							s.sources = (n.getSources || ue)(i, s, r);
							a = i.selectSource(s.sources)
						}
						if(s.posterSources) {
							s.poster = E(s.posterSources)
						}
						if(s.thumbnailSources) {
							s.thumbnail = E(s.thumbnailSources)
						}
						if(s.textTracks) {
							var o = a && _e(a.source, a.tech);
							s.textTracks = s.textTracks.filter(function(e) {
								return !(o && e.in_band_metadata_track_dispatch_type !== undefined)
							}).map(function(e) {
								if(e.sources) {
									e.src = E(e.sources)
								}
								return e
							})
						}
						if(s.duration) {
							s.duration = s.duration * .001
						}
						if(s.cuePoints) {
							for(var l = 0; l < s.cuePoints.length; l++) {
								A(s, l)
							}
						}
						return s
					};
					i.catalog = {
						transformCatalogError: g,
						transformVideoResponse: m,
						mediaCuePointsTrack: function t() {
							if(!i.catalog.mediaCuePointsTrack.hasWarned_) {
								e.log.warn("player.catalog.mediaCuePointsTrack() is deprecated, please use player.mediaCuePointsTrack() instead!");
								i.catalog.mediaCuePointsTrack.hasWarned_ = true
							}
							return i.mediaCuePointsTrack()
						},
						get: function e(n, r) {
							n = de(n);
							if(i.catalog.tveToken) {
								n.tveToken = i.catalog.tveToken
							}
							i.catalog.loading++;
							var s;
							var l = new t.Promise(function(e, t) {
								s = O(i, n, function(r, s) {
									i.catalog.loading--;
									if(n.type === o && s && (!s.videos || !s.videos.length)) {
										r = new Error("No videos returned from search")
									}
									if(r) {
										r.data = s;
										i.catalog.error = r;
										return t(r)
									}
									if(!s) {
										return e(null)
									}
									i.catalog.data = s;
									var l = {};
									if(n.bcovAuthToken) {
										l.bcovAuthToken = n.bcovAuthToken
									}
									if(n.type === a) {
										i.catalog.sources = s.sources;
										i.catalog.poster = s.poster;
										return e(m(s, l))
									}
									var u = s.videos.filter(function(e) {
										return !e.hasOwnProperty("errors")
									}).map(function(e) {
										return m(e, l)
									});
									if(u.length) {
										return e(u)
									}
									return t(new Error("No videos returned from playlist"))
								})
							});
							if(!t.isFn(r)) {
								return l
							}
							l.then(function(e) {
								r(null, e)
							}).catch(function(e) {
								r(e, e.data)
							});
							return s
						},
						getVideo: function e(t, n, i) {
							if(n === void 0) {
								n = function e() {}
							}
							return this.get(de(t, a, i), n)
						},
						getSequence: function t(n, r, a) {
							var s = this;
							if(r === void 0) {
								r = function e() {}
							}
							if(!Array.isArray(n)) {
								n = [n]
							}
							n = n.filter(function(t) {
								if(!/^(search|video|playlist)$/i.test(t.type)) {
									e.log.error("invalid sequence type, please use search, video, or playlist. for:", t);
									return false
								}
								return true
							});
							if(!n.length) {
								r(new Error("No valid sequences"), null);
								return
							}
							var o = n.length;
							var l = new Array(n.length);
							return n.map(function(t, u) {
								return s.get(de(t, t.type, a), function(a, s) {
									o--;
									if(a) {
										e.log.error("failed to request sequence", t);
										e.log.error("with error", a)
									} else if(s) {
										if(!Array.isArray(s)) {
											s = [s]
										}
										l[u] = s
									}
									if(o === 0) {
										i.catalog.data = l;
										var c = l.reduce(function(e, t) {
											return t && e.concat(t)
										}, []);
										if(!c.length) {
											r(new Error("No data was loaded for the sequence " + JSON.stringify(n), null))
										} else {
											r(null, c)
										}
									}
								}, a)
							})
						},
						getLazySequence: function e(t, n, r) {
							var a = this;
							if(n === void 0) {
								n = function e() {}
							}
							if(!Array.isArray(t)) {
								t = [t]
							}
							var s = function e(n) {
								return a.getSequence(t.shift(), function(i, r) {
									if((i || !r) && t && t.length) {
										return e(n)
									}
									n(i, r)
								}, r)
							};
							var o = function e() {
								if(!t.length) {
									i.off("playlistitem", e);
									return
								}
								var n = i.playlist;
								var r = n.currentIndex && n.currentIndex() || n.currentItem && n.currentItem() || 0;
								var a = n.lastIndex && n.lastIndex() || n().length - 1 || 0;
								if(r !== a) {
									return
								}
								s(function(e, t) {
									if(e || !t) {
										return
									}
									i.playlist(i.playlist().concat(t), r)
								})
							};
							i.on("playlistitem", o);
							return s(n)
						},
						getSearch: function e(t, n, i) {
							if(n === void 0) {
								n = function e() {}
							}
							return this.get(de(t, o, i), n)
						},
						getPlaylist: function e(t, n, i) {
							if(n === void 0) {
								n = function e() {}
							}
							return this.get(de(t, s, i), n)
						},
						load: function e(t) {
							if(Array.isArray(t)) {
								v(t)
							} else {
								h(t)
							}
						},
						autoFindAndLoadMedia: function e(t) {
							var n = f(t, i);
							if(!n) {
								return
							}
							t.playlistVideoId = n.playlistVideoId;
							var r = _(n.type, i, t);
							if(n.type === l) {
								this.getLazySequence(n.id, r)
							} else {
								this.get(de(n), r)
							}
							return n
						},
						setBcovAuthToken: function n(i) {
							if(i !== null && !t.isNonEmptyStr(i)) {
								e.log.warn("Authorization Token must be a valid string or null");
								return
							}
							fe({
								bcovAuthToken: i
							})
						},
						setPolicyKey: function n(i) {
							if(i !== null && !t.isNonEmptyStr(i)) {
								e.log.warn("Policy key must be a valid string or null");
								return
							}
							fe({
								policyKey: i
							})
						},
						getCatalogParamDefault_: function e(t) {
							return pe(t)
						},
						loading: 0
					}
				}
				e.registerPlugin("catalog", be);
				be.VERSION = r;
				return be
			})
		})();
		(function() {
			if(videojs.getPlugin("dock")) {
				return
			}(function(e, t) {
				typeof exports === "object" && typeof module !== "undefined" ? t(exports, require("video.js")) : typeof define === "function" && define.amd ? define(["exports", "video.js"], t) : t(e.videojsDock = e.videojsDock || {}, e.videojs)
			})(this, function(e, t) {
				"use strict";
				t = "default" in t ? t["default"] : t;
				var n = typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
				var i = {};
				var r = (Object.freeze || Object)({
					default: i
				});
				var a = r && i || r;
				var s = typeof n !== "undefined" ? n : typeof window !== "undefined" ? window : {};
				var o;
				if(typeof document !== "undefined") {
					o = document
				} else {
					o = s["__GLOBAL_DOCUMENT_CACHE@4"];
					if(!o) {
						o = s["__GLOBAL_DOCUMENT_CACHE@4"] = a
					}
				}
				var l = o;
				var u = 1;
				var c = function e() {
					return u++
				};
				var d = function(e, t) {
					if(!(e instanceof t)) {
						throw new TypeError("Cannot call a class as a function")
					}
				};
				var f = function(e, t) {
					if(typeof t !== "function" && t !== null) {
						throw new TypeError("Super expression must either be null or a function, not " + typeof t)
					}
					e.prototype = Object.create(t && t.prototype, {
						constructor: {
							value: e,
							enumerable: false,
							writable: true,
							configurable: true
						}
					});
					if(t) Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t
				};
				var p = function(e, t) {
					if(!e) {
						throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
					}
					return t && (typeof t === "object" || typeof t === "function") ? t : e
				};
				var h = t.dom || t;
				var v = t.registerPlugin || t.plugin;
				var g = t.getComponent("Component");
				var m = function(e) {
					f(t, e);

					function t(n, i) {
						d(this, t);
						var r = p(this, e.call(this, n, i));
						var a = n.$(".vjs-tech");
						a.setAttribute("aria-labelledby", r.title.id);
						a.setAttribute("aria-describedby", r.description.id);
						return r
					}
					t.prototype.createEl = function t() {
						var n = h.createEl("div", {
							className: "vjs-dock-title",
							title: this.options_.title,
							innerHTML: this.options_.title
						}, {
							id: "vjs-dock-title-" + c()
						});
						var i = h.createEl("div", {
							className: "vjs-dock-description",
							title: this.options_.description,
							innerHTML: this.options_.description
						}, {
							id: "vjs-dock-description-" + c()
						});
						var r = e.prototype.createEl.call(this, "div", {
							className: "vjs-dock-text"
						});
						this.title = n;
						this.description = i;
						r.appendChild(n);
						r.appendChild(i);
						return r
					};
					t.prototype.update = function e(t, n) {
						this.title.innerHTML = "";
						this.description.innerHTML = "";
						this.title.appendChild(l.createTextNode(t));
						this.description.appendChild(l.createTextNode(n))
					};
					return t
				}(g);
				var y = function(e) {
					f(t, e);

					function t() {
						d(this, t);
						return p(this, e.apply(this, arguments))
					}
					t.prototype.createEl = function t() {
						return e.prototype.createEl.call(this, "div", {
							className: "vjs-dock-shelf"
						})
					};
					return t
				}(g);
				t.registerComponent("Title", m);
				t.registerComponent("Shelf", y);
				var _ = function e(t) {
					var n = t || {};
					var i = {
						title: {
							title: n.title || "",
							description: n.description || ""
						}
					};
					var r = this.title;
					var a = this.shelf;
					this.addClass("vjs-dock");
					var s = this.children().indexOf(this.getChild("bigPlayButton"));
					var o = s > 0 ? s - 1 : null;
					if(!a) {
						a = this.shelf = this.addChild("shelf", i, o)
					}
					if(!r) {
						r = this.title = this.addChild("title", i.title, o)
					} else {
						r.update(i.title.title, i.title.description)
					}
					this.one(r, "dispose", function() {
						this.title = null
					});
					this.one(a, "dispose", function() {
						this.shelf = null
					})
				};
				v("dock", _);
				e.Title = m;
				e.Shelf = y;
				e["default"] = _
			})
		})();
		(function() {
			if(videojs.getPlugin("playlist")) {
				return
			}(function(e, t) {
				typeof exports === "object" && typeof module !== "undefined" ? module.exports = t(require("video.js")) : typeof define === "function" && define.amd ? define(["video.js"], t) : (e = e || self, e.videojsPlaylist = t(e.videojs))
			})(this, function(e) {
				"use strict";
				e = e && e.hasOwnProperty("default") ? e["default"] : e;
				var t = function e(t) {
					return typeof t === "number" && !isNaN(t) && t >= 0 && t < Infinity
				};
				var n = function e(t) {
					var n = t.playlist.autoadvance_;
					if(n.timeout) {
						t.clearTimeout(n.timeout)
					}
					if(n.trigger) {
						t.off("ended", n.trigger)
					}
					n.timeout = null;
					n.trigger = null
				};
				var i = function e(i, r) {
					n(i);
					if(!t(r)) {
						i.playlist.autoadvance_.delay = null;
						return
					}
					i.playlist.autoadvance_.delay = r;
					i.playlist.autoadvance_.trigger = function() {
						var t = function t() {
							return e(i, r)
						};
						i.one("play", t);
						i.playlist.autoadvance_.timeout = i.setTimeout(function() {
							n(i);
							i.off("play", t);
							i.playlist.next()
						}, r * 1e3)
					};
					i.one("ended", i.playlist.autoadvance_.trigger)
				};
				var r = function e(t) {
					var n = t.remoteTextTracks();
					var i = n && n.length || 0;
					while(i--) {
						t.removeRemoteTextTrack(n[i])
					}
				};
				var a = function e(t, n) {
					var a = !t.paused() || t.ended();
					t.trigger("beforeplaylistitem", n.originalValue || n);
					if(n.playlistItemId_) {
						t.playlist.currentPlaylistItemId_ = n.playlistItemId_
					}
					t.poster(n.poster || "");
					t.src(n.sources);
					r(t);
					t.ready(function() {
						(n.textTracks || []).forEach(t.addRemoteTextTrack.bind(t));
						t.trigger("playlistitem", n.originalValue || n);
						if(a) {
							var e = t.play();
							if(typeof e !== "undefined" && typeof e.then === "function") {
								e.then(null, function(e) {})
							}
						}
						i(t, t.playlist.autoadvance_.delay)
					});
					return t
				};
				var s = function e(t) {
					return !!t && typeof t === "object"
				};
				var o = function e(t) {
					var n = [];
					var i;
					t.forEach(function(e) {
						if(!s(e)) {
							i = Object(e);
							i.originalValue = e
						} else {
							i = e
						}
						n.push(i)
					});
					return n
				};
				var l = function e(t) {
					var n = 1;
					t.forEach(function(e) {
						e.playlistItemId_ = n++
					})
				};
				var u = function e(t, n) {
					for(var i = 0; i < t.length; i++) {
						if(t[i].playlistItemId_ === n) {
							return i
						}
					}
					return -1
				};
				var c = function e(t, n) {
					var i = t;
					var r = n;
					if(typeof t === "object") {
						i = t.src
					}
					if(typeof n === "object") {
						r = n.src
					}
					if(/^\/\//.test(i)) {
						r = r.slice(r.indexOf("//"))
					}
					if(/^\/\//.test(r)) {
						i = i.slice(i.indexOf("//"))
					}
					return i === r
				};
				var d = function e(t, n) {
					for(var i = 0; i < t.length; i++) {
						var r = t[i].sources;
						if(Array.isArray(r)) {
							for(var a = 0; a < r.length; a++) {
								var s = r[a];
								if(s && c(s, n)) {
									return i
								}
							}
						}
					}
					return -1
				};
				var f = function e(t) {
					var n = -1;
					var i = t.length - 1;
					while(++n < t.length) {
						var r = n + Math.floor(Math.random() * (i - n + 1));
						var a = t[r];
						t[r] = t[n];
						t[n] = a
					}
					return t
				};

				function p(t, r, c) {
					if(c === void 0) {
						c = 0
					}
					var p = null;
					var h = false;
					var v = t.playlist = function(e, n) {
						if(n === void 0) {
							n = 0
						}
						if(h) {
							throw new Error("do not call playlist() during a playlist change")
						}
						if(Array.isArray(e)) {
							var i = Array.isArray(p) ? p.slice() : null;
							var r = e.slice();
							p = r.slice();
							if(p.filter(function(e) {
									return s(e)
								}).length !== p.length) {
								p = o(p)
							}
							l(p);
							h = true;
							t.trigger({
								type: "duringplaylistchange",
								nextIndex: n,
								nextPlaylist: r,
								previousIndex: v.currentIndex_,
								previousPlaylist: i || []
							});
							h = false;
							if(n !== -1) {
								v.currentItem(n)
							}
							if(i) {
								t.setTimeout(function() {
									t.trigger("playlistchange")
								}, 0)
							}
						}
						return p.map(function(e) {
							return e.originalValue || e
						}).slice()
					};
					t.on("loadstart", function() {
						if(v.currentItem() === -1) {
							n(t)
						}
					});
					v.currentIndex_ = -1;
					v.player_ = t;
					v.autoadvance_ = {};
					v.repeat_ = false;
					v.currentPlaylistItemId_ = null;
					v.currentItem = function(e) {
						if(h) {
							return v.currentIndex_
						}
						if(typeof e === "number" && v.currentIndex_ !== e && e >= 0 && e < p.length) {
							v.currentIndex_ = e;
							a(v.player_, p[v.currentIndex_]);
							return v.currentIndex_
						}
						var t = v.player_.currentSrc() || "";
						if(v.currentPlaylistItemId_) {
							var n = u(p, v.currentPlaylistItemId_);
							var i = p[n];
							if(i && Array.isArray(i.sources) && d([i], t) > -1) {
								v.currentIndex_ = n;
								return v.currentIndex_
							}
							v.currentPlaylistItemId_ = null
						}
						v.currentIndex_ = v.indexOf(t);
						return v.currentIndex_
					};
					v.contains = function(e) {
						return v.indexOf(e) !== -1
					};
					v.indexOf = function(e) {
						if(typeof e === "string") {
							return d(p, e)
						}
						var t = Array.isArray(e) ? e : e.sources;
						for(var n = 0; n < t.length; n++) {
							var i = t[n];
							if(typeof i === "string") {
								return d(p, i)
							} else if(i.src) {
								return d(p, i.src)
							}
						}
						return -1
					};
					v.currentIndex = function() {
						return v.currentItem()
					};
					v.lastIndex = function() {
						return p.length - 1
					};
					v.nextIndex = function() {
						var e = v.currentItem();
						if(e === -1) {
							return -1
						}
						var t = v.lastIndex();
						if(v.repeat_ && e === t) {
							return 0
						}
						return Math.min(e + 1, t)
					};
					v.previousIndex = function() {
						var e = v.currentItem();
						if(e === -1) {
							return -1
						}
						if(v.repeat_ && e === 0) {
							return v.lastIndex()
						}
						return Math.max(e - 1, 0)
					};
					v.first = function() {
						if(h) {
							return
						}
						var e = v.currentItem(0);
						if(p.length) {
							return p[e].originalValue || p[e]
						}
						v.currentIndex_ = -1
					};
					v.last = function() {
						if(h) {
							return
						}
						var e = v.currentItem(v.lastIndex());
						if(p.length) {
							return p[e].originalValue || p[e]
						}
						v.currentIndex_ = -1
					};
					v.next = function() {
						if(h) {
							return
						}
						var e = v.nextIndex();
						if(e !== v.currentIndex_) {
							var t = v.currentItem(e);
							return p[t].originalValue || p[t]
						}
					};
					v.previous = function() {
						if(h) {
							return
						}
						var e = v.previousIndex();
						if(e !== v.currentIndex_) {
							var t = v.currentItem(e);
							return p[t].originalValue || p[t]
						}
					};
					v.autoadvance = function(e) {
						i(v.player_, e)
					};
					v.repeat = function(t) {
						if(t === undefined) {
							return v.repeat_
						}
						if(typeof t !== "boolean") {
							e.log.error("videojs-playlist: Invalid value for repeat", t);
							return
						}
						v.repeat_ = !!t;
						return v.repeat_
					};
					v.sort = function(e) {
						if(!p.length) {
							return
						}
						p.sort(e);
						if(h) {
							return
						}
						t.trigger("playlistsorted")
					};
					v.reverse = function() {
						if(!p.length) {
							return
						}
						p.reverse();
						if(h) {
							return
						}
						t.trigger("playlistsorted")
					};
					v.shuffle = function(e) {
						var n = e === void 0 ? {} : e,
							i = n.rest;
						var r = 0;
						var a = p;
						if(i) {
							r = v.currentIndex_ + 1;
							a = p.slice(r)
						}
						if(a.length <= 1) {
							return
						}
						f(a);
						if(i) {
							var s;
							(s = p).splice.apply(s, [r, a.length].concat(a))
						}
						if(h) {
							return
						}
						t.trigger("playlistsorted")
					};
					if(Array.isArray(r)) {
						v(r.slice(), c)
					} else {
						p = []
					}
					return v
				}
				var h = "4.3.1";
				var v = e.registerPlugin || e.plugin;
				var g = function e(t, n) {
					p(this, t, n)
				};
				v("playlist", g);
				g.VERSION = h;
				return g
			})
		})();
		(function() {
			if(videojs.getPlugin("ima3")) {
				return
			}! function(e, t) {
				"object" == typeof exports && "undefined" != typeof module ? t(require("video.js"), require("global/window"), require("global/document")) : "function" == typeof define && define.amd ? define(["video.js", "global/window", "global/document"], t) : t((e = e || self).videojs, e.window, e.document)
			}(this, function(e, t, n) {
				"use strict";
				e = e && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e, t = t && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t, n = n && Object.prototype.hasOwnProperty.call(n, "default") ? n.default : n;
				var i = function(e, t) {
						t.isImmediatePropagationStopped = function() {
							return !0
						}, t.cancelBubble = !0, t.isPropagationStopped = function() {
							return !0
						}
					},
					r = function(e, t, n) {
						i(0, n), e.trigger({
							type: t + n.type,
							originalEvent: n
						})
					};

				function a(e) {
					"playing" === e.type ? function(e, t) {
						e.ads.isInAdMode() && (e.ads.isContentResuming() ? e.ads._contentEnding && r(e, "content", t) : r(e, "ad", t))
					}(this, e) : "ended" === e.type ? function(e, t) {
						e.ads.isInAdMode() ? e.ads.isContentResuming() ? (i(0, t), e.trigger("resumeended")) : r(e, "ad", t) : e.ads._contentHasEnded || e.ads.stitchedAds() || (r(e, "content", t), e.trigger("readyforpostroll"))
					}(this, e) : "loadstart" === e.type || "loadeddata" === e.type || "loadedmetadata" === e.type ? function(e, t) {
						if(!("loadstart" === t.type && !e.ads._hasThereBeenALoadStartDuringPlayerLife || "loadeddata" === t.type && !e.ads._hasThereBeenALoadedData || "loadedmetadata" === t.type && !e.ads._hasThereBeenALoadedMetaData))
							if(e.ads.inAdBreak()) r(e, "ad", t);
							else {
								if(e.currentSrc() !== e.ads.contentSrc) return;
								r(e, "content", t)
							}
					}(this, e) : "play" === e.type ? function(e, t) {
						e.ads.inAdBreak() ? r(e, "ad", t) : e.ads.isContentResuming() && r(e, "content", t)
					}(this, e) : this.ads.isInAdMode() && (this.ads.isContentResuming() ? r(this, "content", e) : r(this, "ad", e))
				}
				var s = function(e, t) {
						return t ? encodeURIComponent(e) : e
					},
					o = function(e, t, n) {
						if(e && e[n])
							for(var i = e[n], r = Object.keys(i), a = 0; a < r.length; a++) {
								t["{mediainfo." + n + "." + r[a] + "}"] = i[r[a]]
							}
					};

				function l(i, r, a) {
					var l = this,
						u = {};
					i = i.replace(/{([^}=]+)=([^}]+)}/g, function(e, t, n) {
						return u["{" + t + "}"] = n, "{" + t + "}"
					}), void 0 === r && (r = !1);
					var c = {};
					for(var d in void 0 !== a && (c = a), c["{player.id}"] = this.options_["data-player"], c["{player.height}"] = this.currentHeight(), c["{player.width}"] = this.currentWidth(), c["{mediainfo.id}"] = this.mediainfo ? this.mediainfo.id : "", c["{mediainfo.name}"] = this.mediainfo ? this.mediainfo.name : "", c["{mediainfo.duration}"] = this.mediainfo ? this.mediainfo.duration : "", c["{player.duration}"] = this.duration(), c["{player.pageUrl}"] = e.dom.isInFrame() ? n.referrer : t.location.href, c["{playlistinfo.id}"] = this.playlistinfo ? this.playlistinfo.id : "", c["{playlistinfo.name}"] = this.playlistinfo ? this.playlistinfo.name : "", c["{timestamp}"] = (new Date).getTime(), c["{document.referrer}"] = n.referrer, c["{window.location.href}"] = t.location.href, c["{random}"] = Math.floor(1e12 * Math.random()), ["description", "tags", "reference_id", "ad_keys"].forEach(function(e) {
							l.mediainfo && l.mediainfo[e] ? c["{mediainfo." + e + "}"] = l.mediainfo[e] : u["{mediainfo." + e + "}"] ? c["{mediainfo." + e + "}"] = u["{mediainfo." + e + "}"] : c["{mediainfo." + e + "}"] = ""
						}), o(this.mediainfo, c, "custom_fields"), o(this.mediainfo, c, "customFields"), c) i = i.split(d).join(s(c[d], r));
					for(var f in i = i.replace(/{pageVariable\.([^}]+)}/g, function(n, i) {
							for(var a, o = t, l = i.split("."), c = 0; c < l.length; c++) c === l.length - 1 ? a = o[l[c]] : o = o[l[c]];
							var d = typeof a;
							return null === a ? "null" : void 0 === a ? u["{pageVariable." + i + "}"] ? u["{pageVariable." + i + "}"] : (e.log.warn('Page variable "' + i + '" not found'), "") : "string" !== d && "number" !== d && "boolean" !== d ? (e.log.warn('Page variable "' + i + '" is not a supported type'), "") : s(String(a), r)
						}), u) i = i.replace(f, u[f]);
					return i
				}
				var u = {
						processMetadataTracks: function(e, t) {
							for(var n = e.textTracks(), i = function(n) {
									"metadata" === n.kind && (e.ads.cueTextTracks.setMetadataTrackMode(n), t(e, n))
								}, r = 0; r < n.length; r++) i(n[r]);
							n.addEventListener("addtrack", function(e) {
								i(e.track)
							})
						},
						setMetadataTrackMode: function(e) {},
						getSupportedAdCue: function(e, t) {
							return t
						},
						isSupportedAdCue: function(e, t) {
							return !0
						},
						getCueId: function(e, t) {
							return t.id
						}
					},
					c = function(e, t) {
						return void 0 !== t && e.ads.includedCues[t]
					},
					d = function(e, t) {
						void 0 !== t && "" !== t && (e.ads.includedCues[t] = !0)
					};

				function f() {
					!1 !== this.ads._shouldBlockPlay && (this.paused() || (this.ads.debug("Playback was canceled by cancelContentPlay"), this.pause()), this.ads._cancelledPlay = !0)
				}
				u.processAdTrack = function(t, n, i, r) {
					t.ads.includedCues = {};
					for(var a = 0; a < n.length; a++) {
						var s = n[a],
							o = this.getSupportedAdCue(t, s);
						if(!this.isSupportedAdCue(t, s)) return void e.log.warn("Skipping as this is not a supported ad cue.", s);
						var l = this.getCueId(t, s),
							u = s.startTime;
						if(c(t, l)) return void e.log("Skipping ad already seen with ID " + l);
						r && r(t, o, l, u), i(t, o, l, u), d(t, l)
					}
				};
				var p = {},
					h = e;
				p.isMiddlewareMediatorSupported = function() {
					return !h.browser.IS_IOS && !h.browser.IS_ANDROID && !!(h.use && h.middleware && h.middleware.TERMINATOR)
				}, p.playMiddleware = function(t) {
					return {
						setSource: function(e, t) {
							t(null, e)
						},
						callPlay: function() {
							if(t.ads && !0 === t.ads._shouldBlockPlay) return t.ads.debug("Using playMiddleware to block content playback"), t.ads._playBlocked = !0, h.middleware.TERMINATOR
						},
						play: function(n, i) {
							t.ads && t.ads._playBlocked && n ? (t.ads.debug("Play call to Tech was terminated."), t.trigger("play"), t.addClass("vjs-has-started"), t.ads._playBlocked = !1) : i && i.catch && i.catch(function(n) {
								"NotAllowedError" !== n.name || e.browser.IS_SAFARI || t.trigger("pause")
							})
						}
					}
				}, p.testHook = function(e) {
					h = e
				};
				var v = p.playMiddleware,
					g = p.isMiddlewareMediatorSupported;
				var m = function() {
						function e() {}
						return e.getState = function(t) {
							if(t) return e.states_ && e.states_[t] ? e.states_[t] : void 0
						}, e.registerState = function(t, n) {
							if("string" != typeof t || !t) throw new Error('Illegal state name, "' + t + '"; must be a non-empty string.');
							return e.states_ || (e.states_ = {}), e.states_[t] = n, n
						}, e
					}(),
					y = function() {
						function t(e) {
							this.player = e
						}
						t._getName = function() {
							return "Anonymous State"
						};
						var n = t.prototype;
						return n.transitionTo = function(e) {
							var t = this.player;
							this.cleanup(t);
							var n = new e(t);
							t.ads._state = n, t.ads.debug(this.constructor._getName() + " -> " + n.constructor._getName());
							for(var i = arguments.length, r = new Array(i > 1 ? i - 1 : 0), a = 1; a < i; a++) r[a - 1] = arguments[a];
							n.init.apply(n, [t].concat(r))
						}, n.init = function() {}, n.cleanup = function() {}, n.onPlay = function() {}, n.onPlaying = function() {}, n.onEnded = function() {}, n.onAdEnded = function() {}, n.onAdsReady = function() {
							e.log.warn("Unexpected adsready event")
						}, n.onAdsError = function() {}, n.onAdsCanceled = function() {}, n.onAdTimeout = function() {}, n.onAdStarted = function() {}, n.onContentChanged = function() {}, n.onContentResumed = function() {}, n.onReadyForPostroll = function() {
							e.log.warn("Unexpected readyforpostroll event")
						}, n.onNoPreroll = function() {}, n.onNoPostroll = function() {}, n.startLinearAdMode = function() {
							e.log.warn("Unexpected startLinearAdMode invocation (State via " + this.constructor._getName() + ")")
						}, n.endLinearAdMode = function() {
							e.log.warn("Unexpected endLinearAdMode invocation (State via " + this.constructor._getName() + ")")
						}, n.skipLinearAdMode = function() {
							e.log.warn("Unexpected skipLinearAdMode invocation (State via " + this.constructor._getName() + ")")
						}, n.isAdState = function() {
							throw new Error("isAdState unimplemented for " + this.constructor._getName())
						}, n.isWaitingForAdBreak = function() {
							return !1
						}, n.isContentResuming = function() {
							return !1
						}, n.inAdBreak = function() {
							return !1
						}, n.handleEvent = function(e) {
							var t = this.player;
							"play" === e ? this.onPlay(t) : "adsready" === e ? this.onAdsReady(t) : "adserror" === e ? this.onAdsError(t) : "adscanceled" === e ? this.onAdsCanceled(t) : "adtimeout" === e ? this.onAdTimeout(t) : "ads-ad-started" === e ? this.onAdStarted(t) : "contentchanged" === e ? this.onContentChanged(t) : "contentresumed" === e ? this.onContentResumed(t) : "readyforpostroll" === e ? this.onReadyForPostroll(t) : "playing" === e ? this.onPlaying(t) : "ended" === e ? this.onEnded(t) : "nopreroll" === e ? this.onNoPreroll(t) : "nopostroll" === e ? this.onNoPostroll(t) : "adended" === e && this.onAdEnded(t)
						}, t
					}();

				function _(e, t) {
					e.prototype = Object.create(t.prototype), e.prototype.constructor = e, e.__proto__ = t
				}
				m.registerState("State", y);
				var b = function(e) {
					function t(t) {
						var n;
						return(n = e.call(this, t) || this).contentResuming = !1, n.waitingForAdBreak = !1, n
					}
					_(t, e);
					var n = t.prototype;
					return n.isAdState = function() {
						return !0
					}, n.onPlaying = function() {
						var e = m.getState("ContentPlayback");
						this.contentResuming && this.transitionTo(e)
					}, n.onContentResumed = function() {
						var e = m.getState("ContentPlayback");
						this.contentResuming && this.transitionTo(e)
					}, n.isWaitingForAdBreak = function() {
						return this.waitingForAdBreak
					}, n.isContentResuming = function() {
						return this.contentResuming
					}, n.inAdBreak = function() {
						return !0 === this.player.ads._inLinearAdMode
					}, t
				}(y);
				m.registerState("AdState", b);
				var A = function(e) {
					function t() {
						return e.apply(this, arguments) || this
					}
					_(t, e);
					var n = t.prototype;
					return n.isAdState = function() {
						return !1
					}, n.onContentChanged = function(e) {
						var t = m.getState("BeforePreroll"),
							n = m.getState("Preroll");
						e.ads.debug("Received contentchanged event (ContentState)"), e.paused() ? this.transitionTo(t) : (this.transitionTo(n, !1), e.pause(), e.ads._pausedOnContentupdate = !0)
					}, t
				}(y);
				m.registerState("ContentState", A);
				var S, T = function(t) {
					function n() {
						return t.apply(this, arguments) || this
					}
					_(n, t), n._getName = function() {
						return "AdsDone"
					};
					var i = n.prototype;
					return i.init = function(e) {
						e.ads._contentHasEnded = !0, e.trigger("ended")
					}, i.startLinearAdMode = function() {
						e.log.warn("Unexpected startLinearAdMode invocation (AdsDone)")
					}, n
				}(m.getState("ContentState"));
				m.registerState("AdsDone", T);
				var k = {
						start: function(t) {
							t.ads.debug("Starting ad break"), t.ads._inLinearAdMode = !0, t.trigger("adstart"), t.ads.shouldTakeSnapshots() && (t.ads.snapshot = function(t) {
								var n;
								n = e.browser.IS_IOS && t.ads.isLive(t) && t.seekable().length > 0 ? t.currentTime() - t.seekable().end(0) : t.currentTime();
								var i = t.$(".vjs-tech"),
									r = t.textTracks ? t.textTracks() : [],
									a = [],
									s = {
										ended: t.ended(),
										currentSrc: t.currentSrc(),
										sources: t.currentSources(),
										src: t.tech_.src(),
										currentTime: n,
										type: t.currentType()
									};
								i && (s.style = i.getAttribute("style"));
								for(var o = 0; o < r.length; o++) {
									var l = r[o];
									a.push({
										track: l,
										mode: l.mode
									}), l.mode = "disabled"
								}
								return s.suppressedTracks = a, s
							}(t)), t.ads.shouldPlayContentBehindAd(t) && (t.ads.preAdVolume_ = t.volume(), t.volume(0)), t.addClass("vjs-ad-playing"), t.hasClass("vjs-live") && t.removeClass("vjs-live"), t.ads.removeNativePoster()
						},
						end: function(t, n) {
							t.ads.debug("Ending ad break"), void 0 === n && (n = function() {}), t.ads.adType = null, t.ads._inLinearAdMode = !1, t.trigger("adend"), t.removeClass("vjs-ad-playing"), t.ads.isLive(t) && t.addClass("vjs-live"), t.ads.shouldTakeSnapshots() ? function(t, n) {
								var i = t.ads.snapshot;
								if(void 0 === n && (n = function() {}), !0 === t.ads.disableNextSnapshotRestore) return t.ads.disableNextSnapshotRestore = !1, delete t.ads.snapshot, void n();
								var r, a = t.$(".vjs-tech"),
									s = 20,
									o = i.suppressedTracks,
									l = function() {
										for(var e = 0; e < o.length; e++)(r = o[e]).track.mode = r.mode
									},
									u = function() {
										var n;
										if(e.browser.IS_IOS && t.ads.isLive(t)) {
											if(i.currentTime < 0 && (n = t.seekable().length > 0 ? t.seekable().end(0) + i.currentTime : t.currentTime(), t.currentTime(n)), t.paused()) {
												var r = t.play();
												r && r.catch && r.catch(function(t) {
													e.log.warn("Play promise rejected in IOS snapshot resume", t)
												})
											}
										} else if(i.ended) t.currentTime(t.duration());
										else {
											t.currentTime(i.currentTime);
											var a = t.play();
											a && a.catch && a.catch(function(t) {
												e.log.warn("Play promise rejected in snapshot resume", t)
											})
										}
										t.ads.shouldRemoveAutoplay_ && (t.autoplay(!1), t.ads.shouldRemoveAutoplay_ = !1)
									},
									c = function n() {
										if(t.off("contentcanplay", n), S && t.clearTimeout(S), (a = t.el().querySelector(".vjs-tech")).readyState > 1) return u();
										if(void 0 === a.seekable) return u();
										if(a.seekable.length > 0) return u();
										if(s--) t.setTimeout(n, 50);
										else try {
											u()
										} catch(t) {
											e.log.warn("Failed to resume the content after an advertisement", t)
										}
									};
								if("style" in i && a.setAttribute("style", i.style || ""), t.ads.videoElementRecycled()) t.one("resumeended", function() {
									delete t.ads.snapshot, n()
								}), t.one("contentloadedmetadata", l), e.browser.IS_IOS && !t.autoplay() && (t.autoplay(!0), t.ads.shouldRemoveAutoplay_ = !0), t.src(i.sources), t.one("contentcanplay", c), S = t.setTimeout(c, 2e3);
								else {
									if(l(), !t.ended()) {
										var d = t.play();
										d && d.catch && d.catch(function(t) {
											e.log.warn("Play promise rejected in snapshot restore", t)
										})
									}
									delete t.ads.snapshot, n()
								}
							}(t, n) : (t.volume(t.ads.preAdVolume_), n())
						}
					},
					E = function(t) {
						function n() {
							return t.apply(this, arguments) || this
						}
						_(n, t), n._getName = function() {
							return "Preroll"
						};
						var i = n.prototype;
						return i.init = function(e, t, n) {
							if(this.waitingForAdBreak = !1, e.addClass("vjs-ad-loading"), n || e.ads.nopreroll_) return this.resumeAfterNoPreroll(e);
							var i = e.ads.settings.timeout;
							"number" == typeof e.ads.settings.prerollTimeout && (i = e.ads.settings.prerollTimeout), this._timeout = e.setTimeout(function() {
								e.trigger("adtimeout")
							}, i), t ? this.handleAdsReady() : this.adsReady = !1
						}, i.onAdsReady = function(t) {
							t.ads.inAdBreak() ? e.log.warn("Unexpected adsready event (Preroll)") : (t.ads.debug("Received adsready event (Preroll)"), this.handleAdsReady())
						}, i.handleAdsReady = function() {
							this.adsReady = !1, this.readyForPreroll()
						}, i.afterLoadStart = function(e) {
							var t = this.player;
							t.ads._hasThereBeenALoadStartDuringPlayerLife ? e() : (t.ads.debug("Waiting for loadstart..."), t.one("loadstart", function() {
								t.ads.debug("Received loadstart event"), e()
							}))
						}, i.noPreroll = function() {
							var e = this;
							this.afterLoadStart(function() {
								e.player.ads.debug("Skipping prerolls due to nopreroll event (Preroll)"), e.resumeAfterNoPreroll(e.player)
							})
						}, i.readyForPreroll = function() {
							var e = this.player;
							this.afterLoadStart(function() {
								e.ads.debug("Triggered readyforpreroll event (Preroll)"), e.trigger("readyforpreroll")
							})
						}, i.onAdsCanceled = function(e) {
							var t = this;
							e.ads.debug("adscanceled (Preroll)"), this.afterLoadStart(function() {
								t.resumeAfterNoPreroll(e)
							})
						}, i.onAdsError = function(t) {
							var n = this;
							e.log("adserror (Preroll)"), this.inAdBreak() ? t.ads.endLinearAdMode() : this.afterLoadStart(function() {
								n.resumeAfterNoPreroll(t)
							})
						}, i.startLinearAdMode = function() {
							var t = this.player;
							//!this.adsReady || t.ads.inAdBreak() || this.isContentResuming() ? e.log.warn("Unexpected startLinearAdMode invocation (Preroll)") : (this.clearTimeout(t), t.ads.adType = "preroll", this.waitingForAdBreak = !1, k.start(t), t.ads._shouldBlockPlay = !1)
						}, i.onAdStarted = function(e) {
							e.removeClass("vjs-ad-loading")
						}, i.endLinearAdMode = function() {
							var e = this.player;
							this.inAdBreak() && (e.removeClass("vjs-ad-loading"), e.addClass("vjs-ad-content-resuming"), this.contentResuming = !0, k.end(e))
						}, i.skipLinearAdMode = function() {
							var t = this,
								n = this.player;
							n.ads.inAdBreak() || this.isContentResuming() ? e.log.warn("Unexpected skipLinearAdMode invocation") : this.afterLoadStart(function() {
								n.trigger("adskip"), n.ads.debug("skipLinearAdMode (Preroll)"), t.resumeAfterNoPreroll(n)
							})
						}, i.onAdTimeout = function(e) {
							var t = this;
							this.afterLoadStart(function() {
								e.ads.debug("adtimeout (Preroll)"), t.resumeAfterNoPreroll(e)
							})
						}, i.onNoPreroll = function(t) {
							t.ads.inAdBreak() || this.isContentResuming() ? e.log.warn("Unexpected nopreroll event (Preroll)") : this.noPreroll()
						}, i.resumeAfterNoPreroll = function(e) {
							if(this.contentResuming = !0, e.ads._shouldBlockPlay = !1, this.cleanupPartial(e), e.paused() && (e.ads._playRequested || e.ads._pausedOnContentupdate)) {
								var t = e.play();
								t && t.then && t.then(null, function(e) {})
							}
						}, i.cleanup = function(t) {
							t.ads._hasThereBeenALoadStartDuringPlayerLife || e.log.warn("Leaving Preroll state before loadstart event can cause issues."), this.cleanupPartial(t)
						}, i.cleanupPartial = function(e) {
							e.removeClass("vjs-ad-loading"), e.removeClass("vjs-ad-content-resuming"), this.clearTimeout(e)
						}, i.clearTimeout = function(e) {
							e.clearTimeout(this._timeout), this._timeout = null
						}, n
					}(m.getState("AdState"));
				m.registerState("Preroll", E);
				var P = function(e) {
					function t() {
						return e.apply(this, arguments) || this
					}
					_(t, e), t._getName = function() {
						return "BeforePreroll"
					};
					var n = t.prototype;
					return n.init = function(e) {
						this.adsReady = !1, this.shouldResumeToContent = !1, e.ads._shouldBlockPlay = !0
					}, n.onAdsReady = function(e) {
						e.ads.debug("Received adsready event (BeforePreroll)"), this.adsReady = !0
					}, n.onPlay = function(e) {
						var t = m.getState("Preroll");
						e.ads.debug("Received play event (BeforePreroll)"), this.transitionTo(t, this.adsReady, this.shouldResumeToContent)
					}, n.onAdsCanceled = function(e) {
						e.ads.debug("adscanceled (BeforePreroll)"), this.shouldResumeToContent = !0
					}, n.onAdsError = function() {
						this.player.ads.debug("adserror (BeforePreroll)"), this.shouldResumeToContent = !0
					}, n.onNoPreroll = function() {
						this.player.ads.debug("Skipping prerolls due to nopreroll event (BeforePreroll)"), this.shouldResumeToContent = !0
					}, n.skipLinearAdMode = function() {
						var e = this.player;
						e.trigger("adskip"), e.ads.debug("skipLinearAdMode (BeforePreroll)"), this.shouldResumeToContent = !0
					}, n.onContentChanged = function() {
						this.init(this.player)
					}, t
				}(m.getState("ContentState"));
				m.registerState("BeforePreroll", P);
				var C = function(e) {
					function t() {
						return e.apply(this, arguments) || this
					}
					_(t, e), t._getName = function() {
						return "Midroll"
					};
					var n = t.prototype;
					return n.init = function(e) {
						e.ads.adType = "midroll", k.start(e), e.addClass("vjs-ad-loading")
					}, n.onAdStarted = function(e) {
						e.removeClass("vjs-ad-loading")
					}, n.endLinearAdMode = function() {
						var e = this.player;
						this.inAdBreak() && (this.contentResuming = !0, e.addClass("vjs-ad-content-resuming"), e.removeClass("vjs-ad-loading"), k.end(e))
					}, n.onAdsError = function(e) {
						this.inAdBreak() && e.ads.endLinearAdMode()
					}, n.cleanup = function(e) {
						e.removeClass("vjs-ad-loading"), e.removeClass("vjs-ad-content-resuming")
					}, t
				}(m.getState("AdState"));
				m.registerState("Midroll", C);
				var w = function(t) {
					function n() {
						return t.apply(this, arguments) || this
					}
					_(n, t), n._getName = function() {
						return "Postroll"
					};
					var i = n.prototype;
					return i.init = function(e) {
						if(this.waitingForAdBreak = !0, e.ads._contentEnding = !0, e.ads.nopostroll_) {
							this.resumeContent(e);
							var t = m.getState("AdsDone");
							this.transitionTo(t)
						} else {
							e.addClass("vjs-ad-loading");
							var n = e.ads.settings.timeout;
							"number" == typeof e.ads.settings.postrollTimeout && (n = e.ads.settings.postrollTimeout), this._postrollTimeout = e.setTimeout(function() {
								e.trigger("adtimeout")
							}, n)
						}
					}, i.startLinearAdMode = function() {
						var t = this.player;
						t.ads.inAdBreak() || this.isContentResuming() ? e.log.warn("Unexpected startLinearAdMode invocation (Postroll)") : (t.ads.adType = "postroll", t.clearTimeout(this._postrollTimeout), this.waitingForAdBreak = !1, k.start(t))
					}, i.onAdStarted = function(e) {
						e.removeClass("vjs-ad-loading")
					}, i.endLinearAdMode = function() {
						var e = this,
							t = this.player,
							n = m.getState("AdsDone");
						this.inAdBreak() && (t.removeClass("vjs-ad-loading"), this.resumeContent(t), k.end(t, function() {
							e.transitionTo(n)
						}))
					}, i.skipLinearAdMode = function() {
						var t = this.player;
						t.ads.inAdBreak() || this.isContentResuming() ? e.log.warn("Unexpected skipLinearAdMode invocation") : (t.ads.debug("Postroll abort (skipLinearAdMode)"), t.trigger("adskip"), this.abort(t))
					}, i.onAdTimeout = function(e) {
						e.ads.debug("Postroll abort (adtimeout)"), this.abort(e)
					}, i.onAdsError = function(e) {
						e.ads.debug("Postroll abort (adserror)"), e.ads.inAdBreak() ? e.ads.endLinearAdMode() : this.abort(e)
					}, i.onContentChanged = function(e) {
						if(this.isContentResuming()) {
							var t = m.getState("BeforePreroll");
							this.transitionTo(t)
						} else if(!this.inAdBreak()) {
							var n = m.getState("Preroll");
							this.transitionTo(n)
						}
					}, i.onNoPostroll = function(t) {
						this.isContentResuming() || this.inAdBreak() ? e.log.warn("Unexpected nopostroll event (Postroll)") : this.abort(t)
					}, i.resumeContent = function(e) {
						this.contentResuming = !0, e.addClass("vjs-ad-content-resuming")
					}, i.abort = function(e) {
						var t = m.getState("AdsDone");
						this.resumeContent(e), e.removeClass("vjs-ad-loading"), this.transitionTo(t)
					}, i.cleanup = function(e) {
						e.removeClass("vjs-ad-content-resuming"), e.clearTimeout(this._postrollTimeout), e.ads._contentEnding = !1
					}, n
				}(m.getState("AdState"));
				m.registerState("Postroll", w);
				var j = function(e) {
					function t() {
						return e.apply(this, arguments) || this
					}
					_(t, e), t._getName = function() {
						return "ContentPlayback"
					};
					var n = t.prototype;
					return n.init = function(e) {
						e.ads._shouldBlockPlay = !1
					}, n.onAdsReady = function(e) {
						e.ads.debug("Received adsready event (ContentPlayback)"), e.ads.nopreroll_ || (e.ads.debug("Triggered readyforpreroll event (ContentPlayback)"), e.trigger("readyforpreroll"))
					}, n.onReadyForPostroll = function(e) {
						var t = m.getState("Postroll");
						e.ads.debug("Received readyforpostroll event"), this.transitionTo(t)
					}, n.startLinearAdMode = function() {
						var e = m.getState("Midroll");
						this.transitionTo(e)
					}, t
				}(m.getState("ContentState"));
				m.registerState("ContentPlayback", j);
				var I = function(e) {
					function t() {
						return e.apply(this, arguments) || this
					}
					_(t, e), t._getName = function() {
						return "StitchedContentPlayback"
					};
					var n = t.prototype;
					return n.init = function() {
						this.player.ads._shouldBlockPlay = !1
					}, n.onContentChanged = function() {
						this.player.ads.debug("Received contentchanged event (" + this.constructor._getName() + ")")
					}, n.startLinearAdMode = function() {
						var e = m.getState("StitchedAdRoll");
						this.transitionTo(e)
					}, t
				}(m.getState("ContentState"));
				m.registerState("StitchedContentPlayback", I);
				var L = function(e) {
					function t() {
						return e.apply(this, arguments) || this
					}
					_(t, e), t._getName = function() {
						return "StitchedAdRoll"
					};
					var n = t.prototype;
					return n.init = function() {
						this.waitingForAdBreak = !1, this.contentResuming = !1, this.player.ads.adType = "stitched", k.start(this.player)
					}, n.onPlaying = function() {}, n.onContentResumed = function() {}, n.onAdEnded = function() {
						this.endLinearAdMode(), this.player.trigger("ended")
					}, n.endLinearAdMode = function() {
						var e = m.getState("StitchedContentPlayback");
						k.end(this.player), this.transitionTo(e)
					}, t
				}(m.getState("AdState"));
				m.registerState("StitchedAdRoll", L);
				var O = p.isMiddlewareMediatorSupported,
					N = e.getTech("Html5").Events,
					x = {
						timeout: 5e3,
						prerollTimeout: void 0,
						postrollTimeout: void 0,
						debug: !1,
						stitchedAds: !1,
						contentIsLive: void 0,
						liveCuePoints: !0
					},
					D = function(t) {
						var n = this,
							i = e.mergeOptions(x, t),
							r = [];
						N.concat(["firstplay", "loadedalldata"]).forEach(function(e) {
								-1 === r.indexOf(e) && r.push(e)
							}), n.on(r, a), O() || function(t, n) {
								n && e.log("Using cancelContentPlay to block content playback"), t.on("play", f)
							}(n, i.debug), n.setTimeout(function() {
								n.ads._hasThereBeenALoadStartDuringPlayerLife || "" === n.src() || e.log.error("videojs-contrib-ads has not seen a loadstart event 5 seconds after being initialized, but a source is present. This indicates that videojs-contrib-ads was initialized too late. It must be initialized immediately after video.js in the same tick. As a result, some ads will not play and some media events will be incorrect. For more information, see http://videojs.github.io/videojs-contrib-ads/integrator/getting-started.html")
							}, 5e3), n.on("ended", function() {
								n.hasClass("vjs-has-started") || n.addClass("vjs-has-started")
							}), n.on("contenttimeupdate", function() {
								n.removeClass("vjs-waiting")
							}), n.on(["addurationchange", "adcanplay"], function() {
								if(!n.ads.settings.stitchedAds && !n.hasStarted() && (!n.ads.snapshot || n.currentSrc() !== n.ads.snapshot.currentSrc) && n.ads.inAdBreak()) {
									var t = n.play();
									t && t.catch && t.catch(function(t) {
										e.log.warn("Play promise rejected when playing ad", t)
									})
								}
							}), n.on("nopreroll", function() {
								n.ads.debug("Received nopreroll event"), n.ads.nopreroll_ = !0
							}), n.on("nopostroll", function() {
								n.ads.debug("Received nopostroll event"), n.ads.nopostroll_ = !0
							}), n.on("playing", function() {
								n.ads._cancelledPlay = !1, n.ads._pausedOnContentupdate = !1
							}), n.on("play", function() {
								n.ads._playRequested = !0
							}), n.one("loadstart", function() {
								n.ads._hasThereBeenALoadStartDuringPlayerLife = !0
							}), n.on("loadeddata", function() {
								n.ads._hasThereBeenALoadedData = !0
							}), n.on("loadedmetadata", function() {
								n.ads._hasThereBeenALoadedMetaData = !0
							}), n.ads = function(t) {
								return {
									disableNextSnapshotRestore: !1,
									_contentEnding: !1,
									_contentHasEnded: !1,
									_hasThereBeenALoadStartDuringPlayerLife: !1,
									_hasThereBeenALoadedData: !1,
									_hasThereBeenALoadedMetaData: !1,
									_inLinearAdMode: !1,
									_shouldBlockPlay: !1,
									_playBlocked: !1,
									_playRequested: !1,
									adType: null,
									VERSION: "6.7.0",
									reset: function() {
										t.ads.disableNextSnapshotRestore = !1, t.ads._contentEnding = !1, t.ads._contentHasEnded = !1, t.ads.snapshot = null, t.ads.adType = null, t.ads._hasThereBeenALoadedData = !1, t.ads._hasThereBeenALoadedMetaData = !1, t.ads._cancelledPlay = !1, t.ads._shouldBlockPlay = !1, t.ads._playBlocked = !1, t.ads.nopreroll_ = !1, t.ads.nopostroll_ = !1, t.ads._playRequested = !1
									},
									startLinearAdMode: function() {
										t.ads._state.startLinearAdMode()
									},
									endLinearAdMode: function() {
										t.ads._state.endLinearAdMode()
									},
									skipLinearAdMode: function() {
										t.ads._state.skipLinearAdMode()
									},
									stitchedAds: function(t) {
										return void 0 !== t && (e.log.warn("Using player.ads.stitchedAds() as a setter is deprecated, it should be set as an option upon initialization of contrib-ads."), this.settings.stitchedAds = !!t), this.settings.stitchedAds
									},
									videoElementRecycled: function() {
										if(t.ads.shouldPlayContentBehindAd(t)) return !1;
										if(!this.snapshot) throw new Error("You cannot use videoElementRecycled while there is no snapshot.");
										var e = t.tech_.src() !== this.snapshot.src,
											n = t.currentSrc() !== this.snapshot.currentSrc;
										return e || n
									},
									isLive: function(n) {
										return void 0 === n && (n = t), "boolean" == typeof n.ads.settings.contentIsLive ? n.ads.settings.contentIsLive : n.duration() === 1 / 0 || "8" === e.browser.IOS_VERSION && 0 === n.duration()
									},
									shouldPlayContentBehindAd: function(n) {
										if(void 0 === n && (n = t), n) return !!n.ads.settings.liveCuePoints && (!e.browser.IS_IOS && !e.browser.IS_ANDROID && n.duration() === 1 / 0);
										throw new Error("shouldPlayContentBehindAd requires a player as a param")
									},
									shouldTakeSnapshots: function(e) {
										return void 0 === e && (e = t), !this.shouldPlayContentBehindAd(e) && !this.stitchedAds()
									},
									isInAdMode: function() {
										return this._state.isAdState()
									},
									isWaitingForAdBreak: function() {
										return this._state.isWaitingForAdBreak()
									},
									isContentResuming: function() {
										return this._state.isContentResuming()
									},
									isAdPlaying: function() {
										return this._state.inAdBreak()
									},
									inAdBreak: function() {
										return this._state.inAdBreak()
									},
									removeNativePoster: function() {
										var e = t.$(".vjs-tech");
										e && e.removeAttribute("poster")
									},
									debug: function() {
										if(this.settings.debug) {
											for(var t = arguments.length, n = new Array(t), i = 0; i < t; i++) n[i] = arguments[i];
											1 === n.length && "string" == typeof n[0] ? e.log("ADS: " + n[0]) : e.log.apply(e, ["ADS:"].concat(n))
										}
									}
								}
							}(n), n.ads.settings = i, i.stitchedAds = !!i.stitchedAds, i.stitchedAds ? n.ads._state = new(m.getState("StitchedContentPlayback"))(n) : n.ads._state = new(m.getState("BeforePreroll"))(n), n.ads._state.init(n), n.ads.cueTextTracks = u, n.ads.adMacroReplacement = l.bind(n),
							function(e) {
								e.ads.contentSrc = e.currentSrc(), e.ads._seenInitialLoadstart = !1, e.on("loadstart", function() {
									if(!e.ads.inAdBreak()) {
										var t = e.currentSrc();
										t !== e.ads.contentSrc && (e.ads._seenInitialLoadstart && e.trigger({
											type: "contentchanged"
										}), e.trigger({
											type: "contentupdate",
											oldValue: e.ads.contentSrc,
											newValue: t
										}), e.ads.contentSrc = t), e.ads._seenInitialLoadstart = !0
									}
								})
							}(n), n.on("contentchanged", n.ads.reset);
						var s = function() {
							var t = n.textTracks();
							if(!n.ads.shouldPlayContentBehindAd(n) && n.ads.inAdBreak() && n.tech_.featuresNativeTextTracks && e.browser.IS_IOS && !Array.isArray(n.textTracks()))
								for(var i = 0; i < t.length; i++) {
									var r = t[i];
									"showing" === r.mode && (r.mode = "disabled")
								}
						};
						n.ready(function() {
							n.textTracks().addEventListener("change", s)
						}), n.on(["play", "playing", "ended", "adsready", "adscanceled", "adskip", "adserror", "adtimeout", "adended", "ads-ad-started", "contentchanged", "dispose", "contentresumed", "readyforpostroll", "nopreroll", "nopostroll"], function(e) {
							n.ads._state.handleEvent(e.type)
						}), n.on("dispose", function() {
							n.ads.reset(), n.textTracks().removeEventListener("change", s)
						})
					};
				D.VERSION = "6.7.0",
					function(t) {
						! function() {
							if(e.getPlugin) return Boolean(e.getPlugin("ads"));
							var t = e.getComponent("Player");
							return Boolean(t && t.prototype.ads)
						}() && ((e.registerPlugin || e.plugin)("ads", t), g() && !e.usingContribAdsMiddleware_ && (e.use("*", v), e.usingContribAdsMiddleware_ = !0, e.log.debug("Play middleware has been registered with videojs")))
					}(D);
				var R;
				(e.registerPlugin || e.plugin)("contribAds6Shim", function() {
					var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
						n = this,
						i = void 0,
						r = void 0,
						a = 0,
						s = !1;
					this.contribAds6Shim = {
						VERSION: "1.0.1"
					}, n.ads.state = i = r = "content-set", Object.defineProperty(n.ads, "state", {
						get: function() {
							return(!0 === t.warnOnGetState || "number" == typeof t.warnOnGetState && a < t.warnOnGetState) && (e.log.warn("player.ads.state is deprecated. Please use the public methods provided by videojs-contrib-ads 6 instead: https://github.com/videojs/videojs-contrib-ads#public-methods"), a++), t.stateUsageEvent && !s && (n.trigger({
								type: "usage",
								name: "contrib-ads-state-access"
							}), s = !0), r
						},
						set: function(n) {
							n !== r && (i = r, r = n, t.debug && e.log("CA6Shim: " + i + " -> " + r))
						}
					}), n.on("contentchanged", function() {
						n.paused() ? n.ads.state = "content-set" : n.ads.state = "ads-ready?"
					}), n.on("play", function() {
						"content-set" === r ? n.ads.state = "ads-ready?" : "ads-ready" === r && (n.ads.state = "preroll?")
					}), n.on("adsready", function() {
						"content-set" === r ? n.ads.state = "ads-ready" : "ads-ready?" === r && (n.ads.state = "preroll?")
					}), n.on(["adserror", "adtimeout", "adskip"], function() {
						"ads-ready?" !== r && "preroll?" !== r || (n.ads.state = "content-playback")
					}), n.on("adstart", function() {
						n.ads.state = "ad-playback"
					}), n.on("adend", function() {
						n.ads.state = "content-resuming"
					}), n.on("playing", function() {
						"content-playback" !== r && (n.trigger("contentplayback"), t.debug && e.log("CA6Shim: Triggered contentplayback")), n.ads.state = "content-playback"
					}), n.on("contentended", function() {
						"content-playback" === r && (n.ads.state = "postroll?")
					}), n.on("ended", function() {
						n.ads.state = "content-playback"
					})
				});
				var U = function(e, t) {
						var n = t.cues,
							i = t.label,
							r = t.inBandMetadataTrackDispatchType,
							a = t.kind;
						if("metadata" === a) return "media-cues" === i || (!(!r || "metadata" !== a) || (!n || !n.length || e.ima3.cueState_.cueModule.isSupportedAdCue(e, n[0])))
					},
					M = function(t, n, i, r, a) {
						0 === r && t.ima3.cueState_.prerollPlayed || a <= 1 && t.ima3.cueState_.postrollPlayed || (! function(t, n, i) {
							var r, a = Math.abs(i - t.duration()),
								s = Math.abs(i - t.currentTime());
							if(0 === i) {
								if(t.ima3.cueState_.prerollPlayed) return;
								t.ima3.cueState_.prerollPlayed = !0, t.ads.adType = "preroll"
							}
							if(a <= 1) {
								if(t.ima3.cueState_.postrollPlayed) return;
								t.ima3.cueState_.postrollPlayed = !0
							}
							s >= 1 || (r = !t.ima3.settings.useMediaCuePoints && n.serverUrl ? n.serverUrl : t.ima3.settings.serverUrl, r = t.ima3.adMacroReplacement(r), n.duration && (/\?/.test(r) ? r += "&breaklength=" + n.duration : r += "?breaklength=" + n.duration), t.ima3.isReady_ && (e.log("Oncue ad request at " + i + " seconds"), t.ima3.adrequest(r)))
						}(t, n, r), t.ima3.cueState_.usedActiveCues[i] = !0)
					},
					B = function(e, t, n, i, r) {
						0 === i && 0 === e.currentTime() && (e.ima3.cueState_.prerollPlayed || e.ima3.cueState_.prerollHandledEarly || (e.paused() && !e.ads._playRequested ? (e.ima3.cueState_.prerollHandledEarly = !0, e.ima3.oneUnlessContentUpdate_("play", function() {
							M(e, t, n, i, r)
						})) : e.ads.isInAdMode() && !e.ads.isContentResuming() && e.ads._playRequested && M(e, t, n, i, r)))
					},
					F = function(e) {
						return e.mediainfo ? Math.max(e.duration(), e.mediainfo.duration) : e.duration()
					},
					V = function(t, n, i, r) {
						var a, s = F(t),
							o = Math.abs(r - s);
						t.ads.isAdPlaying() && ((a = n) && a.text && "ad" === a.text.toLowerCase() || a && a.name && "adcue" === a.name.toLowerCase()) || (i ? t.ima3.cueState_.usedActiveCues[i] || n.name && "adcancel" === n.name.toLowerCase() || (0 === r ? B(t, n, i, r, o) : o <= 1 && !t.ima3.cueState_.postrollHandled ? (t.ima3.cueState_.postrollHandled = !0, t.ima3.oneUnlessContentUpdate_("contentended", function() {
							M(t, n, i, r, o)
						})) : t.ima3.isReady_ && !t.ads.isInAdMode() && M(t, n, i, r, o)) : e.log.error("The cue does not have an ID and cannot be used", n))
					},
					q = function(t, n, i, r) {
						t.ima3.settings.useMediaCuePoints || "adCancel" !== n.name || !t.ima3.adsManager || t.ima3.cueState_.usedActiveCues[i] || (t.ima3.cueState_.usedActiveCues[i] = !0, t.ima3.adsManager.stop(), e.log("Cancelling oncue ad at " + r + " seconds"))
					},
					H = function(e) {
						return function() {
							var t = this.activeCues;
							if(!e.scrubbing() && t && t.length) {
								var n = [t[t.length - 1]];
								if(!U(e, this)) return void this.removeEventListener("cuechange", e.ima3.cueState_.adCueChangeHandler);
								e.ima3.cueState_.cueModule.processAdTrack(e, n, V, q)
							}
						}
					},
					G = function(e, t) {
						var n, i, r = t.cues;
						if(U(e, t)) {
							if(r && void 0 !== r.length) {
								for(var a = 0; a < r.length; a++) {
									var s = e.mediainfo ? Math.max(e.duration(), e.mediainfo.duration) : e.duration();
									Math.abs(r[a].startTime - s) <= 1 ? n = r[a] : 0 === r[a].startTime && (i = r[a])
								}
								if(i || "media-cues" !== t.label) {
									if(i) {
										var o = e.ima3.cueState_.cueModule.getSupportedAdCue(e, i),
											l = e.ima3.cueState_.cueModule.getCueId(e, i),
											u = i.startTime,
											c = Math.abs(u - F(e));
										B(e, o, l, u, c)
									}
								} else e.trigger("nopreroll");
								n || "media-cues" !== t.label || e.trigger("nopostroll")
							}
							t.addEventListener("cuechange", e.ima3.cueState_.adCueChangeHandler)
						}
					},
					Y = R = {
						init: function(e, t) {
							t.useMediaCuePoints || e.on("loadedmetadata", function() {
								e.trigger("nopreroll"), R.liveCuePointHandler(e, e.ads.cueTextTracks)
							}), e.trigger("adsready"), e.on("contentchanged", function() {
								e.trigger("adsready")
							})
						},
						liveCuePointHandler: function(t, n) {
							! function(e, t) {
								e.ima3.cueState_ = {
									cueModule: t,
									adCueChangeHandler: H(e),
									usedActiveCues: {},
									prerollHandledEarly: !1,
									prerollPlayed: !1,
									postrollHandled: !1,
									postrollPlayed: !1
								}
							}(t, n), t.ima3.cueState_.cueModule.setMetadataTrackMode = function(e) {
								e.mode = "hidden"
							}, t.ima3.cueState_.cueModule.getCueId = function(e, t) {
								var n = e.ima3.cueState_.cueModule.getSupportedAdCue(e, t);
								return n ? n.id : null
							}, t.ima3.cueState_.cueModule.isSupportedAdCue = function(e, t) {
								return null !== e.ima3.cueState_.cueModule.getSupportedAdCue(e, t)
							}, t.ima3.cueState_.cueModule.getSupportedAdCue = function(t, n) {
								return "oncue" !== t.ima3.settings.requestMode || t.ima3.settings.useMediaCuePoints ? null : function(t) {
									var n;
									if(t && !t.value || "TXXX" !== t.value.key) return null;
									try {
										n = JSON.parse(t.value.data)
									} catch(t) {
										return e.log.error("ERROR: Parsing JSON. Please confirm that JSON is valid.", t.message), null
									}
									if(!n.name) return null;
									var i = n.name.toLowerCase();
									return "adcue" !== i && "adcancel" !== i ? null : n
								}(n)
							}, t.ima3.cueState_.cueModule.processMetadataTracks(t, G)
						}
					};

				function z(e) {
					if("string" == typeof e) {
						var t = e.match(/^([\d]+)\.([\d]+)\.([\d]+)/);
						if(t) return [Number(t[1]), Number(t[2]), Number(t[3])]
					}
				}
				var K, W = z("6.7.0");

				function X(t) {
					return e.getPlugin ? e.getPlugin(t) : e.getComponent("Player").prototype[t]
				}

				function J(e) {
					return {
						width: parseInt(K.computedStyle(e.el(), "width"), 10),
						height: parseInt(K.computedStyle(e.el(), "height"), 10)
					}
				}

				function Q(t) {
					if(+t < 0) return e.log.error("duration " + t + " can't be a negative number"), "00:00:00.000";
					if(+t >= 86400) return e.log.error("duration " + t + " can't be over 24h"), "00:00:00.000";
					var n = 1e3 * t,
						i = parseInt(n % 1e3, 10),
						r = parseInt(n / 1e3 % 60, 10),
						a = parseInt(n / 6e4 % 60, 10),
						s = parseInt(n / 36e5 % 24, 10);
					return i < 10 ? i = "00" + i : i < 100 && (i = "0" + i), (s = s < 10 ? "0" + s : s) + ":" + (a = a < 10 ? "0" + a : a) + ":" + (r = r < 10 ? "0" + r : r) + "." + i
				}

				function Z(e) {
					e.ima3.adsManager && (e.ima3.adsManager.destroy(), e.ima3.adsManager = null), e.ima3.managerCleanup && (e.ima3.managerCleanup(), e.ima3.managerCleanup = null)
				}

				function $(e) {
					for(var t = 1; t < arguments.length; t++) {
						var n = arguments[t];
						for(var i in n) n.hasOwnProperty(i) && (e[i] = n[i])
					}
					return e
				}
				var ee = function(e) {
						if(void 0 !== e) return "application/javascript" === e.getContentType();
						throw new Error("Cannot check if the current ad is a VPAID when there is no ad.")
					},
					te = function(e) {
						return !(!e || 0 !== e.getCuePoints().length)
					},
					ne = K = {
						computedStyle: function(e, n) {
							return "function" == typeof getComputedStyle ? t.getComputedStyle(e)[n] : e.currentStyle[n]
						},
						getPlayerDimensions: J,
						secondsToTime: Q,
						destroyAdsManager: Z,
						extend: $,
						loadScript: function(e, t) {
							var i = n.createElement("script"),
								r = n.querySelector("head");
							i.async = !0, i.src = e, i.onload = i.onreadystatechange = function(e, n) {
								(n || !i.readyState || /loaded|complete/.test(i.readyState)) && (i.onload = i.onreadystatechange = null, i.parentNode.removeChild(i), i = null, t(n))
							}, r.insertBefore(i, r.firstChild)
						},
						isEconomicsFree: function(e) {
							return "object" == typeof e.mediainfo && "FREE" === e.mediainfo.economics
						},
						isVpaid: ee,
						isVast: te,
						isVmap: function(e) {
							return !(!e || 0 === e.getCuePoints().length)
						},
						includesPreroll: function(e) {
							return te(e) || e.getCuePoints().indexOf(0) >= 0
						},
						includesPostroll: function(e) {
							return e.getCuePoints().indexOf(-1) >= 0
						},
						usingLiveAdCuepoints: function(e) {
							return "oncue" === e.requestMode && !e.useMediaCuePoints
						},
						usingMediaCuepoints: function(e) {
							return "oncue" === e.requestMode && e.useMediaCuePoints
						}
					},
					ie = ["audioTrackButton", "captionsButton", "chaptersButton", "descriptionsButton", "subsCapsButton", "subtitlesButton"],
					re = function(e) {
						return [].concat(e).filter(function(e) {
							return -1 === ie.indexOf(e)
						})
					},
					ae = function(t, n) {
						if(!("adControlBar" in n)) {
							var i = {
									name: "adControlBar"
								},
								r = t.getChild("controlBar");
							r && r.getChild("volumeMenuButton") ? i.volumeMenuButton = {
								vertical: r.getChild("volumeMenuButton").options_.vertical
							} : r && r.getChild("volumePanel") && (i.volumePanel = {
								inline: r.getChild("volumePanel").options_.inline
							}), n.adControlBar = $({}, t.options_.children.controlBar, i)
						}
						if(!n.adControlBar.hasOwnProperty("children")) {
							var a = e.getComponent("ControlBar");
							n.adControlBar.children = re(a.prototype.options_.children)
						}
                        n.showVpaidControls || t.addClass("vjs-vpaid-controls-disabled"), t.on("ima3-content-pause-requested", function(e) {
						 	t.addClass("ima3-ad-loading"), t.trigger("ads-pod-started"), "application/javascript" === e.originalEvent.getAd().getContentType() && t.addClass("vjs-vpaid-playing")
                        }), t.on("ima3-complete", function(e) {
						 	var n = t.$(".vjs-ad-control-bar .vjs-play-progress");
						 	n.className += " vjs-play-progress-resetting", n.style.width = "0"
                        }), t.on("ima3-started", function(e) {
                            var n = t.$(".vjs-ad-control-bar .vjs-play-progress");
						 	n.className = n.className.replace(" vjs-play-progress-resetting", "")
                        })
					},
					se = function(t, n) {
						var i = new(e.getComponent("ControlBar"))(n, t.ima3.settings.adControlBar);
						i.addClass("vjs-ad-control-bar"), t.addClass("vjs-ad-controls"), t.addChild(i), t.ima3.adControlBar = i, !e.browser.IS_IOS && !e.browser.IS_ANDROID || t.tech_.featuresVolumeControl || t.muted() || i.volumeMenuButton && i.volumeMenuButton.addClass("vjs-hidden")
					},
					oe = function(e) {
						e.on("ads-ad-started", function() {
							e.ads.inAdBreak() && !e.ads.videoElementRecycled() && (e.ima3.volume = e.volume(), e.muted() ? e.ima3.adPlayer.muted(!0) : e.ima3.adPlayer.volume(e.volume() || e.ads.preAdVolume_)), e.ima3.adPlayer.trigger("durationchange")
						}), e.on(["ads-ad-ended", "ads-ad-skipped"], function() {
							e.ads.inAdBreak() && !e.ads.videoElementRecycled() && (e.volume(e.ima3.adPlayer.volume()), e.ads.preAdVolume_ && (e.ads.preAdVolume_ = e.volume()), e.muted(e.ima3.adPlayer.muted()))
						})
					},
					le = function(n, i) {
						var r = (e.ima3.AdPlayer = e.extend(e.getComponent("Component"), {
							constructor: function() {
								var t = [this].concat(Array.prototype.slice.call(arguments));
								e.getComponent("Component").apply(this, t)
							},
							buffered: function() {
								return []
							},
							language: function(e) {
								return void 0 === e ? this.options_.contentPlayer.language_ : this.options_.contentPlayer.language(e)
							},
							languages: function() {
								return this.options_.contentPlayer.languages()
							},
							localize: function(e) {
								return this.options_.contentPlayer.localize(e)
							},
							remainingTime: function() {
								return this.duration() - this.currentTime()
							},
							remainingTimeDisplay: function() {
								return Math.floor(this.duration()) - Math.floor(this.currentTime())
							},
							exitFullscreen: function() {
								return this.options_.contentPlayer.exitFullscreen()
							},
							reportUserActivity: function() {},
							requestFullscreen: function() {
								return this.options_.contentPlayer.requestFullscreen()
							},
							el: function() {
								return this.options_.contentPlayer.el()
							},
							audioTracks: function() {},
							textTracks: function() {},
							videoTracks: function() {},
							remoteTextTracks: function() {},
							addTextTrack: function() {},
							addRemoteTextTrack: function() {},
							removeRemoteTextTrack: function() {},
							scrubbing: function() {},
							ended: function() {},
							lastVolume_: function() {
								var e;
								return(e = this.options_.contentPlayer).lastVolume_.apply(e, arguments)
							},
							handleKeyDown: function() {}
						}), e.ima3.Html5.adPlayer = function(n, i) {
							var r = i.contentPlayer,
								a = new e.ima3.AdPlayer(i),
								s = !0;
							return a.currentTime = function() {
									var e = a.duration();
									if(!e || !r.ima3.adsManager) return 0;
									var t = r.ima3.adsManager.getRemainingTime();
									return t <= 0 || t > e ? 0 : t > 0 ? e - t : void 0
								}, a.duration = function() {
									var e = r.ima3.currentAd;
									if(e) {
										var t = e.getDuration();
										return t > 0 ? t : 0
									}
									return 0
								}, a.pause = function() {
									s = !0, r.ima3.adsManager.pause()
								}, a.paused = function() {
									return s
								}, a.play = function() {
									s = !1, r.ima3.adsManager.resume(), a.trigger("play")
								}, a.isFullscreen = function() {
									return r.isFullscreen()
								}, a.requestFullscreen = function() {
									return r.requestFullscreen()
								}, Object.defineProperty(a, "fsApi_", {
									get: function() {
										return r.fsApi_
									}
								}), a.volume = function(t) {
									if(r.ima3 && r.ima3.adsManager) {
										var n = r.ima3.adsManager.getVolume();
										return void 0 !== t && (r.ima3.adsManager.setVolume(t), r.ima3.volume = t || r.ima3.volume, a.trigger("volumechange")), n || r.ima3.volume
									}
									e.log.error("Too early to set Volume. IMA3 is not loaded")
								}, a.muted = function(e) {
									var t = r.ima3.adsManager.getVolume();
									return void 0 !== e ? 0 === a.volume(e ? 0 : r.ima3.volume) : 0 === t
								}, r.on("ima3-started", function() {
									r.removeClass("vjs-ima3-paused"), a.trigger("play"), s = !1
								}), r.on("ima3-resumed", function() {
									r.removeClass("vjs-ima3-paused"), a.trigger("play"), s = !1
								}), r.on("ima3-paused", function() {
									r.addClass("vjs-ima3-paused"), a.trigger("pause"), s = !0
								}),
								function e() {
									r.ads.isAdPlaying() && !a.paused() && a.trigger("timeupdate"), t.setTimeout(e, 1e3)
								}(), a
						}, e.ima3.Html5.adPlayer)(i, {
							contentPlayer: n
						});
						return n.ima3.adPlayer = r, r
					},
					ue = "data:video/mp4;base64,AAAAHGZ0eXBpc29tAAACAGlzb21pc28ybXA0MQAAAAhmcmVlAAAC721kYXQhEAUgpBv/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3pwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcCEQBSCkG//AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADengAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAAAsJtb292AAAAbG12aGQAAAAAAAAAAAAAAAAAAAPoAAAALwABAAABAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAB7HRyYWsAAABcdGtoZAAAAAMAAAAAAAAAAAAAAAIAAAAAAAAALwAAAAAAAAAAAAAAAQEAAAAAAQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAACRlZHRzAAAAHGVsc3QAAAAAAAAAAQAAAC8AAAAAAAEAAAAAAWRtZGlhAAAAIG1kaGQAAAAAAAAAAAAAAAAAAKxEAAAIAFXEAAAAAAAtaGRscgAAAAAAAAAAc291bgAAAAAAAAAAAAAAAFNvdW5kSGFuZGxlcgAAAAEPbWluZgAAABBzbWhkAAAAAAAAAAAAAAAkZGluZgAAABxkcmVmAAAAAAAAAAEAAAAMdXJsIAAAAAEAAADTc3RibAAAAGdzdHNkAAAAAAAAAAEAAABXbXA0YQAAAAAAAAABAAAAAAAAAAAAAgAQAAAAAKxEAAAAAAAzZXNkcwAAAAADgICAIgACAASAgIAUQBUAAAAAAfQAAAHz+QWAgIACEhAGgICAAQIAAAAYc3R0cwAAAAAAAAABAAAAAgAABAAAAAAcc3RzYwAAAAAAAAABAAAAAQAAAAIAAAABAAAAHHN0c3oAAAAAAAAAAAAAAAIAAAFzAAABdAAAABRzdGNvAAAAAAAAAAEAAAAsAAAAYnVkdGEAAABabWV0YQAAAAAAAAAhaGRscgAAAAAAAAAAbWRpcmFwcGwAAAAAAAAAAAAAAAAtaWxzdAAAACWpdG9vAAAAHWRhdGEAAAABAAAAAExhdmY1Ni40MC4xMDE=";

				function ce(e) {
					for(var t = e.match(/^data:([^;]+);base64,(.+)$/i), n = t[1], i = t[2], r = atob(i), a = r.length, s = Math.ceil(a / 1024), o = new Array(s), l = 0; l < s; ++l) {
						for(var u = 1024 * l, c = Math.min(u + 1024, a), d = new Array(c - u), f = u, p = 0; f < c; ++p, ++f) d[p] = r[f].charCodeAt(0);
						o[l] = new Uint8Array(d)
					}
					return new Blob(o, {
						type: n
					})
				}

				function de(e) {
					return Object.assign({
						muted: !1,
						timeout: 250,
						inline: !1,
						blob: !1
					}, e)
				}

				function fe(e, t) {
					var n = e.muted,
						i = e.timeout,
						r = e.inline,
						a = t(),
						s = a.element,
						o = a.source,
						l = void 0,
						u = void 0,
						c = void 0;
					return s.muted = n, !0 === n && s.setAttribute("muted", "muted"), !0 === r && s.setAttribute("playsinline", "playsinline"), s.src = o, new Promise(function(e) {
						l = s.play(), u = setTimeout(function() {
							c(!1, new Error("Timeout " + i + " ms has been reached"))
						}, i), c = function(t) {
							var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
							clearTimeout(u), e({
								result: t,
								error: n
							})
						}, void 0 !== l ? l.then(function() {
							return c(!0)
						}).catch(function(e) {
							return c(!1, e)
						}) : c(!0)
					})
				}
				var pe = {
						audio: function(e) {
							return fe(e = de(e), function() {
								var t = e.blob ? URL.createObjectURL(ce(ue)) : "data:audio/mpeg;base64,/+MYxAAAAANIAUAAAASEEB/jwOFM/0MM/90b/+RhST//w4NFwOjf///PZu////9lns5GFDv//l9GlUIEEIAAAgIg8Ir/JGq3/+MYxDsLIj5QMYcoAP0dv9HIjUcH//yYSg+CIbkGP//8w0bLVjUP///3Z0x5QCAv/yLjwtGKTEFNRTMuOTeqqqqqqqqqqqqq/+MYxEkNmdJkUYc4AKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq";
								return {
									element: document.createElement("audio"),
									source: t
								}
							})
						},
						video: function(e) {
							return fe(e = de(e), function() {
								var t = e.blob ? URL.createObjectURL(ce(ue)) : ue;
								return {
									element: document.createElement("video"),
									source: t
								}
							})
						}
					},
					he = function(e, t) {
						return t.reduce(function(t, n) {
							return t.then(function() {
								if(!e.ima3.canAutoPlayVideo && !e.ima3.canAutoPlayInlineVideo) return function e(t, n) {
									return pe[n.method](n.params).then(function(i) {
										var r = i.result,
											a = i.error;
										if(t.ima3[n.prop] = r, a && "Error" === a.name && n.params.retryAfterTimeout && (!t.ima3.canAutoPlayVideo || !t.ima3.canAutoPlayInlineVideo)) return n.params.retryAfterTimeout--, e(t, n)
									})
								}(e, n)
							})
						}, Promise.resolve()).then(function() {
							return Promise.resolve()
						})
					};

				function ve(n) {
					var i, r = e.browser.IS_IOS,
						a = e.browser.IS_IPAD,
						s = e.browser.IS_SAFARI && e.browser.TOUCH_ENABLED;
					return i = a || s || r && n.playsinline() ? [{
						prop: "canAutoPlayMutedVideo",
						method: "video",
						params: {
							retryAfterTimeout: 2,
							timeout: 250,
							muted: !0
						}
					}] : r && n.playsinline() ? [{
						prop: "canAutoPlayMutedInlineVideo",
						method: "video",
						params: {
							retryAfterTimeout: 2,
							timeout: 250,
							muted: !0,
							inline: !0
						}
					}] : [{
						prop: "canAutoPlayVideo",
						method: "video",
						params: {
							retryAfterTimeout: 2,
							timeout: 250,
							muted: !1
						}
					}, {
						prop: "canAutoPlayMutedVideo",
						method: "video",
						params: {
							retryAfterTimeout: 2,
							timeout: 250,
							muted: !0
						}
					}], t.Promise ? n.autoplay() ? n.getAutoplayConditions ? n.getAutoplayConditions().then(function(e) {
						e.muted && n.muted(!0), e.inline && n.playsinline(!0), e.never || n.play()
					}) : (n.ima3.canAutoPlayTestsResult || (n.ima3.canAutoPlayTestsResult = he(n, i)), n.ima3.canAutoPlayTestsResult) : Promise.resolve() : (n.ima3.canAutoPlayVideo = !0, n.ima3.canAutoPlayMutedVideo = !0, {
						then: function(e) {
							e()
						}
					})
				}
				var ge, me = function(t) {
						"string" == typeof t.autoplay() && e.log.warn('Brightcove IMA3: Special string-based autoplay values (such as "' + t.autoplay() + '") are not currently supported with this plugin.'), t.addClass("vjs-ima3-not-playing-yet"), t.ready(function() {
							ve(t).then(function() {
								t.autoplay() && !t.ima3.canAutoPlayVideo && t.ima3.canAutoPlayMutedVideo && (t.muted(!0), t.play()), e.browser.IS_IOS && t.playsinline() && !1 !== t.autoplay() && t.ima3.canAutoPlayMutedInlineVideo && (t.muted(!0), t.play())
							})
						}), t.on(["playing"], function(e) {
							t.removeClass("vjs-ima3-not-playing-yet")
						}), !t.autoplay() || e.browser.IS_IOS || e.browser.IS_ANDROID || t.addClass("vjs-ima3-autoplay")
					},
					ye = ge = {
						_addPlayerDimensions: function(t, n) {
							(0, e.ima3.extend)(n, {
								linearAdSlotWidth: t.width,
								linearAdSlotHeight: t.height,
								nonLinearAdSlotWidth: t.width,
								nonLinearAdSlotHeight: t.height
							})
						},
						_addVmap: function(e, t, n) {
							e.ima3.isReady_ ? t.adsResponse = n : e.ima3.oneUnlessContentUpdate_("ima3-ready", function() {
								t.adsResponse = n
							})
						},
						_adsRequest: function(e, n, i) {
							var r = e.ima3.settings.requestMode,
								a = e.ima3.settings.useMediaCuePoints,
								s = t.google.ima;
							if(!s || s && !s.AdsRequest) throw new Error("An ad request was made before the plugin is ready");
							var o = new s.AdsRequest;
							return ge._addPlayerDimensions(ne.getPlayerDimensions(e), o), "oncue" === r && a && i ? ge._addVmap(e, o, i) : o.adTagUrl = n, e.ima3.adsRequest = o, ve(e).then(function() {
								o.setAdWillPlayMuted(e.muted()), o.setAdWillAutoPlay(e.autoplay()), e.ima3.adsLoader.requestAds(o), e.trigger("ads-request")
							})
						},
						_handleEconomicsFree: function(e) {
							e.trigger("nopreroll"), e.trigger("nopostroll")
						},
						_isRepeatForSourceAllowed: function(e) {
							var t = e.ima3.settings.requestMode;
							return "onload" !== t && "onplay" !== t
						},
						_isRepeatForSource: function(e) {
							return e.ima3.lastSrc_ === e.currentSrc()
						},
						_handleMissingAdTagUrl: function(e) {
							e.trigger("adscanceled"), e.trigger("nopreroll"), e.trigger("nopostroll")
						},
						_afterServerUrlFunctionCheck: function(e, t, n) {
							var i, r = e.ima3.settings.requestMode;
							null != t && (i = e.ima3.adMacroReplacement(t)), "oncue" === r || i ? ge._adsRequest(e, i, n) : ge._handleMissingAdTagUrl(e)
						},
						_handleServerUrlFunctionResponse: function(e, t) {
							ne.isEconomicsFree(e) ? ge._handleEconomicsFree(e) : ge._afterServerUrlFunctionCheck(e, t)
						},
						_afterPlay: function(e, t, n) {
							var i = e.ima3.settings.useMediaCuePoints;
							ne.isEconomicsFree(e) ? ge._handleEconomicsFree(e) : (i || (t = t || e.ima3.settings.serverUrl), i || "function" != typeof t ? ge._afterServerUrlFunctionCheck(e, t, n) : t(function(t) {
								ge._handleServerUrlFunctionResponse(e, t)
							}))
						},
						_shouldWaitUntilPlay: function(e) {
							var t = e.ima3.settings.requestMode,
								n = e.ima3.settings.useMediaCuePoints;
							return("onplay" === t || "oncue" === t && n) && !e.ima3._playSeen && e.paused() && !e.ads._pausedOnContentupdate
						},
						_waitUntilPlay: function(e, t, n) {
							ne.isEconomicsFree(e) ? ge._handleEconomicsFree(e) : (e.ima3._requestAdsOnPlay = function() {
								ge._afterPlay(e, t, n)
							}, e.one("play", e.ima3._requestAdsOnPlay))
						},
						requestAds: function(t, n, i) {
							!ge._isRepeatForSource(t) || ge._isRepeatForSourceAllowed(t) ? ge._shouldWaitUntilPlay(t) ? ge._waitUntilPlay(t, n, i) : ge._afterPlay(t, n, i) : e.log("Cancelling repeat adsRequest for " + t.currentSrc())
						}
					},
					_e = function(e) {
						e.trigger("nopreroll"), e.trigger("nopostroll")
					},
					be = function(t, n) {
						n.ima3.isReady_ ? n.mediainfo && "FREE" === n.mediainfo.economics ? e.log("On demand adRequest attempted on video with advertising disabled.") : t ? (e.log("Clearing any previous VAST ad data and triggering ondemand adrequest."), n.ads.startLinearAdMode(), Z(n), ye.requestAds(n, t), n.addClass("ima3-ad-loading")) : e.log("On demand adRequest attempted without an adTagUrl!") : e.log.error("Cannot make an ad request when the plugin is not ready. Skipping ad...")
					},
					Ae = {
						0: "PREROLL",
						"-1": "POSTROLL"
					},
					Se = function(e, t, n) {
						"" !== n && (e.currentAdEventInfo[t] ? e.currentAdEventInfo[t].push(n) : e.currentAdEventInfo[t] = [n])
					},
					Te = function(e, t) {
						void 0 !== e.ima3.currentAd && (e.ads.ad.id = e.ima3.currentAd.getAdId(), e.ads.ad.duration = e.ima3.currentAd.getDuration(), e.ads.ad.currentTime = e.ima3.adsManager ? e.ima3.currentAd.getDuration() - e.ima3.adsManager.getRemainingTime() : e.ima3.currentAd.getDuration(), e.ads.ad.timeOffset = e.ima3.currentAd.getAdPodInfo().getTimeOffset(), e.ads.ad.index = e.ima3.currentAd.getAdPodInfo().getAdPosition() - 1, e.ads.ad.type = Ae[e.ima3.currentAd.getAdPodInfo().getTimeOffset()] || "MIDROLL", e.ads.pod.id = e.ima3.currentAd.getAdPodInfo().getPodIndex(), e.ads.pod.size = e.ima3.currentAd.getAdPodInfo().getTotalAds(), "ima3-started" === t && (! function(e, t) {
						    if(void 0 !== t) {
						 		var n = e.ima3;
						 		n.currentAdEventInfo.adPodId = e.ads.pod.id, n.currentAdEventInfo.adPodLength = e.ads.pod.size, n.currentAdEventInfo.adType = e.ads.adType, Se(n, "adId", e.ads.ad.id), Se(n, "creativeLength", e.ads.ad.duration), Se(n, "creativeIndex", e.ads.ad.index), Se(n, "creativeId", t.getCreativeId()), Se(n, "creativeAdId", t.getCreativeAdId()), Se(n, "creativeFormat", t.getContentType()), Se(n, "creativeUrl", t.getMediaUrl()), Se(n, "surveyUrl", t.getSurveyUrl()), Se(n, "adTitle", t.getTitle()), Se(n, "wrapperCreativeIds", t.getWrapperCreativeIds()), Se(n, "advertiserName", t.getAdvertiserName()), Se(n, "dealId", t.getDealId()), Se(n, "adSystem", t.getAdSystem()), Se(n, "wrapperAdSystems", t.getWrapperAdSystems())
						 	}
						}(e, e.ima3.currentAd), Se(e.ima3, "started", e.ads.ad.index))), "ima3-complete" === t && Se(e.ima3, "completed", e.ads.ad.index)
					},
					ke = function(e, t, n) {
						var i = {},
							r = t || "";
						if(e.bcinfo && (i["{player.url}"] = e.bcinfo.scriptUrl), n && n.metadata && -1 !== t.indexOf("{mediainfo.ad_keys}")) {
							var a = encodeURIComponent(n.metadata);
							r = t.replace("{mediainfo.ad_keys}", a)
						}
						return e.ads.adMacroReplacement(r, !0, i)
					};

				function Ee(e) {
					var t = e.mediainfo,
						n = e.ima3.settings.serverUrl;
					if(t && "AD_SUPPORTED" === t.economics && t.cuePoints.length > 0) {
						for(var i = '<vmap:VMAP xmlns:vmap="http://www.iab.net/videosuite/vmap" version="1.0">\n', r = !1, a = 0; a < t.cuePoints.length; a++)
							if("AD" === t.cuePoints[a].type) {
								r = !0, t.cuePoints[a].time < 1 ? i += '<vmap:AdBreak timeOffset="start" breakType="linear" breakId="' + t.cuePoints[a].name + '">\n' : t.duration - t.cuePoints[a].time < 1 ? i += '<vmap:AdBreak timeOffset="end" breakType="linear" breakId="' + t.cuePoints[a].name + '">\n' : i += '<vmap:AdBreak timeOffset="' + Q(t.cuePoints[a].time) + '" breakType="linear" breakId="' + t.cuePoints[a].name + '">\n';
								var s = ke(e, n, t.cuePoints[a]);
								i += ' <vmap:AdSource id="' + t.cuePoints[a].id + '" allowMultipleAds="true" followRedirects="true">\n<vmap:AdTagURI templateType="vast3">\n<![CDATA[' + s + "]]>\n</vmap:AdTagURI>\n</vmap:AdSource>\n</vmap:AdBreak>\n"
							}
						return i += "</vmap:VMAP>", r || (i = null), i
					}
				}
				var Pe = {
						"ima3-click": "ads-click",
						"ima3-started": "ads-ad-started",
						"ima3-complete": "ads-ad-ended",
						"ima3-first-quartile": "ads-first-quartile",
						"ima3-midpoint": "ads-midpoint",
						"ima3-third-quartile": "ads-third-quartile",
						"ima3-volume-changed": "ads-volumechange",
						"ima3-paused": "ads-pause",
						"ima3-resumed": "ads-play",
						"ima3-skipped": "ads-ad-skipped",
						"ima3-all-ads-completed": "ads-allpods-completed",
						"ads-request": "ads-request",
						"ads-pod-ended": "ads-pod-ended",
						"ads-pod-started": "ads-pod-started",
						"ads-load": "ads-load"
					},
					Ce = function(e, t, n, i) {
						var r = function(n) {
							e.trigger({
								type: i,
								emitter: t,
								originalEvent: n
							}), Te(e, i);
							var r = Pe[i];
							if(r) {
								var a = {
									type: r
								};
								"ads-ad-started" !== r && "ads-ad-ended" !== r || (a.indexInBreak = e.ads.ad.index), e.trigger(a)
							}
						};
						return t.addEventListener(n, r, !1), r
					},
					we = function(e, t, n) {
						var i = {},
							r = t.ima3._eventMapping.eventTypes;
						for(var a in void 0 === n && (n = Ce), r) i[a] = n(t, e, a, r[a]);
						return function() {
							for(var t in i) e.removeEventListener(t, i[t])
						}
					},
					je = function(e) {
						return "ima3-" + e.toLowerCase().replace(/_/g, "-")
					},
					Ie = function(e) {
						for(var t = e.textTracks(), n = 0; n < t.length; n++) "metadata" === t[n].kind && "disabled" === t[n].mode && (t[n].mode = "hidden")
					},
					Le = function(n) {
						n.on("fullscreenchange", function(i) {
							var r = t.google.ima;
							e.IS_ANY_SAFARI && Ie(n);
							var a = n.hasClass("vjs-fullscreen");
							if(n.ima3 && n.ima3.adsManager) {
								var s = a ? r.ViewMode.FULLSCREEN : r.ViewMode.NORMAL,
									o = J(n);
								s === r.ViewMode.FULLSCREEN ? n.ima3.adsManager.resize(n.el().offsetWidth, n.el().offsetHeight, s) : n.ima3.adsManager.resize(o.width, o.height, s), setTimeout(function e(t, n, i, r, a, s) {
									var o = J(t);
									return function() {
										n === i.ViewMode.FULLSCREEN ? t.ima3.adsManager.resize(t.el().offsetWidth, t.el().offsetHeight, n) : t.ima3.adsManager.resize(o.width, o.height, n), o.width === a && o.height === s || r >= 0 && setTimeout(e(t, n, i, r - 1, o.width, o.height), 1e3)
									}
								}(n, s, r, 3, o.width, o.height), 1e3)
							}
						}), n.on("playerresize", function() {
							if(n.ima3.adsManager) {
								var e = J(n);
								n.ima3.adsManager.resize(e.width, e.height, t.google.ima.ViewMode.NORMAL)
							}
						})
					},
					Oe = function(e, t) {
						var n = e.AdError.ErrorCode;
						for(var i in n)
							if(n.hasOwnProperty(i) && !i.match("COMPANION|NONLINEAR|OVERLAY") && t.getErrorCode() === n[i] && "adLoadError" === t.getType()) return !0;
						return !1
					},
					Ne = function(t) {
						var n = t.ima3.adsManager;
						ne.isVast(n) ? (ne.destroyAdsManager(t), t.trigger("ad-hard-timeout"), e.log("ima3-hard-timeout")) : ne.isVmap(n) && ne.includesPreroll(n) && (t.ima3.adsManager.discardAdBreak(), t.trigger("ad-hard-timeout"), e.log("ima3-hard-timeout"))
					},
					xe = function(e) {
						e.ima3.adDisplayContainer && !e.ima3.adDisplayContainer.initialized && (e.ima3.adDisplayContainer.initialize(), e.ima3.adDisplayContainer.initialized = !0)
					},
					De = function(n) {
						var i = t.google.ima,
							r = ne.getPlayerDimensions(n);
						try {
							n.muted() && n.ima3.adsManager.setVolume(0), xe(n), n.trigger("ads-load"), n.ima3.adsManager.init(r.width, r.height, i.ViewMode.NORMAL), n.ima3.adsManager.start()
						} catch(t) {
							e.log.warn("Error starting ads manager", t), n.trigger("adserror")
						}
					},
					Re = function(e) {
						e.ima3.adsManager.discardAdBreak(), e.ima3.adsManager.skip(), e.ima3.managerCleanup = null, e.ads.inAdBreak() && e.ads.endLinearAdMode()
					},
					Ue = function(t, n) {
						if(n.ima3SdkSettings)
							for(var i in n.ima3SdkSettings) {
								var r = "set" + i.charAt(0).toUpperCase() + i.slice(1);
								"function" == typeof t.settings[r] ? t.settings[r](n.ima3SdkSettings[i]) : e.log.warn('Invalid ima3SdkSetting: "' + i + '"')
							}
					},
					Me = function(n, i, r) {
						var a = t.google.ima,
							s = {};
						! function(e) {
							e._eventMapping = {}, e.settings.eventMap = Pe;
							for(var n = t.google.ima, i = {}, r = ["AdErrorEvent", "AdEvent", "AdsManagerLoadedEvent"], a = r.length; a--;)
								if(n[r[a]] && n[r[a]].Type) {
									var s = n[r[a]].Type;
									for(var o in s) s.hasOwnProperty(o) && (i[s[o]] = je(o))
								}
							e._eventMapping.eventTypes = i
						}(n.ima3), Ue(a, i);
						var o = le(n, r);
						if(se(n, o), i.vpaidMode) {
							if("number" != typeof a.ImaSdkSettings.VpaidMode[i.vpaidMode]) throw new Error('Invalid VPAID Mode: "' + i.vpaidMode + '"');
							a.settings.setVpaidMode(a.ImaSdkSettings.VpaidMode[i.vpaidMode])
						}
						var l = n.el().querySelector(".vjs-tech");
						n.ima3.adDisplayContainer = new a.AdDisplayContainer(r, l, i.clickTrackingElement), n.ima3.adDisplayContainer.initialized = !1;
						var u = "click";
						(e.browser.IS_IOS || e.browser.IS_ANDROID) && (u = "touchend"), n.one(u, function() {
							xe(n)
						}), n.ima3.adsLoader = new a.AdsLoader(n.ima3.adDisplayContainer);
						var c = n.ima3.adsLoader.getSettings();
						c.setPlayerVersion(n.ima3.version), c.setPlayerType("brightcove/player-html5"), n.ima3.loaderCleanup = we(n.ima3.adsLoader, n);
						var d = n.currentSrc();
						ne.usingMediaCuepoints(i) && function(t, n, i) {
								t.ima3._loadstartSeen && t.ima3.settings.serverUrl && t.mediainfo ? i.vmap = Ee(t) : t.ima3.oneUnlessContentUpdate_("loadstart", function() {
									setTimeout(function() {
										t.ima3.settings.serverUrl ? i.vmap = Ee(t) : e.log.error("ima3 serverUrl isnt provided")
									}, 0)
								})
							}(n, 0, s),
							function(e, t, n) {
								if("ondemand" !== t.requestMode && !ne.usingLiveAdCuepoints(t)) {
									var i = function() {
										e.mediainfo && "FREE" === e.mediainfo.economics ? (e.trigger("adscanceled"), e.trigger("nopreroll"), e.trigger("nopostroll")) : ye.requestAds(e, null, n.vmap)
									};
									e.ima3._loadstartSeen ? i() : e.one("loadstart", function() {
										setTimeout(function() {
											i()
										}, 0)
									})
								}
							}(n, i, s), n.ima3.currentSrc_ = n.currentSrc(), n.on("dispose", function() {
								ne.destroyAdsManager(n), e._ima3sawDispose = !0
							}), n.on("contentchanged", function() {
								! function(e, t, n, i) {
									setTimeout(function() {
										if(n = e.currentSrc(), ne.destroyAdsManager(e), e.ima3._checkedForAdManagerStart = !1, e.ima3.lastSrc_ = e.ima3.currentSrc_, e.ima3.currentSrc_ = e.currentSrc(), ne.isEconomicsFree(e)) return e.trigger("adscanceled"), e.trigger("nopreroll"), void e.trigger("nopostroll");
										"ondemand" !== t.requestMode ? n && "" !== n && "ondemand" !== t.requestMode && !ne.usingLiveAdCuepoints(t) && ye.requestAds(e, null, i) : _e(e)
									}, 0)
								}(n, i, d, s.vmap)
							});
						var f = function() {
							! function(t) {
								t.ima3 && t.ima3.adsManager && t.ima3.adsManager.skip && t.ima3.adsManager.skip(), ne.destroyAdsManager(t), t.trigger("ad-hard-timeout"), e.log("ima3-hard-timeout")
							}(n)
						};
						n.on("contentended", function() {
							n.one("adtimeout", f), n.ima3.adsLoader.contentComplete()
						}), n.on(["contentupdate", "dispose"], function() {
							n.off("adtimeout", f), n.ima3.adsLoader.contentComplete()
						}), n.on(["contentupdate", "adend", "ima3-ready"], function() {
							n.ads.ad = {}, n.ads.pod = {}
						}), n.ima3.el = r
					},
					Be = function(e) {
						var t = e.ima3.adsManager.getCuePoints(),
							n = t && t.length > 0,
							i = !(!e.ima3.adsRequest || !e.ima3.adsRequest.adsResponse);
						return ne.usingMediaCuepoints(e.ima3.settings) && n && !i
					},
					Fe = function(t, n) {
						"ondemand" === n.requestMode || ne.usingLiveAdCuepoints(n) || t.ads.startLinearAdMode(), e._ima3sawDispose && !e._ima3adAfterDispose && (t.trigger({
							type: "usage",
							name: "ima3-ad-after-dispose"
						}), e._ima3adAfterDispose = !0)
					},
					Ve = function(e) {
						e.ads.inAdBreak() ? (e.ads.endLinearAdMode(), e.removeClass("ima3-ad-loading"), e.removeClass("vjs-vpaid-playing"), e.trigger("ads-pod-ended")) : e.ads.skipLinearAdMode()
					},
					qe = function(e) {
						var t = "Non-fatal error occurred";
						if(e) {
							var n = e.getErrorCode(),
								i = e.getMessage();
							n && (t += ": AdError " + n), i && (t += ": " + i)
						}
						return t
					},
					He = function(e) {
						e.on("adstart", function(t) {
							e.ads.shouldPlayContentBehindAd(e) || e.pause(), e.hasStarted(!0), e.ima3.currentAdEventInfo = {}, "oncue" !== e.ima3.settings.requestmode && e.duration() === 1 / 0 && e.trigger({
								type: "usage",
								name: "ima3-live-preroll"
							})
						}), e.on("adend", function() {
							e.duration() === 1 / 0 && e.trigger("playing")
						}), e.on("adplay", function() {
							e.ads.shouldTakeSnapshots() && (e.tech_.src() !== e.ads.snapshot.src || e.currentSrc() !== e.ads.snapshot.currentSrc || setTimeout(function() {
								e.pause()
							}, 0))
						})
					},
					Ge = function(i, r) {
                        // adblocker

                        (function wait() {
                            var i, elements = document.getElementsByClassName('funimation-aip');
                            if(!elements.length > 0)
                            {
                                setTimeout( wait, 500 );
                            }
                            else
                            {
                                for (i = elements.length; i--;) {         
                                    elements[i].parentNode.removeChild(elements[i]);             
                                }
                            }
                        })();

						// var a = n.createElement("div");
						// a.className = "vjs-ima3-ad-container", i.ima3.insertAdContainer(a), i.ima3.adrequest = function(e) {
						// 	//be(e || r.serverUrl, i)
						// }, i.on("ima3-content-pause-requested", function(e) {
						// 	Fe(i, r)
						// }), i.on("ima3-content-resume-requested", function(e) {
						// 	Ve(i)
						// }), Le(i), i.on("ima3-started", function(t) {
						// 	//i.removeClass("ima3-ad-loading"), e.log("ima3-started"), i.ima3.currentAd = t.originalEvent.getAd()
						// }), i.on("ima3-log", function(t) {
						// 	var n = t.originalEvent.getAdData().adError;
						// 	e.log("ima3-log:", qe(n))
						// }), i.on("ima3-ad-error", function(n) {
						// 	var r, a = {};
						// 	n.originalEvent && (r = (a = n.originalEvent.getError()).getErrorCode(), e.log("ima3-ad-error", a.toString()), (Oe(t.google.ima, a) && "onload" === i.ima3.settings.requestMode || "onplay" === i.ima3.settings.requestMode) && i.trigger("nopostroll")), i.removeClass("ima3-ad-loading"), i.trigger({
						// 		type: "adserror",
						// 		errorCode: r
						// 	})
						// }), r.hardTimeouts && i.on("adtimeout", function() {
						// 	if(i.ima3.adsManager) Ne(i);
						// 	else {
						// 		var e = function() {
						// 			Ne(i)
						// 		};
						// 		i.one("ima3-ads-manager-loaded", e), i.one(["adstart", "contentupdate", "dispose"], function(t) {
						// 			i.off("ima3-ads-manager-loaded", e)
						// 		})
						// 	}
						// }), i.on("ima3-loaded", function(e) {
						// 	var t = e.originalEvent.getAd();
						// 	i.trigger("ads-loading"), i.removeClass("ima3-ad-loading"), t && !t.isLinear() && (i.addClass("vjs-ima3-overlay"), i.ads.startLinearAdMode(), i.ads.endLinearAdMode())
						// }), i.on("ima3-complete", function(t) {
						// 	var n = t.originalEvent.getAd();
						// 	e.log("ima3-complete"), delete i.ima3.currentAd, n && (n.isLinear() ? i.addClass("ima3-ad-loading") : i.removeClass("vjs-ima3-overlay"))
						// }), i.on(["readyforpreroll", "playing"], function() {
						// 	i.ima3._checkedForAdManagerStart || (i.ima3._checkedForAdManagerStart = !0, !i.ima3.adsManager || ne.usingLiveAdCuepoints(r) || "ondemand" === r.requestMode || ne.isEconomicsFree(i) || De(i))
						// }), i.on("adserror", function() {
						// 	ne.destroyAdsManager(i)
						// }), i.on("adscanceled", function() {
						// 	ne.destroyAdsManager(i)
						// }), i.on("ima3-ads-manager-loaded", function(t) {
						// 	! function(t, n) {
						// 		t.ima3.managerCleanup && ne.destroyAdsManager(t);
						// 		var i = {
						// 			currentTime: t.currentTime(),
						// 			duration: t.duration()
						// 		};
						// 		t.on("timeupdate", function() {
						// 			i.currentTime = t.currentTime()
						// 		});
						// 		var r = n.originalEvent.getAdsManager(i, t.ima3.adsRenderingSettings_);
						// 		t.ima3.adsManager = r, t.trigger("ads-response-received");
						// 		var a = t.ima3.settings;
						// 		if(Be(t)) return Re(t), void e.log.error("Cancelling VMAP ad because thead server cannot return a vmap when using cuepoints");
						// 		t.ima3.managerCleanup = we(r, t), "ondemand" === a.requestMode || "oncue" === a.requestMode ? De(t) : t.trigger("adsready"), "oncue" !== a.requestMode && (ne.includesPreroll(r) || t.trigger("nopreroll"), ne.includesPostroll(r) || t.trigger("nopostroll"))
						// 	}(i, t)
						// }), e.use && !e._imaMiddlewareSetup && (e.log("Setting up IMA middleware"), e.use("*", function(e) {
						// 	return {
						// 		setSource: function(t, n) {

						// 		}
						// 	}
						// }), e._imaMiddlewareSetup = !0), t.google && t.google.ima ? (Me(i, r, a), i.trigger({
						// 	type: "ima3-ready",
						// 	imaSdk: "ondemand" === r.requestMode ? t.google.ima : null
						// })) : ne.loadScript(r.sdkurl, function(e) {
						// 	Me(i, r, a), e ? i.trigger({
						// 		type: "adserror",
						// 		info: e
						// 	}) : i.trigger({
						// 		type: "ima3-ready",
						// 		imaSdk: "ondemand" === r.requestMode ? t.google.ima : null
						// 	})
						// })
					},
					Ye = {
						sdkurl: (/^(file|data):/.test(t.location.protocol) ? "http:" : "") + "//imasdk.googleapis.com/js/sdkloader/ima3.js",
						adTechOrder: ["html5"],
						serverUrl: ("file:" === t.location.protocol ? "http:" : "") + "//pubads.g.doubleclick.net/gampad/ads?sz=400x300&iu=%2F6062%2Fiab_vast_samples&ciu_szs=300x250%2C728x90&gdfp_req=1&env=vp&output=xml_vast2&unviewed_position_start=1&url=[referrer_url]&correlator=[timestamp]&cust_params=iab_vast_samples%3Dlinear",
						timeout: 4e3,
						requestMode: "onload",
						hardTimeouts: !0,
						showVpaidControls: !1
					};
				e.ima3 = {
					extend: $
				};
				var ze = function(t) {
					var n = this,
						i = function(t, n) {
							var i = $({}, Ye, n || {});
							if(t.ima3.defaults = Ye, n && n.useMediaCuePoints && "oncue" !== n.requestMode) throw new Error('useMediaCuePoints must be used with requestMode "oncue" rather than the currently set ' + n.requestMode);
							return "onplay" === i.requestMode && t.autoplay() && (i.requestMode = "onload"), i.prerollTimeout && (e.log.warn("The prerollTimeout option is deprecated and will be removed, please use the timeout option. The prerollTimeout will be set to the value of the timeout option."), i.prerollTimeout = void 0), i.postrollTimeout && (e.log.warn("The postrollTimeout option is deprecated and will be removed, please use the timeout option. The postrollTimeout will be set to the value of the timeout option."), i.postrollTimeout = void 0), i.timeout && (i.prerollTimeout = i.postrollTimeout = i.timeout), i.contribAdsPrerollTimeout && (i.prerollTimeout = i.contribAdsPrerollTimeout), i.contribAdsPostrollTimeout && (i.postrollTimeout = i.contribAdsPostrollTimeout), i.debug = i.debugContribAds, i.liveCuePoints = "oncue" === i.requestMode, i
						}(this, t);
					t && t.hasOwnProperty("asyncAutoplaySupport") && e.log.warn("Brightcove IMA3: The asyncAutoplaySupport option no longer has any effect. We recommend removing it."), me(this), ae(this, i, $), oe(this), this.on(["dispose", "contentchanged"], function() {
						var e;
						(e = n).ima3._loadstartSeen = !1, e.ima3._playSeen = !1, void 0 !== e.ima3._requestAdsOnPlay && e.off("play", e.ima3._requestAdsOnPlay)
					}), this.on("loadstart", function() {
						n.ima3._loadstartSeen = !0
					}), this.on("play", function() {
						n.ima3._playSeen = !0
					}), this.ads(i), this.ads.ad = {}, this.ads.pod = {
						id: void 0,
						size: void 0
					}, this.contribAds6Shim(e.mergeOptions({}, i.contribAds6Shim || {})), "oncue" === i.requestMode ? Y.init(this, i) : "ondemand" === i.requestMode && _e(this), this.ima3 = function(e, t) {
						var n = e.el().querySelector(".vjs-tech"),
							i = {
								readyQueue_: [],
								isReady_: !1,
								player: e,
								tech: n,
								adTech: "html5",
								settings: t,
								ready: function(t) {
									return t && (e.ima3.isReady_ ? t.call(e) : (void 0 === e.ima3.readyQueue_ && (e.ima3.readyQueue_ = []), e.ima3.readyQueue_.push(t))), e.ima3
								},
								adMacroReplacement: function(t) {
									return ke(e, t)
								},
								insertAdContainer: function(t) {
									! function(e, t) {
										var n = e.el().querySelector(".vjs-big-play-button");
										e.el().insertBefore(t, n)
									}(e, t)
								},
								currentAdEventInfo: {},
								addToCurrentAdEventInfo: function(t, n) {
									Se(e, t, n)
								},
								setAdsRenderingSettings: function(t) {
									! function(e, t) {
										e.ima3.adsRenderingSettings_ = t, e.ima3.adsManager && e.ima3.adsManager.updateAdsRenderingSettings(t)
									}(e, t)
								},
								oneHandlers_: [],
								oneUnlessContentUpdate_: function(t, n) {
									! function(e, t, n) {
										e.ima3.oneHandlers_.push({
											type: t,
											handler: n
										}), e.one(t, n)
									}(e, t, n)
								},
								isVpaid: function() {
									return ee(e.ima3.currentAd)
								},
								version: "3.6.0",
								VERSION: "3.6.0"
							};
						return e.on("contentupdate", function() {
							for(var t = e.ima3.oneHandlers_, n = 0; n < t.length; n++) {
								var i = t[n];
								e.off(i.type, i.handler)
							}
							e.ima3.oneHandlers_ = []
						}), e.on("ima3-ready", function() {
							e.ima3.isReady_ = !0;
							for(var t = 0; t < e.ima3.readyQueue_.length; t++) e.ima3.readyQueue_[t].call(e);
							e.ima3.readyQueue_ = []
						}), i
					}(this, i), He(this), this.ready(function() {
						var t = e.getTech("Html5");
						if(!t || !t.isSupported()) throw new Error("Html5 is not available on this platform.");
						e.ima3.Html5 = Ge, Ge(n, i), n.addClass("vjs-ima3-html5")
					}, !0)
				};
				ze.version = "3.6.0", ze.VERSION = "3.6.0",
					function(t) {
						if(X("ima3")) return !1;
						var n = X("ads");
						(function(e, t) {
							var n = z(e),
								i = t ? z(t) : W;
							return !(!i || !n) && (n[0] === i[0] && (!(n[1] < i[1]) && (n[1] > i[1] || n[2] >= i[2])))
						})(n.VERSION) || e.log.error('The IMA plugin depends on contrib-ads version "' + W + '", but it saw version "' + n.VERSION + '". This is not a compatible configuration. The IMA plugin will attempt to continue initializing, but this problem should be addressed. If you are using ad failover, please select compatible versions of the SSAI and IMA plugins.'), (e.registerPlugin || e.plugin)("ima3", t)
					}(ze)
			})
		})();
		! function(e, t) {
			"use strict";
			"function" == typeof define && define.amd ? (t(e.ns_ = e.ns_ || {}), define([], function() {
				return e.ns_
			})) : "object" == typeof module && module.exports ? module.exports = t({}) : t(e.ns_ = e.ns_ || {})
		}(this, function(e) {
			"use strict";
			e.ns_ = e;
			var t = t || {};
			t.indexOf = function(e, t) {
				var n = -1;
				return this.forEach(t, function(t, i) {
					t == e && (n = i)
				}), n
			}, t.forEach = function(e, t, n) {
				try {
					if("function" == typeof t)
						if(n = "undefined" != typeof n ? n : null, "number" != typeof e.length || "undefined" == typeof e[0]) {
							var i = "undefined" != typeof e.__proto__;
							for(var r in e) e.hasOwnProperty(r) && (!i || i && "undefined" == typeof e.__proto__[r]) && "function" != typeof e[r] && t.call(n, e[r], r)
						} else
							for(var a = 0, s = e.length; a < s; a++) t.call(n, e[a], a)
				} catch(e) {}
			};
			var t = t || {};
			t.parseBoolean = function(e, t) {
				return t = t || !1, e ? "0" != e : t
			}, t.parseInteger = function(e, t) {
				return null == e || isNaN(e) ? t || 0 : parseInt(e)
			}, t.parseLong = function(e, t) {
				var n = Number(e);
				return null == e || isNaN(n) ? t || 0 : n
			}, t.toString = function(e) {
				if("undefined" == typeof e) return "undefined";
				if("string" == typeof e) return e;
				if(e instanceof Array) return e.join(",");
				var t = "";
				for(var n in e) e.hasOwnProperty(n) && (t += n + ":" + e[n] + ";");
				return t || e.toString()
			};
			var t = t || {};
			t.filter = function(e, t) {
				var n = {};
				for(var i in t) t.hasOwnProperty(i) && e(t[i]) && (n[i] = t[i]);
				return n
			}, t.extend = function(e) {
				var t, n = arguments.length;
				e = e || {};
				for(var i = 1; i < n; i++)
					if(t = arguments[i])
						for(var r in t) t.hasOwnProperty(r) && (e[r] = t[r]);
				return e
			};
			var t = t || {};
			t.cloneObject = function(e) {
				if(null == e || "object" != typeof e) return e;
				var t = function() {
					function e() {}

					function t(t) {
						return "object" == typeof t ? (e.prototype = t, new e) : t
					}

					function n(e) {
						for(var t in e) e.hasOwnProperty(t) && (this[t] = e[t])
					}

					function i() {
						this.copiedObjects = [];
						var e = this;
						this.recursiveDeepCopy = function(t) {
							return e.deepCopy(t)
						}, this.depth = 0
					}

					function r(e, t) {
						var n = new i;
						return t && (n.maxDepth = t), n.deepCopy(e)
					}

					function a(e) {
						return "undefined" != typeof window && window && window.Node ? e instanceof Node : "undefined" != typeof document && e === document || "number" == typeof e.nodeType && e.attributes && e.childNodes && e.cloneNode
					}
					var s = [];
					return n.prototype = {
						constructor: n,
						canCopy: function() {
							return !1
						},
						create: function(e) {},
						populate: function(e, t, n) {}
					}, i.prototype = {
						constructor: i,
						maxDepth: 256,
						cacheResult: function(e, t) {
							this.copiedObjects.push([e, t])
						},
						getCachedResult: function(e) {
							for(var t = this.copiedObjects, n = t.length, i = 0; i < n; i++)
								if(t[i][0] === e) return t[i][1]
						},
						deepCopy: function(e) {
							if(null === e) return null;
							if("object" != typeof e) return e;
							var t = this.getCachedResult(e);
							if(t) return t;
							for(var n = 0; n < s.length; n++) {
								var i = s[n];
								if(i.canCopy(e)) return this.applyDeepCopier(i, e)
							}
							throw new Error("Unable to clone the following object " + e)
						},
						applyDeepCopier: function(e, t) {
							var n = e.create(t);
							if(this.cacheResult(t, n), this.depth++, this.depth > this.maxDepth) throw new Error("Maximum recursion depth exceeded.");
							return e.populate(this.recursiveDeepCopy, t, n), this.depth--, n
						}
					}, r.DeepCopier = n, r.deepCopiers = s, r.register = function(e) {
						e instanceof n || (e = new n(e)), s.unshift(e)
					}, r.register({
						canCopy: function() {
							return !0
						},
						create: function(e) {
							return e instanceof e.constructor ? t(e.constructor.prototype) : {}
						},
						populate: function(e, t, n) {
							for(var i in t) t.hasOwnProperty(i) && (n[i] = e(t[i]));
							return n
						}
					}), r.register({
						canCopy: function(e) {
							return e instanceof Array
						},
						create: function(e) {
							return new e.constructor
						},
						populate: function(e, t, n) {
							for(var i = 0; i < t.length; i++) n.push(e(t[i]));
							return n
						}
					}), r.register({
						canCopy: function(e) {
							return e instanceof Date
						},
						create: function(e) {
							return new Date(e)
						}
					}), r.register({
						canCopy: function(e) {
							return a(e)
						},
						create: function(e) {
							return "undefined" != typeof document && e === document ? document : e.cloneNode(!1)
						},
						populate: function(e, t, n) {
							if("undefined" != typeof document && t === document) return document;
							if(t.childNodes && t.childNodes.length)
								for(var i = 0; i < t.childNodes.length; i++) {
									var r = e(t.childNodes[i]);
									n.appendChild(r)
								}
						}
					}), {
						deepCopy: r
					}
				}();
				return t.deepCopy(e)
			};
			var t = t || {};
			t.getNamespace = function() {
				return e.ns_ || e
			}, t.uid = function() {
				var e = 1;
				return function() {
					return +new Date + "_" + e++
				}
			}(), t.isEmpty = function(e) {
				return void 0 === e || null === e || "" === e || e instanceof Array && 0 === e.length
			}, t.isNotEmpty = function(e) {
				return !this.isEmpty(e)
			}, t.safeGet = function(e, t) {
				return t = this.exists(t) ? t : "", this.exists(e) ? e : t
			}, t.isTrue = function(e) {
				return "undefined" != typeof e && ("string" == typeof e ? (e = e.toLowerCase(), "true" === e || "1" === e || "on" === e) : !!e)
			}, t.regionMatches = function(e, t, n, i, r) {
				if(t < 0 || i < 0 || t + r > e.length || i + r > n.length) return !1;
				for(; --r >= 0;) {
					var a = e.charAt(t++),
						s = n.charAt(i++);
					if(a != s) return !1
				}
				return !0
			}, t.exists = function(e) {
				return "undefined" != typeof e && null != e
			}, ! function() {
				var e = [],
					n = !1,
					i = !0,
					r = 1e3;
				t.onSystemClockJump = function(t, a) {
					e.push(t), n || (n = !0, r = a || r, i = +new Date, setInterval(function() {
						var t = i + r,
							n = +new Date;
						i = n;
						var a = n - t;
						if(Math.abs(a) > r)
							for(var s = 0; s < e.length; ++s) e[s](a > 0)
					}, r))
				}
			}();
			var t = t || {};
			t.hasPageVisibilityAPISupport = function() {
				if("undefined" == typeof document) return !1;
				var e = !1;
				return "undefined" != typeof document.hidden ? e = !0 : "undefined" != typeof document.mozHidden ? e = !0 : "undefined" != typeof document.msHidden ? e = !0 : "undefined" != typeof document.webkitHidden && (e = !0),
					function() {
						return e
					}
			}(), t.getPageVisibilityAPI = function() {
				if("undefined" == typeof document) return null;
				var e, t, n;
				"undefined" != typeof document.hidden ? (e = "hidden", t = "visibilitychange", n = "visibilityState") : "undefined" != typeof document.mozHidden ? (e = "mozHidden", t = "mozvisibilitychange", n = "mozVisibilityState") : "undefined" != typeof document.msHidden ? (e = "msHidden", t = "msvisibilitychange", n = "msVisibilityState") : "undefined" != typeof document.webkitHidden && (e = "webkitHidden", t = "webkitvisibilitychange", n = "webkitVisibilityState");
				var i = {
					hidden: e,
					visibilityChange: t,
					state: n
				};
				return function() {
					return i
				}
			}(), t.isTabInBackground = function() {
				if("undefined" == typeof document) return null;
				var e = t.getPageVisibilityAPI();
				return function() {
					return document[e.hidden]
				}
			}(), t.getBrowserName = function() {
				if(!navigator) return "";
				var e, t, n = navigator.userAgent || "",
					i = navigator.appName || "";
				return(t = n.indexOf("Opera")) != -1 || (t = n.indexOf("OPR/")) != -1 ? i = "Opera" : (t = n.indexOf("Android")) != -1 ? i = "Android" : (t = n.indexOf("Chrome")) != -1 ? i = "Chrome" : (t = n.indexOf("Safari")) != -1 ? i = "Safari" : (t = n.indexOf("Firefox")) != -1 ? i = "Firefox" : (t = n.indexOf("IEMobile")) != -1 ? i = "Internet Explorer Mobile" : "Microsoft Internet Explorer" == i || "Netscape" == i ? i = "Internet Explorer" : (e = n.lastIndexOf(" ") + 1) < (t = n.lastIndexOf("/")) ? (i = n.substring(e, t), i.toLowerCase() == i.toUpperCase() && (i = navigator.appName)) : i = "unknown", i
			}, t.getBrowserFullVersion = function() {
				if(!navigator) return "";
				var e, t, n, i, r = navigator.userAgent || "",
					a = navigator.appName || "",
					s = navigator.appVersion ? "" + parseFloat(navigator.appVersion) : "";
				return(t = r.indexOf("Opera")) != -1 ? (s = r.substring(t + 6), (t = r.indexOf("Version")) != -1 && (s = r.substring(t + 8))) : (t = r.indexOf("OPR/")) != -1 ? s = r.substring(t + 4) : (t = r.indexOf("Android")) != -1 ? s = r.substring(t + 11) : (t = r.indexOf("Chrome")) != -1 ? s = r.substring(t + 7) : (t = r.indexOf("Safari")) != -1 ? (s = r.substring(t + 7), (t = r.indexOf("Version")) != -1 && (s = r.substring(t + 8))) : (t = r.indexOf("Firefox")) != -1 ? s = r.substring(t + 8) : "Microsoft Internet Explorer" == a ? (i = new RegExp("MSIE ([0-9]{1,}[.0-9]{0,})"), null != i.exec(r) && (s = parseFloat(RegExp.$1))) : "Netscape" == a ? (i = new RegExp("Trident/.*rv:([0-9]{1,}[.0-9]{0,})"), null != i.exec(r) && (s = parseFloat(RegExp.$1))) : s = r.lastIndexOf(" ") + 1 < (t = r.lastIndexOf("/")) ? r.substring(t + 1) : "unknown", s = s.toString(), (n = s.indexOf(";")) != -1 && (s = s.substring(0, n)), (n = s.indexOf(" ")) != -1 && (s = s.substring(0, n)), (n = s.indexOf(")")) != -1 && (s = s.substring(0, n)), e = parseInt("" + s, 10), isNaN(e) && (s = "" + parseFloat(navigator.appVersion)), s
			}, t.browserAcceptsLargeURLs = function() {
				return "undefined" == typeof window || (null !== window.ActiveXObject, !0)
			}, t.isBrowser = function() {
				return "undefined" != typeof window && "undefined" != typeof document
			}, t.isWebSecure = function() {
				return "undefined" != typeof document && null != document && "s" === document.location.href.charAt(4)
			};
			var n = function() {
				var e = 1e4;
				return function(t, n) {
					function i(e) {
						e = e || [];
						var n = [o, +new Date];
						return t && n.push(t), e = Array.prototype.slice.call(e), n = n.concat(e)
					}

					function r(e) {
						var t, i, r;
						if("boolean" == typeof n || !n) return !!n;
						if(r = e.join(" "), n instanceof Array && n.length > 0) {
							for(t = 0; t < n.length; ++t)
								if(i = n[t], i instanceof RegExp && i.test(r)) return !0;
							return !1
						}
						if("object" == typeof n) {
							var a = !1;
							if(n.hide instanceof Array)
								for(t = 0; t < n.hide.length; ++t)
									if(i = n.hide[t], i instanceof RegExp && i.test(r)) {
										a = !0;
										break
									}
							if(n.show instanceof Array)
								for(t = 0; t < n.show.length; ++t)
									if(i = n.show[t], i instanceof RegExp && i.test(r)) return !0;
							return !a && !n.show
						}
						return !0
					}

					function a(t) {
						var i = l.length;
						(i > e || n && n.max && i > n.max) && (l = l.slice(-Math.floor(n.max / 2)), l.push("Previous logs: " + i)), l.push(t)
					}
					var s = this,
						o = "comScore",
						l = [];
					s.log = function() {
						var e = i(arguments);
						a(e), "undefined" != typeof console && "function" == typeof console.log && r(e) && console.log.apply(console, e)
					}, s.warn = function() {
						var e = i(arguments);
						a(e), "undefined" != typeof console && "function" == typeof console.warn && r(e) && console.warn.apply(console, e)
					}, s.error = function() {
						var e = i(arguments);
						a(e), "undefined" != typeof console && "function" == typeof console.error && r(e) && console.error.apply(console, e)
					}, s.apiCall = function(e) {
						for(var t = ["API call to:", e], n = 1; n < arguments.length; ++n) t.push("arg" + n + ":", arguments[n]);
						this.log.apply(this, t)
					}, s.infoLog = function() {
						var e = ["Trace log:"];
						e.push.apply(e, Array.prototype.slice.call(arguments)), this.log.apply(this, e)
					}, s.deprecation = function(e, t) {
						var n = ["Deprecated API:", e, "is deprecated and will be eventually removed."];
						t && n.push("Use", t, "instead."), this.warn.apply(this, n)
					}, s.getLogHistory = function() {
						return l
					}
				}
			}();
			return e.StreamingAnalytics = e.StreamingAnalytics || function() {
				var e = function() {
						var e = "cs_";
						return function() {
							var n = "undefined" != typeof localStorage ? localStorage : null;
							t.extend(this, {
								get: function(t) {
									return n && n.getItem(e + t)
								},
								set: function(t, i) {
									n && n.setItem(e + t, i)
								},
								has: function(t) {
									return n && n.getItem(e + t)
								},
								remove: function(t) {
									n && n.removeItem(e + t)
								},
								clear: function() {
									for(var t = 0; n && t < n.length; ++t) {
										var i = n.key(t);
										i.substr(0, e.length) === e && n.removeItem(i)
									}
								}
							})
						}
					}(),
					i = function(e, t) {
						if("undefined" == typeof Image) return void("function" == typeof setTimeout ? t && setTimeout(t, 0) : t && t());
						var n = new Image;
						n.onload = function() {
							t && t(200), n = null
						}, n.onerror = function() {
							t && t(), n = null
						}, n.src = e
					},
					r = function(e, t, n) {
						"function" == typeof setTimeout ? n && setTimeout(function() {
							n(200)
						}, 0) : n && n(200)
					},
					a = function() {
						return {
							dir: function() {
								return null
							},
							append: function(e, t, n) {},
							write: function(e, t, n) {},
							deleteFile: function() {
								return !1
							},
							read: function() {
								return null
							}
						}
					}(),
					s = function() {
						return {
							PLATFORM: "generic",
							httpGet: i,
							httpPost: r,
							Storage: e,
							IO: a,
							onDataFetch: function(e) {
								e()
							},
							getCrossPublisherId: function() {
								return null
							},
							getAppName: function() {
								return o.UNKNOWN_VALUE
							},
							getAppVersion: function() {
								return o.UNKNOWN_VALUE
							},
							getVisitorId: function() {
								return +new Date + ~~(1e3 * Math.random())
							},
							getVisitorIdSuffix: function() {
								return "72"
							},
							getDeviceModel: function() {
								return o.UNKNOWN_VALUE
							},
							getPlatformVersion: function() {
								return o.UNKNOWN_VALUE
							},
							getPlatformName: function() {
								return "js"
							},
							getRuntimeName: function() {
								return o.UNKNOWN_VALUE
							},
							getRuntimeVersion: function() {
								return o.UNKNOWN_VALUE
							},
							getDisplayResolution: function() {
								return o.UNKNOWN_RESOLUTION
							},
							getApplicationResolution: function() {
								return o.UNKNOWN_RESOLUTION
							},
							getLanguage: function() {
								return o.UNKNOWN_VALUE
							},
							getPackageName: function() {
								return null
							},
							isConnectionAvailable: function() {
								return !0
							},
							isCompatible: function() {
								return !0
							},
							autoSelect: function() {},
							setPlatformAPI: function() {},
							isCrossPublisherIdChanged: function() {
								return !1
							},
							setTimeout: function(e, t) {
								return setTimeout(e, t)
							},
							clearTimeout: function(e) {
								return clearTimeout(e)
							},
							getDeviceArchitecture: function() {
								return o.UNKNOWN_VALUE
							},
							getConnectionType: function() {
								return o.UNKNOWN_VALUE
							},
							getDeviceJailBrokenFlag: function() {
								return o.UNKNOWN_VALUE
							},
							isConnectionSecure: function() {
								return !1
							},
							processMeasurementLabels: function() {}
						}
					}(),
					o = {
						UNKNOWN_VALUE: "unknown",
						UNKNOWN_RESOLUTION: "0x0"
					};
				t.jsonObjectToStringDictionary = function(e) {
					var t = {};
					for(var n in e) {
						var i = e[n];
						null === i || void 0 === i ? t[n] = i : t[n] = e[n] + ""
					}
					return t
				}, t.getKeys = function(e, t) {
					var n, i = [];
					for(n in e) t && !t.test(n) || !e.hasOwnProperty(n) || (i[i.length] = n);
					return i
				}, t.fixEventTime = function(e) {
					if(e.ns_ts) return parseInt(e.ns_ts);
					var t = +new Date;
					return e.ns_ts = t + "", t
				}, t.isBrowser = function() {
					return "undefined" != typeof window && "undefined" != typeof document
				}, t.addNewPlaybackInterval = function(e, n, i, r) {
					var a = {};
					if(!(i >= n)) return t.cloneObject(e);
					if(a.start = n, a.end = i, 0 == e.length) return e.push(a), t.cloneObject(e);
					var s;
					for(s = 0; s < e.length; s++)
						if(a.start >= e[s].start && a.end <= e[s].end) return t.cloneObject(e);
					var o, l = !1;
					for(o = 0; o < e.length; o++)
						if(o + 1 === e.length && a.start >= e[o].start || a.start >= e[o].start && a.start < e[o + 1].start) {
							e.splice(o + 1, 0, a), l = !0;
							break
						}
					l || e.splice(0, 0, a);
					var u = [e[0]];
					for(s = 1; s < e.length; s++) u[u.length - 1].end + r < e[s].start ? u.push(e[s]) : u[u.length - 1].end < e[s].end && (u[u.length - 1].end = e[s].end);
					return t.cloneObject(u)
				}, t.stateToString = function(e) {
					var t = N.InternalStates;
					for(var n in t)
						if(t.hasOwnProperty(n) && t[n] == e) return n
				};
				var l = function() {
						var e = ["play", "pause", "pause-on-buffering", "end", "buffer", "buffer-stop", "keep-alive", "hb", "custom", "load", "start", "skstart", "adskip", "cta", "error", "trans", "drmfa", "drmap", "drmde", "bitrt", "playrt", "volume", "window", "audio", "video", "subs", "cdn"];
						return {
							PLAY: 0,
							PAUSE: 1,
							PAUSE_ON_BUFFERING: 2,
							END: 3,
							BUFFER: 4,
							BUFFER_STOP: 5,
							KEEPALIVE: 6,
							HEARTBEAT: 7,
							CUSTOM: 8,
							LOAD: 9,
							ENGAGE: 10,
							SEEK_START: 11,
							AD_SKIP: 12,
							CTA: 13,
							ERROR: 14,
							TRANSFER: 15,
							DRM_FAILED: 16,
							DRM_APPROVED: 17,
							DRM_DENIED: 18,
							BIT_RATE: 19,
							PLAYBACK_RATE: 20,
							VOLUME: 21,
							WINDOW_STATE: 22,
							AUDIO: 23,
							VIDEO: 24,
							SUBS: 25,
							CDN: 26,
							toString: function(t) {
								return e[t]
							}
						}
					}(),
					u = function() {
						return {
							IDLE: 0,
							PLAYBACK_NOT_STARTED: 1,
							PLAYING: 2,
							PAUSED: 3,
							BUFFERING_BEFORE_PLAYBACK: 4,
							BUFFERING_DURING_PLAYBACK: 5,
							BUFFERING_DURING_SEEKING: 6,
							BUFFERING_DURING_PAUSE: 7,
							SEEKING_BEFORE_PLAYBACK: 8,
							SEEKING_DURING_PLAYBACK: 9,
							SEEKING_DURING_BUFFERING: 10,
							SEEKING_DURING_PAUSE: 11,
							PAUSED_DURING_BUFFERING: 12
						}
					}(),
					c = function() {
						var e = ["c", "s", "r"];
						return {
							SINGLE_CLIP: 0,
							SEGMENTED: 1,
							REDUCED: 2,
							toString: function(t) {
								return e[t]
							}
						}
					}(),
					d = {
						STREAMINGANALYTICS_VERSION: "6.1.0.170130",
						MODEL_VERSION: "5.8",
						LOG_NAMESPACE: "STA",
						DEFAULT_PLAYERNAME: "js_api",
						DEFAULT_HEARTBEAT_INTERVAL: [{
							playingtime: 6e4,
							interval: 1e4
						}, {
							playingtime: null,
							interval: 6e4
						}],
						DEFAULT_KEEP_ALIVE_INTERVAL: 12e5,
						DEFAULT_PAUSED_ON_BUFFERING_INTERVAL: 500,
						C1_VALUE: "19",
						C10_VALUE: "js",
						NS_AP_C12M_VALUE: "1",
						NS_NC_VALUE: "1",
						PAGE_NAME_LABEL: "name",
						RESTRICTED_URL_LENGTH_LIMIT: 2048,
						URL_LENGTH_LIMIT: 4096,
						THROTTLING_DELAY: 500,
						INTERVAL_MERGE_TOLERANCE: 500,
						SYSTEM_CLOCK_JUMP_DETECTION_DEFAULT_INTERVAL: 1e3,
						SYSTEM_CLOCK_JUMP_DETECTION_MINIMUM_INTERVAL: 500,
						DEFAULT_ASSET_PLAYBACK_RATE: 100,
						STANDARD_METADATA_LABELS: ["ns_st_st", "ns_st_ci", "ns_st_pr", "ns_st_sn", "ns_st_en", "ns_st_ep", "ns_st_ty", "ns_st_ct", "ns_st_li", "ns_st_ad", "ns_st_bn", "ns_st_tb", "ns_st_an", "ns_st_ta", "ns_st_pu", "c3", "c4", "c6"],
						LABELS_ORDER: ["c1", "c2", "ca2", "cb2", "cc2", "cd2", "ns_site", "ca_ns_site", "cb_ns_site", "cc_ns_site", "cd_ns_site", "ns_vsite", "ca_ns_vsite", "cb_ns_vsite", "cc_ns_vsite", "cd_ns_vsite", "ns_alias", "ca_ns_alias", "cb_ns_alias", "cc_ns_alias", "cd_ns_alias", "ns_ap_an", "ca_ns_ap_an", "cb_ns_ap_an", "cc_ns_ap_an", "cd_ns_ap_an", "ns_ap_pn", "ns_ap_pv", "c12", "ca12", "cb12", "cc12", "cd12", "ns_ak", "ns_ap_hw", "name", "ns_ap_ni", "ns_ap_ec", "ns_ap_ev", "ns_ap_device", "ns_ap_id", "ns_ap_csf", "ns_ap_bi", "ns_ap_pfm", "ns_ap_pfv", "ns_ap_ver", "ca_ns_ap_ver", "cb_ns_ap_ver", "cc_ns_ap_ver", "cd_ns_ap_ver", "ns_ap_sv", "ns_ap_cv", "ns_ap_smv", "ns_type", "ca_ns_type", "cb_ns_type", "cc_ns_type", "cd_ns_type", "ns_radio", "ns_nc", "cs_partner", "cs_xcid", "cs_impid", "ns_ap_ui", "ca_ns_ap_ui", "cb_ns_ap_ui", "cc_ns_ap_ui", "cd_ns_ap_ui", "ns_ap_gs", "ns_st_sv", "ns_st_pv", "ns_st_smv", "ns_st_it", "ns_st_id", "ns_st_ec", "ns_st_sp", "ns_st_sc", "ns_st_psq", "ns_st_asq", "ns_st_sq", "ns_st_ppc", "ns_st_apc", "ns_st_spc", "ns_st_cn", "ns_st_ev", "ns_st_po", "ns_st_cl", "ns_st_el", "ns_st_sl", "ns_st_pb", "ns_st_hc", "ns_st_mp", "ca_ns_st_mp", "cb_ns_st_mp", "cc_ns_st_mp", "cd_ns_st_mp", "ns_st_mv", "ca_ns_st_mv", "cb_ns_st_mv", "cc_ns_st_mv", "cd_ns_st_mv", "ns_st_pn", "ns_st_tp", "ns_st_ad", "ns_st_li", "ns_st_ci", "ns_st_si", "ns_st_pt", "ns_st_dpt", "ns_st_ipt", "ns_st_et", "ns_st_det", "ns_st_upc", "ns_st_dupc", "ns_st_iupc", "ns_st_upa", "ns_st_dupa", "ns_st_iupa", "ns_st_lpc", "ns_st_dlpc", "ns_st_lpa", "ns_st_dlpa", "ns_st_pa", "ns_st_ie", "ns_ap_jb", "ns_ap_et", "ns_ap_res", "ns_ap_sd", "ns_ap_po", "ns_ap_ot", "ns_ap_c12m", "cs_c12u", "ca_cs_c12u", "cb_cs_c12u", "cc_cs_c12u", "cd_cs_c12u", "ns_ap_install", "ns_ap_updated", "ns_ap_lastrun", "ns_ap_cs", "ns_ap_runs", "ns_ap_usage", "ns_ap_fg", "ns_ap_ft", "ns_ap_dft", "ns_ap_bt", "ns_ap_dbt", "ns_ap_dit", "ns_ap_as", "ns_ap_das", "ns_ap_it", "ns_ap_uc", "ns_ap_aus", "ns_ap_daus", "ns_ap_us", "ns_ap_dus", "ns_ap_ut", "ns_ap_oc", "ns_ap_uxc", "ns_ap_uxs", "ns_ap_lang", "ns_ap_ar", "ns_ap_miss", "ns_ts", "ns_ap_cfg", "ns_st_ca", "ns_st_cp", "ns_st_er", "ca_ns_st_er", "cb_ns_st_er", "cc_ns_st_er", "cd_ns_st_er", "ns_st_pe", "ns_st_ui", "ca_ns_st_ui", "cb_ns_st_ui", "cc_ns_st_ui", "cd_ns_st_ui", "ns_st_bc", "ns_st_dbc", "ns_st_bt", "ns_st_dbt", "ns_st_bp", "ns_st_lt", "ns_st_skc", "ns_st_dskc", "ns_st_ska", "ns_st_dska", "ns_st_skd", "ns_st_skt", "ns_st_dskt", "ns_st_pc", "ns_st_dpc", "ns_st_pp", "ns_st_br", "ns_st_pbr", "ns_st_rt", "ns_st_prt", "ns_st_ub", "ns_st_vo", "ns_st_pvo", "ns_st_ws", "ns_st_pws", "ns_st_ki", "ns_st_rp", "ns_st_bn", "ns_st_tb", "ns_st_an", "ns_st_ta", "ns_st_pl", "ns_st_pr", "ns_st_sn", "ns_st_en", "ns_st_ep", "ns_st_sr", "ns_st_ty", "ns_st_ct", "ns_st_cs", "ns_st_ge", "ns_st_st", "ns_st_stc", "ns_st_ce", "ns_st_ia", "ns_st_dt", "ns_st_ddt", "ns_st_tdt", "ns_st_tm", "ns_st_dtm", "ns_st_ttm", "ns_st_de", "ns_st_pu", "ns_st_ti", "ns_st_cu", "ns_st_fee", "ns_st_ft", "ns_st_at", "ns_st_pat", "ns_st_vt", "ns_st_pvt", "ns_st_tt", "ns_st_ptt", "ns_st_cdn", "ns_st_pcdn", "ns_st_ami", "ns_st_amt", "ns_st_ams", "ns_ap_i1", "ns_ap_i2", "ns_ap_i3", "ns_ap_i4", "ns_ap_i5", "ns_ap_i6", "ns_ap_referrer", "ns_clid", "ns_campaign", "ns_source", "ns_mchannel", "ns_linkname", "ns_fee", "gclid", "utm_campaign", "utm_source", "utm_medium", "utm_term", "utm_content", "ns_ecommerce", "ns_ec_sv", "ns_client_id", "ns_order_id", "ns_ec_cur", "ns_orderline_id", "ns_orderlines", "ns_prod_id", "ns_qty", "ns_prod_price", "ns_prod_grp", "ns_brand", "ns_shop", "ns_category", "category", "ns_c", "ns_search_term", "ns_search_result", "ns_m_exp", "ns_m_chs", "c3", "ca3", "cb3", "cc3", "cd3", "c4", "ca4", "cb4", "cc4", "cd4", "c5", "ca5", "cb5", "cc5", "cd5", "c6", "ca6", "cb6", "cc6", "cd6", "c10", "c11", "c13", "c14", "c15", "c16", "c7", "c8", "c9", "ns_ap_er", "ns_st_amc"]
					},
					f = function() {
						function e() {
							function e() {
								a = {}, a.ns_st_cl = "0", a.ns_st_pn = "1", a.ns_st_tp = "0", a.ns_st_cn = "1", a.ns_st_skd = "0", a.ns_st_ci = "0", a.c3 = "*null", a.c4 = "*null", a.c6 = "*null", a.ns_st_st = "*null", a.ns_st_pu = "*null", a.ns_st_pr = "*null", a.ns_st_ep = "*null", a.ns_st_sn = "*null", a.ns_st_en = "*null", a.ns_st_ct = "*null", s = {}, r = !1, i = !1, n = o.UNKNOWN_VALUE, l = !0, u = 0, c = NaN, v = 0, p = 0, f = NaN, g = 0, m = NaN, _ = 0, y = 0, h = 0, S = NaN, b = [], A = [], T = 0, k = 0, E = 0, P = 0, C = 0, w = 0, j = 0, I = NaN, L = 0, O = 0, N = 0, x = !1, D = NaN, B = !1, M = 0, q = 0, R = 0, U = 0, F = 0, V = 0, H = 0, G = 0, Y = 0, z = 0, K = 0, W = 0, X = 0, J = 0, Q = 0, Z = !1, $ = d.DEFAULT_ASSET_PLAYBACK_RATE
							}
							var n, i, r, a, s, l, u, c, f, p, h, v, g, m, y, _, b, A, S, T, k, E, P, C, w, j, I, L, O, N, x, D, R, U, M, B, F, V, q, H, G, Y, z, K, W, X, J, Q, Z, $, ee = this,
								te = d.INTERVAL_MERGE_TOLERANCE;
							t.extend(this, {
								getHash: function() {
									return n
								},
								setHash: function(e) {
									n = e
								},
								setPlaybackIntervalMergeTolerance: function(e) {
									te = e
								},
								getPlaybackIntervalMergeTolerance: function() {
									return te
								},
								setInternalLabel: function(e, t) {
									a[e] = t
								},
								getInternalLabel: function(e) {
									return a[e]
								},
								hasInternalLabel: function(e) {
									return null != a[e]
								},
								setLabels: function(e) {
									e && t.extend(s, e)
								},
								getLabels: function() {
									return s
								},
								setLabel: function(e, t) {
									s[e] = t
								},
								getLabel: function(e) {
									return s[e]
								},
								hasLabel: function(e) {
									return e in s
								},
								getClipNumber: function() {
									return parseInt(ee.getInternalLabel("ns_st_cn"))
								},
								setClipNumber: function(e) {
									ee.setInternalLabel("ns_st_cn", e + "")
								},
								getPartNumber: function() {
									return ee.hasLabel("ns_st_pn") ? parseInt(ee.getLabel("ns_st_pn")) : parseInt(ee.getInternalLabel("ns_st_pn"))
								},
								createLabels: function(e, n) {
									var i = e || {},
										o = t.isEmpty(i.ns_st_pt) ? ee.getPlaybackTime() : parseInt(i.ns_st_pt);
									i.ns_st_pt = o + (isNaN(c) ? 0 : n - c) + "", i.ns_st_dpt = o + (isNaN(c) ? 0 : n - c) - p + "", i.ns_st_ipt = o + (isNaN(c) ? 0 : n - c) - h + "";
									var l = t.isEmpty(i.ns_st_et) ? ee.getElapsedTime() : parseInt(i.ns_st_et);
									i.ns_st_et = l + (isNaN(m) ? 0 : n - m) + "", i.ns_st_det = l + (isNaN(m) ? 0 : n - m) - y + "";
									var u = t.isEmpty(i.ns_st_bt) ? ee.getBufferingTime() : parseInt(i.ns_st_bt);
									i.ns_st_bt = u + "", i.ns_st_dbt = u + (isNaN(I) ? 0 : n - I) - L + "";
									for(var d, f = parseInt(i.ns_st_po), v = t.addNewPlaybackInterval(t.cloneObject(ee.getSegmentPlaybackIntervals()), $ < 0 ? f : S, $ < 0 ? S : f, te), g = t.addNewPlaybackInterval(t.cloneObject(ee.getAssetPlaybackIntervals()), $ < 0 ? f : S, $ < 0 ? S : f, te), _ = 0, b = 0, A = 0; A < v.length; A++) d = Math.abs(v[A].end - v[A].start), _ += d, d > b && (b = d);
									var j = 0,
										O = 0;
									for(A = 0, d; A < g.length; A++) d = Math.abs(g[A].end - g[A].start), j += d, d > O && (O = d);
									i.ns_st_upc = _ + "", i.ns_st_dupc = _ - T + "", i.ns_st_iupc = _ - k + "", _ > k ? i.ns_st_iupc = _ - k + "" : i.ns_st_iupc = "0", i.ns_st_lpc = b + "", i.ns_st_dlpc = b - E + "", i.ns_st_upa = j + "", i.ns_st_dupa = j - P + "", j > C ? i.ns_st_iupa = j - C + "" : i.ns_st_iupa = "0", i.ns_st_lpa = O + "", i.ns_st_dlpa = O - w + "";
									var x = t.isEmpty(i.ns_st_pc) ? ee.getPauses() : parseInt(i.ns_st_pc);
									i.ns_st_pc = x + "", i.ns_st_dpc = x - G + "";
									var D = t.isEmpty(i.ns_st_skc) ? ee.getSeeks() : parseInt(i.ns_st_skc);
									i.ns_st_skc = D + "", i.ns_st_dskc = D - z + "";
									var R = t.isEmpty(i.ns_st_bc) ? ee.getBuffers() : parseInt(i.ns_st_bc);
									i.ns_st_bc = R + "", i.ns_st_dbc = R - N + "";
									var M = t.isEmpty(i.ns_st_skt) ? ee.getSeekingTime() : parseInt(i.ns_st_skt);
									i.ns_st_skt = M + "", i.ns_st_dskt = M - U + "";
									var B = t.isEmpty(i.ns_st_ska) ? ee.getSeekingAmount() : parseInt(i.ns_st_ska);
									return i.ns_st_ska = B + "", i.ns_st_dska = B - V + "", r && (i.ns_st_spc = K + "", i.ns_st_apc = W + "", i.ns_st_sq = X + "", i.ns_st_asq = J + ""), r || 0 != Q ? i.ns_st_sc = Q + "" : i.ns_st_sc = "1", i.ns_st_rt = $ + "", t.extend(i, a, s), i
								},
								updateDeltaLabels: function(e) {
									p = parseInt(e.ns_st_pt), y = parseInt(e.ns_st_et), L = parseInt(e.ns_st_bt), T = parseInt(e.ns_st_upc), E = parseInt(e.ns_st_lpc), P = parseInt(e.ns_st_upa), w = parseInt(e.ns_st_lpa), G = parseInt(e.ns_st_pc), z = parseInt(e.ns_st_skc), N = parseInt(e.ns_st_bc), U = parseInt(e.ns_st_skt), V = parseInt(e.ns_st_ska), ee.setSeekingDirection(0)
								},
								updateIndependentLabels: function(e) {
									h = parseInt(e.ns_st_pt), k = parseInt(e.ns_st_upc), C = parseInt(e.ns_st_upa)
								},
								getVideoTrack: function() {
									return ee.getInternalLabel("ns_st_vt")
								},
								setVideoTrack: function(e) {
									ee.setInternalLabel("ns_st_vt", e + "")
								},
								getAudioTrack: function() {
									return ee.getInternalLabel("ns_st_at")
								},
								setAudioTrack: function(e) {
									ee.setInternalLabel("ns_st_at", e + "")
								},
								getSubtitleTrack: function() {
									return ee.getInternalLabel("ns_st_tt")
								},
								setSubtitleTrack: function(e) {
									ee.setInternalLabel("ns_st_tt", e + "")
								},
								getCDN: function() {
									return ee.getInternalLabel("ns_st_cdn")
								},
								setCDN: function(e) {
									ee.setInternalLabel("ns_st_cdn", e + "")
								},
								getSegmentPlaybackIntervals: function() {
									return b
								},
								setAssetPlaybackIntervals: function(e) {
									b = e
								},
								getAssetPlaybackIntervals: function() {
									return A
								},
								incrementPauses: function() {
									H++
								},
								incrementSeeks: function() {
									Y++
								},
								incrementPlayCounter: function() {
									X++
								},
								getPlayCounter: function() {
									return X
								},
								getBufferingTime: function() {
									return j
								},
								setBufferingTime: function(e) {
									j = e
								},
								addBufferingTime: function(e) {
									if(!isNaN(I)) {
										var t = ee.getBufferingTime();
										t += e - I, ee.setBufferingTime(t), I = NaN
									}
								},
								setPlaybackStartPosition: function(e) {
									S = parseInt(e)
								},
								getPlaybackStartPosition: function() {
									return S
								},
								addInterval: function(e) {
									isNaN(S) || isNaN(e) || (b = t.addNewPlaybackInterval(b, $ < 0 ? e : S, $ < 0 ? S : e, te), A = t.addNewPlaybackInterval(A, $ < 0 ? e : S, $ < 0 ? S : e, te), S = NaN)
								},
								getElapsedTime: function() {
									return g
								},
								setElapsedTime: function(e) {
									g = e
								},
								addElapsedTime: function(e) {
									if(!isNaN(m)) {
										var t = ee.getElapsedTime();
										t += e - m, ee.setElapsedTime(t), m = NaN
									}
								},
								getElapsedTimestamp: function() {
									return m
								},
								setElapsedTimestamp: function(e) {
									m = e
								},
								addPlaybackTime: function(e) {
									if(!isNaN(c)) {
										var t = ee.getPlaybackTime();
										t += e - c, ee.setPlaybackTime(t), c = NaN
									}
								},
								getPlaybackTime: function() {
									return u
								},
								getExpectedPlaybackPosition: function(e) {
									return isNaN(c) ? v : v + Math.floor((e - c) * $ / 100)
								},
								setPlaybackTimeOffset: function(e) {
									v = e
								},
								getPlaybackTimeOffset: function() {
									return v
								},
								setPlaybackTime: function(e) {
									u = e
								},
								getPlaybackTimestamp: function() {
									return c
								},
								setPlaybackTimestamp: function(e) {
									c = e
								},
								setPreviousPlaybackTime: function(e) {
									p = e
								},
								setPreviousPlaybackTimestamp: function(e) {
									f = e
								},
								getBufferingTimestamp: function() {
									return I
								},
								setBufferingTimestamp: function(e) {
									I = e
								},
								getPauses: function() {
									return H
								},
								setPauses: function(e) {
									H = e
								},
								getSeeks: function() {
									return Y
								},
								setSeeks: function(e) {
									Y = e
								},
								setSeeking: function(e) {
									x = e
								},
								isSeeking: function() {
									return x
								},
								setCollectingSeekingTime: function(e) {
									B = e
								},
								isCollectingSeekingTime: function() {
									return B
								},
								setAssetStarted: function(e) {
									i = e
								},
								isAssetStarted: function() {
									return i
								},
								setPlaybackStarted: function(e) {
									r = e
								},
								isPlaybackStarted: function() {
									return r
								},
								setSeekingTimestamp: function(e) {
									D = e
								},
								getSeekingTimestamp: function() {
									return D
								},
								addSeekingTime: function(e) {
									if(!isNaN(D)) {
										var t = ee.getSeekingTime();
										t += e - D, ee.setSeekingTime(t), D = NaN
									}
								},
								getSeekingTime: function() {
									return R
								},
								setSeekingTime: function(e) {
									R = e
								},
								setSeekingTimeBeforeEnd: function(e) {
									q = e
								},
								getSeekingTimeBeforeEnd: function() {
									return q
								},
								setSeekStartPosition: function(e) {
									M = e
								},
								getSeekStartPosition: function() {
									return M
								},
								setSeekingAmount: function(e) {
									F = e
								},
								getSeekingAmount: function() {
									return F
								},
								addSeekingAmount: function(e) {
									var t = ee.getSeekingAmount();
									t += Math.abs(e - M), ee.setSeekingAmount(t);
									var n;
									M == e ? n = 0 : M > e ? n = -1 : M < e && (n = 1), ee.setSeekingDirection(n), M = 0
								},
								getSeekingDirection: function() {
									return parseInt(ee.getInternalLabel("ns_st_skd"))
								},
								setSeekingDirection: function(e) {
									ee.setInternalLabel("ns_st_skd", e + "")
								},
								resetAssetLifecycleLabels: function() {
									u = 0, p = 0, h = 0, j = 0, L = 0, O = 0, N = 0, H = 0, G = 0, X = 0, A = [], P = 0, C = 0, w = 0, g = 0, y = 0, R = 0, U = 0, F = 0, V = 0, Y = 0, z = 0
								},
								incrementSegmentPlaybackCounter: function() {
									K++
								},
								incrementAssetLoadCounter: function() {
									Q++
								},
								incrementAssetPlaybackCounter: function() {
									W++
								},
								getPreviousUniquePlaybackInterval: function() {
									return T
								},
								setPreviousUniquePlaybackInterval: function(e) {
									T = e
								},
								getPreviousEventIndependentUniquePlaybackInterval: function() {
									return k
								},
								setPreviousEventIndependentUniquePlaybackInterval: function(e) {
									k = e
								},
								setPreviousLongestPlaybackInterval: function(e) {
									E = e
								},
								getPreviousLongestPlaybackInterval: function() {
									return E
								},
								resetAssetPlaybackIntervals: function() {
									A = [], P = 0, C = 0, w = 0
								},
								setSegmentPlaybackCounter: function(e) {
									K = e
								},
								setAssetLoadCounter: function(e) {
									Q = e
								},
								setAssetPlaybackCounter: function(e) {
									W = e
								},
								setLowestPartNumberPlayed: function(e) {
									_ = e
								},
								getSegmentPlaybackCounter: function() {
									return K
								},
								getAssetLoadCounter: function() {
									return Q
								},
								getAssetPlaybackCounter: function() {
									return W
								},
								getLowestPartNumberPlayed: function() {
									return _
								},
								getBuffers: function() {
									return O
								},
								incrementBufferCount: function() {
									O++
								},
								getPreviousBufferingTime: function() {
									return L
								},
								setPlaySequenceCounter: function(e) {
									J = e
								},
								incrementPlaySequenceCounter: function() {
									J++
								},
								getPlaySequenceCounter: function() {
									return J
								},
								isPlaybackSessionLooping: function() {
									return Z
								},
								setPlaybackSessionLooping: function(e) {
									Z = e
								},
								enableAutoCalculatePositions: function(e) {
									l = !!e
								},
								isAutoCalculatePositionsEnabled: function() {
									return l
								},
								getPlaybackRate: function() {
									return $
								},
								setPlaybackRate: function(e) {
									$ = e
								}
							}), e()
						}
						return e.resetAsset = function(e, t, n) {
							for(var i = e.getLabels(), r = {}, a = 0; n && a < n.length; ++a) i.hasOwnProperty(n[a]) && (r[n[a]] = i[n[a]]);
							t.setLabels(r), t.setPlaybackIntervalMergeTolerance(e.getPlaybackIntervalMergeTolerance())
						}, e
					}(),
					p = function() {
						function e(e) {
							function n() {
								i = new f, o = {}, o.ns_st_id = +new Date + "", c = {}, r = NaN, a = 0, s = NaN, h = {}, v = 0, p = !1, g = !1, m = 0, _ = 0, y = 0, b = 1, A = 0, S = []
							}
							var i, r, a, s, o, c, p, h, v, g, m, y, _, b, A, S, T = this;
							t.extend(this, {
								resetAsset: function() {
									var e = i;
									i = new f, f.resetAsset(e, i)
								},
								hashExists: function(e) {
									return null != h[e]
								},
								storeHash: function(e) {
									h[e] = {}
								},
								removeHash: function(e) {
									delete h[e]
								},
								storeAssetPlaybackCounters: function() {
									for(var e in h)
										if(h.hasOwnProperty(e) && h[e].clipNumber === i.getClipNumber()) {
											t.extend(h[e], {
												segmentPlaybackCounter: i.getSegmentPlaybackCounter(),
												assetLoadCounter: i.getAssetLoadCounter(),
												assetPlaybackCounter: i.getAssetPlaybackCounter(),
												lowestPartNumberPlayed: i.getLowestPartNumberPlayed(),
												seeking: i.isSeeking(),
												seekingTimeBeforeEnd: i.getSeekingTimeBeforeEnd(),
												seekingStartPosition: i.getSeekStartPosition(),
												segmentPlaybackIntervals: i.getSegmentPlaybackIntervals(),
												videoTrack: i.getVideoTrack(),
												audioTrack: i.getAudioTrack(),
												subtitleTrack: i.getSubtitleTrack(),
												cdn: i.getCDN(),
												playSequenceCounter: i.getPlaySequenceCounter(),
												previousUniquePlaybackInterval: i.getPreviousUniquePlaybackInterval(),
												previousEventIndependentUniquePlaybackInterval: i.getPreviousEventIndependentUniquePlaybackInterval(),
												previousLongestPlaybackInterval: i.getPreviousLongestPlaybackInterval()
											});
											break
										}
								},
								getStoredAssetRegisters: function(e) {
									return h[e]
								},
								getClipNumber: function(e) {
									return h[e].clipNumber
								},
								getMaxClipNumber: function() {
									return v
								},
								storeClipNumber: function(e, t) {
									h[e].clipNumber = t, t > v && (v = t)
								},
								setLabels: function(e) {
									null != e && t.extend(c, e)
								},
								getLabels: function() {
									return c
								},
								setLabel: function(e, t) {
									var n = {};
									n[e] = t, T.setLabels(n)
								},
								getLabel: function(e) {
									return c[e]
								},
								getAsset: function() {
									return i
								},
								addInternalErrorFlag: function(e) {
									for(var t = 0; t < S.length; ++t)
										if(S[t] == e) return;
									S.push(e)
								},
								createLabels: function(n, r) {
									var a = n || {},
										l = t.isEmpty(a.ns_st_pa) ? T.getPlaybackTime() : parseInt(a.ns_st_pa);
									return a.ns_st_pa = l + (isNaN(s) ? 0 : r - s) + "", a.ns_st_pp = _ + "", a.ns_st_sp = b + "", a.ns_st_bp = A + "", g || (a.ns_st_pb = null != a.ns_st_pb ? a.ns_st_pb : "1"), i.isPlaybackStarted() && (a.ns_st_ppc = m + "", a.ns_st_psq = y + ""), S.length > 0 && (a.ns_st_ie = (a.ns_st_ie ? a.ns_st_ie + ";" : "") + S.join(";")), t.extend(a, o, c), e.getPlaybackSession().getAsset().createLabels(a, r), a
								},
								incrementPlayCounter: function() {
									b++
								},
								incrementPauses: function() {
									_++
								},
								addPlaybackTime: function(e) {
									if(!isNaN(s)) {
										var t = T.getPlaybackTime();
										t += e - s, T.setPlaybackTime(t), s = NaN
									}
								},
								addBufferingTime: function(e) {
									if(!isNaN(r)) {
										var t = T.getBufferingTime();
										t += e - r, T.setBufferingTime(t), r = NaN
									}
								},
								getBufferingTime: function() {
									return A
								},
								setBufferingTime: function(e) {
									A = e
								},
								getPlaybackTime: function() {
									return a
								},
								setBufferingTimestamp: function(e) {
									r = e
								},
								getBufferingTimestamp: function() {
									return r
								},
								setPlaybackTime: function(e) {
									a = e
								},
								setPlaybackTimestamp: function(e) {
									s = e
								},
								getPlaybackTimestamp: function() {
									return s
								},
								getPauses: function() {
									return _
								},
								setPauses: function(e) {
									_ = e
								},
								isPlaybackSessionStarted: function() {
									return p
								},
								setPlaybackSessionStarted: function(e) {
									p = e
								},
								getPlaybackCounter: function() {
									return m
								},
								incrementPlaybackCounter: function() {
									m++
								},
								setFirstEventSent: function(e) {
									g = e
								},
								setPlaySequenceCounter: function(e) {
									y = e
								},
								incrementPlaySequenceCounter: function() {
									y++
								},
								getPlaybackSessionID: function() {
									return o.ns_st_id
								},
								setAsset: function(n, i) {
									e.getLogging().apiCall("setAsset", n, i), n = t.jsonObjectToStringDictionary(n);
									var r = e.getStateMachine().getCurrentState();
									if(r != u.IDLE) {
										e.getLogging().infoLog("Ending the current Clip. It was in state:", t.stateToString(r));
										var a = {};
										e.getStaCore().newEvent(l.END, t.fixEventTime(a), a)
									}
									var s = "",
										o = 0;
									if(null != n.ns_st_cn) s = n.ns_st_cn;
									else
										for(var c = 0; c < d.STANDARD_METADATA_LABELS.length; c++) n[d.STANDARD_METADATA_LABELS[c]] && (s += d.STANDARD_METADATA_LABELS[c] + ":" + n[d.STANDARD_METADATA_LABELS[c]] + ";");
									var f = T,
										p = f.getAsset();
									p.isAssetStarted() ? (f.hashExists(p.getHash()) || (f.storeHash(p.getHash()), f.storeClipNumber(p.getHash(), p.getClipNumber())), f.storeAssetPlaybackCounters(), o = f.hashExists(s) ? f.getClipNumber(s) : t.exists(n.ns_st_cn) ? parseInt(n.ns_st_cn) : f.getMaxClipNumber() + 1) : o = f.hashExists(s) ? f.getClipNumber(s) : p.getClipNumber(), f.resetAsset(), p = f.getAsset(), p.setHash(s), p.setClipNumber(o), p.setLabels(n);
									var h = f.getStoredAssetRegisters(s);
									h && (p.setAssetStarted(!0), p.setSegmentPlaybackCounter(h.segmentPlaybackCounter), p.setAssetLoadCounter(h.assetLoadCounter), p.setAssetPlaybackCounter(h.assetPlaybackCounter), p.setLowestPartNumberPlayed(h.lowestPartNumberPlayed), p.setSeeking(h.seeking), p.setSeekingTimeBeforeEnd(h.seekingTimeBeforeEnd), p.setSeekStartPosition(h.seekingStartPosition), p.setAssetPlaybackIntervals(h.segmentPlaybackIntervals), h.videoTrack && p.setVideoTrack(h.videoTrack), h.audioTrack && p.setAudioTrack(h.audioTrack), h.subtitleTrack && p.setSubtitleTrack(h.subtitleTrack), h.cdn && p.setCDN(h.cdn), p.setPlaySequenceCounter(h.playSequenceCounter), p.setPreviousUniquePlaybackInterval(h.previousUniquePlaybackInterval), p.setPreviousEventIndependentUniquePlaybackInterval(h.previousEventIndependentUniquePlaybackInterval), p.setPreviousLongestPlaybackInterval(h.previousLongestPlaybackInterval)), p.incrementAssetLoadCounter(), p.isAssetStarted() && i && f.incrementPlayCounter(), i && (f.setPlaySequenceCounter(0), p.setPlaybackSessionLooping(!0)), !t.exists(n.ns_st_tp) && t.exists(n.ns_st_ad) && t.isNotEmpty(n.ns_st_ad) && "0" !== n.ns_st_ad && p.setInternalLabel("ns_st_tp", "1")
								}
							}), n()
						}
						return e.resetPlaybackSession = function(e, t, n) {
							for(var i = t.getAsset(), r = t.getLabels(), a = {}, s = 0; n && s < n.length; s++) r.hasOwnProperty(n[s]) && (a[n[s]] = r[n[s]]);
							e.getPlaybackSession().setLabels(a), f.resetAsset(i, e.getPlaybackSession().getAsset(), n)
						}, e
					}(),
					h = function() {
						return function(e) {
							function n() {
								r = 1
							}

							function i(n) {
								a = t.extend({}, n);
								var i = e.getStaCore().getLiveEndpointURL();
								if(e.getAppCore()) {
									if(e.getStaCore().isProperlyInitialized()) {
										var r = e.getStaCore().getExports().et;
										if("function" == typeof e.getAppCore().getMeasurementDispatcher) {
											var s = e.getAppCore().getMeasurementDispatcher();
											s.send(r.HIDDEN, n, i)
										} else {
											var o = e.getStaCore().getExports().am,
												l = o.newApplicationMeasurement(e.getAppCore(), r.HIDDEN, n, i);
											e.getAppCore().getQueue().offer(l)
										}
									}
								} else i && e.getStaCore().getPlatformAPI().httpGet(e.getStaCore().prepareUrl(i, n))
							}
							var r, a, s = this,
								o = [];
							t.extend(this, {
								newEvent: function(e) {
									for(var t = 0; t < o.length; ++t) o[t](e.eventLabels);
									i(e.eventLabels), e.eventType != l.HEARTBEAT && s.incrementEventCounter()
								},
								addMeasurementListener: function(e) {
									"function" == typeof e && o.push(e)
								},
								removeMeasurementListener: function(e) {
									for(var t = NaN, n = 0; n < o.length; ++n)
										if(o[n] == e) {
											t = n;
											break
										}
									isNaN(t) || o.splice(t, 1)
								},
								getEventCounter: function() {
									return r
								},
								incrementEventCounter: function() {
									r++
								},
								setEventCounter: function(e) {
									r = e
								},
								getMeasurementSnapshot: function() {
									return a
								}
							}), n()
						}
					}(),
					v = function() {
						return function(e) {
							function n() {
								s = 0, o = 0
							}

							function i() {
								o++;
								var n = {},
									i = t.fixEventTime(n);
								n.ns_st_hc = e.getHeartbeat().getCount() + "";
								var r = e.getStaCore().createLabels(l.HEARTBEAT, n, i);
								e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels), e.getEventManager().newEvent(r), s = 0, u.resume()
							}

							function r() {
								null != a && (e.getStaCore().getPlatformAPI().clearTimeout(a), a = null)
							}
							var a, s, o, u = this,
								c = d.DEFAULT_HEARTBEAT_INTERVAL;
							t.extend(this, {
								getCount: function() {
									return o
								},
								setIntervals: function(e) {
									c = e
								},
								getInterval: function(e) {
									var t = 0;
									if(null != c)
										for(var n = 0; n < c.length; n++) {
											var i = c[n],
												r = i.playingtime;
											if(!r || e < r) {
												t = i.interval;
												break
											}
										}
									return t
								},
								getIntervals: function() {
									return c
								},
								resume: function() {
									r();
									var t = u.getInterval(e.getPlaybackSession().getAsset().getPlaybackTime() + (+new Date - e.getPlaybackSession().getAsset().getPlaybackTimestamp()));
									if(t > 0) {
										var n = s > 0 ? s : t;
										a = e.getStaCore().getPlatformAPI().setTimeout(i, n)
									}
									s = 0
								},
								pause: function() {
									r();
									var t = u.getInterval(e.getPlaybackSession().getAsset().getPlaybackTime() + (+new Date - e.getPlaybackSession().getAsset().getPlaybackTimestamp()));
									s = t - (e.getPlaybackSession().getAsset().getPlaybackTime() + (+new Date - e.getPlaybackSession().getAsset().getPlaybackTimestamp())) % t
								}
							}), n()
						}
					}(),
					g = function() {
						return function(e) {
							function n() {}

							function i() {
								var n = {},
									i = t.fixEventTime(n);
								e.getStaCore().newPseudoEvent(l.KEEPALIVE, i, n), s.start()
							}

							function r() {
								null != a && (e.getStaCore().getPlatformAPI().clearTimeout(a), a = null)
							}
							var a, s = this,
								o = d.DEFAULT_KEEP_ALIVE_INTERVAL;
							t.extend(s, {
								start: function() {
									r(), a = e.getStaCore().getPlatformAPI().setTimeout(i, o)
								},
								stop: r,
								setInterval: function(e) {
									o = e
								},
								getInterval: function() {
									return o
								}
							}), n()
						}
					}(),
					m = function() {
						return function(e) {
							function n() {
								a = u.IDLE, r = null, i = NaN
							}
							var i, r, a, s = this;
							t.extend(s, {
								eventTypeToState: function(e) {
									if(a == u.IDLE) {
										if(e == l.PLAY) return u.PLAYING;
										if(e == l.SEEK_START) return u.SEEKING_BEFORE_PLAYBACK;
										if(e == l.BUFFER) return u.BUFFERING_BEFORE_PLAYBACK
									} else if(a == u.PLAYBACK_NOT_STARTED) {
										if(e == l.PLAY) return u.PLAYING;
										if(e == l.SEEK_START) return u.SEEKING_BEFORE_PLAYBACK;
										if(e == l.BUFFER) return u.BUFFERING_BEFORE_PLAYBACK;
										if(e == l.END || e == l.AD_SKIP) return u.IDLE
									} else if(a == u.PLAYING) {
										if(e == l.END || e == l.AD_SKIP) return u.IDLE;
										if(e == l.BUFFER) return u.BUFFERING_DURING_PLAYBACK;
										if(e == l.PAUSE) return u.PAUSED;
										if(e == l.SEEK_START) return u.SEEKING_DURING_PLAYBACK
									} else if(a == u.PAUSED) {
										if(e == l.END || e == l.AD_SKIP) return u.IDLE;
										if(e == l.BUFFER) return u.BUFFERING_DURING_PAUSE;
										if(e == l.PLAY) return u.PLAYING;
										if(e == l.SEEK_START) return u.SEEKING_DURING_PAUSE
									} else if(a == u.BUFFERING_BEFORE_PLAYBACK) {
										if(e == l.END || e == l.AD_SKIP) return u.IDLE;
										if(e == l.PAUSE || e == l.BUFFER_STOP) return u.PLAYBACK_NOT_STARTED;
										if(e == l.PLAY) return u.PLAYING;
										if(e == l.SEEK_START) return u.SEEKING_BEFORE_PLAYBACK
									} else if(a == u.BUFFERING_DURING_PLAYBACK) {
										if(e == l.END || e == l.AD_SKIP) return u.IDLE;
										if(e == l.PLAY || e == l.BUFFER_STOP) return u.PLAYING;
										if(e == l.PAUSE_ON_BUFFERING) return u.PAUSED_DURING_BUFFERING;
										if(e == l.SEEK_START) return u.SEEKING_DURING_BUFFERING;
										if(e == l.PAUSE) return u.PAUSED
									} else if(a == u.BUFFERING_DURING_SEEKING) {
										if(e == l.END || e == l.AD_SKIP) return u.IDLE;
										if(e == l.PLAY) return u.PLAYING;
										if(e == l.BUFFER_STOP) return u.SEEKING_DURING_PLAYBACK;
										if(e == l.PAUSE) return u.PAUSED
									} else if(a == u.BUFFERING_DURING_PAUSE) {
										if(e == l.END || e == l.AD_SKIP) return u.IDLE;
										if(e == l.PLAY) return u.PLAYING;
										if(e == l.SEEK_START) return u.SEEKING_DURING_PAUSE;
										if(e == l.BUFFER_STOP || e == l.PAUSE) return u.PAUSED
									} else if(a == u.SEEKING_BEFORE_PLAYBACK) {
										if(e == l.END || e == l.AD_SKIP) return u.IDLE;
										if(e == l.PAUSE) return u.PLAYBACK_NOT_STARTED;
										if(e == l.PLAY) return u.PLAYING;
										if(e == l.BUFFER) return u.BUFFERING_BEFORE_PLAYBACK
									} else if(a == u.SEEKING_DURING_PLAYBACK) {
										if(e == l.END || e == l.AD_SKIP) return u.IDLE;
										if(e == l.PLAY) return u.PLAYING;
										if(e == l.PAUSE) return u.PAUSED;
										if(e == l.BUFFER) return u.BUFFERING_DURING_SEEKING
									} else if(a == u.SEEKING_DURING_BUFFERING) {
										if(e == l.END || e == l.AD_SKIP) return u.IDLE;
										if(e == l.PLAY) return u.PLAYING;
										if(e == l.PAUSE || e == l.BUFFER_STOP) return u.PAUSED;
										if(e == l.BUFFER) return u.BUFFERING_DURING_SEEKING
									} else if(a == u.SEEKING_DURING_PAUSE) {
										if(e == l.END || e == l.AD_SKIP) return u.IDLE;
										if(e == l.PLAY) return u.PLAYING;
										if(e == l.PAUSE || e == l.BUFFER_STOP) return u.PAUSED;
										if(e == l.BUFFER) return u.BUFFERING_DURING_PAUSE
									} else if(a == u.PAUSED_DURING_BUFFERING) {
										if(e == l.END || e == l.AD_SKIP) return u.IDLE;
										if(e == l.SEEK_START) return u.SEEKING_DURING_BUFFERING;
										if(e == l.PAUSE) return u.PAUSED;
										if(e == l.PLAY || e == l.BUFFER_STOP) return u.PLAYING
									}
									return null
								},
								getCurrentState: function() {
									return a
								},
								newEvent: function(e, t) {
									var n = s.eventTypeToState(e);
									a != n && (r = a, a = n, i = t)
								},
								getPreviousState: function() {
									return r
								},
								getLastStateChangeTimestamp: function() {
									return i
								}
							}), n()
						}
					}(),
					y = function() {
						return function(e) {
							var n = this;
							t.extend(n, {
								onSeekStartWhenPausedOrBufferingDuringPause: function(t, n) {
									var i = parseInt(n.ns_st_po);
									e.getPlaybackSession().getAsset().isSeeking() ? e.getPlaybackSession().getAsset().isCollectingSeekingTime() || (e.getPlaybackSession().getAsset().setSeekingTimestamp(t), e.getPlaybackSession().getAsset().setCollectingSeekingTime(!0)) : e.getPlaybackSession().getAsset().incrementSeeks(), e.getPlaybackSession().getAsset().isSeeking() || (e.getPlaybackSession().getAsset().setSeeking(!0), e.getPlaybackSession().getAsset().setCollectingSeekingTime(!0), e.getPlaybackSession().getAsset().setSeekStartPosition(i), e.getPlaybackSession().getAsset().setSeekingTimestamp(t)), e.getPlaybackSession().getAsset().addElapsedTime(t), e.getPlaybackSession().getAsset().setElapsedTimestamp(t)
								},
								onBufferWhenSeekingOrPaused: function(t, n) {
									e.getPlaybackSession().setBufferingTimestamp(t), e.getPlaybackSession().getAsset().setBufferingTimestamp(t), e.getPlaybackSession().getAsset().addElapsedTime(t), e.getPlaybackSession().getAsset().setElapsedTimestamp(t)
								},
								onPlayWhenSeekingDuringBufferingOrSeekingDuringPause: function(t, n) {
									var i = parseInt(n.ns_st_po);
									e.getPlaybackSession().incrementPlaySequenceCounter(), e.getPlaybackSession().getAsset().incrementPlaySequenceCounter(), e.getPlaybackSession().getAsset().isSeeking() && (e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().addSeekingTime(t), e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1)), e.getPlaybackSession().getAsset().addSeekingAmount(i), e.getPlaybackSession().getAsset().setSeeking(!1)), e.getPlaybackSession().getAsset().incrementPlayCounter(), e.getPlaybackSession().setPlaybackTimestamp(t), e.getPlaybackSession().getAsset().setPlaybackTimestamp(t), e.getPlaybackSession().getAsset().addElapsedTime(t), e.getPlaybackSession().getAsset().setElapsedTimestamp(t), e.getPlaybackSession().getAsset().setPlaybackStartPosition(i), e.getHeartbeat().resume(), e.getKeepAlive().start();
									var r = e.getStaCore().createLabels(l.PLAY, n, t);
									e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels), e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels), e.getEventManager().newEvent(r)
								},
								onBufferStopWhenBufferingDuringSeekingOrBufferingDuringPause: function(t, n) {
									e.getPlaybackSession().addBufferingTime(t), e.getPlaybackSession().getAsset().addBufferingTime(t), e.getPlaybackSession().getAsset().addElapsedTime(t), e.getPlaybackSession().getAsset().setElapsedTimestamp(t)
								},
								onPauseWhenSeekingDuringPlaybackOrSeekingDuringPause: function(t, n) {
									e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().addSeekingTime(t), e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1)), e.getPlaybackSession().getAsset().addElapsedTime(t), e.getPlaybackSession().getAsset().setElapsedTimestamp(t)
								},
								onEndOrAdSkipWhenSeekingDuringBufferingOrSeekingDuringPause: function(n, i) {
									e.getStaCore().resetHeartbeat(), e.getKeepAlive().stop(), e.getPlaybackSession().getAsset().addElapsedTime(n);
									var r = e.getStaCore().createLabels(l.END, i, n);
									e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels), e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels), e.getEventManager().newEvent(r), e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().setSeekingTimeBeforeEnd(n - e.getPlaybackSession().getAsset().getSeekingTimestamp()), e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1)), e.getPlaybackSession().storeAssetPlaybackCounters(), e.getPlaybackSession().getAsset().resetAssetLifecycleLabels(), e.getPlaybackSession().getAsset().setPlaybackStarted(!1), i.hasOwnProperty("ns_st_pe") && t.parseBoolean(i.ns_st_pe, !1) && e.getStaCore().resetPlaybackSession()
								},
								onBufferStopWhenSeekingDuringBufferingOrSeekingDuringPause: function(t, n) {
									e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().addSeekingTime(t), e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1)), e.getPlaybackSession().getAsset().addElapsedTime(t), e.getPlaybackSession().getAsset().setElapsedTimestamp(t)
								},
								onBufferStopOrOnPlayWhenBufferingDuringPlayback: function(t, n) {
									var i = parseInt(n.ns_st_po);
									e.getStaCore().stopPausedOnBufferingTimer(), e.getPlaybackSession().incrementPlaySequenceCounter(), e.getPlaybackSession().getAsset().incrementPlayCounter(), e.getPlaybackSession().getAsset().incrementPlaySequenceCounter(), e.getPlaybackSession().addBufferingTime(t), e.getPlaybackSession().getAsset().addBufferingTime(t), e.getPlaybackSession().setPlaybackTimestamp(t), e.getPlaybackSession().getAsset().setPlaybackTimestamp(t), e.getPlaybackSession().getAsset().setPlaybackStartPosition(i), e.getPlaybackSession().getAsset().addElapsedTime(t), e.getPlaybackSession().getAsset().setElapsedTimestamp(t), e.getHeartbeat().resume(), e.getKeepAlive().start()
								}
							})
						}
					}(),
					_ = function() {
						return function(e) {
							var n = this;
							t.extend(n, {
								onEndOrAdSkip: function(n, i) {
									e.getPlaybackSession().addBufferingTime(n), e.getPlaybackSession().getAsset().addBufferingTime(n), e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().isCollectingSeekingTime() && e.getPlaybackSession().getAsset().setSeekingTimeBeforeEnd(n - e.getPlaybackSession().getAsset().getSeekingTimestamp()), e.getPlaybackSession().getAsset().resetAssetLifecycleLabels(), e.getPlaybackSession().getAsset().setPlaybackStarted(!1), i.hasOwnProperty("ns_st_pe") && t.parseBoolean(i.ns_st_pe, !1) && e.getStaCore().resetPlaybackSession()
								},
								onBufferStop: function(t, n) {
									e.getPlaybackSession().addBufferingTime(t), e.getPlaybackSession().getAsset().addBufferingTime(t), e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().addSeekingTime(t), e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1))
								},
								onSeekStart: function(t, n) {
									var i = parseInt(n.ns_st_po);
									e.getPlaybackSession().addBufferingTime(t), e.getPlaybackSession().getAsset().addBufferingTime(t), e.getPlaybackSession().getAsset().isSeeking() ? e.getPlaybackSession().getAsset().isCollectingSeekingTime() || (e.getPlaybackSession().getAsset().setSeekingTimestamp(t), e.getPlaybackSession().getAsset().setCollectingSeekingTime(!0)) : e.getPlaybackSession().getAsset().incrementSeeks(), e.getPlaybackSession().getAsset().isSeeking() || (e.getPlaybackSession().getAsset().setSeeking(!0), e.getPlaybackSession().getAsset().setCollectingSeekingTime(!0), e.getPlaybackSession().getAsset().setSeekStartPosition(i), e.getPlaybackSession().getAsset().setSeekingTimestamp(t))
								},
								onPause: function(t, n) {
									e.getPlaybackSession().addBufferingTime(t), e.getPlaybackSession().getAsset().addBufferingTime(t), e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().addSeekingTime(t), e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1))
								},
								onPlay: function(t, n) {
									var i = parseInt(n.ns_st_po);
									e.getPlaybackSession().addBufferingTime(t), e.getPlaybackSession().getAsset().addBufferingTime(t), e.getPlaybackSession().getAsset().isSeeking() && (e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().addSeekingTime(t), e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1)), e.getPlaybackSession().getAsset().addSeekingAmount(i), e.getPlaybackSession().getAsset().setSeeking(!1)), e.getPlaybackSession().getAsset().setPlaybackStarted(!0), (e.getPlaybackSession().getAsset().isPlaybackSessionLooping() || 0 == e.getPlaybackSession().getPlaybackCounter()) && (e.getPlaybackSession().incrementPlaybackCounter(), e.getPlaybackSession().getAsset().setPlaybackSessionLooping(!1)), e.getPlaybackSession().incrementPlaySequenceCounter(), e.getPlaybackSession().getAsset().setPlaybackStarted(!0), e.getPlaybackSession().getAsset().incrementSegmentPlaybackCounter(), e.getPlaybackSession().getAsset().incrementPlayCounter(), e.getPlaybackSession().setPlaybackTimestamp(t), e.getPlaybackSession().getAsset().setPlaybackTimestamp(t), e.getPlaybackSession().getAsset().setElapsedTimestamp(t), e.getPlaybackSession().getAsset().setPlaybackStartPosition(i), (0 == e.getPlaybackSession().getAsset().getLowestPartNumberPlayed() || e.getPlaybackSession().getAsset().getPartNumber() <= e.getPlaybackSession().getAsset().getLowestPartNumberPlayed()) && (e.getPlaybackSession().getAsset().setLowestPartNumberPlayed(e.getPlaybackSession().getAsset().getPartNumber()), e.getPlaybackSession().getAsset().incrementAssetPlaybackCounter(), e.getPlaybackSession().getAsset().setPlaySequenceCounter(0), e.getPlaybackSession().getAsset().resetAssetPlaybackIntervals()), e.getPlaybackSession().getAsset().incrementPlaySequenceCounter(), e.getStaCore().isLoadingTimeSent() || (n.ns_st_lt = e.getStaCore().getLoadTimeOffset() + t - e.getStaCore().getInitTimestamp() + "", e.getStaCore().setLoadingTimeSent(!0)), e.getHeartbeat().resume(), e.getKeepAlive().start();
									var r = e.getStaCore().createLabels(l.PLAY, n, t);
									e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels), e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels), e.getEventManager().newEvent(r)
								}
							})
						}
					}(),
					b = function() {
						return function(e) {
							var n = this;
							t.extend(n, {
								onEndAndSkip: function(n, i) {
									e.getStaCore().resetHeartbeat(), e.getKeepAlive().stop(), e.getPlaybackSession().addBufferingTime(n), e.getPlaybackSession().getAsset().addBufferingTime(n), e.getPlaybackSession().getAsset().addElapsedTime(n);
									var r = e.getStaCore().createLabels(l.END, i, n);
									e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels), e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels), e.getEventManager().newEvent(r), e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().setSeekingTimeBeforeEnd(n - e.getPlaybackSession().getAsset().getSeekingTimestamp()), e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1)), e.getPlaybackSession().storeAssetPlaybackCounters(), e.getPlaybackSession().getAsset().resetAssetLifecycleLabels(), e.getPlaybackSession().getAsset().setPlaybackStarted(!1), i.hasOwnProperty("ns_st_pe") && t.parseBoolean(i.ns_st_pe, !1) && e.getStaCore().resetPlaybackSession()
								},
								onPause: function(t, n) {
									e.getPlaybackSession().addBufferingTime(t), e.getPlaybackSession().getAsset().addBufferingTime(t), e.getPlaybackSession().getAsset().addElapsedTime(t), e.getPlaybackSession().getAsset().setElapsedTimestamp(t)
								},
								onPlay: function(t, n) {
									var i = parseInt(n.ns_st_po);
									e.getPlaybackSession().incrementPlaySequenceCounter(), e.getPlaybackSession().getAsset().incrementPlaySequenceCounter(), e.getPlaybackSession().getAsset().incrementPlayCounter(), e.getPlaybackSession().addBufferingTime(t), e.getPlaybackSession().getAsset().addBufferingTime(t), e.getPlaybackSession().getAsset().isSeeking() && (e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().addSeekingTime(t), e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1)), e.getPlaybackSession().getAsset().addSeekingAmount(i), e.getPlaybackSession().getAsset().setSeeking(!1)), e.getPlaybackSession().getAsset().addElapsedTime(t), e.getPlaybackSession().getAsset().setElapsedTimestamp(t), e.getPlaybackSession().setPlaybackTimestamp(t), e.getPlaybackSession().getAsset().setPlaybackTimestamp(t), e.getPlaybackSession().getAsset().setPlaybackStartPosition(i), e.getHeartbeat().resume(), e.getKeepAlive().start();
									var r = e.getStaCore().createLabels(l.PLAY, n, t);
									e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels), e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels), e.getEventManager().newEvent(r)
								}
							})
						}
					}(),
					A = function() {
						return function(e) {
							var n = this;
							t.extend(n, {
								onPauseOnBuffering: function(t, n) {
									parseInt(n.ns_st_po);
									e.getStaCore().stopPausedOnBufferingTimer(), e.getPlaybackSession().getAsset().addElapsedTime(t), e.getPlaybackSession().getAsset().setElapsedTimestamp(t), e.getPlaybackSession().addBufferingTime(t), e.getPlaybackSession().getAsset().addBufferingTime(t), e.getPlaybackSession().incrementPauses(), e.getPlaybackSession().getAsset().incrementPauses();
									var i = e.getStaCore().createLabels(l.PAUSE, n, t);
									e.getPlaybackSession().getAsset().updateDeltaLabels(i.eventLabels), e.getPlaybackSession().getAsset().updateIndependentLabels(i.eventLabels), e.getEventManager().newEvent(i), e.getPlaybackSession().setBufferingTimestamp(t), e.getPlaybackSession().getAsset().setBufferingTimestamp(t)
								},
								onEndOrAdSkip: function(n, i) {
									parseInt(i.ns_st_po);
									e.getStaCore().stopPausedOnBufferingTimer(), e.getStaCore().resetHeartbeat(), e.getKeepAlive().stop(), e.getPlaybackSession().addBufferingTime(n), e.getPlaybackSession().getAsset().addBufferingTime(n), e.getPlaybackSession().getAsset().addElapsedTime(n);
									var r = e.getStaCore().createLabels(l.END, i, n);
									e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels), e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels), e.getEventManager().newEvent(r), e.getPlaybackSession().getAsset().resetAssetLifecycleLabels(), e.getPlaybackSession().getAsset().setPlaybackStarted(!1), i.hasOwnProperty("ns_st_pe") && t.parseBoolean(i.ns_st_pe, !1) && e.getStaCore().resetPlaybackSession()
								},
								onSeekStart: function(t, n) {
									var i = parseInt(n.ns_st_po);
									e.getStaCore().stopPausedOnBufferingTimer(), e.getHeartbeat().pause(), e.getKeepAlive().stop(), e.getPlaybackSession().getAsset().addElapsedTime(t), e.getPlaybackSession().getAsset().setElapsedTimestamp(t), e.getPlaybackSession().addBufferingTime(t), e.getPlaybackSession().getAsset().addBufferingTime(t), e.getPlaybackSession().getAsset().incrementSeeks(), e.getPlaybackSession().getAsset().setSeeking(!0), e.getPlaybackSession().getAsset().setCollectingSeekingTime(!0), e.getPlaybackSession().getAsset().setSeekStartPosition(i), e.getPlaybackSession().getAsset().setSeekingTimestamp(t), e.getPlaybackSession().incrementPauses(), e.getPlaybackSession().getAsset().incrementPauses();
									var r = e.getStaCore().createLabels(l.PAUSE, n, t);
									e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels), e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels), e.getEventManager().newEvent(r)
								},
								onPause: function(t, n) {
									parseInt(n.ns_st_po);
									e.getStaCore().stopPausedOnBufferingTimer(), e.getPlaybackSession().getAsset().addElapsedTime(t), e.getPlaybackSession().getAsset().setElapsedTimestamp(t), e.getPlaybackSession().addBufferingTime(t), e.getPlaybackSession().getAsset().addBufferingTime(t), e.getPlaybackSession().incrementPauses(), e.getPlaybackSession().getAsset().incrementPauses();
									var i = e.getStaCore().createLabels(l.PAUSE, n, t);
									e.getPlaybackSession().getAsset().updateDeltaLabels(i.eventLabels), e.getPlaybackSession().getAsset().updateIndependentLabels(i.eventLabels), e.getEventManager().newEvent(i)
								}
							})
						}
					}(),
					S = function() {
						return function(e) {
							var n = this;
							t.extend(n, {
								onEndOrAdSkip: function(n, i) {
									e.getStaCore().resetHeartbeat(), e.getKeepAlive().stop(), e.getStaCore().stopPausedOnBufferingTimer(), e.getPlaybackSession().addBufferingTime(n), e.getPlaybackSession().getAsset().addBufferingTime(n), e.getPlaybackSession().getAsset().addElapsedTime(n);
									var r = e.getStaCore().createLabels(l.END, i, n);
									e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels), e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels), e.getEventManager().newEvent(r), e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().setSeekingTimeBeforeEnd(n - e.getPlaybackSession().getAsset().getSeekingTimestamp()), e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1)), e.getPlaybackSession().storeAssetPlaybackCounters(), e.getPlaybackSession().getAsset().resetAssetLifecycleLabels(), e.getPlaybackSession().getAsset().setPlaybackStarted(!1), i.hasOwnProperty("ns_st_pe") && t.parseBoolean(i.ns_st_pe, !1) && e.getStaCore().resetPlaybackSession()
								},
								onPause: function(t, n) {
									e.getPlaybackSession().addBufferingTime(t), e.getPlaybackSession().getAsset().addBufferingTime(t), e.getPlaybackSession().incrementPauses(), e.getPlaybackSession().getAsset().incrementPauses(), e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().addSeekingTime(t), e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1)), e.getPlaybackSession().getAsset().addElapsedTime(t), e.getPlaybackSession().getAsset().setElapsedTimestamp(t)
								},
								onPlay: function(t, n) {
									var i = parseInt(n.ns_st_po);
									e.getPlaybackSession().incrementPlaySequenceCounter(), e.getPlaybackSession().getAsset().incrementPlaySequenceCounter(), e.getPlaybackSession().getAsset().incrementPlayCounter(), e.getPlaybackSession().addBufferingTime(t), e.getPlaybackSession().getAsset().addBufferingTime(t), e.getPlaybackSession().getAsset().isSeeking() && (e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().addSeekingTime(t), e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1)), e.getPlaybackSession().getAsset().addSeekingAmount(i), e.getPlaybackSession().getAsset().setSeeking(!1)), e.getPlaybackSession().getAsset().addElapsedTime(t), e.getPlaybackSession().getAsset().setElapsedTimestamp(t), e.getPlaybackSession().setPlaybackTimestamp(t), e.getPlaybackSession().getAsset().setPlaybackTimestamp(t), e.getPlaybackSession().getAsset().setPlaybackStartPosition(i), e.getHeartbeat().resume(), e.getKeepAlive().start();
									var r = e.getStaCore().createLabels(l.PLAY, n, t);
									e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels), e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels), e.getEventManager().newEvent(r)
								}
							})
						}
					}(),
					T = function() {
						return function(e) {
							var n = this;
							t.extend(n, {
								onBuffer: function(t, n) {
									e.getPlaybackSession().setPlaybackSessionStarted(!0), e.getPlaybackSession().getAsset().setAssetStarted(!0), e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().setSeekingTime(e.getPlaybackSession().getAsset().getSeekingTimeBeforeEnd()), e.getPlaybackSession().setBufferingTimestamp(t), e.getPlaybackSession().getAsset().setBufferingTimestamp(t)
								},
								onSeekStart: function(t, n) {
									var i = parseInt(n.ns_st_po);
									e.getPlaybackSession().setPlaybackSessionStarted(!0), e.getPlaybackSession().getAsset().setAssetStarted(!0), e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().setSeekingTime(e.getPlaybackSession().getAsset().getSeekingTimeBeforeEnd()), e.getPlaybackSession().getAsset().incrementSeeks(), e.getPlaybackSession().getAsset().setSeeking(!0), e.getPlaybackSession().getAsset().setCollectingSeekingTime(!0), e.getPlaybackSession().getAsset().setSeekStartPosition(i), e.getPlaybackSession().getAsset().setSeekingTimestamp(t)
								},
								onPlay: function(t, n) {
									var i = parseInt(n.ns_st_po);
									e.getPlaybackSession().setPlaybackSessionStarted(!0), e.getPlaybackSession().getAsset().setAssetStarted(!0), (e.getPlaybackSession().getAsset().isPlaybackSessionLooping() || 0 == e.getPlaybackSession().getPlaybackCounter()) && (e.getPlaybackSession().incrementPlaybackCounter(), e.getPlaybackSession().getAsset().setPlaybackSessionLooping(!1)), e.getPlaybackSession().getAsset().isSeeking() && (e.getPlaybackSession().getAsset().setSeekingTime(e.getPlaybackSession().getAsset().getSeekingTimeBeforeEnd()), e.getPlaybackSession().getAsset().addSeekingAmount(i), e.getPlaybackSession().getAsset().setSeeking(!1)), e.getPlaybackSession().incrementPlaySequenceCounter(), e.getPlaybackSession().getAsset().setPlaybackStarted(!0), e.getPlaybackSession().getAsset().incrementSegmentPlaybackCounter(), (0 == e.getPlaybackSession().getAsset().getLowestPartNumberPlayed() || e.getPlaybackSession().getAsset().getPartNumber() <= e.getPlaybackSession().getAsset().getLowestPartNumberPlayed()) && (e.getPlaybackSession().getAsset().setLowestPartNumberPlayed(e.getPlaybackSession().getAsset().getPartNumber()), e.getPlaybackSession().getAsset().incrementAssetPlaybackCounter(), e.getPlaybackSession().getAsset().setPlaySequenceCounter(0), e.getPlaybackSession().getAsset().resetAssetPlaybackIntervals()), e.getPlaybackSession().getAsset().incrementPlaySequenceCounter(), e.getPlaybackSession().getAsset().incrementPlayCounter(), e.getPlaybackSession().setPlaybackTimestamp(t), e.getPlaybackSession().getAsset().setPlaybackTimestamp(t), e.getPlaybackSession().getAsset().setElapsedTimestamp(t), e.getPlaybackSession().getAsset().setPlaybackStartPosition(i), e.getStaCore().isLoadingTimeSent() || (n.ns_st_lt = e.getStaCore().getLoadTimeOffset() + t - e.getStaCore().getInitTimestamp() + "", e.getStaCore().setLoadingTimeSent(!0)), e.getHeartbeat().resume(), e.getKeepAlive().start();
									var r = e.getStaCore().createLabels(l.PLAY, n, t);
									e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels), e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels), e.getEventManager().newEvent(r)
								}
							})
						}
					}(),
					k = function() {
						return function(e) {
							var n = this;
							t.extend(n, {
								onEndOrAdSkip: function(n, i) {
									e.getStaCore().resetHeartbeat(), e.getKeepAlive().stop(), e.getPlaybackSession().getAsset().addElapsedTime(n);
									var r = e.getStaCore().createLabels(l.END, i, n);
									e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels), e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels), e.getEventManager().newEvent(r), e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().setSeekingTimeBeforeEnd(n - e.getPlaybackSession().getAsset().getSeekingTimestamp()), e.getPlaybackSession().getAsset().setSeeking(!1)), e.getPlaybackSession().storeAssetPlaybackCounters(), e.getPlaybackSession().getAsset().resetAssetLifecycleLabels(), e.getPlaybackSession().getAsset().setPlaybackStarted(!1), i.hasOwnProperty("ns_st_pe") && t.parseBoolean(i.ns_st_pe, !1) && e.getStaCore().resetPlaybackSession()
								},
								onPlay: function(t, n) {
									var i = parseInt(n.ns_st_po);
									e.getPlaybackSession().incrementPlaySequenceCounter(), e.getPlaybackSession().getAsset().isSeeking() && (e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().addSeekingTime(t), e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1)), e.getPlaybackSession().getAsset().addSeekingAmount(i), e.getPlaybackSession().getAsset().setSeeking(!1)), e.getPlaybackSession().getAsset().incrementPlayCounter(), e.getPlaybackSession().getAsset().incrementPlaySequenceCounter(), e.getPlaybackSession().setPlaybackTimestamp(t), e.getPlaybackSession().getAsset().setPlaybackTimestamp(t), e.getPlaybackSession().getAsset().addElapsedTime(t), e.getPlaybackSession().getAsset().setElapsedTimestamp(t), e.getPlaybackSession().getAsset().setPlaybackStartPosition(i), e.getHeartbeat().resume(), e.getKeepAlive().start();
									var r = e.getStaCore().createLabels(l.PLAY, n, t);
									e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels), e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels), e.getEventManager().newEvent(r)
								}
							})
						}
					}(),
					E = function() {
						return function(e) {
							var n = this;
							t.extend(n, {
								onEndOrAdSkip: function(n, i) {
									e.getStaCore().resetHeartbeat(), e.getKeepAlive().stop(), e.getPlaybackSession().addBufferingTime(n), e.getPlaybackSession().getAsset().addBufferingTime(n), e.getPlaybackSession().getAsset().addElapsedTime(n), e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().setSeekingTimeBeforeEnd(n - e.getPlaybackSession().getAsset().getSeekingTimestamp()), e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1));
									var r = e.getStaCore().createLabels(l.END, i, n);
									e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels), e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels), e.getEventManager().newEvent(r), e.getPlaybackSession().getAsset().resetAssetLifecycleLabels(), e.getPlaybackSession().getAsset().setPlaybackStarted(!1), i.hasOwnProperty("ns_st_pe") && t.parseBoolean(i.ns_st_pe, !1) && e.getStaCore().resetPlaybackSession()
								},
								onBufferStop: function(t, n) {
									var i = parseInt(n.ns_st_po);
									e.getPlaybackSession().addBufferingTime(t), e.getPlaybackSession().getAsset().addBufferingTime(t), e.getPlaybackSession().setPlaybackTimestamp(t), e.getPlaybackSession().getAsset().setPlaybackTimestamp(t), e.getPlaybackSession().getAsset().addElapsedTime(t), e.getPlaybackSession().getAsset().setElapsedTimestamp(t), e.getPlaybackSession().getAsset().setPlaybackStartPosition(i), e.getHeartbeat().resume(), e.getKeepAlive().start();
									var r = e.getStaCore().createLabels(l.PLAY, n, t);
									e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels), e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels), e.getEventManager().newEvent(r)
								},
								onSeekStart: function(t, n) {
									var i = parseInt(n.ns_st_po);
									e.getPlaybackSession().addBufferingTime(t), e.getPlaybackSession().getAsset().addBufferingTime(t), e.getPlaybackSession().getAsset().isSeeking() ? e.getPlaybackSession().getAsset().isCollectingSeekingTime() || (e.getPlaybackSession().getAsset().setSeekingTimestamp(t), e.getPlaybackSession().getAsset().setCollectingSeekingTime(!0)) : e.getPlaybackSession().getAsset().incrementSeeks(), e.getPlaybackSession().getAsset().isSeeking() || (e.getPlaybackSession().getAsset().setSeeking(!0), e.getPlaybackSession().getAsset().setCollectingSeekingTime(!0), e.getPlaybackSession().getAsset().setSeekStartPosition(i), e.getPlaybackSession().getAsset().setSeekingTimestamp(t)), e.getPlaybackSession().getAsset().addElapsedTime(t), e.getPlaybackSession().getAsset().setElapsedTimestamp(t)
								},
								onPause: function(t, n) {
									e.getPlaybackSession().addBufferingTime(t), e.getPlaybackSession().getAsset().addBufferingTime(t), e.getPlaybackSession().getAsset().addElapsedTime(t), e.getPlaybackSession().getAsset().setElapsedTimestamp(t)
								},
								onPlay: function(t, n) {
									var i = parseInt(n.ns_st_po);
									e.getPlaybackSession().incrementPlaySequenceCounter(), e.getPlaybackSession().getAsset().incrementPlaySequenceCounter(), e.getPlaybackSession().addBufferingTime(t), e.getPlaybackSession().getAsset().addBufferingTime(t), e.getPlaybackSession().getAsset().incrementPlayCounter(), e.getPlaybackSession().setPlaybackTimestamp(t), e.getPlaybackSession().getAsset().setPlaybackTimestamp(t), e.getPlaybackSession().getAsset().addElapsedTime(t), e.getPlaybackSession().getAsset().setElapsedTimestamp(t), e.getPlaybackSession().getAsset().setPlaybackStartPosition(i), e.getHeartbeat().resume(), e.getKeepAlive().start();
									var r = e.getStaCore().createLabels(l.PLAY, n, t);
									e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels), e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels), e.getEventManager().newEvent(r)
								}
							})
						}
					}(),
					P = function() {
						return function(e) {
							var n = this;
							t.extend(n, {
								onEndOrAdSkip: function(n, i) {
									e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().setSeekingTimeBeforeEnd(n - e.getPlaybackSession().getAsset().getSeekingTimestamp()), e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1)), e.getPlaybackSession().storeAssetPlaybackCounters(), e.getPlaybackSession().getAsset().resetAssetLifecycleLabels(), e.getPlaybackSession().getAsset().setPlaybackStarted(!1), i.hasOwnProperty("ns_st_pe") && t.parseBoolean(i.ns_st_pe, !1) && e.getStaCore().resetPlaybackSession()
								},
								onSeekStart: function(t, n) {
									var i = parseInt(n.ns_st_po);
									e.getPlaybackSession().getAsset().isSeeking() ? e.getPlaybackSession().getAsset().setSeekingTimestamp(t) : e.getPlaybackSession().getAsset().incrementSeeks(), e.getPlaybackSession().getAsset().isSeeking() || (e.getPlaybackSession().getAsset().setSeeking(!0), e.getPlaybackSession().getAsset().setCollectingSeekingTime(!0), e.getPlaybackSession().getAsset().setSeekStartPosition(i), e.getPlaybackSession().getAsset().setSeekingTimestamp(t))
								},
								onPlay: function(t, n) {
									var i = parseInt(n.ns_st_po);
									e.getPlaybackSession().getAsset().isSeeking() && (e.getPlaybackSession().getAsset().addSeekingAmount(i), e.getPlaybackSession().getAsset().setSeeking(!1)), e.getPlaybackSession().setPlaybackSessionStarted(!0), (e.getPlaybackSession().getAsset().isPlaybackSessionLooping() || 0 == e.getPlaybackSession().getPlaybackCounter()) && (e.getPlaybackSession().incrementPlaybackCounter(), e.getPlaybackSession().getAsset().setPlaybackSessionLooping(!1)), e.getPlaybackSession().incrementPlaySequenceCounter(), e.getPlaybackSession().getAsset().setPlaybackStarted(!0), e.getPlaybackSession().getAsset().incrementSegmentPlaybackCounter(), (0 == e.getPlaybackSession().getAsset().getLowestPartNumberPlayed() || e.getPlaybackSession().getAsset().getPartNumber() <= e.getPlaybackSession().getAsset().getLowestPartNumberPlayed()) && (e.getPlaybackSession().getAsset().setLowestPartNumberPlayed(e.getPlaybackSession().getAsset().getPartNumber()), e.getPlaybackSession().getAsset().incrementAssetPlaybackCounter(), e.getPlaybackSession().getAsset().setPlaySequenceCounter(0), e.getPlaybackSession().getAsset().resetAssetPlaybackIntervals()), e.getPlaybackSession().getAsset().incrementPlaySequenceCounter(), e.getPlaybackSession().getAsset().incrementPlayCounter(), e.getPlaybackSession().setPlaybackTimestamp(t), e.getPlaybackSession().getAsset().setPlaybackTimestamp(t), e.getPlaybackSession().getAsset().setElapsedTimestamp(t), e.getPlaybackSession().getAsset().setPlaybackStartPosition(i), e.getStaCore().isLoadingTimeSent() || (n.ns_st_lt = e.getStaCore().getLoadTimeOffset() + t - e.getStaCore().getInitTimestamp() + "", e.getStaCore().setLoadingTimeSent(!0)), e.getHeartbeat().resume(), e.getKeepAlive().start();
									var r = e.getStaCore().createLabels(l.PLAY, n, t);
									e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels), e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels), e.getEventManager().newEvent(r)
								},
								onBuffer: function() {
									e.getPlaybackSession().setBufferingTimestamp(eventTimestamp), e.getPlaybackSession().getAsset().setBufferingTimestamp(eventTimestamp)
								}
							})
						}
					}(),
					C = function() {
						return function(e) {
							var n = this;
							t.extend(n, {
								onEndOrAdSkip: function(n, i) {
									var r = parseInt(i.ns_st_po);
									e.getStaCore().resetHeartbeat(), e.getKeepAlive().stop(), e.getPlaybackSession().addPlaybackTime(n), e.getPlaybackSession().getAsset().addPlaybackTime(n), e.getPlaybackSession().getAsset().addElapsedTime(n), e.getPlaybackSession().getAsset().addInterval(r);
									var a = e.getStaCore().createLabels(l.END, i, n);
									e.getPlaybackSession().getAsset().updateDeltaLabels(a.eventLabels), e.getPlaybackSession().getAsset().updateIndependentLabels(a.eventLabels), e.getEventManager().newEvent(a), e.getPlaybackSession().getAsset().resetAssetLifecycleLabels(), e.getPlaybackSession().getAsset().setPlaybackStarted(!1), i.hasOwnProperty("ns_st_pe") && t.parseBoolean(i.ns_st_pe, !1) && e.getStaCore().resetPlaybackSession()
								},
								onBuffer: function(t, n) {
									var i = parseInt(n.ns_st_po);
									e.getHeartbeat().pause(), e.getKeepAlive().stop(), e.getPlaybackSession().addPlaybackTime(t), e.getPlaybackSession().getAsset().addPlaybackTime(t), e.getPlaybackSession().getAsset().addInterval(i), e.getStaCore().isPauseOnBufferingEnabled() && e.getStaCore().startPausedOnBufferingTimer(t, n), e.getPlaybackSession().getAsset().incrementBufferCount(), e.getPlaybackSession().setBufferingTimestamp(t), e.getPlaybackSession().getAsset().setBufferingTimestamp(t), e.getPlaybackSession().getAsset().addElapsedTime(t), e.getPlaybackSession().getAsset().setElapsedTimestamp(t)
								},
								onSeekStart: function(t, n) {
									var i = parseInt(n.ns_st_po);
									e.getHeartbeat().pause(), e.getKeepAlive().stop(), e.getPlaybackSession().addPlaybackTime(t), e.getPlaybackSession().getAsset().addPlaybackTime(t), e.getPlaybackSession().getAsset().addInterval(i), e.getPlaybackSession().getAsset().incrementSeeks(), e.getPlaybackSession().getAsset().setSeeking(!0), e.getPlaybackSession().getAsset().setCollectingSeekingTime(!0), e.getPlaybackSession().getAsset().setSeekStartPosition(i), e.getPlaybackSession().getAsset().setSeekingTimestamp(t), e.getPlaybackSession().getAsset().addElapsedTime(t), e.getPlaybackSession().getAsset().setElapsedTimestamp(t), e.getPlaybackSession().incrementPauses(), e.getPlaybackSession().getAsset().incrementPauses();
									var r = e.getStaCore().createLabels(l.PAUSE, n, t);
									e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels), e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels), e.getEventManager().newEvent(r)
								},
								onPause: function(t, n) {
									var i = parseInt(n.ns_st_po);
									e.getHeartbeat().pause(), e.getKeepAlive().stop(), e.getPlaybackSession().addPlaybackTime(t), e.getPlaybackSession().getAsset().addPlaybackTime(t), e.getPlaybackSession().getAsset().addInterval(i), e.getPlaybackSession().getAsset().addElapsedTime(t), e.getPlaybackSession().getAsset().setElapsedTimestamp(t), e.getPlaybackSession().incrementPauses(), e.getPlaybackSession().getAsset().incrementPauses();
									var r = e.getStaCore().createLabels(l.PAUSE, n, t);
									e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels), e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels), e.getEventManager().newEvent(r)
								}
							})
						}
					}(),
					w = function() {
						return function(e) {
							var n = this;
							t.extend(n, {
								onEndOrAdSkip: function(n, i) {
									e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().setSeekingTimeBeforeEnd(n - e.getPlaybackSession().getAsset().getSeekingTimestamp()), e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1)), e.getPlaybackSession().storeAssetPlaybackCounters(), e.getPlaybackSession().getAsset().resetAssetLifecycleLabels(), e.getPlaybackSession().getAsset().setPlaybackStarted(!1), i.hasOwnProperty("ns_st_pe") && t.parseBoolean(i.ns_st_pe, !1) && e.getStaCore().resetPlaybackSession()
								},
								onPause: function(t, n) {
									e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().addSeekingTime(t), e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1))
								},
								onPlay: function(t, n) {
									var i = parseInt(n.ns_st_po);
									e.getPlaybackSession().getAsset().isSeeking() && (e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().addSeekingTime(t), e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1)), e.getPlaybackSession().getAsset().addSeekingAmount(i), e.getPlaybackSession().getAsset().setSeeking(!1)), (e.getPlaybackSession().getAsset().isPlaybackSessionLooping() || 0 == e.getPlaybackSession().getPlaybackCounter()) && (e.getPlaybackSession().incrementPlaybackCounter(), e.getPlaybackSession().getAsset().setPlaybackSessionLooping(!1)), e.getPlaybackSession().incrementPlaySequenceCounter(), e.getPlaybackSession().getAsset().incrementPlaySequenceCounter(), e.getPlaybackSession().getAsset().incrementPlayCounter(), e.getPlaybackSession().getAsset().setPlaybackStarted(!0), e.getPlaybackSession().getAsset().incrementSegmentPlaybackCounter(), (0 == e.getPlaybackSession().getAsset().getLowestPartNumberPlayed() || e.getPlaybackSession().getAsset().getPartNumber() <= e.getPlaybackSession().getAsset().getLowestPartNumberPlayed()) && (e.getPlaybackSession().getAsset().setLowestPartNumberPlayed(e.getPlaybackSession().getAsset().getPartNumber()), e.getPlaybackSession().getAsset().incrementAssetPlaybackCounter(), e.getPlaybackSession().getAsset().setPlaySequenceCounter(0), e.getPlaybackSession().getAsset().resetAssetPlaybackIntervals()), e.getPlaybackSession().setPlaybackTimestamp(t), e.getPlaybackSession().getAsset().setPlaybackTimestamp(t), e.getPlaybackSession().getAsset().setElapsedTimestamp(t), e.getPlaybackSession().getAsset().setPlaybackStartPosition(i), e.getStaCore().isLoadingTimeSent() || (n.ns_st_lt = e.getStaCore().getLoadTimeOffset() + t - e.getStaCore().getInitTimestamp() + "", e.getStaCore().setLoadingTimeSent(!0)), e.getHeartbeat().resume(), e.getKeepAlive().start();
									var r = e.getStaCore().createLabels(l.PLAY, n, t);
									e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels), e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels), e.getEventManager().newEvent(r)
								}
							})
						}
					}(),
					j = function() {
						return function(e) {
							var n = this;
							t.extend(n, {
								onPause: function(t, n) {
									e.getPlaybackSession().incrementPauses(), e.getPlaybackSession().getAsset().incrementPauses(), e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().addSeekingTime(t), e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1)), e.getPlaybackSession().getAsset().addElapsedTime(t), e.getPlaybackSession().getAsset().setElapsedTimestamp(t)
								}
							})
						}
					}(),
					I = function() {
						return function(e) {
							var n = this;
							t.extend(n, {
								onEndOrAdSkip: function(n, i) {
									parseInt(i.ns_st_po);
									e.getStaCore().resetHeartbeat(), e.getKeepAlive().stop(), e.getPlaybackSession().getAsset().addElapsedTime(n);
									var r = e.getStaCore().createLabels(l.END, i, n);
									e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels), e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels), e.getEventManager().newEvent(r), e.getPlaybackSession().getAsset().isSeeking() && e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().setSeekingTimeBeforeEnd(n - e.getPlaybackSession().getAsset().getSeekingTimestamp()), e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1)), e.getPlaybackSession().storeAssetPlaybackCounters(), e.getPlaybackSession().getAsset().resetAssetLifecycleLabels(), e.getPlaybackSession().getAsset().setPlaybackStarted(!1), i.hasOwnProperty("ns_st_pe") && t.parseBoolean(i.ns_st_pe, !1) && e.getStaCore().resetPlaybackSession()
								},
								onPlay: function(t, n) {
									var i = parseInt(n.ns_st_po);
									e.getPlaybackSession().incrementPlaySequenceCounter(), e.getPlaybackSession().getAsset().incrementPlaySequenceCounter(), e.getPlaybackSession().getAsset().incrementPlayCounter(), e.getPlaybackSession().getAsset().isSeeking() && (e.getPlaybackSession().getAsset().isCollectingSeekingTime() && (e.getPlaybackSession().getAsset().addSeekingTime(t), e.getPlaybackSession().getAsset().setCollectingSeekingTime(!1)), e.getPlaybackSession().getAsset().addSeekingAmount(i), e.getPlaybackSession().getAsset().setSeeking(!1)), e.getPlaybackSession().getAsset().addElapsedTime(t), e.getPlaybackSession().getAsset().setElapsedTimestamp(t), e.getPlaybackSession().setPlaybackTimestamp(t), e.getPlaybackSession().getAsset().setPlaybackTimestamp(t), e.getPlaybackSession().getAsset().setPlaybackStartPosition(i), e.getStaCore().isLoadingTimeSent() || (n.ns_st_lt = e.getStaCore().getLoadTimeOffset() + t - e.getStaCore().getInitTimestamp() + "", e.getStaCore().setLoadingTimeSent(!0)), e.getHeartbeat().resume(), e.getKeepAlive().start();
									var r = e.getStaCore().createLabels(l.PLAY, n, t);
									e.getPlaybackSession().getAsset().updateDeltaLabels(r.eventLabels), e.getPlaybackSession().getAsset().updateIndependentLabels(r.eventLabels), e.getEventManager().newEvent(r)
								}
							})
						}
					}(),
					L = function() {
						return function(e) {
							function i() {
								if(L = new O(re), t.getNamespace().comScore ? (ae = t.getNamespace().comScore.exports, L.setAppCore(ae.c())) : L.setAppCore(null), e.publisherId) {
									re.setLabel("c2", e.publisherId);
									var i = e.secure;
									!i && L.getAppCore() ? i = L.getAppCore().isSecure() : !i && t.isBrowser() && (i = t.isWebSecure());
									var r = (i ? "https://sb" : "http://b") + ".scorecardresearch.com/p?c1=2";
									re.setLiveEndpointURL(r)
								}
								e.liveEndpointURL && re.setLiveEndpointURL(e.liveEndpointURL), L.setKeepAlive(new g(L)), L.setHeartbeat(new v(L)), L.setEventManager(new h(L)), L.setStateMachine(new m), L.setLogging(new n(d.LOG_NAMESPACE, e.debug)), L.setPlaybackSession(new p(L)), N = new T(L), x = new k(L), D = new P(L), R = new C(L), U = new _(L), M = new A(L), B = new S(L), F = new b(L), V = new E(L), q = new w(L), H = new j(L), G = new I(L), Y = new y(L), z = !1, K = 0, W = +new Date, J = !0, Z = !1, ee = [], e.systemClockJumpDetection && re.enableSystemClockJumpsDetection(parseInt(e.systemClockJumpDetectionInterval))
							}

							function r(e) {
								var t = L.getStateMachine().getCurrentState();
								if(t == u.IDLE || t == u.PLAYBACK_NOT_STARTED || t == u.BUFFERING_BEFORE_PLAYBACK || t == u.SEEKING_BEFORE_PLAYBACK) {
									if(e == l.PLAY) return !0
								} else if(t == u.PLAYING) {
									if(e == l.END || e == l.AD_SKIP || e == l.SEEK_START || e == l.PAUSE) return !0
								} else if(t == u.PAUSED || t == u.BUFFERING_DURING_PAUSE || t == u.SEEKING_DURING_PLAYBACK || t == u.SEEKING_DURING_BUFFERING || t == u.SEEKING_DURING_PAUSE) {
									if(e == l.END || e == l.AD_SKIP || e == l.PLAY) return !0
								} else if(t == u.BUFFERING_DURING_PLAYBACK) {
									if(e == l.PAUSE_ON_BUFFERING || e == l.END || e == l.AD_SKIP || e == l.SEEK_START || e == l.PAUSE || e == l.PLAY) return !0
								} else if(t == u.BUFFERING_DURING_SEEKING) {
									if(e == l.END || e == l.AD_SKIP || e == l.PAUSE || e == l.PLAY) return !0
								} else if(t == u.PAUSED_DURING_BUFFERING && (e == l.END || e == l.AD_SKIP || e == l.BUFFER_STOP || e == l.PLAY)) return !0;
								return !1
							}

							function a(e, t, n) {
								var i = L.getStateMachine().getCurrentState();
								e == l.AD_SKIP && !n.hasOwnProperty("ns_st_ui") && r(e) ? n.ns_st_ui = "skip" : e == l.SEEK_START && !n.hasOwnProperty("ns_st_ui") && r(e) && (n.ns_st_ui = "seek"), i == u.IDLE ? e == l.BUFFER ? N.onBuffer(t, n) : e == l.SEEK_START ? N.onSeekStart(t, n) : e == l.PLAY && N.onPlay(t, n) : i == u.PLAYBACK_NOT_STARTED ? e == l.END || e == l.AD_SKIP ? D.onEndOrAdSkip(t, n) : e == l.SEEK_START ? D.onSeekStart(t, n) : e == l.PLAY ? D.onPlay(t, n) : e == l.BUFFER && D.onBuffer(t, n) : i == u.PLAYING ? e == l.END || e == l.AD_SKIP ? R.onEndOrAdSkip(t, n) : e == l.BUFFER ? R.onBuffer(t, n) : e == l.SEEK_START ? R.onSeekStart(t, n) : e == l.PAUSE && R.onPause(t, n) : i == u.PAUSED ? e == l.END || e == l.AD_SKIP ? x.onEndOrAdSkip(t, n) : e == l.PLAY ? x.onPlay(t, n) : e == l.BUFFER ? Y.onBufferWhenSeekingOrPaused(t, n) : e == l.SEEK_START && Y.onSeekStartWhenPausedOrBufferingDuringPause(t, n) : i == u.BUFFERING_BEFORE_PLAYBACK ? e == l.END || e == l.AD_SKIP ? U.onEndOrAdSkip(t, n) : e == l.BUFFER_STOP ? U.onBufferStop(t, n) : e == l.SEEK_START ? U.onSeekStart(t, n) : e == l.PAUSE ? U.onPause(t, n) : e == l.PLAY && U.onPlay(t, n) : i == u.BUFFERING_DURING_PLAYBACK ? e == l.PAUSE_ON_BUFFERING ? M.onPauseOnBuffering(t, n) : e == l.BUFFER_STOP ? Y.onBufferStopOrOnPlayWhenBufferingDuringPlayback(t, n) : e == l.END || e == l.AD_SKIP ? M.onEndOrAdSkip(t, n) : e == l.SEEK_START ? M.onSeekStart(t, n) : e == l.PAUSE ? M.onPause(t, n) : e == l.PLAY && Y.onBufferStopOrOnPlayWhenBufferingDuringPlayback(t, n) : i == u.BUFFERING_DURING_SEEKING ? e == l.END || e == l.AD_SKIP ? B.onEndOrAdSkip(t, n) : e == l.PAUSE ? B.onPause(t, n) : e == l.PLAY ? B.onPlay(t, n) : e == l.BUFFER_STOP && Y.onBufferStopWhenBufferingDuringSeekingOrBufferingDuringPause(t, n) : i == u.BUFFERING_DURING_PAUSE ? e == l.END || e == l.AD_SKIP ? F.onEndAndSkip(t, n) : e == l.PAUSE ? F.onPause(t, n) : e == l.PLAY ? F.onPlay(t, n) : e == l.SEEK_START ? Y.onSeekStartWhenPausedOrBufferingDuringPause(t, n) : e == l.BUFFER_STOP && Y.onBufferStopWhenBufferingDuringSeekingOrBufferingDuringPause(t, n) : i == u.SEEKING_BEFORE_PLAYBACK ? e == l.END || e == l.AD_SKIP ? q.onEndOrAdSkip(t, n) : e == l.PAUSE ? q.onPause(t, n) : e == l.PLAY ? q.onPlay(t, n) : e == l.BUFFER && Y.onBufferWhenSeekingOrPaused(t, n) : i == u.SEEKING_DURING_PLAYBACK ? e == l.END || e == l.AD_SKIP ? G.onEndOrAdSkip(t, n) : e == l.PLAY ? G.onPlay(t, n) : e == l.BUFFER ? Y.onBufferWhenSeekingOrPaused(t, n) : e == l.PAUSE && Y.onPauseWhenSeekingDuringPlaybackOrSeekingDuringPause(t, n) : i == u.SEEKING_DURING_BUFFERING ? e == l.PAUSE ? H.onPause(t, n) : e == l.BUFFER ? Y.onBufferWhenSeekingOrPaused(t, n) : e == l.PLAY ? Y.onPlayWhenSeekingDuringBufferingOrSeekingDuringPause(t, n) : e == l.END || e == l.AD_SKIP ? Y.onEndOrAdSkipWhenSeekingDuringBufferingOrSeekingDuringPause(t, n) : e == l.BUFFER_STOP && Y.onBufferStopWhenSeekingDuringBufferingOrSeekingDuringPause(t, n) : i == u.PAUSED_DURING_BUFFERING ? e == l.END || e == l.AD_SKIP ? V.onEndOrAdSkip(t, n) : e == l.BUFFER_STOP ? V.onBufferStop(t, n) : e == l.SEEK_START ? V.onSeekStart(t, n) : e == l.PAUSE ? V.onPause(t, n) : e == l.PLAY && V.onPlay(t, n) : i == u.SEEKING_DURING_PAUSE && (e == l.BUFFER ? Y.onBufferWhenSeekingOrPaused(t, n) : e == l.PLAY ? Y.onPlayWhenSeekingDuringBufferingOrSeekingDuringPause(t, n) : e == l.PAUSE ? Y.onPauseWhenSeekingDuringPlaybackOrSeekingDuringPause(t, n) : e == l.END || e == l.AD_SKIP ? Y.onEndOrAdSkipWhenSeekingDuringBufferingOrSeekingDuringPause(t, n) : e == l.BUFFER_STOP && Y.onBufferStopWhenSeekingDuringBufferingOrSeekingDuringPause(t, n)), r(e) && L.getPlaybackSession().setFirstEventSent(!0)
							}

							function f(e, n) {
								for(var i, r = ce.encodeURIComponent || escape, a = [], s = d.LABELS_ORDER, o = e.split("?"), l = o[0], u = o[1], c = u.split("&"), f = 0, p = c.length; f < p; f++) {
									var h = c[f].split("="),
										v = unescape(h[0]),
										g = unescape(h[1]);
									v && (n[v] = g)
								}
								for(var m = {}, y = 0, _ = s.length; y < _; y++) {
									var b = s[y];
									if(n.hasOwnProperty(b)) {
										var A = n[b];
										"undefined" != typeof A && null != A && (m[b] = !0, a.push(r(b) + "=" + r(n[b])))
									}
								}
								for(var S in n)
									if(n.hasOwnProperty(S)) {
										if(m[S]) continue;
										var T = n[S];
										"undefined" != typeof T && null != T && a.push(r(S) + "=" + r(n[S]))
									}
								i = l + "?" + a.join("&"), i = i + (i.indexOf("&c8=") < 0 ? "&c8=" + r(de.title) : "") + (i.indexOf("&c7=") < 0 ? "&c7=" + r(de.URL) : "") + (i.indexOf("&c9=") < 0 ? "&c9=" + r(de.referrer) : "");
								var k = t.browserAcceptsLargeURLs() ? d.URL_LENGTH_LIMIT : d.RESTRICTED_URL_LENGTH_LIMIT;
								if(i.length > k && i.indexOf("&") > 0) {
									var E = i.substr(0, k - 8).lastIndexOf("&");
									i = (i.substring(0, E) + "&ns_cut=" + r(i.substring(E + 1))).substr(0, k)
								}
								return i
							}
							var L, N, x, D, R, U, M, B, F, V, q, H, G, Y, z, K, W, X, J, Q, Z, $, ee, te, ne, ie, re = this,
								ae = {},
								se = d.DEFAULT_PAUSED_ON_BUFFERING_INTERVAL,
								oe = d.THROTTLING_DELAY,
								le = {},
								ue = !1;
							t.extend(re, {
								getConfiguration: function() {
									return e || {}
								},
								enableSystemClockJumpsDetection: function(e) {
									(e < d.SYSTEM_CLOCK_JUMP_DETECTION_MINIMUM_INTERVAL || !e) && (e = d.SYSTEM_CLOCK_JUMP_DETECTION_DEFAULT_INTERVAL), t.onSystemClockJump(function(e) {
										ie = e, ue = !0
									}, e)
								},
								createLabels: function(e, n, i) {
									var r = !1;
									if(e == l.HEARTBEAT) {
										var a = isNaN(X) ? W : X;
										X = i, (i < a || ue) && (r = !0, ue = !1, i < a ? (L.getPlaybackSession().addInternalErrorFlag("1"), L.getLogging().infoLog("System clock jump detected", "to the far past")) : ie ? (L.getPlaybackSession().addInternalErrorFlag("3"), L.getLogging().infoLog("System clock jump detected", "to the future")) : (L.getPlaybackSession().addInternalErrorFlag("2"), L.getLogging().infoLog("System clock jump detected", "to the near past")), i = a)
									}
									var s = {};
									if("undefined" != typeof document) {
										var o = document;
										s.c7 = o.URL, s.c8 = o.title, s.c9 = o.referrer
									}
									return s.ns_ts = +new Date + "", s.ns_st_ev = l.toString(e), s.ns_st_mp = d.DEFAULT_PLAYERNAME, s.ns_st_mv = d.STREAMINGANALYTICS_VERSION, s.ns_st_ub = "0", s.ns_st_br = "0", s.ns_st_pn = "1", s.ns_st_tp = "0", s.ns_st_it = c.toString(c.SINGLE_CLIP), s.ns_st_sv = d.STREAMINGANALYTICS_VERSION, s.ns_st_smv = d.MODEL_VERSION, s.ns_type = "hidden", s.ns_st_ec = L.getEventManager().getEventCounter() + "", s.ns_st_ki = L.getKeepAlive().getInterval() + "", L.getPlaybackSession().getAsset().isAutoCalculatePositionsEnabled() ? s.ns_st_po = L.getPlaybackSession().getAsset().getExpectedPlaybackPosition(i) + "" : s.ns_st_po = ne + "", ne = parseInt(s.ns_st_po), t.extend(s, re.getLabels()), L.getPlaybackSession().createLabels(s, i), t.extend(s, n), r && (L.getPlaybackSession().setPlaybackTimestamp(X - parseInt(s.ns_st_pt)), L.getPlaybackSession().getAsset().setPlaybackTimestamp(X - parseInt(s.ns_st_pt)), L.getPlaybackSession().getAsset().setElapsedTimestamp(X - parseInt(s.ns_st_et)), L.getStateMachine().getCurrentState() == u.BUFFERING_DURING_PLAYBACK && L.getPlaybackSession().getAsset().setBufferingTimestamp(X - parseInt(s.ns_st_bp))), {
										eventType: e,
										eventLabels: s
									}
								},
								newEvent: function(e, n, i, r) {
									re.stopDelayedTransitionTimer();
									var s = L.getStateMachine().getCurrentState(),
										o = L.getStateMachine().eventTypeToState(e);
									if(null == o || o == s) return void L.getLogging().infoLog("Ignored event:", l.toString(e), "during state", t.stateToString(s), i);
									if(re.isThrottlingEnabled() && (s == u.PLAYING || s == u.PAUSED) && (o == u.PLAYING || o == u.PAUSED) && !r) {
										L.getLogging().infoLog("Throttled event:", l.toString(e), "during state", t.stateToString(s), i, re.getThrottlingDelay(), "ms");
										var c = function(e, t, i) {
											return function() {
												re.newEvent(e, n, i, !0)
											}
										}(e, o, i);
										return void($ = L.getPlatformAPI().setTimeout(c, re.getThrottlingDelay()))
									}
									var d = isNaN(X) ? W : X;
									X = n;
									var f = !1;
									(n < d || ue) && (f = !0, ue = !1, n < d ? (L.getPlaybackSession().addInternalErrorFlag("1"), L.getLogging().infoLog("System clock jump detected", "to the far past")) : ie ? (L.getPlaybackSession().addInternalErrorFlag("3"), L.getLogging().infoLog("System clock jump detected", "to the future")) : (L.getPlaybackSession().addInternalErrorFlag("2"), L.getLogging().infoLog("System clock jump detected", "to the near past")), n = d), i.ns_st_po || (L.getPlaybackSession().getAsset().isAutoCalculatePositionsEnabled() ? L.getStateMachine().getCurrentState() == u.IDLE ? i.ns_st_po = "0" : i.ns_st_po = L.getPlaybackSession().getAsset().getExpectedPlaybackPosition(n) + "" : i.ns_st_po = ne + ""), ne = parseInt(i.ns_st_po), L.getPlaybackSession().getAsset().setPlaybackTimeOffset(parseInt(i.ns_st_po)), a(e, n, i);
									var p = 0;
									isNaN(L.getStateMachine().getLastStateChangeTimestamp()) || (p = n - L.getStateMachine().getLastStateChangeTimestamp()), L.getStateMachine().newEvent(e, n), f && (o != u.IDLE && o != u.PLAYBACK_NOT_STARTED && o != u.SEEKING_BEFORE_PLAYBACK && o != u.BUFFERING_BEFORE_PLAYBACK && L.getPlaybackSession().getAsset().setElapsedTimestamp(X), o != u.BUFFERING_BEFORE_PLAYBACK && o != u.BUFFERING_DURING_PAUSE && o != u.BUFFERING_DURING_PLAYBACK && o != u.BUFFERING_DURING_SEEKING && o != u.PAUSED_DURING_BUFFERING || (L.getPlaybackSession().setBufferingTimestamp(X), L.getPlaybackSession().getAsset().setBufferingTimestamp(X)), o != u.PLAYING && o != u.BUFFERING_DURING_PLAYBACK || (L.getPlaybackSession().setPlaybackTimestamp(X), L.getPlaybackSession().getAsset().setPlaybackTimestamp(X)), o != u.SEEKING_BEFORE_PLAYBACK && o != u.SEEKING_DURING_BUFFERING && o != u.SEEKING_DURING_PAUSE && o != u.SEEKING_DURING_PLAYBACK && o != u.BUFFERING_DURING_SEEKING || L.getPlaybackSession().getAsset().setSeekingTimestamp(X)), L.getLogging().log("Transition from", t.stateToString(s), "to", t.stateToString(o), "due to event:", l.toString(e));
									for(var h = 0, v = ee.length; h < v; h++) ee[h](s, o, i, p)
								},
								newPseudoEvent: function(e, n, i) {
									if((e == l.LOAD || e == l.ENGAGE) && L.getStateMachine().getCurrentState() != u.IDLE) return void L.getLogging().infoLog("Ignored pseudo-event:", l.toString(e), "during state", t.stateToString(L.getStateMachine().getCurrentState()), i);
									e == l.ERROR && null == i.ns_st_er && (i.ns_st_er = o.UNKNOWN_VALUE), e == l.TRANSFER && null == i.ns_st_rp && (i.ns_st_rp = o.UNKNOWN_VALUE);
									var r, a, s, c, d = !0,
										f = !1;
									switch(e) {
										case l.BIT_RATE:
											r = "ns_st_br", a = "ns_st_pbr";
											break;
										case l.PLAYBACK_RATE:
											r = "ns_st_rt", a = "ns_st_prt";
											break;
										case l.VOLUME:
											r = "ns_st_vo", a = "ns_st_pvo";
											break;
										case l.WINDOW_STATE:
											r = "ns_st_ws", a = "ns_st_pws";
											break;
										case l.AUDIO:
											r = "ns_st_at", a = "ns_st_pat";
											break;
										case l.VIDEO:
											r = "ns_st_vt", a = "ns_st_pvt";
											break;
										case l.SUBS:
											r = "ns_st_tt", a = "ns_st_ptt";
											break;
										case l.CDN:
											r = "ns_st_cdn", a = "ns_st_pcdn";
											break;
										default:
											d = !1
									}
									if(d && r in i) switch(c = i[r], e) {
										case l.BIT_RATE:
										case l.VOLUME:
										case l.WINDOW_STATE:
											r in le && (s = le[r], i[a] = s, f = c == s + ""), le[r] = i[r];
											break;
										case l.AUDIO:
										case l.VIDEO:
										case l.SUBS:
										case l.CDN:
											L.getPlaybackSession().getAsset().hasInternalLabel(r) && (s = L.getPlaybackSession().getAsset().getInternalLabel(r), i[a] = s, f = c == s + ""), L.getPlaybackSession().getAsset().setInternalLabel(r, i[r]);
											break;
										case l.PLAYBACK_RATE:
											s = L.getPlaybackSession().getAsset().getPlaybackRate(), i[a] = s + ""
									}
									if(d && L.getStateMachine().getCurrentState() != u.PLAYING && L.getStateMachine().getCurrentState() != u.BUFFERING_DURING_PLAYBACK || d && f) return e == l.PLAYBACK_RATE && L.getPlaybackSession().getAsset().setPlaybackRate(parseInt(i.ns_st_rt)), void L.getLogging().infoLog("No measurement send for the pseudo-event:", l.toString(e), "during state", t.stateToString(L.getStateMachine().getCurrentState()), i);
									var p = isNaN(X) ? W : X;
									X = n;
									var h = !1;
									(n < p || ue) && (h = !0, ue = !1, n < p ? (L.getPlaybackSession().addInternalErrorFlag("1"), L.getLogging().infoLog("System clock jump detected", "to the far past")) : ie ? (L.getPlaybackSession().addInternalErrorFlag("3"), L.getLogging().infoLog("System clock jump detected", "to the future")) : (L.getPlaybackSession().addInternalErrorFlag("2"), L.getLogging().infoLog("System clock jump detected", "to the near past")), n = p), i.ns_st_po || (L.getPlaybackSession().getAsset().isAutoCalculatePositionsEnabled() ? i.ns_st_po = L.getPlaybackSession().getAsset().getExpectedPlaybackPosition(n) + "" : i.ns_st_po = ne + ""), ne = parseInt(i.ns_st_po), L.getPlaybackSession().getAsset().setPlaybackTimeOffset(parseInt(i.ns_st_po)), L.getStateMachine().getCurrentState() != u.IDLE && L.getStateMachine().getCurrentState() != u.PLAYBACK_NOT_STARTED && L.getStateMachine().getCurrentState() != u.SEEKING_BEFORE_PLAYBACK && L.getStateMachine().getCurrentState() != u.BUFFERING_BEFORE_PLAYBACK && (L.getPlaybackSession().getAsset().addElapsedTime(n), L.getPlaybackSession().getAsset().setElapsedTimestamp(n)), L.getStateMachine().getCurrentState() != u.PLAYING && L.getStateMachine().getCurrentState() != u.BUFFERING_DURING_PLAYBACK || (L.getPlaybackSession().addPlaybackTime(n), L.getPlaybackSession().setPlaybackTimestamp(n), L.getPlaybackSession().getAsset().addPlaybackTime(n), L.getPlaybackSession().getAsset().setPlaybackTimestamp(n), L.getPlaybackSession().getAsset().addInterval(parseInt(i.ns_st_po)), L.getPlaybackSession().getAsset().setPlaybackStartPosition(parseInt(i.ns_st_po))), L.getStateMachine().getCurrentState() != u.BUFFERING_BEFORE_PLAYBACK && L.getStateMachine().getCurrentState() != u.BUFFERING_DURING_PAUSE && L.getStateMachine().getCurrentState() != u.BUFFERING_DURING_PLAYBACK && L.getStateMachine().getCurrentState() != u.BUFFERING_DURING_SEEKING || (L.getPlaybackSession().addBufferingTime(n), L.getPlaybackSession().setBufferingTimestamp(n), L.getPlaybackSession().getAsset().addBufferingTime(n), L.getPlaybackSession().getAsset().setBufferingTimestamp(n));
									var v = re.createLabels(e, i, n);
									L.getPlaybackSession().getAsset().updateDeltaLabels(v.eventLabels), L.getPlaybackSession().getAsset().updateIndependentLabels(v.eventLabels), L.getEventManager().newEvent(v), e == l.PLAYBACK_RATE && L.getPlaybackSession().getAsset().setPlaybackRate(parseInt(i.ns_st_rt)), h && (L.getStateMachine().getCurrentState() != u.PLAYING && L.getStateMachine().getCurrentState() != u.BUFFERING_DURING_PLAYBACK || (L.getPlaybackSession().setPlaybackTimestamp(X), L.getPlaybackSession().getAsset().setPlaybackTimestamp(X)), L.getStateMachine().getCurrentState() != u.IDLE && L.getStateMachine().getCurrentState() != u.PLAYBACK_NOT_STARTED && L.getStateMachine().getCurrentState() != u.SEEKING_BEFORE_PLAYBACK && L.getStateMachine().getCurrentState() != u.BUFFERING_BEFORE_PLAYBACK && L.getPlaybackSession().getAsset().setElapsedTimestamp(X), L.getStateMachine().getCurrentState() != u.BUFFERING_BEFORE_PLAYBACK && L.getStateMachine().getCurrentState() != u.BUFFERING_DURING_PAUSE && L.getStateMachine().getCurrentState() != u.BUFFERING_DURING_PLAYBACK && L.getStateMachine().getCurrentState() != u.BUFFERING_DURING_SEEKING && L.getStateMachine().getCurrentState() != u.PAUSED_DURING_BUFFERING || (L.getPlaybackSession().setBufferingTimestamp(X), L.getPlaybackSession().getAsset().setBufferingTimestamp(X)), L.getStateMachine().getCurrentState() != u.SEEKING_BEFORE_PLAYBACK && L.getStateMachine().getCurrentState() != u.SEEKING_DURING_BUFFERING && L.getStateMachine().getCurrentState() != u.SEEKING_DURING_PAUSE && L.getStateMachine().getCurrentState() != u.SEEKING_DURING_PLAYBACK && L.getStateMachine().getCurrentState() != u.BUFFERING_DURING_SEEKING || L.getPlaybackSession().getAsset().setSeekingTimestamp(X))
								},
								getState: function() {
									return L.getStateMachine().getCurrentState()
								},
								addListener: function(e) {
									ee.push(e)
								},
								removeListener: function(e) {
									ee.splice(t.indexOf(e, ee), 1)
								},
								getLabel: function(e) {
									return le[e]
								},
								getLabels: function() {
									return le
								},
								setLabel: function(e, t) {
									null == t ? delete le[e] : le[e] = t
								},
								setLabels: function(e) {
									for(var t in e) e.hasOwnProperty(t) && re.setLabel(t, e[t])
								},
								getPlatformAPI: function() {
									return L.getAppCore() ? L.getAppCore().getPlatformAPI() : s
								},
								getExports: function() {
									return ae
								},
								isProperlyInitialized: function() {
									var e = L.getAppCore().getAppContext(),
										t = L.getAppCore().getSalt(),
										n = L.getAppCore().getPixelURL();
									return e && n && t
								},
								setThrottlingDelay: function(e) {
									oe = e
								},
								getThrottlingDelay: function() {
									return oe
								},
								isThrottlingEnabled: function() {
									return Z
								},
								setThrottlingEnabled: function(e) {
									Z = e
								},
								isLoadingTimeSent: function() {
									return z
								},
								setLoadingTimeSent: function(e) {
									z = e
								},
								getLoadTimeOffset: function() {
									return K
								},
								setLoadTimeOffset: function(e) {
									K = e
								},
								getInitTimestamp: function() {
									return W
								},
								setPauseOnBufferingInterval: function(e) {
									se = e
								},
								getPauseOnBufferingInterval: function() {
									return se
								},
								isPauseOnBufferingEnabled: function() {
									return J
								},
								setPauseOnBufferingEnabled: function(e) {
									J = e
								},
								startPausedOnBufferingTimer: function(e, n) {
									re.stopPausedOnBufferingTimer(), Q = re.getPlatformAPI().setTimeout(function() {
										var e = {},
											i = t.fixEventTime(e),
											r = parseInt(n.ns_st_po);
										e.ns_st_po = r + "", re.newEvent(l.PAUSE_ON_BUFFERING, i, e)
									}, se)
								},
								stopPausedOnBufferingTimer: function() {
									null != Q && (re.getPlatformAPI().clearTimeout(Q), Q = null)
								},
								stopDelayedTransitionTimer: function() {
									$ && (re.getPlatformAPI().clearTimeout($), $ = null)
								},
								setLiveEndpointURL: function(e) {
									if(null == e || 0 == e.length) return null;
									var t = decodeURIComponent || unescape,
										n = e.indexOf("?");
									if(n >= 0) {
										if(n < e.length - 1) {
											for(var i = e.substring(n + 1).split("&"), r = 0, a = i.length; r < a; r++) {
												var s = i[r],
													o = s.split("=");
												2 == o.length ? re.setLabel(o[0], t(o[1])) : 1 == o.length && re.setLabel(d.PAGE_NAME_LABEL, t(o[0]))
											}
											e = e.substring(0, n + 1)
										}
									} else e += "?";
									return te = e
								},
								getLiveEndpointURL: function() {
									return te ? te : "undefined" != typeof ns_p && "string" == typeof ns_p.src ? te = ns_p.src.replace(/&amp;/, "&").replace(/&ns__t=\d+/, "") : "string" == typeof ns_pixelUrl ? te = ns_pixelUrl.replace(/&amp;/, "&").replace(/&ns__t=\d+/, "") : null
								},
								getStaSM: function() {
									return L
								},
								resetPlaybackSession: function(e) {
									var t = L.getPlaybackSession();
									L.setPlaybackSession(new p(L)), p.resetPlaybackSession(L, t, e)
								},
								resetHeartbeat: function() {
									L.getHeartbeat().pause();
									var e = L.getHeartbeat().getIntervals();
									L.setHeartbeat(new v(L)), L.getHeartbeat().setIntervals(e)
								}
							});
							var ce, de;
							t.isBrowser() ? (ce = window, de = document) : (ce = {}, de = {
								location: {
									href: ""
								},
								title: "",
								URL: "",
								referrer: "",
								cookie: ""
							}), t.extend(re, {
								prepareUrl: f
							}), i()
						}
					}(),
					O = function() {
						return function(e) {
							var n, i, r, a, s, o, l, u = this;
							t.extend(u, {
								getAppCore: function() {
									return n
								},
								getStaCore: function() {
									return e
								},
								getEventManager: function() {
									return i
								},
								getStateMachine: function() {
									return r
								},
								getHeartbeat: function() {
									return a
								},
								getKeepAlive: function() {
									return s
								},
								getPlaybackSession: function() {
									return o
								},
								getLogging: function() {
									return l
								},
								setAppCore: function(e) {
									n = e
								},
								setKeepAlive: function(e) {
									s = e
								},
								setHeartbeat: function(e) {
									a = e
								},
								setEventManager: function(e) {
									i = e
								},
								setStateMachine: function(e) {
									r = e
								},
								setPlaybackSession: function(e) {
									o = e
								},
								setLogging: function(e) {
									l = e
								}
							})
						}
					}(),
					N = function() {
						return function(e) {
							function n() {
								e = t.extend({}, e), a = new L(e), a.getStaSM().getLogging().log("New StreamingAnalytics instance with configuration", e)
							}

							function i(e) {
								var n, i;
								if(n = "object" == typeof arguments[1] ? arguments[1] : "object" == typeof arguments[2] ? arguments[2] : {}, i = "number" == typeof arguments[1] ? arguments[1] : "number" == typeof arguments[2] ? arguments[2] : NaN, l.toString(e)) {
									n = t.jsonObjectToStringDictionary(n);
									var r = t.fixEventTime(n);
									n.ns_st_po || isNaN(i) || (n.ns_st_po = t.parseInteger(i, 0) + ""), e == l.PLAY || e == l.PAUSE || e == l.BUFFER || e == l.END || e == l.SEEK_START || e == l.AD_SKIP || e == l.BUFFER_STOP ? a.newEvent(e, r, n) : a.newPseudoEvent(e, r, n)
								}
							}

							function r() {
								o && a.getStaSM().getStateMachine().getCurrentState() != u.IDLE && s.notifyEnd()
							}
							var a, s = this,
								o = !0;
							t.extend(this, {
								isProperlyInitialized: function() {
									return a.isProperlyInitialized()
								},
								reset: function(e) {
									i(l.END);
									var t = a;
									t.getStaSM().getKeepAlive().stop(), t.getStaSM().getHeartbeat().pause(), a = new L(t.getConfiguration()), p.resetPlaybackSession(a.getStaSM(), t.getStaSM().getPlaybackSession(), e)
								},
								setPauseOnBufferingInterval: function(e) {
									a.setPauseOnBufferingInterval(e)
								},
								getPauseOnBufferingInterval: function() {
									return a.getPauseOnBufferingInterval()
								},
								setKeepAliveInterval: function(e) {
									a.getStaSM().getKeepAlive().setInterval(e)
								},
								getKeepAliveInterval: function() {
									return a.getStaSM().getKeepAlive().getInterval()
								},
								setHeartbeatIntervals: function(e) {
									a.getStaSM().getHeartbeat().setIntervals(e)
								},
								notifyPlay: function(e, t) {
									a.getStaSM().getLogging().apiCall("notifyPlay", e, t), i(l.PLAY, e, t)
								},
								notifyPause: function(e, t) {
									a.getStaSM().getLogging().apiCall("notifyPause", e, t), i(l.PAUSE, e, t)
								},
								notifyEnd: function(e, t) {
									a.getStaSM().getLogging().apiCall("notifyEnd", e, t), i(l.END, e, t)
								},
								notifyBufferStart: function(e, t) {
									a.getStaSM().getLogging().apiCall("notifyBufferStart", e, t), i(l.BUFFER, e, t)
								},
								notifyBufferStop: function(e, t) {
									a.getStaSM().getLogging().apiCall("notifyBufferStop", e, t), i(l.BUFFER_STOP, e, t)
								},
								notifyLoad: function(e, t) {
									a.getStaSM().getLogging().apiCall("notifyLoad", e, t), i(l.LOAD, e, t)
								},
								notifyEngage: function(e, t) {
									a.getStaSM().getLogging().apiCall("notifyEngage", e, t), i(l.ENGAGE, e, t)
								},
								notifySeekStart: function(e, t) {
									a.getStaSM().getLogging().apiCall("notifySeekStart", e, t), i(l.SEEK_START, e, t)
								},
								notifySkipAd: function(e, t) {
									a.getStaSM().getLogging().apiCall("notifySkipAd", e, t), i(l.AD_SKIP, e, t)
								},
								notifyCallToAction: function(e, t) {
									a.getStaSM().getLogging().apiCall("notifyCallToAction", e, t), i(l.CTA, e, t)
								},
								notifyError: function(e, t) {
									a.getStaSM().getLogging().apiCall("notifyError", e, t), i(l.ERROR, e, t)
								},
								notifyTransferPlayback: function(e, t) {
									a.getStaSM().getLogging().apiCall("notifyTransferPlayback", e, t), i(l.TRANSFER, e, t)
								},
								notifyDrmFail: function(e, t) {
									a.getStaSM().getLogging().apiCall("notifyDrmFail", e, t), i(l.DRM_FAILED, e, t)
								},
								notifyDrmApprove: function(e, t) {
									a.getStaSM().getLogging().apiCall("notifyDrmApprove", e, t), i(l.DRM_APPROVED, e, t)
								},
								notifyDrmDeny: function(e, t) {
									a.getStaSM().getLogging().apiCall("notifyDrmDeny", e, t), i(l.DRM_DENIED, e, t)
								},
								notifyChangeBitrate: function(e, t, n) {
									if(a.getStaSM().getLogging().apiCall("notifyChangeBitrate", e, t, n), null != e) {
										var r = n || {};
										r.ns_st_br = e + "", i(l.BIT_RATE, r, t)
									}
								},
								notifyChangePlaybackRate: function(e, t, n) {
									if(a.getStaSM().getLogging().apiCall("notifyChangePlaybackRate", e, t, n), null != e) {
										var r = n || {};
										r.ns_st_rt = e + "", i(l.PLAYBACK_RATE, r, t)
									}
								},
								notifyChangeVolume: function(e, t, n) {
									if(a.getStaSM().getLogging().apiCall("notifyChangeVolume", e, t, n), null != e) {
										var r = n || {};
										r.ns_st_vo = e + "", i(l.VOLUME, r, t)
									}
								},
								notifyChangeWindowState: function(e, t, n) {
									if(a.getStaSM().getLogging().apiCall("notifyChangeWindowState", e, t, n), null != e) {
										var r = n || {};
										r.ns_st_ws = e + "", i(l.WINDOW_STATE, r, t)
									}
								},
								notifyChangeAudioTrack: function(e, t, n) {
									if(a.getStaSM().getLogging().apiCall("notifyChangeAudioTrack", e, t, n), null != e) {
										var r = n || {};
										r.ns_st_at = e + "", i(l.AUDIO, r, t)
									}
								},
								notifyChangeVideoTrack: function(e, t, n) {
									if(a.getStaSM().getLogging().apiCall("notifyChangeVideoTrack", e, t, n), null != e) {
										var r = n || {};
										r.ns_st_vt = e + "", i(l.VIDEO, r, t)
									}
								},
								notifyChangeSubtitleTrack: function(e, t, n) {
									if(a.getStaSM().getLogging().apiCall("notifyChangeSubtitleTrack", e, t, n), null != e) {
										var r = n || {};
										r.ns_st_tt = e + "", i(l.SUBS, r, t)
									}
								},
								notifyChangeCdn: function(e, t, n) {
									if(a.getStaSM().getLogging().apiCall("notifyChangeCdn", e, t, n), null != e) {
										var r = n || {};
										r.ns_st_cdn = e + "", i(l.CDN, r, t)
									}
								},
								notifyCustomEvent: function(e, t) {
									a.getStaSM().getLogging().apiCall("notifyCustomEvent", e, t), i(l.CUSTOM, e, t)
								},
								getLabels: function() {
									return a.getLabels()
								},
								getState: function() {
									return a.getStaSM().getStateMachine().getCurrentState()
								},
								setLabels: function(e) {
									a.setLabels(e)
								},
								getLabel: function(e) {
									return a.getLabel(e)
								},
								setLabel: function(e, t) {
									a.setLabel(e, t)
								},
								getLoadTimeOffset: function() {
									return a.getLoadTimeOffset()
								},
								setLoadTimeOffset: function(e) {
									a.setLoadTimeOffset(e)
								},
								setLiveEndpointURL: function(e) {
									return a.setLiveEndpointURL(e)
								},
								getLiveEndpointURL: function() {
									return a.getLiveEndpointURL()
								},
								isPauseOnBufferingEnabled: function() {
									return a.isPauseOnBufferingEnabled()
								},
								setPauseOnBufferingEnabled: function(e) {
									a.setPauseOnBufferingEnabled(e)
								},
								isThrottlingEnabled: function() {
									return a.isThrottlingEnabled()
								},
								setThrottlingEnabled: function(e) {
									a.setThrottlingEnabled(e)
								},
								setThrottlingDelay: function(e) {
									a.setThrottlingDelay(e)
								},
								getThrottlingDelay: function() {
									return a.getThrottlingDelay()
								},
								setPlaybackIntervalMergeTolerance: function(e) {
									a.getStaSM().getPlaybackSession().getAsset().setPlaybackIntervalMergeTolerance(e)
								},
								getPlaybackIntervalMergeTolerance: function() {
									return a.getStaSM().getPlaybackSession().getAsset().getPlaybackIntervalMergeTolerance()
								},
								createPlaybackSession: function(e) {
									a.getStaSM().getLogging().apiCall("createPlaybackSession", e), e = t.jsonObjectToStringDictionary(e);
									var n = a.getStaSM().getStateMachine().getCurrentState();
									n != u.IDLE && (a.getStaSM().getLogging().infoLog("Ending the current Clip. It was in state:", t.stateToString(n)), s.notifyEnd()), a.getStaSM().getPlaybackSession().isPlaybackSessionStarted() && a.resetPlaybackSession(), a.getStaSM().getPlaybackSession().setLabels(e)
								},
								getVersion: function() {
									return d.STREAMINGANALYTICS_VERSION
								},
								addListener: function(e) {
									a.addListener(e)
								},
								removeListener: function(e) {
									a.removeListener(e)
								},
								addMeasurementListener: function(e) {
									a.getStaSM().getEventManager().addMeasurementListener(e)
								},
								removeMeasurementListener: function(e) {
									a.getStaSM().getEventManager().removeMeasurementListener(e)
								},
								getPlaybackSession: function() {
									return a.getStaSM().getPlaybackSession()
								},
								setExitEndEventEnabled: function(e) {
									o = e
								},
								isExitEndEventEnabled: function() {
									return o
								},
								getPlatformAPI: function() {
									return a.getPlatformAPI()
								},
								_getLogHistory: function() {
									return a.getStaSM().getLogging().getLogHistory()
								}
							}), t.isBrowser() && (window.addEventListener ? (window.addEventListener("beforeunload", r), window.addEventListener("unload", r)) : window.attachEvent && (window.attachEvent("onbeforeunload", r), window.attachEvent("onunload", r))), n()
						}
					}();
				return N.PlayerEvents = l, N.InternalStates = u, N.ImplementationType = c, N.Constants = d, N
			}(), e.ReducedRequirementsStreamingAnalytics = e.ReducedRequirementsStreamingAnalytics || function() {
				var i = {
						LongFormOnDemand: "12",
						ShortFormOnDemand: "11",
						Live: "13",
						UserGeneratedLongFormOnDemand: "22",
						UserGeneratedShortFormOnDemand: "21",
						UserGeneratedLive: "23",
						Bumper: "99",
						Other: "00"
					},
					r = {
						LinearOnDemandPreRoll: "11",
						LinearOnDemandMidRoll: "12",
						LinearOnDemandPostRoll: "13",
						LinearLive: "21",
						BrandedOnDemandPreRoll: "31",
						BrandedOnDemandMidRoll: "32",
						BrandedOnDemandPostRoll: "33",
						BrandedOnDemandContent: "34",
						BrandedOnDemandLive: "35",
						Other: "00"
					},
					a = e.StreamingAnalytics,
					s = e.StreamingAnalytics.InternalStates || null,
					o = e.StreamingAnalytics.ImplementationType || null,
					l = null != e.StreamingAnalytics.InternalStates && null != e.StreamingAnalytics.ImplementationType,
					u = e.StreamingAnalytics.Constants,
					c = function(e) {
						function c() {
							l && (t.exists(e) && (e.customerC2 || e.publisherId) || t.getNamespace().comScore ? _ = new a(e) : S.error("Cannot instantiate StreamingAnalytics", "The property publisherId was not provided (or incorrectly provided) in the StreamingAnalytics configuration."), _ && _.setLabel("ns_st_it", o.toString(o.REDUCED)))
						}

						function d(e) {
							for(var t in u.STANDARD_METADATA_LABELS)
								if(u.STANDARD_METADATA_LABELS.hasOwnProperty(t) && !f(u.STANDARD_METADATA_LABELS[t], g, e)) return !1;
							return !0
						}

						function f(e, n, i) {
							return !!(t.exists(e) && t.exists(n) && t.exists(i) && (n.hasOwnProperty(e) && i.hasOwnProperty(e) && n[e] === i[e] || !n.hasOwnProperty(e) && !i.hasOwnProperty(e)))
						}

						function p(e) {
							_.getPlaybackSession().setAsset(e), g = e, _.notifyPlay()
						}

						function h(e) {
							var t = e || {};
							t.ns_st_ad = "1", t.ns_st_an = ++m + "", _.getPlaybackSession().setAsset(t), _.notifyPlay(), y = !1
						}

						function v(e, t) {
							A == b.None && (A = t), y && A == t && d(e) ? (_.getPlaybackSession().getAsset().setLabels(e), _.getState() != s.PLAYING && _.notifyPlay()) : p(e), y = !0, A = t
						}
						var g = null,
							m = 0,
							y = !1,
							_ = null,
							b = {
								None: 0,
								AudioContent: 1,
								VideoContent: 2
							},
							A = b.None,
							S = new n("TTSTA", (e || {}).debug);
						t.extend(this, {
							playVideoAdvertisement: function(e, n) {
								if(_) {
									S.apiCall("playVideoAdvertisement", e, n);
									var i = {
										ns_st_ct: "va"
									};
									n ? i.ns_st_ct = "va" + n : S.warn("Calling 'playVideoAdvertisement' without specifying the media type as a second parameter."), n != r.LinearLive && n != r.BrandedOnDemandLive || (i.ns_st_li = "1"), e && t.extend(i, e), h(i)
								}
							},
							playAudioAdvertisement: function(e, n) {
								if(_) {
									S.apiCall("playAudioAdvertisement", e, n);
									var i = {
										ns_st_ct: "aa"
									};
									n ? i.ns_st_ct = "aa" + n : S.warn("Calling 'playAudioAdvertisement' without specifying the media type as a second parameter."), n != r.LinearLive && n != r.BrandedOnDemandLive || (i.ns_st_li = "1"), e && t.extend(i, e), h(i)
								}
							},
							playVideoContentPart: function(e, n) {
								if(_) {
									S.apiCall("playVideoContentPart", e, n);
									var r = {
										ns_st_ct: "vc"
									};
									n ? r.ns_st_ct = "vc" + n : S.warn("Calling 'playVideoContentPart' without specifying the media type as a second parameter."), n != i.Live && n != i.UserGeneratedLive || (r.ns_st_li = "1"), e && t.extend(r, e), v(r, b.VideoContent)
								}
							},
							playAudioContentPart: function(e, n) {
								if(_) {
									S.apiCall("playAudioContentPart", e, n);
									var r = {
										ns_st_ct: "ac"
									};
									n ? r.ns_st_ct = "ac" + n : S.warn("Calling 'playAudioContentPart' without specifying the media type as a second parameter."), n != i.Live && n != i.UserGeneratedLive || (r.ns_st_li = "1"), e && t.extend(r, e), v(r, b.AudioContent)
								}
							},
							stop: function() {
								_ && (S.apiCall("stop"), _.notifyPause())
							}
						}), c()
					};
				return c.ContentType = i, c.AdType = r, c
			}(), e
		}),
		function(e) {
			"use strict";
			return "undefined" != typeof ns_ && ns_.StreamingAnalytics ? void e(ns_) : void("undefined" != typeof console && console.error && console.error("The comScore Streaming Analytics library was not properly loaded."))
		}(function(e) {
			"use strict";

			function t(s, o, l, u, c) {
				function d() {
					var t = {};
					t.debug = s.debug, t.publisherId = s.publisherId || s.c2, t.secure = s.secure, t.liveEndpointURL = s.logurl || s.liveEndpointURL, He = new e.StreamingAnalytics(t), n.extend(Ie, He), n.extend(Ie, {
						notifyPlay: M,
						notifyPause: B,
						notifyEnd: F,
						notifyBufferStart: V,
						notifyBufferStop: q,
						notifyLoad: H,
						notifyEngage: G,
						notifySeekStart: Y,
						notifySkipAd: z,
						notifyCallToAction: K,
						notifyError: W,
						notifyTransferPlayback: X,
						notifyDrmFail: J,
						notifyDrmApprove: Q,
						notifyDrmDeny: Z,
						notifyChangeBitrate: $,
						notifyChangePlaybackRate: ee,
						notifyChangeVolume: te,
						notifyChangeWindowState: ne,
						notifyChangeAudioTrack: ie,
						notifyChangeVideoTrack: re,
						notifyChangeSubtitleTrack: ae,
						notifyChangeCDN: se,
						notifyCustomEvent: oe,
						createPlaybackSession: fe,
						getPlaybackSession: pe,
						setAsset: de,
						setLabel: he,
						setLabels: ve,
						getLabels: ge,
						getLabel: me,
						setAssetLabel: ye,
						setPlaybackSessionLabel: _e,
						onGetLabels: U,
						labelMapping: Ke,
						release: f,
						log: Pe,
						handleSettings: Se,
						getGenericPluginVersion: p,
						setDuration: R,
						setVideoSize: D,
						setDetectSeek: x,
						setDetectPause: N,
						setDetectPlay: O,
						setDetectEnd: L,
						setSmartStateDetection: I,
						setPauseDetectionErrorMargin: S,
						setEndDetectionErrorMargin: T,
						setSeekDetectionMinQuotient: k,
						setPulseSamplingInterval: E,
						setPulseSamplingIntervalBackground: P,
						setPulseMaxDelay: C,
						setMaximumNumberOfEntriesInHistory: w,
						setMinimumNumberOfTimeUpdateEventsBeforeDetectingSeek: j
					}), Ie.setLabels({
						ns_st_mp: o,
						ns_st_pv: l,
						ns_st_mv: u
					}, !0), s && Se(s), c.init && c.init.call(Ie, null), $e && v()
				}

				function f() {
					c.release && c.release.call(Ie), g(), He.reset(), He = null, b(), Ge = [], Ce = void 0, Ye = -1, we = Oe, ze = -1
				}

				function p() {
					return Le
				}

				function h() {
					return n.hasPageVisibilityAPISupport && n.isTabInBackground() ? Fe : Be
				}

				function v() {
					g(), tt = NaN, nt = [], ct = !0, je = setInterval(m, h()), _()
				}

				function g() {
					"undefined" != typeof je && (clearInterval(je), je = void 0)
				}

				function m() {
					if(!$e) return void g();
					if(it) return void(it = !1);
					var t = +new Date,
						n = t - tt,
						i = h() + qe,
						a = tt;
					if(tt = t, !isNaN(a) && n > i) return void v();
					var s = c.position && c.position.call(Ie, null) || 0,
						o = !1;
					if(s != nt[nt.length - 1]) {
						if(nt.push(Math.abs(s)), nt.length > 1 && nt[nt.length - 1] < nt[nt.length - 2]) {
							var l = nt[nt.length - 1];
							nt = [], nt[0] = l, Xe && (o = !0)
						}
						if(!o && nt.length < Me) return
					}
					nt.length > Ve && (nt = nt.slice(-Math.floor(Ve / 2))), Xe && !o && (o = y());
					var u = He.getState();
					switch(u) {
						case r.IDLE:
						case r.PAUSED:
						case r.PLAYBACK_NOT_STARTED:
						case r.BUFFERING_BEFORE_PLAYBACK:
						case r.BUFFERING_DURING_PLAYBACK:
						case r.BUFFERING_DURING_SEEKING:
						case r.BUFFERING_DURING_PAUSE:
						case r.PAUSED_DURING_BUFFERING:
						case r.SEEKING_BEFORE_PLAYBACK:
						case r.SEEKING_DURING_PLAYBACK:
						case r.SEEKING_DURING_BUFFERING:
						case r.SEEKING_DURING_PAUSE:
							if(Qe && s > et && !o && !A(s)) {
								if(c.preMeasurement && !c.preMeasurement.call(Ie, u, e.StreamingAnalytics.PlayerEvents.PLAY)) break;
								var d = nt[nt.length - 1];
								ct && d < De ? Ie.notifyPlay(0) : Ie.notifyPlay(d), ct = !1;
								break
							}
							if(Xe && o && u != r.SEEKING_BEFORE_PLAYBACK && u != r.SEEKING_DURING_PLAYBACK && u != r.SEEKING_DURING_BUFFERING && u != r.SEEKING_DURING_PAUSE) {
								Ie.notifySeekStart(nt[0]);
								break
							}
							if(Ze && u != r.IDLE && u != r.PLAYBACK_NOT_STARTED && u != r.BUFFERING_BEFORE_PLAYBACK && u != r.SEEKING_BEFORE_PLAYBACK && A(s)) {
								if(c.preMeasurement && !c.preMeasurement.call(Ie, u, e.StreamingAnalytics.PlayerEvents.END)) break;
								ct = !0;
								var f = parseInt(rt.ns_st_cl || He.getPlaybackSession().getAsset().getLabel("ns_st_cl"));
								!isNaN(f) && f > 0 ? Ie.notifyEnd(f) : Ie.notifyEnd(s)
							}
							break;
						case r.PLAYING:
							if(Xe && o) {
								if(c.preMeasurement && !c.preMeasurement.call(Ie, u, e.StreamingAnalytics.PlayerEvents.PAUSE)) break;
								ct = !1, Ie.notifySeekStart(et)
							} else if(Ze && A(s)) {
								if(c.preMeasurement && !c.preMeasurement.call(Ie, u, e.StreamingAnalytics.PlayerEvents.END)) break;
								ct = !0;
								var f = parseInt(rt.ns_st_cl || He.getPlaybackSession().getAsset().getLabel("ns_st_cl"));
								!isNaN(f) && f > 0 ? Ie.notifyEnd(f) : Ie.notifyEnd(s)
							} else if(Je && Math.abs(s - et) <= Ne) {
								if(c.preMeasurement && !c.preMeasurement.call(Ie, u, e.StreamingAnalytics.PlayerEvents.PAUSE)) break;
								ct = !1, Ie.notifyPause(et)
							}
					}
					u !== He.getState() && (c.postMeasurement && c.postMeasurement.call(Ie, He.getState()), He.getState() != r.PLAYING && (nt = [])), et = s
				}

				function y() {
					if(nt.length < 2) return !1;
					if(nt[nt.length - 1] < nt[nt.length - 2]) return !0;
					for(var e = h(), t = 0, n = 0; n < nt.length; n++) t = (parseFloat(t) + Re[nt.length - 2][n] * nt[n]).toFixed(5);
					return t = parseFloat(t), t / e > Ue
				}

				function _() {
					if("undefined" != typeof document && document.addEventListener && n.hasPageVisibilityAPISupport() && !ft) {
						ft = !0;
						var e = n.getPageVisibilityAPI();
						document.addEventListener(e.visibilityChange, v, !1)
					}
				}

				function b() {
					if("undefined" != typeof document && document.addEventListener && n.hasPageVisibilityAPISupport() && ft) {
						ft = !1;
						var e = n.getPageVisibilityAPI();
						document.removeEventListener(e.visibilityChange, v, !1)
					}
				}

				function A(e) {
					var t = parseInt(rt.ns_st_cl || He.getPlaybackSession().getAsset().getLabel("ns_st_cl"));
					return !isNaN(t) && t > 0 && (e > t || Math.abs(e - t) < xe)
				}

				function S(e) {
					e && (Ne = e)
				}

				function T(e) {
					e && (xe = e)
				}

				function k(e) {
					e && e > 1 && (Ue = e)
				}

				function E(e) {
					"number" == typeof e && e >= 0 && (Be = e)
				}

				function P(e) {
					"number" == typeof e && e >= 0 && (Fe = e)
				}

				function C(e) {
					"number" == typeof e && e >= 0 && (qe = e)
				}

				function w(e) {
					e && e <= 13 && e >= 2 && (Ve = e)
				}

				function j(e) {
					e && e >= 2 && e <= 13 && (Me = e)
				}

				function I(e) {
					$e = e || !1, $e ? v() : g()
				}

				function L(e) {
					Ze = e || !1
				}

				function O(e) {
					Qe = e || !1
				}

				function N(e) {
					Je = e || !1
				}

				function x(e) {
					Xe = e || !1
				}

				function D(e) {
					He.getPlaybackSession().getAsset().setLabel("ns_st_cs", e ? e : 0)
				}

				function R(e) {
					He.getPlaybackSession().getAsset().setLabel("ns_st_cl", e && e >= 0 ? e : 0)
				}

				function U(e) {
					"function" == typeof e && Ge.push(e)
				}

				function M() {
					if(!lt && !ut) {
						ct = !1;
						var e = ce(a.PLAY, le(arguments), ue(arguments));
						He.notifyPlay(le(arguments), e), $e && (nt = [], et = e)
					}
				}

				function B() {
					if(!lt && !ut) {
						ct = !1;
						var e = ce(a.PAUSE, le(arguments), ue(arguments));
						He.notifyPause(le(arguments), e), $e && (nt = [], et = e)
					}
				}

				function F() {
					if(!lt && !ut) {
						ct = !0;
						var e = ce(a.END, le(arguments), ue(arguments));
						$e && (nt = [], et = e, it = !0), He.notifyEnd(le(arguments), e)
					}
				}

				function V() {
					if(!lt && !ut) {
						var e = ce(a.BUFFER, le(arguments), ue(arguments));
						He.notifyBufferStart(le(arguments), e)
					}
				}

				function q() {
					if(!lt && !ut) {
						var e = ce(a.BUFFER_STOP, le(arguments), ue(arguments));
						He.notifyBufferStop(le(arguments), e)
					}
				}

				function H() {
					if(!lt && !ut && s.enableLoadNotification) {
						var e = ce(a.LOAD, le(arguments), ue(arguments));
						He.notifyLoad(le(arguments), e)
					}
				}

				function G() {
					if(!lt && !ut && s.enableEngageNotification) {
						var e = ce(a.ENGAGE, le(arguments), ue(arguments));
						He.notifyEngage(le(arguments), e)
					}
				}

				function Y() {
					if(!lt && !ut) {
						ct = !1;
						var e = ce(a.SEEK_START, le(arguments), ue(arguments));
						$e && (nt = [], et = e), He.notifySeekStart(le(arguments), e)
					}
				}

				function z() {
					if(!lt && !ut) {
						if(!s.enableSkipAdNotification) return void F.apply(this, Array.prototype.slice.call(arguments));
						ct = !0;
						var e = ce(a.AD_SKIP, le(arguments), ue(arguments));
						$e && (nt = [], et = e, it = !0), He.notifySkipAd(le(arguments), e)
					}
				}

				function K() {
					if(!lt && !ut && s.enableCallToActionNotification) {
						var e = ce(a.CTA, le(arguments), ue(arguments));
						He.notifyCallToAction(le(arguments), e)
					}
				}

				function W() {
					if(!lt && !ut && s.enableErrorNotification) {
						var e = ce(a.ERROR, le(arguments), ue(arguments));
						He.notifyError(le(arguments), e)
					}
				}

				function X() {
					if(!lt && !ut && s.enableTransferPlaybackNotification) {
						var e = ce(a.TRANSFER, le(arguments), ue(arguments));
						He.notifyTransferPlayback(le(arguments), e)
					}
				}

				function J() {
					if(!lt && !ut && s.enableDrmFailNotification) {
						var e = ce(a.DRM_FAILED, le(arguments), ue(arguments));
						He.notifyDrmFail(le(arguments), e)
					}
				}

				function Q() {
					if(!lt && !ut && s.drmApproveNotification) {
						var e = ce(a.DRM_APPROVED, le(arguments), ue(arguments));
						He.notifyDrmApprove(le(arguments), e)
					}
				}

				function Z() {
					if(!lt && !ut && s.drmDenyNotification) {
						var e = ce(a.DRM_DENIED, le(arguments), ue(arguments));
						He.notifyDrmDeny(le(arguments), e)
					}
				}

				function $(e, t, n) {
					if(!lt && !ut) {
						if(!s.enableBitrateNotification) return void he("ns_st_br", e, !0);
						var i = [t, n],
							r = ce(a.BIT_RATE, le(i), ue(i));
						He.notifyChangeBitrate(e, r, le(i))
					}
				}

				function ee(e, t, n) {
					if(!lt && !ut) {
						var i = [t, n],
							r = ce(a.PLAYBACK_RATE, le(i), ue(i));
						He.notifyChangePlaybackRate(e, r, le(i))
					}
				}

				function te(e, t, n) {
					if(!lt && !ut) {
						if(!s.enableVolumeChangeNotification) return void he("ns_st_vo", e, !0);
						var i = [t, n],
							r = ce(a.VOLUME, le(i), ue(i));
						He.notifyChangeVolume(e, r, le(i))
					}
				}

				function ne(e, t, n) {
					if(!lt && !ut) {
						if(!s["enableWindowStateChangeNotification "]) return void he("ns_st_ws", e, !0);
						var i = [t, n],
							r = ce(a.WINDOW_STATE, le(i), ue(i));
						He.notifyChangeWindowState(e, r, le(i))
					}
				}

				function ie(e, t, n) {
					if(!lt && !ut) {
						if(!s.enableAudioTrackChangeNotification) return void he("ns_st_at", e, !0);
						var i = [t, n],
							r = ce(a.AUDIO, le(i), ue(i));
						He.notifyChangeAudioTrack(e, r, le(i))
					}
				}

				function re(e, t, n) {
					if(!lt && !ut) {
						if(!s.enableVideoTrackChangeNotification) return void he("ns_st_vt", e, !0);
						var i = [t, n],
							r = ce(a.VIDEO, le(i), ue(i));
						He.notifyChangeVideoTrack(e, r, le(i))
					}
				}

				function ae(e, t, n) {
					if(!lt && !ut) {
						if(!s.enableSubtitleTrackChangeNotification) return void he("ns_st_tt", e, !0);
						var i = [t, n],
							r = ce(a.SUBS, le(i), ue(i));
						He.notifyChangeSubtitleTrack(e, r, le(i))
					}
				}

				function se(e, t, n) {
					if(!lt && !ut) {
						if(!s.enableCdnChangeNotification) return void he("ns_st_cdn", e, !0);
						var i = [t, n],
							r = ce(a.CDN, le(i), ue(i));
						He.notifyChangeCdn(e, r, le(i))
					}
				}

				function oe() {
					if(!lt && !ut && s.enableCustomEventNotification) {
						var e = ce(a.CUSTOM, le(arguments), ue(arguments));
						He.notifyCustomEvent(le(arguments), e)
					}
				}

				function le(e) {
					var t;
					return t = "object" == typeof e[0] ? e[0] : "object" == typeof e[1] ? e[1] : {}
				}

				function ue(e) {
					var t;
					return t = "number" == typeof e[0] ? e[0] : "number" == typeof e[1] ? e[1] : NaN
				}

				function ce(e, t, n) {
					for(var i = 0, r = Ge.length; i < r; i++) Ge[i](e, t);
					var a = NaN;
					return "number" != typeof n || isNaN(n) ? c.position && (a = c.position.call(Ie, e, t, n)) : a = n, a
				}

				function de(e, t, i, r) {
					var a = i || [];
					ke(a, e), Ee(a, e);
					var s;
					for(var o in e) e.hasOwnProperty(o) && (s = o.match(/^data-(.+)/)) && (e[s[1]] = e[o], delete e[o]);
					return r && 1 == r ? n.extend(e, st) : (st = {}, n.extend(st, e)), rt = {}, lt = !!(e && e.hasOwnProperty("ns_st_skip") && e.ns_st_skip), He.getPlaybackSession().setAsset(e, t)
				}

				function fe(e, t) {
					return t && 1 == t ? n.extend(e, at) : (at = {}, n.extend(at, e)), ut = !!(e && e.hasOwnProperty("ns_st_skip") && e.ns_st_skip), He.createPlaybackSession(e)
				}

				function pe() {
					var e = He.getPlaybackSession();
					return new i(e, de)
				}

				function he(e, t, n) {
					var i = {};
					return i[e] = t, ve(i, n)
				}

				function ve(e, t) {
					return t && 1 == t ? n.extend(e, ot) : n.extend(ot, e), He.setLabels(e)
				}

				function ge() {
					return ot
				}

				function me(e) {
					return ot[e]
				}

				function ye(e, t, n) {
					n && 1 == n ? (st.hasOwnProperty(e) || ot.hasOwnProperty(e) || He.getPlaybackSession().getAsset().setLabel(e, t), rt[e] = t) : (st[e] = t, He.getPlaybackSession().getAsset().setLabel(e, t))
				}

				function _e(e, t, n) {
					n && 1 == n ? at.hasOwnProperty(e) || ot.hasOwnProperty(e) || He.getPlaybackSession().setLabel(e, t) : (at[e] = t, He.getPlaybackSession().setLabel(e, t))
				}

				function be(e) {
					if(e) {
						var t = /([^=, ]+)\s*=(\s*("([^"]+?)"|'([^']+?)'|[a-z0-9\[\]\._-]+)\s*\+?)+\s*/gi,
							n = e.match(t);
						for(var i in n)
							if(n.hasOwnProperty(i)) {
								var r = n[i].split("=", 2);
								if(2 == r.length) {
									var a = r[0].replace(/(^\s+|\s+$)/g, "");
									"" != a && (Ke[a] = r[1])
								}
							}
					}
				}

				function Ae(e) {
					if(e) {
						var t = e.split(",");
						for(var n in t)
							if(t.hasOwnProperty(n)) {
								var i = t[n].split("=", 2);
								if(2 == i.length) {
									var r = i[0].replace(/(^\s+|\s+$)/g, "");
									"" != r && (He.setLabel(r, i[1]), ot[r] = i[1])
								}
							}
					}
				}

				function Se(e) {
					if(n.isTrue(e.pageView || e.pageview)) {
						var t = {};
						if("undefined" != typeof document) {
							var i = document;
							t.c7 = i.URL, t.c8 = i.title, t.c9 = i.referrer
						}
						He.setLabels(t)
					}
					e.renditions, We = n.isTrue(e.debug), (e.labelMapping || e.labelmapping) && be(e.labelMapping || e.labelmapping), (e.persistentLabels || e.persistentlabels) && Ae(e.persistentLabels || e.persistentlabels), "1" === e.throttling || e.throttling === !0 ? He.setThrottlingEnabled(!0) : He.setThrottlingEnabled(!1);
					var r;
					(r = e.include) && "string" == typeof r && (r === Oe ? Ce = Oe : r.length > 0 && (Ce = r.split(","))), Ce !== Oe && (r = e.includePrefixes || e.include_prefixes) && (r === Oe ? Ce = Oe : (Ce || (Ce = []), Ye = Ce.length, Ce.push.apply(Ce, r.split(","))));
					var a = /^([Cc][A-Da-d]_)?ns_st_.+/,
						s = /^[Cc][A-Da-d]?([1-9]|1[0-9]|20)$/,
						o = e.exclude;
					if("string" == typeof o)
						if(Ce || o)
							if(Ce && !o) dt = [], we = [];
							else if(o == Oe) dt = [], we = Oe;
					else {
						var l = o.split(",");
						we = Ce ? l : Oe;
						for(var u = 0; u < l.length; u++) {
							var c = null != l[u].match(a),
								d = null != l[u].match(s);
							(c || d) && dt.push(l[u])
						}
					} else dt = [], we = Oe;
					var f = e.excludePrefixes || e.exclude_prefixes;
					Ce && we != Oe && "string" == typeof f && (f == Oe ? we = Oe : (we || (we = []), ze = we.length, we.push.apply(we, f.split(",")))), we || (we = Oe)
				}

				function Te(e) {
					var t, n, i, r, a = {};
					if(we === Oe) return {};
					if(Ce && Ce !== Oe) {
						for(t = 0, n = Ce.length; t < n; t++) {
							var s = Ce[t];
							r = Ye >= 0 && t >= Ye;
							for(i in e) e.hasOwnProperty(i) && (a[i] || (a[i] = !(r ? 0 !== i.indexOf(s) : i != s)))
						}
						for(i in a) a.hasOwnProperty(i) && a[i] === !1 && delete e[i];
						a = {}
					}
					if(we)
						for(t = 0, n = we.length; t < n; t++) {
							var o = we[t];
							r = ze >= 0 && t >= ze;
							for(i in e) e.hasOwnProperty(i) && (r ? 0 === i.indexOf(o) : i == o) && (a[i] = !0);
							for(i in a) a.hasOwnProperty(i) && e.hasOwnProperty(i) && delete e[i];
							a = {}
						}
					return e
				}

				function ke(e, t) {
					var i = we === Oe;
					if(e.length > 0 && "undefined" != e[0].map) {
						var r = e[0].map;
						i || n.extend(t, Te(r));
						for(var a in r)
							if(r.hasOwnProperty(a)) {
								var s, o, l, u = /^([Cc][A-Da-d]_)?ns_st_.+/,
									c = /^[Cc][A-Da-d]?([1-9]|1[0-9]|20)$/;
								(s = a.match(/^data-(.+)/)) ? (o = null != s[1].match(u), l = null != s[1].match(c), (o || l) && dt.indexOf(s[1]) === -1 && (t[s[1]] = r[a])) : (o = null != a.match(u), l = null != a.match(c), (o || l) && dt.indexOf(a) === -1 && (t[a] = r[a]))
							}
					}
				}

				function Ee(e, t) {
					var i = Ie.labelMapping;
					for(var r in i)
						if(i.hasOwnProperty(r))
							for(var a = "", s = /^("([^"]+)"|'([^']+?)'$)/i, o = /"([^"]+?)"|[a-z0-9\[\]\._-]+|'([^']+?)'\s*/gi, l = i[r].match(o), u = 0; u < l.length; u++) {
								var c = l[u].replace(/(?:^\s+|\s+$)/g, "");
								if(s.test(c)) {
									var d = s.exec(c);
									a += d[2] || d[3]
								} else try {
									var f = "",
										p = c.lastIndexOf(".");
									p >= 1 && p < c.length - 1 && (f = c.substring(0, p), c = c.substring(p + 1, c.length));
									for(var h = 0; h < e.length; h++) {
										var v = e[h];
										if(f == v.prefix) {
											v.map[c] && (a += n.toString(v.map[c]));
											break
										}
									}
								} catch(e) {
									Pe("Exception occurred while processing mapped labels")
								}
								t[r] = a
							}
				}

				function Pe() {
					if(We) {
						var e = new Date,
							t = e.getDate(),
							n = e.getMonth() + 1,
							i = e.getHours(),
							r = e.getMinutes(),
							a = e.getSeconds(),
							s = e.getFullYear() + "-" + (n < 10 ? "0" + n : n) + "-" + (t < 10 ? "0" + t : t) + " " + (i < 10 ? "0" + i : i) + ":" + (r < 10 ? "0" + r : r) + ":" + (a < 10 ? "0" + a : a) + "." + e.getMilliseconds(),
							o = ["comScore", s],
							l = Array.prototype.slice.call(arguments);
						"undefined" != typeof console && console.log.apply(console, o.concat(l))
					}
				}
				c = c || {};
				var Ce, we, je, Ie = this,
					Le = "2.6.0.170905",
					Oe = "_all_",
					Ne = 10,
					xe = 500,
					De = 1e3,
					Re = [
						[-1, 1],
						[-.5, 0, .5],
						[-.3, -.1, .1, .3],
						[-.2, -.1, 0, .1, .2],
						[-.14286, -.08571, -.02857, .02857, .08571, .14286],
						[-.10714, -.07143, -.03571, 0, .03571, .07143, .10714],
						[-.08333, -.05952, -.03571, -.0119, .0119, .03571, .05952, .08333],
						[-.06667, -.05, -.03333, -.01667, 0, .01667, .03333, .05, .06667],
						[-.05455, -.04242, -.0303, -.01818, -.00606, .00606, .01818, .0303, .04242, .05455],
						[-.04545, -.03636, -.02727, -.01818, -.00909, 0, .00909, .01818, .02727, .03636, .04545],
						[-.03846, -.03147, -.02448, -.01748, -.01049, -.0035, .0035, .01049, .01748, .02448, .03147, .03846],
						[-.03297, -.02747, -.02198, -.01648, -.01099, -.00549, 0, .00549, .01099, .01648, .02198, .02747, .03297]
					],
					Ue = 1.25,
					Me = 2,
					Be = 300,
					Fe = 1e3,
					Ve = 6,
					qe = 50,
					He = {},
					Ge = [],
					Ye = -1,
					ze = -1,
					Ke = {},
					We = !1,
					Xe = !1,
					Je = !1,
					Qe = !1,
					Ze = !1,
					$e = !1,
					et = c.position && c.position.call(Ie, null) || 0,
					tt = NaN,
					nt = [],
					it = !1,
					rt = {},
					at = {},
					st = {},
					ot = {},
					lt = !1,
					ut = !1,
					ct = !0,
					dt = [];
				d(), n.isTrue(s.pageView || s.pageview) && t.viewNotify(He.getLabels(), He);
				var ft = !1
			}
			var n = n || {};
			n.indexOf = function(e, t) {
				var n = -1;
				return this.forEach(t, function(t, i) {
					t == e && (n = i)
				}), n
			}, n.forEach = function(e, t, n) {
				try {
					if("function" == typeof t)
						if(n = "undefined" != typeof n ? n : null, "number" != typeof e.length || "undefined" == typeof e[0]) {
							var i = "undefined" != typeof e.__proto__;
							for(var r in e) e.hasOwnProperty(r) && (!i || i && "undefined" == typeof e.__proto__[r]) && "function" != typeof e[r] && t.call(n, e[r], r)
						} else
							for(var a = 0, s = e.length; a < s; a++) t.call(n, e[a], a)
				} catch(e) {}
			};
			var n = n || {};
			n.parseBoolean = function(e, t) {
				return t = t || !1, e ? "0" != e : t
			}, n.parseInteger = function(e, t) {
				return null == e || isNaN(e) ? t || 0 : parseInt(e)
			}, n.parseLong = function(e, t) {
				var n = Number(e);
				return null == e || isNaN(n) ? t || 0 : n
			}, n.toString = function(e) {
				if("undefined" == typeof e) return "undefined";
				if("string" == typeof e) return e;
				if(e instanceof Array) return e.join(",");
				var t = "";
				for(var n in e) e.hasOwnProperty(n) && (t += n + ":" + e[n] + ";");
				return t || e.toString()
			};
			var n = n || {};
			n.filter = function(e, t) {
				var n = {};
				for(var i in t) t.hasOwnProperty(i) && e(t[i]) && (n[i] = t[i]);
				return n
			}, n.extend = function(e) {
				var t, n = arguments.length;
				e = e || {};
				for(var i = 1; i < n; i++)
					if(t = arguments[i])
						for(var r in t) t.hasOwnProperty(r) && (e[r] = t[r]);
				return e
			};
			var n = n || {};
			n.cloneObject = function(e) {
				if(null == e || "object" != typeof e) return e;
				var t = function() {
					function e() {}

					function t(t) {
						return "object" == typeof t ? (e.prototype = t, new e) : t
					}

					function n(e) {
						for(var t in e) e.hasOwnProperty(t) && (this[t] = e[t])
					}

					function i() {
						this.copiedObjects = [];
						var e = this;
						this.recursiveDeepCopy = function(t) {
							return e.deepCopy(t)
						}, this.depth = 0
					}

					function r(e, t) {
						var n = new i;
						return t && (n.maxDepth = t), n.deepCopy(e)
					}

					function a(e) {
						return "undefined" != typeof window && window && window.Node ? e instanceof Node : "undefined" != typeof document && e === document || "number" == typeof e.nodeType && e.attributes && e.childNodes && e.cloneNode
					}
					var s = [];
					return n.prototype = {
						constructor: n,
						canCopy: function() {
							return !1
						},
						create: function(e) {},
						populate: function(e, t, n) {}
					}, i.prototype = {
						constructor: i,
						maxDepth: 256,
						cacheResult: function(e, t) {
							this.copiedObjects.push([e, t])
						},
						getCachedResult: function(e) {
							for(var t = this.copiedObjects, n = t.length, i = 0; i < n; i++)
								if(t[i][0] === e) return t[i][1]
						},
						deepCopy: function(e) {
							if(null === e) return null;
							if("object" != typeof e) return e;
							var t = this.getCachedResult(e);
							if(t) return t;
							for(var n = 0; n < s.length; n++) {
								var i = s[n];
								if(i.canCopy(e)) return this.applyDeepCopier(i, e)
							}
							throw new Error("Unable to clone the following object " + e)
						},
						applyDeepCopier: function(e, t) {
							var n = e.create(t);
							if(this.cacheResult(t, n), this.depth++, this.depth > this.maxDepth) throw new Error("Maximum recursion depth exceeded.");
							return e.populate(this.recursiveDeepCopy, t, n), this.depth--, n
						}
					}, r.DeepCopier = n, r.deepCopiers = s, r.register = function(e) {
						e instanceof n || (e = new n(e)), s.unshift(e)
					}, r.register({
						canCopy: function() {
							return !0
						},
						create: function(e) {
							return e instanceof e.constructor ? t(e.constructor.prototype) : {}
						},
						populate: function(e, t, n) {
							for(var i in t) t.hasOwnProperty(i) && (n[i] = e(t[i]));
							return n
						}
					}), r.register({
						canCopy: function(e) {
							return e instanceof Array
						},
						create: function(e) {
							return new e.constructor
						},
						populate: function(e, t, n) {
							for(var i = 0; i < t.length; i++) n.push(e(t[i]));
							return n
						}
					}), r.register({
						canCopy: function(e) {
							return e instanceof Date
						},
						create: function(e) {
							return new Date(e)
						}
					}), r.register({
						canCopy: function(e) {
							return a(e)
						},
						create: function(e) {
							return "undefined" != typeof document && e === document ? document : e.cloneNode(!1)
						},
						populate: function(e, t, n) {
							if("undefined" != typeof document && t === document) return document;
							if(t.childNodes && t.childNodes.length)
								for(var i = 0; i < t.childNodes.length; i++) {
									var r = e(t.childNodes[i]);
									n.appendChild(r)
								}
						}
					}), {
						deepCopy: r
					}
				}();
				return t.deepCopy(e)
			};
			var n = n || {};
			n.getNamespace = function() {
				return e.ns_ || e
			}, n.uid = function() {
				var e = 1;
				return function() {
					return +new Date + "_" + e++
				}
			}(), n.isEmpty = function(e) {
				return void 0 === e || null === e || "" === e || e instanceof Array && 0 === e.length
			}, n.isNotEmpty = function(e) {
				return !this.isEmpty(e)
			}, n.safeGet = function(e, t) {
				return t = this.exists(t) ? t : "", this.exists(e) ? e : t
			}, n.isTrue = function(e) {
				return "undefined" != typeof e && ("string" == typeof e ? (e = e.toLowerCase(), "true" === e || "1" === e || "on" === e) : !!e)
			}, n.regionMatches = function(e, t, n, i, r) {
				if(t < 0 || i < 0 || t + r > e.length || i + r > n.length) return !1;
				for(; --r >= 0;) {
					var a = e.charAt(t++),
						s = n.charAt(i++);
					if(a != s) return !1
				}
				return !0
			}, n.exists = function(e) {
				return "undefined" != typeof e && null != e
			}, ! function() {
				var e = [],
					t = !1,
					i = !0,
					r = 1e3;
				n.onSystemClockJump = function(n, a) {
					e.push(n), t || (t = !0, r = a || r, i = +new Date, setInterval(function() {
						var t = i + r,
							n = +new Date;
						i = n;
						var a = n - t;
						if(Math.abs(a) > r)
							for(var s = 0; s < e.length; ++s) e[s](a > 0)
					}, r))
				}
			}();
			var n = n || {};
			n.hasPageVisibilityAPISupport = function() {
				if("undefined" == typeof document) return !1;
				var e = !1;
				return "undefined" != typeof document.hidden ? e = !0 : "undefined" != typeof document.mozHidden ? e = !0 : "undefined" != typeof document.msHidden ? e = !0 : "undefined" != typeof document.webkitHidden && (e = !0),
					function() {
						return e
					}
			}(), n.getPageVisibilityAPI = function() {
				if("undefined" == typeof document) return null;
				var e, t, n;
				"undefined" != typeof document.hidden ? (e = "hidden", t = "visibilitychange", n = "visibilityState") : "undefined" != typeof document.mozHidden ? (e = "mozHidden", t = "mozvisibilitychange", n = "mozVisibilityState") : "undefined" != typeof document.msHidden ? (e = "msHidden", t = "msvisibilitychange", n = "msVisibilityState") : "undefined" != typeof document.webkitHidden && (e = "webkitHidden", t = "webkitvisibilitychange", n = "webkitVisibilityState");
				var i = {
					hidden: e,
					visibilityChange: t,
					state: n
				};
				return function() {
					return i
				}
			}(), n.isTabInBackground = function() {
				if("undefined" == typeof document) return null;
				var e = n.getPageVisibilityAPI();
				return function() {
					return document[e.hidden]
				}
			}(), n.getBrowserName = function() {
				if(!navigator) return "";
				var e, t, n = navigator.userAgent || "",
					i = navigator.appName || "";
				return(t = n.indexOf("Opera")) != -1 || (t = n.indexOf("OPR/")) != -1 ? i = "Opera" : (t = n.indexOf("Android")) != -1 ? i = "Android" : (t = n.indexOf("Chrome")) != -1 ? i = "Chrome" : (t = n.indexOf("Safari")) != -1 ? i = "Safari" : (t = n.indexOf("Firefox")) != -1 ? i = "Firefox" : (t = n.indexOf("IEMobile")) != -1 ? i = "Internet Explorer Mobile" : "Microsoft Internet Explorer" == i || "Netscape" == i ? i = "Internet Explorer" : (e = n.lastIndexOf(" ") + 1) < (t = n.lastIndexOf("/")) ? (i = n.substring(e, t), i.toLowerCase() == i.toUpperCase() && (i = navigator.appName)) : i = "unknown", i
			}, n.getBrowserFullVersion = function() {
				if(!navigator) return "";
				var e, t, n, i, r = navigator.userAgent || "",
					a = navigator.appName || "",
					s = navigator.appVersion ? "" + parseFloat(navigator.appVersion) : "";
				return(t = r.indexOf("Opera")) != -1 ? (s = r.substring(t + 6), (t = r.indexOf("Version")) != -1 && (s = r.substring(t + 8))) : (t = r.indexOf("OPR/")) != -1 ? s = r.substring(t + 4) : (t = r.indexOf("Android")) != -1 ? s = r.substring(t + 11) : (t = r.indexOf("Chrome")) != -1 ? s = r.substring(t + 7) : (t = r.indexOf("Safari")) != -1 ? (s = r.substring(t + 7), (t = r.indexOf("Version")) != -1 && (s = r.substring(t + 8))) : (t = r.indexOf("Firefox")) != -1 ? s = r.substring(t + 8) : "Microsoft Internet Explorer" == a ? (i = new RegExp("MSIE ([0-9]{1,}[.0-9]{0,})"), null != i.exec(r) && (s = parseFloat(RegExp.$1))) : "Netscape" == a ? (i = new RegExp("Trident/.*rv:([0-9]{1,}[.0-9]{0,})"), null != i.exec(r) && (s = parseFloat(RegExp.$1))) : s = r.lastIndexOf(" ") + 1 < (t = r.lastIndexOf("/")) ? r.substring(t + 1) : "unknown", s = s.toString(), (n = s.indexOf(";")) != -1 && (s = s.substring(0, n)), (n = s.indexOf(" ")) != -1 && (s = s.substring(0, n)), (n = s.indexOf(")")) != -1 && (s = s.substring(0, n)), e = parseInt("" + s, 10), isNaN(e) && (s = "" + parseFloat(navigator.appVersion)), s
			}, n.browserAcceptsLargeURLs = function() {
				return "undefined" == typeof window || (null !== window.ActiveXObject, !0)
			}, n.isBrowser = function() {
				return "undefined" != typeof window && "undefined" != typeof document
			}, n.isWebSecure = function() {
				return "undefined" != typeof document && null != document && "s" === document.location.href.charAt(4)
			};
			var i = (function() {
					var e = 1e4;
					return function(t, n) {
						function i(e) {
							e = e || [];
							var n = [o, +new Date];
							return t && n.push(t), e = Array.prototype.slice.call(e), n = n.concat(e)
						}

						function r(e) {
							var t, i, r;
							if("boolean" == typeof n || !n) return !!n;
							if(r = e.join(" "), n instanceof Array && n.length > 0) {
								for(t = 0; t < n.length; ++t)
									if(i = n[t], i instanceof RegExp && i.test(r)) return !0;
								return !1
							}
							if("object" == typeof n) {
								var a = !1;
								if(n.hide instanceof Array)
									for(t = 0; t < n.hide.length; ++t)
										if(i = n.hide[t], i instanceof RegExp && i.test(r)) {
											a = !0;
											break
										}
								if(n.show instanceof Array)
									for(t = 0; t < n.show.length; ++t)
										if(i = n.show[t], i instanceof RegExp && i.test(r)) return !0;
								return !a && !n.show
							}
							return !0
						}

						function a(t) {
							var i = l.length;
							(i > e || n && n.max && i > n.max) && (l = l.slice(-Math.floor(n.max / 2)), l.push("Previous logs: " + i)), l.push(t)
						}
						var s = this,
							o = "comScore",
							l = [];
						s.log = function() {
							var e = i(arguments);
							a(e), "undefined" != typeof console && "function" == typeof console.log && r(e) && console.log.apply(console, e)
						}, s.warn = function() {
							var e = i(arguments);
							a(e), "undefined" != typeof console && "function" == typeof console.warn && r(e) && console.warn.apply(console, e)
						}, s.error = function() {
							var e = i(arguments);
							a(e), "undefined" != typeof console && "function" == typeof console.error && r(e) && console.error.apply(console, e)
						}, s.apiCall = function(e) {
							for(var t = ["API call to:", e], n = 1; n < arguments.length; ++n) t.push("arg" + n + ":", arguments[n]);
							this.log.apply(this, t)
						}, s.infoLog = function() {
							var e = ["Trace log:"];
							e.push.apply(e, Array.prototype.slice.call(arguments)), this.log.apply(this, e)
						}, s.deprecation = function(e, t) {
							var n = ["Deprecated API:", e, "is deprecated and will be eventually removed."];
							t && n.push("Use", t, "instead."), this.warn.apply(this, n)
						}, s.getLogHistory = function() {
							return l
						}
					}
				}(), function() {
					function e(e, n) {
						for(var i = this, r = 0; r < t.length; ++r) {
							var a = t[r];
							i[a] = function(t) {
								return function() {
									return e[t].apply(e, Array.prototype.slice.call(arguments))
								}
							}(a)
						}
						i.setAsset = function() {
							n.apply(null, Array.prototype.slice.call(arguments))
						}
					}
					var t = ["getAsset", "getLabels", "setLabels", "setLabel", "getLabel", "getPlaybackSessionID"];
					return e
				}()),
				r = e.StreamingAnalytics.InternalStates,
				a = e.StreamingAnalytics.PlayerEvents;
			t.prototype = e.StreamingAnalytics.prototype, e.StreamingAnalytics.Plugin = t, t.extractParams = function(e, t, n) {
				var i, r, a, s = t.length,
					o = {},
					l = e.indexOf(t);
				if("undefined" == typeof n && (n = "&"), l >= 0)
					for(a = e.substr(l + s).split(n), i = 0, r = a.length; i < r; i++) {
						var u = a[i].split("=");
						2 === u.length && (o[u[0]] = decodeURIComponent(u[1]))
					}
				return o
			}, t.viewNotify = function(e, t) {
				var i, r;
				n.isBrowser() ? (i = window, r = document) : (i = {}, r = {
					location: {
						href: ""
					},
					title: "",
					URL: "",
					referrer: "",
					cookie: ""
				});
				var a = t.getLiveEndpointURL(),
					s = "undefined",
					o = i.comScore || i.sitestat || function(e) {
						var a, o, l, u, c, d = "comScore=",
							f = r.cookie,
							p = "",
							h = "indexOf",
							v = "substring",
							g = "length",
							m = n.browserAcceptsLargeURLs() ? i.ns_.StreamingAnalytics.Constants.URL_LENGTH_LIMIT : i.ns_.StreamingAnalytics.Constants.RESTRICTED_URL_LENGTH_LIMIT,
							y = "&ns_",
							_ = "&",
							b = i.encodeURIComponent || escape;
						if(f[h](d) + 1)
							for(u = 0, l = f.split(";"), c = l[g]; u < c; u++) o = l[u][h](d), o + 1 && (p = _ + unescape(l[u][v](o + d[g])));
						e += y + "_t=" + +new Date + y + "c=" + (r.characterSet || r.defaultCharset || "") + p, e.length > m && e.indexOf(_) > 0 && (a = e.substr(0, m - 8).lastIndexOf(_), e = (e.substring(0, a) + y + "cut=" + b(e.substring(a + 1))).substr(0, m)), t.getPlatformAPI().httpGet(e), typeof i.ns_p === s && (i.ns_p = {
							src: e
						}), i.ns_p.lastMeasurement = e
					},
					l = decodeURIComponent || unescape,
					u = {},
					c = a.indexOf("?");
				if(c >= 0 && c < a.length - 1) {
					for(var d = a.substring(c + 1).split("&"), f = 0, p = d.length; f < p; f++) {
						var h = d[f],
							v = h.split("=");
						2 == v.length && (u[v[0]] = l(v[1]))
					}
					a = a.substring(0, c + 1)
				}
				var g = u;
				if(typeof e !== s) {
					for(var m in e) e.hasOwnProperty(m) && (g[m] = e[m]);
					var y = [],
						_ = i.encodeURIComponent || escape;
					for(m in g) y.push(_(m) + "=" + _(g[m]));
					/[\?\&]$/.test(a) || (a += "&"), a += y.join("&")
				}
				return o(a)
			}
		}),
		function(e) {
			"use strict";
			return "undefined" != typeof ns_ && ns_.StreamingAnalytics && ns_.StreamingAnalytics.Plugin ? void e(ns_) : void("undefined" != typeof console && console.error && console.error("The comScore Streaming Analytics library was not properly loaded."))
		}(function(ns_) {
			function BrightcovePlayerPlugin(e, t) {
				function n() {
					$.log("onVolumeChange"), F()
				}

				function i() {
					$.log("onFullScreenChange"), V()
				}

				function r() {
					$.log("dispose"), $.notifyEnd(), d(), $.release()
				}

				function a() {
					$.log("onDurationChange"), K = Math.max(Math.floor(1e3 * e.duration()), 0), K = isFinite(K) ? K : 0, $.setAssetLabel("ns_st_cl", K, !0), $.setAssetLabel("ns_st_el", K, !0)
				}

				function s(e) {
					$.log("onWaiting"), oe || O(e), D()
				}

				function o() {
					$.log("onPlaying"), he || (clearTimeout(D.timerId), D._notifyBufferWorkerStarted = !1, D.timerId = null, 0 == w() && $.notifyPlay(0))
				}

				function l(e, t) {
					return $.log("OnPreMeasurement - Current State:" + e + " Event:" + t), oe || O(), he || t != ns_.StreamingAnalytics.PlayerEvents.PLAY || (Ee = !1), e != ns_.StreamingAnalytics.InternalStates.PLAYING || t != ns_.StreamingAnalytics.PlayerEvents.PAUSE || he ? e != ns_.StreamingAnalytics.InternalStates.PLAYING || t != ns_.StreamingAnalytics.PlayerEvents.END || he || (I(w()), fe = !1, pe = !0, Ae = !0) : ($.log("Pausing Content"), I(w())), !(t == ns_.StreamingAnalytics.PlayerEvents.PLAY && !fe && !he)
				}

				function u() {
					$ = new ns_.StreamingAnalytics.Plugin(t, J, Q, Z, {
						position: w,
						preMeasurement: l
					}), $.log("init"), e && e.bigPlayButton && t && t.trackplaybutton && e.bigPlayButton.on("click", L), "undefined" != typeof cs_vce_ && (cs_vce_.init("StreamingAnalytics", {
						playerId: e.id(),
						streamSense: $
					}), $.setHttpGet(function(t, n) {
						"undefined" != typeof cs_vce_ ? cs_vce_.getViewability(e.id(), function(e) {
							var i = win.encodeURIComponent || escape,
								r = [];
							for(var a in e)
								if(e.hasOwnProperty(a)) {
									var s = e[a];
									"undefined" != typeof s && null != s && t.indexOf(i(a) + "=") == -1 && r.push(i(a) + "=" + i(e[a]))
								}
							t += "&" + r.join("&"), imgHttpGet(t, n)
						}) : imgHttpGet(t, n)
					})), Utils.extend(X, {
						attachTo: c,
						detach: d
					}), c(e), U(), f(), $.setLabel("ns_ap_pn", "js", !0), $.setLabel("ns_ap_pfm", "html", !0), q()
				}

				function c(t) {
					if(t) {
						de && d(), e = t;
						for(var n in ue) ue.hasOwnProperty(n) && p(n, ue[n]);
						for(var n in ce) ce.hasOwnProperty(n) && p(n, ce[n]);
						$.setSmartStateDetection(!he), $.setDetectEnd(!0), $.setDetectPause(!0), $.setDetectPlay(!0), $.setDetectSeek(!0), de = !0
					}
				}

				function d() {
					$.log("detach");
					for(var e in ue) ue.hasOwnProperty(e) && h(e, ue[e]);
					for(var e in ce) ce.hasOwnProperty(e) && h(e, ce[e]);
					$.setSmartStateDetection(!1), $.setDetectEnd(!1), $.setDetectPause(!1), $.setDetectPlay(!1), $.setDetectSeek(!1), de = !1
				}

				function f() {
					X.dispose = r
				}

				function p(t, n) {
					$.log("bind: " + t), e.on(t, n)
				}

				function h(t, n) {
					$.log("unbind: " + t), e.off(t, n)
				}

				function v() {
					$.log("playing: " + w()), oe && (he || (I(w()), me || (!W && Te ? (ve++, Ee = !0) : !W && ke && (ve = 1), Te = !1, ke = !1, $.setAsset(H(), !1, M(), !0), me = !0), fe = !0, pe = !1, Ae = !1))
				}

				function g() {
					$.log("pause: " + w())
				}

				function m(e) {
					$.log("ended"), he || (ve = 1, I(w()), $.notifyEnd(w()), $.setAssetLabel("ns_st_pn", "1", !0), fe = !1, pe = !0)
				}

				function y() {
					var e = ye;
					ye = w();
					var t = _e;
					_e = +new Date;
					var n = ye - e,
						i = _e - t;
					Ae && (I(w()), $.setAssetLabel("ns_st_pn", "1", !0), ve = 1, fe = !0, pe = !1, Ae = !1), i < se && 0 == n || (0 == n ? D() : be && R())
				}

				function _() {
					if($.log("adStart"), oe && !(he || e.ads && "ad-playback" != e.ads.state && "preroll?" != e.ads.state)) {
						clearTimeout(D.timerId), D._notifyBufferWorkerStarted = !1, D.timerId = null, $.setSmartStateDetection(!1), he = !0, fe && $.notifyEnd(ye);
						var t = 1e3 * e.duration();
						!isNaN(t) && ye > t - re && (pe = !0), $.setAsset(H(), !1, null, !0), ye > ie && fe && !pe ? Te = !0 : pe ? (Te = !1, ke = !0) : (Te = !1, ke = !1), Ee && (ve--, Ee = !1), e.onceux ? $.notifyPlay(w()) : $.notifyPlay(), E(), me = !1
					}
				}

				function b() {
					$.log("adPause"), he && (P(), e.onceux ? $.notifyPause(w()) : $.notifyPause())
				}

				function A() {
					$.log("adResume"), he && (e.onceux ? $.notifyPlay(w()) : $.notifyPlay(), E())
				}

				function S() {
					$.log("adEnd"), he && (P(), e.onceux ? $.notifyEnd(w()) : $.notifyEnd(), he = !1, $.setSmartStateDetection(!0), $.setDetectEnd(!0), $.setDetectPause(!0), $.setDetectPlay(!0), $.setDetectSeek(!0), me = !1, v())
				}

				function T(e) {
					$.log("adTimeout"), he && (P(), $.notifyEnd({
						ns_st_er: ne
					}), he = !1, $.setSmartStateDetection(!0), $.setDetectEnd(!0), $.setDetectPause(!0), $.setDetectPlay(!0), $.setDetectSeek(!0), me = !1, v())
				}

				function k() {
					he = !1, $.notifyEnd({
						ns_st_er: te
					}), $.setSmartStateDetection(!0), $.setDetectEnd(!0), $.setDetectPause(!0), $.setDetectPlay(!0), $.setDetectSeek(!0), me = !1, v()
				}

				function E() {
					P(), G = setInterval(k, ee)
				}

				function P() {
					"undefined" != typeof G && (clearInterval(G), G = void 0)
				}

				function C() {
					var t;
					return !K || he ? (t = e.onceux ? e.onceux.duration() : e.duration(), isNaN(t) ? 0 : Math.max(Math.floor(1e3 * t), 0)) : (t = K, isFinite(t) ? t : 0)
				}

				function w() {
					var t;
					return t = he ? NaN : e.onceux && e.onceux.currentTime ? isNaN(e.onceux.currentTime()) ? 0 : Math.max(Math.floor(1e3 * e.onceux.currentTime()), 0) : isNaN(e.currentTime()) ? 0 : Math.max(Math.floor(1e3 * e.currentTime()), 0)
				}

				function j() {
					return !e.paused()
				}

				function I(e) {
					ye = e, _e = +new Date, B(e)
				}

				function L(e) {
					$.log("onBigPlayButtonClick"), Se || ($.notifyEngage(), Se = !0)
				}

				function O() {
					if($.log("onLoadStart"), oe || (oe = !0), ve = 1, ge = 0, me = !1, U(), Y = e && e.mediainfo && e.mediainfo.id ? e.mediainfo.id : (+new Date).toString(16), e && e.mediainfo && e.mediainfo.name) z = e.mediainfo.name;
					else {
						var t = document.getElementById(e.id());
						t.title && (z = t.title)
					}
					z ? $.createPlaybackSession({
						ns_st_pl: z
					}, !0) : $.createPlaybackSession({}, !0), e && e.mediainfo && e.mediainfo.duration && (K = Math.max(Math.floor(1e3 * e.mediainfo.duration), 0)), e && e.mediainfo && e.mediainfo.cue_points || (ge = 0), he ? (P(), he = !1, $.notifyEnd(), $.setSmartStateDetection(!0), $.setDetectEnd(!0), $.setDetectPause(!0), $.setDetectPlay(!0), $.setDetectSeek(!0)) : $.notifyEnd(), fe = !1, pe = !0, j() && v()
				}

				function N() {
					$.log("loadedMetadata"), U()
				}

				function x() {
					$.log("loadedData"), U()
				}

				function D() {
					D._notifyBufferWorkerStarted || be && !R._notifyBufferEndWorkerStarted || (D._notifyBufferWorkerStarted = !0, D.timerId = setTimeout(function() {
						$.log("Buffer start!"), D._notifyBufferWorkerStarted = !1, be = !0, $.notifyBufferStart(w())
					}, le))
				}

				function R() {
					!R._notifyBufferEndWorkerStarted && be && (R._notifyBufferEndWorkerStarted = !0, setTimeout(function() {
						$.log("Buffer Stop"), R._notifyBufferEndWorkerStarted = !1, be = !1, $.notifyBufferStop(w())
					}, le))
				}

				function U() {
					if(e)
						if(e.onceux) $.log("Plugin onceux detected"), d(), ce = {
							"onceux-adroll-start": _,
							"onceux-linearad-pause": b,
							"onceux-linearad-resume": A,
							"onceux-adroll-complete": S
						}, c(e);
						else if(e.ssai) $.log("Plugin ssai detected"), d(), ce = {
						"ads-ad-started": _,
						"ads-pause": b,
						"ads-play": A,
						"ads-ad-ended": S
					}, c(e);
					else if(e.ima3 && !e.FreeWheelPlugin) {
						$.log("Plugin ima3 detected"), d();
						var t = function() {
							$.log("ima3-ready"), e.ima3.version && parseInt(e.ima3.version.split(".")[0]) < 2 || ($.log("Plugin ima3 version", e.ima3.version, "detected"), d(), ce = {
								"ads-ad-started": _,
								"ads-pause": b,
								"ads-play": A,
								"ads-ad-ended": S,
								adend: S,
								adtimeout: T
							}, c(e))
						};
						e.ima3.version && parseInt(e.ima3.version.split(".")[0]) < 2 ? ce = {
							"ima3-ready": t,
							adstart: _,
							adend: S,
							adtimeout: T
						} : t(), c(e)
					} else e.FreeWheelPlugin ? ($.log("Plugin FreeWheelPlugin"), d(), ce = {
						"ads-ad-started": _,
						"ads-pause": b,
						"ads-play": A,
						"ads-ad-ended": S,
						adtimeout: T
					}, c(e)) : e.ads && ($.log("Normal Ads plugin detected"), d(), ce = {
						adstart: _,
						adend: S,
						adtimeout: T
					}, c(e))
				}

				function M() {
					return [{
						prefix: "",
						map: e && e.mediainfo ? e.mediainfo.custom_fields : {}
					}, {
						prefix: "MediaInfo",
						map: e ? e.mediainfo : {}
					}]
				}

				function B(e) {
					if(W && !he) {
						for(var t = 1, n = 0; n < W.length; n++) {
							var i = W[n],
								r = i.name && "post-roll" == W[n].name.toLowerCase(),
								a = i.name && "pre-roll" == W[n].name.toLowerCase();
							if("ad" == i.type.toLowerCase() && !r && !a) {
								if(!(e + ae > Math.floor(1e3 * i.time))) break;
								t++
							}
						}
						ve = t
					}
				}

				function F() {
					var t = e.muted() ? 0 : Math.ceil(100 * e.volume());
					$.setLabel("ns_st_vo", t, !0)
				}

				function V() {
					var t = "norm";
					(document.fullScreen || document.mozFullScreen || document.webkitIsFullScreen || document.fullscreenElement || e.isFullscreen()) && (t = "full"), $.setLabel("ns_st_ws", t, !0)
				}

				function q() {
					$.setLabel("ns_st_br", "0", !0), V(), F()
				}

				function H() {
					$.log("getClipLabels");
					var t = {};
					if(t.ns_st_cs = [e.width(), e.height()].join("x"), t.ns_st_ci = he ? (+new Date).toString(16) : String(Y), he) {
						if(t.ns_st_pr = "", t.ns_st_ep = "", t.ns_st_pn = "1", t.ns_st_tp = "1", t.ns_st_el = "0", e.onceux) t.ns_st_cl = "0";
						else if(e.ima3 && !e.FreeWheelPlugin) {
							var n, i;
							(n = e.ima3.adsManager) && n.getCurrentAd && (i = n.getCurrentAd()) ? (t.ns_st_ami = i.getAdId(), t.ns_st_cs = i.getWidth() + "x" + i.getHeight(), t.ns_st_amt = i.getTitle(), t.ns_st_ams = "ima", t.ns_st_cl = 1e3 * i.getDuration() + "") : (t.ns_st_ams = "ima", t.ns_st_cl = "0")
						} else e.FreeWheelPlugin ? (t.ns_st_cl = "0", t.ns_st_ams = "freewheel") : e.ads && (t.ns_st_cl = "0");
						ye < ie ? (t.ns_st_ad = "pre-roll", t.ns_st_ct = "va11") : fe && !pe ? (t.ns_st_ad = "mid-roll", t.ns_st_ct = "va12") : pe ? (t.ns_st_ad = "post-roll", t.ns_st_ct = "va13") : (t.ns_st_ad = "1", t.ns_st_ct = "va00")
					} else z && (t.ns_st_pr = z, t.ns_st_ep = z), t.ns_st_pn = ve > 0 ? ve : 1, t.ns_st_tp = ge, t.ns_st_cl = C(), t.ns_st_el = C(), t.ns_st_cu = e.currentSrc(), 0 == ge ? t.ns_st_ct = "vc00" : ge > 1 ? t.ns_st_ct = "vc12" : t.ns_st_ct = "vc11";
					return e && e.mediainfo && e.mediainfo.custom_fields && e.mediainfo.custom_fields.hasOwnProperty("ns_st_ty") ? !e.mediainfo.custom_fields.hasOwnProperty("ns_st_ct") || 0 != e.mediainfo.custom_fields.ns_st_ct.indexOf("ac") && 0 != e.mediainfo.custom_fields.ns_st_ct.indexOf("aa") ? t.ns_st_ty = "video" : t.ns_st_ty = "audio" : t.ns_st_ty = "video", t
				}
				var G, Y, z, K, W, X = this,
					J = "brightcove",
					Q = "1.5.1.190515",
					Z = bc && bc.VERSION || "unknown",
					$ = null,
					ee = 18e4,
					te = "w01",
					ne = "w02",
					ie = 1e3,
					re = 1e3,
					ae = 500,
					se = 100,
					oe = !1,
					le = 250,
					ue = {
						loadstart: O,
						loadedmetadata: N,
						loadeddata: x,
						play: v,
						pause: g,
						ended: m,
						timeupdate: y,
						waiting: s,
						playing: o,
						volumechange: n,
						fullscreenchange: i,
						dispose: r,
						durationchange: a
					},
					ce = {},
					de = !1,
					fe = !1,
					pe = !1,
					he = !1,
					ve = 1,
					ge = 0,
					me = !1,
					ye = 0,
					_e = 0,
					be = !1,
					Ae = !1,
					Se = !1,
					Te = !1,
					ke = !1,
					Ee = !1;
				u()
			}
			if("undefined" == typeof videojs) throw new Error("comScore Brightcove Player plugin requires Video.js");
			var Utils = Utils || {};
			Utils.filter = function(e, t) {
				var n = {};
				for(var i in t) t.hasOwnProperty(i) && e(t[i]) && (n[i] = t[i]);
				return n
			}, Utils.extend = function(e) {
				var t, n = arguments.length;
				e = e || {};
				for(var i = 1; i < n; i++)
					if(t = arguments[i])
						for(var r in t) t.hasOwnProperty(r) && (e[r] = t[r]);
				return e
			};
			for(var i = 0; i < 5; ++i) ! function(comScorePluginName) {
				videojs.plugin(comScorePluginName, function(options) {
					var currentPlayer = this,
						oldPluginInstance = currentPlayer["__" + comScorePluginName + "Instance"];
					oldPluginInstance && oldPluginInstance.dispose(), options = "string" == typeof options ? eval("(function(){return " + options + ";})()") : options, options && "object" != typeof options && "undefined" != typeof console && console.error && console.error("The comScore Brightcove player plugin requires a valid configuration object."), currentPlayer["__" + comScorePluginName + "Instance"] = new BrightcovePlayerPlugin(currentPlayer, options || {})
				})
			}(0 == i ? "comscore" : "comscore" + i)
		});
		(function() {
			var e = {
					0: {
						src: "example-thumbnail.png"
					}
				},
				t = function() {
					var e, n, i, r, a;
					e = Array.prototype.slice.call(arguments);
					n = e.shift() || {};
					for(i in e) {
						r = e[i];
						for(a in r) {
							if(r.hasOwnProperty(a)) {
								if(typeof r[a] === "object") {
									n[a] = t(n[a], r[a])
								} else {
									n[a] = r[a]
								}
							}
						}
					}
					return n
				},
				n = function(e, t) {
					return function(n) {
						if(window.getComputedStyle) {
							return window.getComputedStyle(e, t)[n]
						} else {
							return e.currentStyle[n]
						}
					}
				},
				i = function(e) {
					if(e.nodeName !== "HTML" && n(e)("position") === "static") {
						return i(e.offsetParent)
					}
					return e
				},
				r = function(e, t) {
					var i;
					if(t) {
						return parseFloat(t)
					}
					i = n(e)("clip");
					if(i !== "auto" && i !== "inherit") {
						i = i.split(/(?:\(|\))/)[1].split(/(?:,| )/);
						if(i.length === 4) {
							return parseFloat(i[1]) - parseFloat(i[3])
						}
					}
					return 0
				},
				a = function() {
					if(window.pageXOffset) {
						return {
							x: window.pageXOffset,
							y: window.pageYOffset
						}
					}
					return {
						x: document.documentElement.scrollLeft,
						y: document.documentElement.scrollTop
					}
				};
			videojs.plugin("thumbnails", function(n) {
				var s, o, l, u, c, d, f, p;
				o = t({}, e, n);
				u = this;
				(function() {
					var e, t, n;
					if(navigator.userAgent.toLowerCase().indexOf("android") !== -1) {
						e = u.controlBar.progressControl;
						t = function() {
							e.addClass("fake-active")
						};
						n = function() {
							e.removeClass("fake-active")
						};
						e.on("touchstart", t);
						e.on("touchend", n);
						e.on("touchcancel", n)
					}
				})();
				s = document.createElement("div");
				s.className = "vjs-thumbnail-holder";
				l = document.createElement("img");
				s.appendChild(l);
				l.src = o["0"].src;
				l.className = "vjs-thumbnail";
				t(l.style, o["0"].style);
				if(!l.style.left && !l.style.right) {
					l.onload = function() {
						l.style.left = -(l.naturalWidth / 2) + "px"
					}
				}
				d = u.duration();
				u.on("durationchange", function(e) {
					d = u.duration()
				});
				c = u.controlBar.progressControl;
				c.el().appendChild(s);
				f = function(e) {
					var n, u, f, p, h, v, g, m, y, _, b;
					f = 0;
					_ = a().x;
					b = i(c.el()).getBoundingClientRect();
					g = (b.width || b.right) + _;
					v = e.pageX;
					if(e.changedTouches) {
						v = e.changedTouches[0].pageX
					}
					p = v || e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;
					p -= i(c.el()).getBoundingClientRect().left + _;
					n = Math.floor((p - c.el().offsetLeft) / c.width() * d);
					for(u in o) {
						if(n > u) {
							f = Math.max(f, u)
						}
					}
					h = o[f];
					if(h.src && l.src != h.src) {
						l.src = h.src
					}
					if(h.style && l.style != h.style) {
						t(l.style, h.style)
					}
					m = r(l, h.width || o[0].width);
					y = m / 2;
					if(p + y > g) {
						p -= p + y - g
					} else if(p < y) {
						p = y
					}
					s.style.left = p + "px"
				};
				c.on("mousemove", f);
				c.on("touchmove", f);
				p = function(e) {
					s.style.left = "-1000px"
				};
				c.on("mouseout", p);
				c.on("touchcancel", p);
				c.on("touchend", p);
				u.on("userinactive", p)
			})
		})();
		var setupOptions = function(e, t, n, i) {
			var r = t.environment;
			var a = r.queryString;
			var s = r.isInBcFrame;
			util.perf.mark("bcInitStart");
			i = i || {};
			i.inactivityTimeout = 5e3;
			if(e.browser.TOUCH_ENABLED) {
				i.inactivityTimeout = 0
			}
			i = e.mergeOptions(i, {
				nativeControlsForTouch: useNativeControlsOnAndroid(),
				controls: s ? true : n.hasAttribute("controls"),
				persistTextTrackSettings: true,
				responsive: true,
				liveui: true,
				sourceOrder: true,
				controlBar: {},
				userActions: {
					hotkeys: {}
				}
			});
			embedVttjs = n.getAttribute("data-vttjs") || a.vttjs;
			if(embedVttjs && util.isNonEmptyStr(embedVttjs)) {
				i["vtt.js"] = embedVttjs
			}
			return i
		};
		var setupPlayer = function(e, t, n) {
			var i = n.options_;
			var r = t.settings;
			var a = t.environment;
			var s = a.queryString;
			var o = a.isInBcFrame;
			var l;
			core.patchOldIma3(e, n);
			n.one("beforepluginsetup:ads", function() {
				n.controlBar.removeChild("pictureInPictureToggle");
				e.getComponent("Component").prototype.fsApi_ = n.fsApi_
			});
			if(!e.browser.TOUCH_ENABLED) {
				n.addClass("vjs-mouse");
				if(o) {
					e.dom.addClass(document.documentElement, "vjs-mouse")
				}
			} else if(e.browser.IS_IPHONE) {
				n.addClass("vjs-native")
			}
			n.on("dispose", function() {
				n = i = null;
				usageEvents = [];
				bc.videojs.log.history.clear()
			});
			(function() {
				var e, t = parseInt(0, 10),
					i = false;
				n.playlist();
				if(t === t && isFinite(t) && t >= 0) {
					n.playlist.autoadvance(t)
				}
			})();
			if(typeof bcShimDestripeTime !== "undefined") {
				if(bcShimDestripeTime > 1) {
					usageEvents.push("sdt-" + (Math.log(bcShimDestripeTime) / Math.LN10).toFixed(1))
				} else {
					usageEvents.push("sdt-0.0")
				}
			}
			n.requestAnimationFrame(function() {
				var e = document.querySelector(".bc-wrap");
				n.addClass("vjs-plugins-ready");
				if(e) {
					e.style.opacity = 0
				}
			});
			n.on(["mouseenter", "ended", "touchend"], function() {
				n.removeClass("not-hover")
			});
			n.on("mouseleave", function() {
				n.addClass("not-hover");
				if(!n.controlBar || !n.controlBar.el()) {
					return
				}
				if(n.controlBar.hasClass("vjs-control-bar-visible")) {
					n.controlBar.removeClass("vjs-control-bar-visible")
				}
			});
			usageEvents.forEach(function(e) {
				n.trigger({
					type: "usage",
					name: e
				})
			});
			n.ready(function() {
				if(n.bcinfo && n.bcinfo.PLAYER_LOADER || window.brightcovePlayerLoader) {
					n.trigger({
						type: "usage",
						name: "player-loader"
					})
				}
				if(n.bcinfo && n.bcinfo.REACT_PLAYER_LOADER || window.BrightcoveReactPlayerLoader) {
					n.trigger({
						type: "usage",
						name: "react-player-loader"
					})
				}
			})
		};
		var bc = core.createInitializer(setupOptions, setupPlayer);
		BrightcovePlayerCore.restoreFirstVideojs();
		return bc
	}(window, document);
	if(typeof vjsCssText !== "undefined") {
		vjsCssEl = document.querySelector("#" + vjsCssId);
		if(vjsCssEl) {
			(function() {
				var e = function(e) {
					return(e || "0.0.0").split(".").map(function(e) {
						return Number(e)
					})
				};
				var t = e(vjsCssEl.getAttribute("data-vjs-version"));
				var n = e(bc.videojs.VERSION);
				if(n[0] > t[0] || n[0] === t[0] && n[1] > t[1] || n[0] === t[0] && n[1] === t[1] && n[2] > t[2]) {
					vjsCssEl.parentNode.removeChild(vjsCssEl);
					vjsCssEl = null;
					refNode = head.firstChild
				}
			})()
		}
		if(!vjsCssEl) {
			vjsCssEl = createStyleSheet(vjsCssText, refNode);
			vjsCssEl.id = vjsCssId;
			vjsCssEl.setAttribute("data-vjs-version", bc.videojs.VERSION)
		}
		refNode = vjsCssEl.nextSibling
	}
	if(typeof cssText !== "undefined") {
		cssEl = document.querySelector("." + cssClass);
		if(!cssEl) {
			cssEl = createStyleSheet(cssText, refNode);
			cssEl.className = cssClass
		}
	}

	function parseEmbeds() {
		var e = [].concat(Array.prototype.slice.call(document.querySelectorAll("video")), Array.prototype.slice.call(document.querySelectorAll("video-js")));
		for(i = 0; i < e.length; i++) {
			video = e[i];
			if(video.getAttribute("data-player") === "VNXYOEC7Ep" && video.getAttribute("data-embed") === "default") {
				if(bc.videojs.getPlayer(video)) {
					bc.videojs.log("Ignoring already initialized player");
					continue
				}
				bc(video)
			}
		}
	}
	parseEmbeds();
	return bc
});